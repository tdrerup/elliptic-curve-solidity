{"version":3,"file":"index.esm.js","sources":["../../../dist-es5/delegate/src/symbols.js","../../../dist-es5/delegate/src/Subschema.js","../../../dist-es5/delegate/src/createRequest.js","../../../dist-es5/delegate/src/memoize.js","../../../dist-es5/delegate/src/transforms/VisitSelectionSets.js","../../../dist-es5/delegate/src/transforms/AddSelectionSets.js","../../../dist-es5/delegate/src/transforms/ExpandAbstractTypes.js","../../../dist-es5/delegate/src/transforms/WrapConcreteTypes.js","../../../dist-es5/delegate/src/transforms/FilterToSchema.js","../../../dist-es5/delegate/src/transforms/AddFragmentsByField.js","../../../dist-es5/delegate/src/transforms/AddTypenameToAbstract.js","../../../dist-es5/delegate/src/results/handleNull.js","../../../dist-es5/delegate/src/results/mergeProxiedResults.js","../../../dist-es5/delegate/src/results/mergeFields.js","../../../dist-es5/delegate/src/results/getFieldsNotInSubschema.js","../../../dist-es5/delegate/src/results/handleObject.js","../../../dist-es5/delegate/src/results/handleList.js","../../../dist-es5/delegate/src/results/handleResult.js","../../../dist-es5/delegate/src/transforms/CheckResultAndHandleErrors.js","../../../dist-es5/delegate/src/transforms/AddArgumentsAsVariables.js","../../../dist-es5/delegate/src/delegationBindings.js","../../../dist-es5/delegate/src/Transformer.js","../../../dist-es5/delegate/src/prefix.js","../../../dist-es5/delegate/src/mergeExecutionParams.js","../../../dist-es5/delegate/src/splitResult.js","../../../dist-es5/delegate/src/getBatchingExecutor.js","../../../dist-es5/delegate/src/delegateToSchema.js","../../../dist-es5/delegate/src/defaultMergedResolver.js","../../../dist-es5/delegate/src/createMergedResolver.js","../../../dist-es5/delegate/src/transforms/AddSelectionSetsByField.js","../../../dist-es5/delegate/src/transforms/AddSelectionSetsByType.js","../../../dist-es5/delegate/src/transforms/ReplaceFieldWithFragment.js"],"sourcesContent":["export var OBJECT_SUBSCHEMA_SYMBOL = Symbol('initialSubschema');\nexport var FIELD_SUBSCHEMA_MAP_SYMBOL = Symbol('subschemaMap');\n//# sourceMappingURL=symbols.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { applySchemaTransforms } from '@graphql-tools/utils';\nimport { FIELD_SUBSCHEMA_MAP_SYMBOL, OBJECT_SUBSCHEMA_SYMBOL } from './symbols';\nexport function getSubschema(result, responseKey) {\n    var subschema = result[FIELD_SUBSCHEMA_MAP_SYMBOL] && result[FIELD_SUBSCHEMA_MAP_SYMBOL][responseKey];\n    return subschema || result[OBJECT_SUBSCHEMA_SYMBOL];\n}\nexport function setObjectSubschema(result, subschema) {\n    result[OBJECT_SUBSCHEMA_SYMBOL] = subschema;\n}\nexport function isSubschemaConfig(value) {\n    return Boolean(value.schema && value.permutations === undefined);\n}\nexport function cloneSubschemaConfig(subschemaConfig) {\n    var newSubschemaConfig = __assign(__assign({}, subschemaConfig), { transforms: subschemaConfig.transforms != null ? __spread(subschemaConfig.transforms) : undefined });\n    if (newSubschemaConfig.merge != null) {\n        newSubschemaConfig.merge = __assign({}, subschemaConfig.merge);\n        Object.keys(newSubschemaConfig.merge).forEach(function (typeName) {\n            newSubschemaConfig.merge[typeName] = __assign({}, subschemaConfig.merge[typeName]);\n            var fields = newSubschemaConfig.merge[typeName].fields;\n            if (fields != null) {\n                Object.keys(fields).forEach(function (fieldName) {\n                    fields[fieldName] = __assign({}, fields[fieldName]);\n                });\n            }\n            var computedFields = newSubschemaConfig.merge[typeName].computedFields;\n            if (computedFields != null) {\n                Object.keys(computedFields).forEach(function (fieldName) {\n                    computedFields[fieldName] = __assign({}, computedFields[fieldName]);\n                });\n            }\n        });\n    }\n    return newSubschemaConfig;\n}\nexport function isSubschema(value) {\n    return Boolean(value.transformedSchema);\n}\nvar Subschema = /** @class */ (function () {\n    function Subschema(config) {\n        var _a;\n        this.schema = config.schema;\n        this.rootValue = config.rootValue;\n        this.executor = config.executor;\n        this.subscriber = config.subscriber;\n        this.batch = config.batch;\n        this.batchingOptions = config.batchingOptions;\n        this.endpoint = config.endpoint;\n        this.createProxyingResolver = config.createProxyingResolver;\n        this.transforms = (_a = config.transforms) !== null && _a !== void 0 ? _a : [];\n        this.transformedSchema = applySchemaTransforms(this.schema, this.transforms);\n        this.merge = config.merge;\n    }\n    return Subschema;\n}());\nexport { Subschema };\n//# sourceMappingURL=Subschema.js.map","import { __assign } from \"tslib\";\nimport { Kind, typeFromAST, } from 'graphql';\nimport { serializeInputValue, updateArgument } from '@graphql-tools/utils';\nexport function getDelegatingOperation(parentType, schema) {\n    if (parentType === schema.getMutationType()) {\n        return 'mutation';\n    }\n    else if (parentType === schema.getSubscriptionType()) {\n        return 'subscription';\n    }\n    return 'query';\n}\nexport function createRequestFromInfo(_a) {\n    var info = _a.info, operationName = _a.operationName, _b = _a.operation, operation = _b === void 0 ? getDelegatingOperation(info.parentType, info.schema) : _b, _c = _a.fieldName, fieldName = _c === void 0 ? info.fieldName : _c, selectionSet = _a.selectionSet, _d = _a.fieldNodes, fieldNodes = _d === void 0 ? info.fieldNodes : _d;\n    return createRequest({\n        sourceSchema: info.schema,\n        sourceParentType: info.parentType,\n        sourceFieldName: info.fieldName,\n        fragments: info.fragments,\n        variableDefinitions: info.operation.variableDefinitions,\n        variableValues: info.variableValues,\n        targetOperationName: operationName,\n        targetOperation: operation,\n        targetFieldName: fieldName,\n        selectionSet: selectionSet,\n        fieldNodes: fieldNodes,\n    });\n}\nexport function createRequest(_a) {\n    var _b;\n    var sourceSchema = _a.sourceSchema, sourceParentType = _a.sourceParentType, sourceFieldName = _a.sourceFieldName, fragments = _a.fragments, variableDefinitions = _a.variableDefinitions, variableValues = _a.variableValues, targetOperationName = _a.targetOperationName, targetOperation = _a.targetOperation, targetFieldName = _a.targetFieldName, selectionSet = _a.selectionSet, fieldNodes = _a.fieldNodes;\n    var newSelectionSet;\n    var argumentNodeMap;\n    if (selectionSet != null) {\n        newSelectionSet = selectionSet;\n        argumentNodeMap = Object.create(null);\n    }\n    else {\n        var selections = fieldNodes.reduce(function (acc, fieldNode) { return (fieldNode.selectionSet != null ? acc.concat(fieldNode.selectionSet.selections) : acc); }, []);\n        newSelectionSet = selections.length\n            ? {\n                kind: Kind.SELECTION_SET,\n                selections: selections,\n            }\n            : undefined;\n        argumentNodeMap = {};\n        var args = (_b = fieldNodes[0]) === null || _b === void 0 ? void 0 : _b.arguments;\n        if (args) {\n            argumentNodeMap = args.reduce(function (prev, curr) {\n                var _a;\n                return (__assign(__assign({}, prev), (_a = {}, _a[curr.name.value] = curr, _a)));\n            }, argumentNodeMap);\n        }\n    }\n    var newVariables = Object.create(null);\n    var variableDefinitionMap = Object.create(null);\n    if (sourceSchema != null && variableDefinitions != null) {\n        variableDefinitions.forEach(function (def) {\n            var varName = def.variable.name.value;\n            variableDefinitionMap[varName] = def;\n            var varType = typeFromAST(sourceSchema, def.type);\n            var serializedValue = serializeInputValue(varType, variableValues[varName]);\n            if (serializedValue !== undefined) {\n                newVariables[varName] = serializedValue;\n            }\n        });\n    }\n    if (sourceParentType != null) {\n        updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, newVariables);\n    }\n    var rootfieldNode = {\n        kind: Kind.FIELD,\n        arguments: Object.keys(argumentNodeMap).map(function (argName) { return argumentNodeMap[argName]; }),\n        name: {\n            kind: Kind.NAME,\n            value: targetFieldName || fieldNodes[0].name.value,\n        },\n        selectionSet: newSelectionSet,\n    };\n    var operationName = targetOperationName\n        ? {\n            kind: Kind.NAME,\n            value: targetOperationName,\n        }\n        : undefined;\n    var operationDefinition = {\n        kind: Kind.OPERATION_DEFINITION,\n        name: operationName,\n        operation: targetOperation,\n        variableDefinitions: Object.keys(variableDefinitionMap).map(function (varName) { return variableDefinitionMap[varName]; }),\n        selectionSet: {\n            kind: Kind.SELECTION_SET,\n            selections: [rootfieldNode],\n        },\n    };\n    var definitions = [operationDefinition];\n    if (fragments != null) {\n        definitions = definitions.concat(Object.keys(fragments).map(function (fragmentName) { return fragments[fragmentName]; }));\n    }\n    var document = {\n        kind: Kind.DOCUMENT,\n        definitions: definitions,\n    };\n    return {\n        document: document,\n        variables: newVariables,\n    };\n}\nfunction updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, variableValues) {\n    var sourceField = sourceParentType.getFields()[sourceFieldName];\n    sourceField.args.forEach(function (argument) {\n        var argName = argument.name;\n        var sourceArgType = argument.type;\n        if (argumentNodeMap[argName] === undefined) {\n            var defaultValue = argument.defaultValue;\n            if (defaultValue !== undefined) {\n                updateArgument(argName, sourceArgType, argumentNodeMap, variableDefinitionMap, variableValues, serializeInputValue(sourceArgType, defaultValue));\n            }\n        }\n    });\n}\n//# sourceMappingURL=createRequest.js.map","export function memoizeInfoAnd2Objects(fn) {\n    var cache1;\n    function memoized(a1, a2, a3) {\n        if (!cache1) {\n            cache1 = new WeakMap();\n            var cache2_1 = new WeakMap();\n            cache1.set(a1.fieldNodes, cache2_1);\n            var cache3_1 = new WeakMap();\n            cache2_1.set(a2, cache3_1);\n            var newValue = fn(a1, a2, a3);\n            cache3_1.set(a3, newValue);\n            return newValue;\n        }\n        var cache2 = cache1.get(a1.fieldNodes);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            cache1.set(a1.fieldNodes, cache2);\n            var cache3_2 = new WeakMap();\n            cache2.set(a2, cache3_2);\n            var newValue = fn(a1, a2, a3);\n            cache3_2.set(a3, newValue);\n            return newValue;\n        }\n        var cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            var newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        var cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            var newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    }\n    return memoized;\n}\nexport function memoize4(fn) {\n    var cache1;\n    function memoized(a1, a2, a3, a4) {\n        if (!cache1) {\n            cache1 = new WeakMap();\n            var cache2_2 = new WeakMap();\n            cache1.set(a1, cache2_2);\n            var cache3_3 = new WeakMap();\n            cache2_2.set(a2, cache3_3);\n            var cache4_1 = new WeakMap();\n            cache3_3.set(a3, cache4_1);\n            var newValue = fn(a1, a2, a3, a4);\n            cache4_1.set(a4, newValue);\n            return newValue;\n        }\n        var cache2 = cache1.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            cache1.set(a1, cache2);\n            var cache3_4 = new WeakMap();\n            cache2.set(a2, cache3_4);\n            var cache4_2 = new WeakMap();\n            cache3_4.set(a3, cache4_2);\n            var newValue = fn(a1, a2, a3, a4);\n            cache4_2.set(a4, newValue);\n            return newValue;\n        }\n        var cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            var cache4_3 = new WeakMap();\n            cache3.set(a3, cache4_3);\n            var newValue = fn(a1, a2, a3, a4);\n            cache4_3.set(a4, newValue);\n            return newValue;\n        }\n        var cache4 = cache3.get(a3);\n        if (!cache4) {\n            var cache4_4 = new WeakMap();\n            cache3.set(a3, cache4_4);\n            var newValue = fn(a1, a2, a3, a4);\n            cache4_4.set(a4, newValue);\n            return newValue;\n        }\n        var cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            var newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    }\n    return memoized;\n}\nexport function memoize3(fn) {\n    var cache1;\n    function memoized(a1, a2, a3) {\n        if (!cache1) {\n            cache1 = new WeakMap();\n            var cache2_3 = new WeakMap();\n            cache1.set(a1, cache2_3);\n            var cache3_5 = new WeakMap();\n            cache2_3.set(a2, cache3_5);\n            var newValue = fn(a1, a2, a3);\n            cache3_5.set(a3, newValue);\n            return newValue;\n        }\n        var cache2 = cache1.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            cache1.set(a1, cache2);\n            var cache3_6 = new WeakMap();\n            cache2.set(a2, cache3_6);\n            var newValue = fn(a1, a2, a3);\n            cache3_6.set(a3, newValue);\n            return newValue;\n        }\n        var cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            var newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        var cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            var newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    }\n    return memoized;\n}\nexport function memoize2(fn) {\n    var cache1;\n    function memoized(a1, a2) {\n        if (!cache1) {\n            cache1 = new WeakMap();\n            var cache2_4 = new WeakMap();\n            cache1.set(a1, cache2_4);\n            var newValue = fn(a1, a2);\n            cache2_4.set(a2, newValue);\n            return newValue;\n        }\n        var cache2 = cache1.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            cache1.set(a1, cache2);\n            var newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        var cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            var newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    }\n    return memoized;\n}\nexport function memoize2of3(fn) {\n    var cache1;\n    function memoized(a1, a2, a3) {\n        if (!cache1) {\n            cache1 = new WeakMap();\n            var cache2_5 = new WeakMap();\n            cache1.set(a1, cache2_5);\n            var newValue = fn(a1, a2, a3);\n            cache2_5.set(a2, newValue);\n            return newValue;\n        }\n        var cache2 = cache1.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            cache1.set(a1, cache2);\n            var newValue = fn(a1, a2, a3);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        var cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            var newValue = fn(a1, a2, a3);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    }\n    return memoized;\n}\n//# sourceMappingURL=memoize.js.map","import { __assign } from \"tslib\";\nimport { Kind, TypeInfo, visit, visitWithTypeInfo, } from 'graphql';\nimport { collectFields } from '@graphql-tools/utils';\nvar VisitSelectionSets = /** @class */ (function () {\n    function VisitSelectionSets(schema, initialType, visitor) {\n        this.schema = schema;\n        this.initialType = initialType;\n        this.visitor = visitor;\n    }\n    VisitSelectionSets.prototype.transformRequest = function (originalRequest) {\n        var document = visitSelectionSets(originalRequest, this.schema, this.initialType, this.visitor);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return VisitSelectionSets;\n}());\nexport default VisitSelectionSets;\nfunction visitSelectionSets(request, schema, initialType, visitor) {\n    var document = request.document, variables = request.variables;\n    var operations = [];\n    var fragments = Object.create(null);\n    document.definitions.forEach(function (def) {\n        if (def.kind === Kind.OPERATION_DEFINITION) {\n            operations.push(def);\n        }\n        else if (def.kind === Kind.FRAGMENT_DEFINITION) {\n            fragments[def.name.value] = def;\n        }\n    });\n    var partialExecutionContext = {\n        schema: schema,\n        variableValues: variables,\n        fragments: fragments,\n    };\n    var typeInfo = new TypeInfo(schema, undefined, initialType);\n    var newDefinitions = operations.map(function (operation) {\n        var type = operation.operation === 'query'\n            ? schema.getQueryType()\n            : operation.operation === 'mutation'\n                ? schema.getMutationType()\n                : schema.getSubscriptionType();\n        var fields = collectFields(partialExecutionContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n        var newSelections = [];\n        Object.keys(fields).forEach(function (responseKey) {\n            var fieldNodes = fields[responseKey];\n            fieldNodes.forEach(function (fieldNode) {\n                var _a;\n                var selectionSet = fieldNode.selectionSet;\n                if (selectionSet == null) {\n                    newSelections.push(fieldNode);\n                    return;\n                }\n                var newSelectionSet = visit(selectionSet, visitWithTypeInfo(typeInfo, (_a = {},\n                    _a[Kind.SELECTION_SET] = function (node) { return visitor(node, typeInfo); },\n                    _a)));\n                if (newSelectionSet === selectionSet) {\n                    newSelections.push(fieldNode);\n                    return;\n                }\n                newSelections.push(__assign(__assign({}, fieldNode), { selectionSet: newSelectionSet }));\n            });\n        });\n        return __assign(__assign({}, operation), { selectionSet: {\n                kind: Kind.SELECTION_SET,\n                selections: newSelections,\n            } });\n    });\n    Object.values(fragments).forEach(function (fragment) {\n        var _a;\n        newDefinitions.push(visit(fragment, visitWithTypeInfo(typeInfo, (_a = {},\n            _a[Kind.SELECTION_SET] = function (node) { return visitor(node, typeInfo); },\n            _a))));\n    });\n    return __assign(__assign({}, document), { definitions: newDefinitions });\n}\n//# sourceMappingURL=VisitSelectionSets.js.map","import { __assign } from \"tslib\";\nimport { Kind, print, } from 'graphql';\nimport { memoize2 } from '../memoize';\nimport VisitSelectionSets from './VisitSelectionSets';\nvar AddSelectionSets = /** @class */ (function () {\n    function AddSelectionSets(sourceSchema, initialType, selectionSetsByType, selectionSetsByField, dynamicSelectionSetsByField) {\n        this.transformer = new VisitSelectionSets(sourceSchema, initialType, function (node, typeInfo) {\n            return visitSelectionSet(node, typeInfo, selectionSetsByType, selectionSetsByField, dynamicSelectionSetsByField);\n        });\n    }\n    AddSelectionSets.prototype.transformRequest = function (originalRequest) {\n        return this.transformer.transformRequest(originalRequest);\n    };\n    return AddSelectionSets;\n}());\nexport default AddSelectionSets;\nfunction visitSelectionSet(node, typeInfo, selectionSetsByType, selectionSetsByField, dynamicSelectionSetsByField) {\n    var parentType = typeInfo.getParentType();\n    var newSelections = new Map();\n    if (parentType != null) {\n        var parentTypeName_1 = parentType.name;\n        addSelectionsToMap(newSelections, node);\n        if (parentTypeName_1 in selectionSetsByType) {\n            var selectionSet = selectionSetsByType[parentTypeName_1];\n            addSelectionsToMap(newSelections, selectionSet);\n        }\n        if (parentTypeName_1 in selectionSetsByField) {\n            node.selections.forEach(function (selection) {\n                if (selection.kind === Kind.FIELD) {\n                    var name_1 = selection.name.value;\n                    var selectionSet = selectionSetsByField[parentTypeName_1][name_1];\n                    if (selectionSet != null) {\n                        addSelectionsToMap(newSelections, selectionSet);\n                    }\n                }\n            });\n        }\n        if (parentTypeName_1 in dynamicSelectionSetsByField) {\n            node.selections.forEach(function (selection) {\n                if (selection.kind === Kind.FIELD) {\n                    var name_2 = selection.name.value;\n                    var dynamicSelectionSets = dynamicSelectionSetsByField[parentTypeName_1][name_2];\n                    if (dynamicSelectionSets != null) {\n                        dynamicSelectionSets.forEach(function (selectionSetFn) {\n                            var selectionSet = selectionSetFn(selection);\n                            if (selectionSet != null) {\n                                addSelectionsToMap(newSelections, selectionSet);\n                            }\n                        });\n                    }\n                }\n            });\n        }\n        return __assign(__assign({}, node), { selections: Array.from(newSelections.values()) });\n    }\n}\nvar addSelectionsToMap = memoize2(function (map, selectionSet) {\n    selectionSet.selections.forEach(function (selection) {\n        map.set(print(selection), selection);\n    });\n});\n//# sourceMappingURL=AddSelectionSets.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { Kind, TypeInfo, getNamedType, isAbstractType, isInterfaceType, visit, visitWithTypeInfo, } from 'graphql';\nimport { implementsAbstractType } from '@graphql-tools/utils';\nvar ExpandAbstractTypes = /** @class */ (function () {\n    function ExpandAbstractTypes(sourceSchema, targetSchema) {\n        this.targetSchema = targetSchema;\n        var _a = extractPossibleTypes(sourceSchema, targetSchema), possibleTypesMap = _a.possibleTypesMap, interfaceExtensionsMap = _a.interfaceExtensionsMap;\n        this.possibleTypesMap = possibleTypesMap;\n        this.reversePossibleTypesMap = flipMapping(this.possibleTypesMap);\n        this.interfaceExtensionsMap = interfaceExtensionsMap;\n    }\n    ExpandAbstractTypes.prototype.transformRequest = function (originalRequest) {\n        var document = expandAbstractTypes(this.targetSchema, this.possibleTypesMap, this.reversePossibleTypesMap, this.interfaceExtensionsMap, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ExpandAbstractTypes;\n}());\nexport default ExpandAbstractTypes;\nfunction extractPossibleTypes(sourceSchema, targetSchema) {\n    var typeMap = sourceSchema.getTypeMap();\n    var possibleTypesMap = Object.create(null);\n    var interfaceExtensionsMap = Object.create(null);\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (isAbstractType(type)) {\n            var targetType = targetSchema.getType(typeName);\n            if (isInterfaceType(type) && isInterfaceType(targetType)) {\n                var targetTypeFields_1 = targetType.getFields();\n                var extensionFields_1 = Object.create(null);\n                Object.keys(type.getFields()).forEach(function (fieldName) {\n                    if (!targetTypeFields_1[fieldName]) {\n                        extensionFields_1[fieldName] = true;\n                    }\n                });\n                if (Object.keys(extensionFields_1).length) {\n                    interfaceExtensionsMap[typeName] = extensionFields_1;\n                }\n            }\n            if (!isAbstractType(targetType) || typeName in interfaceExtensionsMap) {\n                var implementations = sourceSchema.getPossibleTypes(type);\n                possibleTypesMap[typeName] = implementations\n                    .filter(function (impl) { return targetSchema.getType(impl.name); })\n                    .map(function (impl) { return impl.name; });\n            }\n        }\n    });\n    return { possibleTypesMap: possibleTypesMap, interfaceExtensionsMap: interfaceExtensionsMap };\n}\nfunction flipMapping(mapping) {\n    var result = Object.create(null);\n    Object.keys(mapping).forEach(function (typeName) {\n        var toTypeNames = mapping[typeName];\n        toTypeNames.forEach(function (toTypeName) {\n            if (!(toTypeName in result)) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        });\n    });\n    return result;\n}\nfunction expandAbstractTypes(targetSchema, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, document) {\n    var _a;\n    var operations = document.definitions.filter(function (def) { return def.kind === Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === Kind.FRAGMENT_DEFINITION; });\n    var existingFragmentNames = fragments.map(function (fragment) { return fragment.name.value; });\n    var fragmentCounter = 0;\n    var generateFragmentName = function (typeName) {\n        var fragmentName;\n        do {\n            fragmentName = \"_\" + typeName + \"_Fragment\" + fragmentCounter.toString();\n            fragmentCounter++;\n        } while (existingFragmentNames.indexOf(fragmentName) !== -1);\n        return fragmentName;\n    };\n    var generateInlineFragment = function (typeName, selectionSet) {\n        return {\n            kind: Kind.INLINE_FRAGMENT,\n            typeCondition: {\n                kind: Kind.NAMED_TYPE,\n                name: {\n                    kind: Kind.NAME,\n                    value: typeName,\n                },\n            },\n            selectionSet: selectionSet,\n        };\n    };\n    var newFragments = [];\n    var fragmentReplacements = Object.create(null);\n    fragments.forEach(function (fragment) {\n        newFragments.push(fragment);\n        var possibleTypes = possibleTypesMap[fragment.typeCondition.name.value];\n        if (possibleTypes != null) {\n            fragmentReplacements[fragment.name.value] = [];\n            possibleTypes.forEach(function (possibleTypeName) {\n                var name = generateFragmentName(possibleTypeName);\n                existingFragmentNames.push(name);\n                var newFragment = {\n                    kind: Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: Kind.NAMED_TYPE,\n                        name: {\n                            kind: Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                };\n                newFragments.push(newFragment);\n                fragmentReplacements[fragment.name.value].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            });\n        }\n    });\n    var newDocument = __assign(__assign({}, document), { definitions: __spread(operations, newFragments) });\n    var typeInfo = new TypeInfo(targetSchema);\n    return visit(newDocument, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var newSelections = node.selections;\n            var addedSelections = [];\n            var maybeType = typeInfo.getParentType();\n            if (maybeType != null) {\n                var parentType_1 = getNamedType(maybeType);\n                var interfaceExtension_1 = interfaceExtensionsMap[parentType_1.name];\n                var interfaceExtensionFields_1 = [];\n                node.selections.forEach(function (selection) {\n                    if (selection.kind === Kind.INLINE_FRAGMENT) {\n                        if (selection.typeCondition != null) {\n                            var possibleTypes = possibleTypesMap[selection.typeCondition.name.value];\n                            if (possibleTypes != null) {\n                                possibleTypes.forEach(function (possibleType) {\n                                    var maybePossibleType = targetSchema.getType(possibleType);\n                                    if (maybePossibleType != null &&\n                                        implementsAbstractType(targetSchema, parentType_1, maybePossibleType)) {\n                                        addedSelections.push(generateInlineFragment(possibleType, selection.selectionSet));\n                                    }\n                                });\n                            }\n                        }\n                    }\n                    else if (selection.kind === Kind.FRAGMENT_SPREAD) {\n                        var fragmentName = selection.name.value;\n                        if (fragmentName in fragmentReplacements) {\n                            fragmentReplacements[fragmentName].forEach(function (replacement) {\n                                var typeName = replacement.typeName;\n                                var maybeReplacementType = targetSchema.getType(typeName);\n                                if (maybeReplacementType != null && implementsAbstractType(targetSchema, parentType_1, maybeType)) {\n                                    addedSelections.push({\n                                        kind: Kind.FRAGMENT_SPREAD,\n                                        name: {\n                                            kind: Kind.NAME,\n                                            value: replacement.fragmentName,\n                                        },\n                                    });\n                                }\n                            });\n                        }\n                    }\n                    else if (interfaceExtension_1 != null &&\n                        interfaceExtension_1[selection.name.value] &&\n                        selection.kind === Kind.FIELD) {\n                        interfaceExtensionFields_1.push(selection);\n                    }\n                });\n                if (parentType_1.name in reversePossibleTypesMap) {\n                    addedSelections.push({\n                        kind: Kind.FIELD,\n                        name: {\n                            kind: Kind.NAME,\n                            value: '__typename',\n                        },\n                    });\n                }\n                if (interfaceExtensionFields_1.length) {\n                    var possibleTypes = possibleTypesMap[parentType_1.name];\n                    if (possibleTypes != null) {\n                        possibleTypes.forEach(function (possibleType) {\n                            addedSelections.push(generateInlineFragment(possibleType, {\n                                kind: Kind.SELECTION_SET,\n                                selections: interfaceExtensionFields_1,\n                            }));\n                        });\n                        newSelections = newSelections.filter(function (selection) {\n                            return !(selection.kind === Kind.FIELD && interfaceExtension_1[selection.name.value]);\n                        });\n                    }\n                }\n            }\n            if (addedSelections.length) {\n                return __assign(__assign({}, node), { selections: newSelections.concat(addedSelections) });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=ExpandAbstractTypes.js.map","import { __assign } from \"tslib\";\nimport { Kind, getNamedType, isAbstractType, TypeInfo, visit, visitWithTypeInfo, isObjectType, } from 'graphql';\n// For motivation, see https://github.com/ardatan/graphql-tools/issues/751\nvar WrapConcreteTypes = /** @class */ (function () {\n    function WrapConcreteTypes(returnType, targetSchema) {\n        this.returnType = returnType;\n        this.targetSchema = targetSchema;\n    }\n    WrapConcreteTypes.prototype.transformRequest = function (originalRequest) {\n        var document = wrapConcreteTypes(this.returnType, this.targetSchema, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return WrapConcreteTypes;\n}());\nexport default WrapConcreteTypes;\nfunction wrapConcreteTypes(returnType, targetSchema, document) {\n    var _a;\n    var namedType = getNamedType(returnType);\n    if (!isObjectType(namedType)) {\n        return document;\n    }\n    var queryRootType = targetSchema.getQueryType();\n    var mutationRootType = targetSchema.getMutationType();\n    var subscriptionRootType = targetSchema.getSubscriptionType();\n    var typeInfo = new TypeInfo(targetSchema);\n    var newDocument = visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.FIELD] = function (node) {\n            var maybeType = typeInfo.getParentType();\n            if (maybeType == null) {\n                return false;\n            }\n            var parentType = getNamedType(maybeType);\n            if (parentType !== queryRootType && parentType !== mutationRootType && parentType !== subscriptionRootType) {\n                return false;\n            }\n            if (!isAbstractType(getNamedType(typeInfo.getType()))) {\n                return false;\n            }\n            return __assign(__assign({}, node), { selectionSet: {\n                    kind: Kind.SELECTION_SET,\n                    selections: [\n                        {\n                            kind: Kind.INLINE_FRAGMENT,\n                            typeCondition: {\n                                kind: Kind.NAMED_TYPE,\n                                name: {\n                                    kind: Kind.NAME,\n                                    value: namedType.name,\n                                },\n                            },\n                            selectionSet: node.selectionSet,\n                        },\n                    ],\n                } });\n        },\n        _a)));\n    return newDocument;\n}\n//# sourceMappingURL=WrapConcreteTypes.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { Kind, TypeNameMetaFieldDef, visit, TypeInfo, visitWithTypeInfo, getNamedType, isObjectType, isInterfaceType, } from 'graphql';\nimport { implementsAbstractType } from '@graphql-tools/utils';\nvar FilterToSchema = /** @class */ (function () {\n    function FilterToSchema(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    FilterToSchema.prototype.transformRequest = function (originalRequest) {\n        return __assign(__assign({}, originalRequest), filterToSchema(this.targetSchema, originalRequest.document, originalRequest.variables));\n    };\n    return FilterToSchema;\n}());\nexport default FilterToSchema;\nfunction filterToSchema(targetSchema, document, variables) {\n    var operations = document.definitions.filter(function (def) { return def.kind === Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === Kind.FRAGMENT_DEFINITION; });\n    var usedVariables = [];\n    var usedFragments = [];\n    var newOperations = [];\n    var newFragments = [];\n    var validFragments = fragments.filter(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        return Boolean(targetSchema.getType(typeName));\n    });\n    var validFragmentsWithType = validFragments.reduce(function (prev, fragment) {\n        var _a;\n        return (__assign(__assign({}, prev), (_a = {}, _a[fragment.name.value] = targetSchema.getType(fragment.typeCondition.name.value), _a)));\n    }, {});\n    var fragmentSet = Object.create(null);\n    operations.forEach(function (operation) {\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet), selectionSet = _a.selectionSet, operationUsedFragments = _a.usedFragments, operationUsedVariables = _a.usedVariables;\n        usedFragments = union(usedFragments, operationUsedFragments);\n        var _b = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments), collectedUsedVariables = _b.usedVariables, collectedNewFragments = _b.newFragments, collectedFragmentSet = _b.fragmentSet;\n        var operationOrFragmentVariables = union(operationUsedVariables, collectedUsedVariables);\n        usedVariables = union(usedVariables, operationOrFragmentVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        var variableDefinitions = operation.variableDefinitions.filter(function (variable) { return operationOrFragmentVariables.indexOf(variable.variable.name.value) !== -1; });\n        newOperations.push({\n            kind: Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions: variableDefinitions,\n            selectionSet: selectionSet,\n        });\n    });\n    var newVariables = usedVariables.reduce(function (acc, variableName) {\n        var variableValue = variables[variableName];\n        if (variableValue !== undefined) {\n            acc[variableName] = variableValue;\n        }\n        return acc;\n    }, {});\n    return {\n        document: {\n            kind: Kind.DOCUMENT,\n            definitions: __spread(newOperations, newFragments),\n        },\n        variables: newVariables,\n    };\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    var remainingFragments = usedFragments.slice();\n    var usedVariables = [];\n    var newFragments = [];\n    var _loop_1 = function () {\n        var nextFragmentName = remainingFragments.pop();\n        var fragment = validFragments.find(function (fr) { return fr.name.value === nextFragmentName; });\n        if (fragment != null) {\n            var name_1 = nextFragmentName;\n            var typeName = fragment.typeCondition.name.value;\n            var type = targetSchema.getType(typeName);\n            var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet), selectionSet = _a.selectionSet, fragmentUsedFragments = _a.usedFragments, fragmentUsedVariables = _a.usedVariables;\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (!(name_1 in fragmentSet)) {\n                fragmentSet[name_1] = true;\n                newFragments.push({\n                    kind: Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: Kind.NAME,\n                        value: name_1,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet: selectionSet,\n                });\n            }\n        }\n    };\n    while (remainingFragments.length !== 0) {\n        _loop_1();\n    }\n    return {\n        usedVariables: usedVariables,\n        newFragments: newFragments,\n        fragmentSet: fragmentSet,\n    };\n}\nfunction filterSelectionSet(schema, type, validFragments, selectionSet) {\n    var _a;\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeInfo = new TypeInfo(schema, undefined, type);\n    var filteredSelectionSet = visit(selectionSet, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = typeInfo.getParentType();\n                if (isObjectType(parentType) || isInterfaceType(parentType)) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename' ? TypeNameMetaFieldDef : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    var argNames_1 = (field.args != null ? field.args : []).map(function (arg) { return arg.name; });\n                    if (node.arguments != null) {\n                        var args = node.arguments.filter(function (arg) { return argNames_1.indexOf(arg.name.value) !== -1; });\n                        if (args.length !== node.arguments.length) {\n                            return __assign(__assign({}, node), { arguments: args });\n                        }\n                    }\n                }\n            },\n            leave: function (node) {\n                var _a;\n                var resolvedType = getNamedType(typeInfo.getType());\n                if (isObjectType(resolvedType) || isInterfaceType(resolvedType)) {\n                    var selections = node.selectionSet != null ? node.selectionSet.selections : null;\n                    if (selections == null || selections.length === 0) {\n                        // need to remove any added variables. Is there a better way to do this?\n                        visit(node, (_a = {},\n                            _a[Kind.VARIABLE] = function (variableNode) {\n                                var index = usedVariables.indexOf(variableNode.name.value);\n                                if (index !== -1) {\n                                    usedVariables.splice(index, 1);\n                                }\n                            },\n                            _a));\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[Kind.FRAGMENT_SPREAD] = function (node) {\n            if (node.name.value in validFragments) {\n                var parentType = typeInfo.getParentType();\n                var innerType = validFragments[node.name.value];\n                if (!implementsAbstractType(schema, parentType, innerType)) {\n                    return null;\n                }\n                usedFragments.push(node.name.value);\n                return;\n            }\n            return null;\n        },\n        _a[Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition != null) {\n                    var parentType = typeInfo.getParentType();\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    if (!implementsAbstractType(schema, parentType, innerType)) {\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a)));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = Object.create(null);\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!(item in cache)) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=FilterToSchema.js.map","import { __assign } from \"tslib\";\nimport { Kind, TypeInfo, visit, visitWithTypeInfo, } from 'graphql';\nvar AddFragmentsByField = /** @class */ (function () {\n    function AddFragmentsByField(targetSchema, mapping) {\n        this.targetSchema = targetSchema;\n        this.mapping = mapping;\n    }\n    AddFragmentsByField.prototype.transformRequest = function (originalRequest) {\n        var document = addFragmentsByField(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return AddFragmentsByField;\n}());\nexport default AddFragmentsByField;\nfunction addFragmentsByField(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new TypeInfo(targetSchema);\n    return visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType != null) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (parentTypeName_1 in mapping) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var fragment = mapping[parentTypeName_1][name_1];\n                            if (fragment != null) {\n                                selections_1 = selections_1.concat(fragment);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddFragmentsByField.js.map","import { __assign } from \"tslib\";\nimport { TypeInfo, visit, visitWithTypeInfo, Kind, isAbstractType, } from 'graphql';\nvar AddTypenameToAbstract = /** @class */ (function () {\n    function AddTypenameToAbstract(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    AddTypenameToAbstract.prototype.transformRequest = function (originalRequest) {\n        var document = addTypenameToAbstract(this.targetSchema, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return AddTypenameToAbstract;\n}());\nexport default AddTypenameToAbstract;\nfunction addTypenameToAbstract(targetSchema, document) {\n    var _a;\n    var typeInfo = new TypeInfo(targetSchema);\n    return visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            var selections = node.selections;\n            if (parentType != null && isAbstractType(parentType)) {\n                selections = selections.concat({\n                    kind: Kind.FIELD,\n                    name: {\n                        kind: Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (selections !== node.selections) {\n                return __assign(__assign({}, node), { selections: selections });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddTypenameToAbstract.js.map","import AggregateError from '@ardatan/aggregate-error';\nimport { getErrorsByPathSegment, relocatedError } from '@graphql-tools/utils';\nexport function handleNull(errors) {\n    if (errors.length) {\n        if (errors.some(function (error) { return !error.path || error.path.length < 2; })) {\n            if (errors.length > 1) {\n                var combinedError = new AggregateError(errors);\n                return combinedError;\n            }\n            var error = errors[0];\n            return error.originalError || relocatedError(error, null);\n        }\n        else if (errors.some(function (error) { return typeof error.path[1] === 'string'; })) {\n            var childErrors_1 = getErrorsByPathSegment(errors);\n            var result_1 = {};\n            Object.keys(childErrors_1).forEach(function (pathSegment) {\n                result_1[pathSegment] = handleNull(childErrors_1[pathSegment]);\n            });\n            return result_1;\n        }\n        var childErrors_2 = getErrorsByPathSegment(errors);\n        var result_2 = [];\n        Object.keys(childErrors_2).forEach(function (pathSegment) {\n            result_2.push(handleNull(childErrors_2[pathSegment]));\n        });\n        return result_2;\n    }\n    return null;\n}\n//# sourceMappingURL=handleNull.js.map","import { __read, __spread } from \"tslib\";\nimport { mergeDeep, ERROR_SYMBOL } from '@graphql-tools/utils';\nimport { OBJECT_SUBSCHEMA_SYMBOL, FIELD_SUBSCHEMA_MAP_SYMBOL } from '../symbols';\nexport function mergeProxiedResults(target) {\n    var _a;\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var results = [];\n    var errors = [];\n    sources.forEach(function (source) {\n        if (source instanceof Error) {\n            errors.push(source);\n        }\n        else {\n            results.push(source);\n            errors.push(source[ERROR_SYMBOL]);\n        }\n    });\n    var fieldSubschemaMap = results.reduce(function (acc, source) {\n        var subschema = source[OBJECT_SUBSCHEMA_SYMBOL];\n        Object.keys(source).forEach(function (key) {\n            acc[key] = subschema;\n        });\n        return acc;\n    }, {});\n    var result = results.reduce(mergeDeep, target);\n    result[FIELD_SUBSCHEMA_MAP_SYMBOL] = target[FIELD_SUBSCHEMA_MAP_SYMBOL]\n        ? Object.assign({}, target[FIELD_SUBSCHEMA_MAP_SYMBOL], fieldSubschemaMap)\n        : fieldSubschemaMap;\n    result[ERROR_SYMBOL] = (_a = target[ERROR_SYMBOL]).concat.apply(_a, __spread(errors));\n    return result;\n}\n//# sourceMappingURL=mergeProxiedResults.js.map","import { __read, __spread } from \"tslib\";\nimport { Kind } from 'graphql';\nimport isPromise from 'is-promise';\nimport { typesContainSelectionSet } from '@graphql-tools/utils';\nimport { memoize4, memoize3, memoize2 } from '../memoize';\nimport { mergeProxiedResults } from './mergeProxiedResults';\nvar sortSubschemasByProxiability = memoize4(function (mergedTypeInfo, sourceSubschemaOrSourceSubschemas, targetSubschemas, fieldNodes) {\n    // 1.  calculate if possible to delegate to given subschema\n    var proxiableSubschemas = [];\n    var nonProxiableSubschemas = [];\n    targetSubschemas.forEach(function (t) {\n        var selectionSet = mergedTypeInfo.selectionSets.get(t);\n        var fieldSelectionSets = mergedTypeInfo.fieldSelectionSets.get(t);\n        if (selectionSet != null &&\n            !subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemaOrSourceSubschemas, selectionSet)) {\n            nonProxiableSubschemas.push(t);\n        }\n        else {\n            if (fieldSelectionSets == null ||\n                fieldNodes.every(function (fieldNode) {\n                    var fieldName = fieldNode.name.value;\n                    var fieldSelectionSet = fieldSelectionSets[fieldName];\n                    return (fieldSelectionSet == null ||\n                        subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemaOrSourceSubschemas, fieldSelectionSet));\n                })) {\n                proxiableSubschemas.push(t);\n            }\n            else {\n                nonProxiableSubschemas.push(t);\n            }\n        }\n    });\n    return {\n        proxiableSubschemas: proxiableSubschemas,\n        nonProxiableSubschemas: nonProxiableSubschemas,\n    };\n});\nvar buildDelegationPlan = memoize3(function (mergedTypeInfo, fieldNodes, proxiableSubschemas) {\n    var uniqueFields = mergedTypeInfo.uniqueFields, nonUniqueFields = mergedTypeInfo.nonUniqueFields;\n    var unproxiableFieldNodes = [];\n    // 2. for each selection:\n    var delegationMap = new Map();\n    fieldNodes.forEach(function (fieldNode) {\n        if (fieldNode.name.value === '__typename') {\n            return;\n        }\n        // 2a. use uniqueFields map to assign fields to subschema if one of possible subschemas\n        var uniqueSubschema = uniqueFields[fieldNode.name.value];\n        if (uniqueSubschema != null) {\n            if (!proxiableSubschemas.includes(uniqueSubschema)) {\n                unproxiableFieldNodes.push(fieldNode);\n                return;\n            }\n            var existingSubschema_1 = delegationMap.get(uniqueSubschema);\n            if (existingSubschema_1 != null) {\n                existingSubschema_1.push(fieldNode);\n            }\n            else {\n                delegationMap.set(uniqueSubschema, [fieldNode]);\n            }\n            return;\n        }\n        // 2b. use nonUniqueFields to assign to a possible subschema,\n        //     preferring one of the subschemas already targets of delegation\n        var nonUniqueSubschemas = nonUniqueFields[fieldNode.name.value];\n        if (nonUniqueSubschemas == null) {\n            unproxiableFieldNodes.push(fieldNode);\n            return;\n        }\n        nonUniqueSubschemas = nonUniqueSubschemas.filter(function (s) { return proxiableSubschemas.includes(s); });\n        if (nonUniqueSubschemas == null) {\n            unproxiableFieldNodes.push(fieldNode);\n            return;\n        }\n        var subschemas = Array.from(delegationMap.keys());\n        var existingSubschema = nonUniqueSubschemas.find(function (s) { return subschemas.includes(s); });\n        if (existingSubschema != null) {\n            delegationMap.get(existingSubschema).push(fieldNode);\n        }\n        else {\n            delegationMap.set(nonUniqueSubschemas[0], [fieldNode]);\n        }\n    });\n    var finalDelegationMap = new Map();\n    delegationMap.forEach(function (selections, subschema) {\n        finalDelegationMap.set(subschema, {\n            kind: Kind.SELECTION_SET,\n            selections: selections,\n        });\n    });\n    return {\n        delegationMap: finalDelegationMap,\n        unproxiableFieldNodes: unproxiableFieldNodes,\n    };\n});\nvar combineSubschemas = memoize2(function (subschemaOrSubschemas, additionalSubschemas) {\n    return Array.isArray(subschemaOrSubschemas)\n        ? subschemaOrSubschemas.concat(additionalSubschemas)\n        : [subschemaOrSubschemas].concat(additionalSubschemas);\n});\nexport function mergeFields(mergedTypeInfo, typeName, object, fieldNodes, sourceSubschemaOrSourceSubschemas, targetSubschemas, context, info) {\n    if (!fieldNodes.length) {\n        return object;\n    }\n    var _a = sortSubschemasByProxiability(mergedTypeInfo, sourceSubschemaOrSourceSubschemas, targetSubschemas, fieldNodes), proxiableSubschemas = _a.proxiableSubschemas, nonProxiableSubschemas = _a.nonProxiableSubschemas;\n    var _b = buildDelegationPlan(mergedTypeInfo, fieldNodes, proxiableSubschemas), delegationMap = _b.delegationMap, unproxiableFieldNodes = _b.unproxiableFieldNodes;\n    if (!delegationMap.size) {\n        return object;\n    }\n    var containsPromises = false;\n    var maybePromises = [];\n    delegationMap.forEach(function (selectionSet, s) {\n        var maybePromise = s.merge[typeName].resolve(object, context, info, s, selectionSet);\n        maybePromises.push(maybePromise);\n        if (!containsPromises && isPromise(maybePromise)) {\n            containsPromises = true;\n        }\n    });\n    return containsPromises\n        ? Promise.all(maybePromises).then(function (results) {\n            return mergeFields(mergedTypeInfo, typeName, mergeProxiedResults.apply(void 0, __spread([object], results)), unproxiableFieldNodes, combineSubschemas(sourceSubschemaOrSourceSubschemas, proxiableSubschemas), nonProxiableSubschemas, context, info);\n        })\n        : mergeFields(mergedTypeInfo, typeName, mergeProxiedResults.apply(void 0, __spread([object], maybePromises)), unproxiableFieldNodes, combineSubschemas(sourceSubschemaOrSourceSubschemas, proxiableSubschemas), nonProxiableSubschemas, context, info);\n}\nvar subschemaTypesContainSelectionSet = memoize3(function (mergedTypeInfo, sourceSubschemaOrSourceSubschemas, selectionSet) {\n    if (Array.isArray(sourceSubschemaOrSourceSubschemas)) {\n        return typesContainSelectionSet(sourceSubschemaOrSourceSubschemas.map(function (sourceSubschema) { return sourceSubschema.schema.getType(mergedTypeInfo.typeName); }), selectionSet);\n    }\n    return typesContainSelectionSet([sourceSubschemaOrSourceSubschemas.schema.getType(mergedTypeInfo.typeName)], selectionSet);\n});\n//# sourceMappingURL=mergeFields.js.map","import { collectFields } from '@graphql-tools/utils';\nimport { isSubschemaConfig } from '../Subschema';\nimport { memoizeInfoAnd2Objects } from '../memoize';\nfunction collectSubFields(info, typeName) {\n    var subFieldNodes = Object.create(null);\n    var visitedFragmentNames = Object.create(null);\n    var type = info.schema.getType(typeName);\n    var partialExecutionContext = {\n        schema: info.schema,\n        variableValues: info.variableValues,\n        fragments: info.fragments,\n    };\n    info.fieldNodes.forEach(function (fieldNode) {\n        subFieldNodes = collectFields(partialExecutionContext, type, fieldNode.selectionSet, subFieldNodes, visitedFragmentNames);\n    });\n    var stitchingInfo = info.schema.extensions.stitchingInfo;\n    var selectionSetsByField = stitchingInfo.selectionSetsByField;\n    Object.keys(subFieldNodes).forEach(function (responseName) {\n        var _a;\n        var fieldName = subFieldNodes[responseName][0].name.value;\n        var fieldSelectionSet = (_a = selectionSetsByField === null || selectionSetsByField === void 0 ? void 0 : selectionSetsByField[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName];\n        if (fieldSelectionSet != null) {\n            subFieldNodes = collectFields(partialExecutionContext, type, fieldSelectionSet, subFieldNodes, visitedFragmentNames);\n        }\n    });\n    return subFieldNodes;\n}\nexport var getFieldsNotInSubschema = memoizeInfoAnd2Objects(function (info, subschema, mergedTypeInfo) {\n    var typeMap = isSubschemaConfig(subschema) ? mergedTypeInfo.typeMaps.get(subschema) : subschema.getTypeMap();\n    var typeName = mergedTypeInfo.typeName;\n    var fields = typeMap[typeName].getFields();\n    var subFieldNodes = collectSubFields(info, typeName);\n    var fieldsNotInSchema = [];\n    Object.keys(subFieldNodes).forEach(function (responseName) {\n        var fieldName = subFieldNodes[responseName][0].name.value;\n        if (!(fieldName in fields)) {\n            fieldsNotInSchema = fieldsNotInSchema.concat(subFieldNodes[responseName]);\n        }\n    });\n    return fieldsNotInSchema;\n});\n//# sourceMappingURL=getFieldsNotInSubschema.js.map","import { isAbstractType } from 'graphql';\nimport { setErrors, slicedError } from '@graphql-tools/utils';\nimport { setObjectSubschema } from '../Subschema';\nimport { mergeFields } from './mergeFields';\nimport { getFieldsNotInSubschema } from './getFieldsNotInSubschema';\nexport function handleObject(type, object, errors, subschema, context, info, skipTypeMerging) {\n    var _a;\n    var stitchingInfo = (_a = info === null || info === void 0 ? void 0 : info.schema.extensions) === null || _a === void 0 ? void 0 : _a.stitchingInfo;\n    setErrors(object, errors.map(function (error) { return slicedError(error); }));\n    setObjectSubschema(object, subschema);\n    if (skipTypeMerging || !stitchingInfo) {\n        return object;\n    }\n    var typeName;\n    if (isAbstractType(type)) {\n        var resolvedType = info.schema.getTypeMap()[object.__typename];\n        if (resolvedType == null) {\n            throw new Error(\"Unable to resolve type '\" + object.__typename + \"'. Did you forget to include a transform that renames types? Did you delegate to the original subschema rather that the subschema config object containing the transform?\");\n        }\n        typeName = resolvedType.name;\n    }\n    else {\n        typeName = type.name;\n    }\n    var mergedTypeInfo = stitchingInfo.mergedTypes[typeName];\n    var targetSubschemas;\n    if (mergedTypeInfo != null) {\n        targetSubschemas = mergedTypeInfo.targetSubschemas.get(subschema);\n    }\n    if (!targetSubschemas) {\n        return object;\n    }\n    var fieldNodes = getFieldsNotInSubschema(info, subschema, mergedTypeInfo);\n    return mergeFields(mergedTypeInfo, typeName, object, fieldNodes, subschema, targetSubschemas, context, info);\n}\n//# sourceMappingURL=handleObject.js.map","import { getNullableType, isLeafType, isCompositeType, isListType, } from 'graphql';\nimport { getErrorsByPathSegment } from '@graphql-tools/utils';\nimport { handleNull } from './handleNull';\nimport { handleObject } from './handleObject';\nexport function handleList(type, list, errors, subschema, context, info, skipTypeMerging) {\n    var childErrors = getErrorsByPathSegment(errors);\n    return list.map(function (listMember, index) {\n        return handleListMember(getNullableType(type.ofType), listMember, index in childErrors ? childErrors[index] : [], subschema, context, info, skipTypeMerging);\n    });\n}\nfunction handleListMember(type, listMember, errors, subschema, context, info, skipTypeMerging) {\n    if (listMember == null) {\n        return handleNull(errors);\n    }\n    if (isLeafType(type)) {\n        return type.parseValue(listMember);\n    }\n    else if (isCompositeType(type)) {\n        return handleObject(type, listMember, errors, subschema, context, info, skipTypeMerging);\n    }\n    else if (isListType(type)) {\n        return handleList(type, listMember, errors, subschema, context, info, skipTypeMerging);\n    }\n}\n//# sourceMappingURL=handleList.js.map","import { getNullableType, isCompositeType, isLeafType, isListType, } from 'graphql';\nimport { handleNull } from './handleNull';\nimport { handleObject } from './handleObject';\nimport { handleList } from './handleList';\nexport function handleResult(result, errors, subschema, context, info, returnType, skipTypeMerging) {\n    if (returnType === void 0) { returnType = info.returnType; }\n    var type = getNullableType(returnType);\n    if (result == null) {\n        return handleNull(errors);\n    }\n    if (isLeafType(type)) {\n        return type.parseValue(result);\n    }\n    else if (isCompositeType(type)) {\n        return handleObject(type, result, errors, subschema, context, info, skipTypeMerging);\n    }\n    else if (isListType(type)) {\n        return handleList(type, result, errors, subschema, context, info, skipTypeMerging);\n    }\n}\n//# sourceMappingURL=handleResult.js.map","import { getResponseKeyFromInfo } from '@graphql-tools/utils';\nimport { handleResult } from '../results/handleResult';\nvar CheckResultAndHandleErrors = /** @class */ (function () {\n    function CheckResultAndHandleErrors(info, fieldName, subschema, context, returnType, typeMerge) {\n        if (returnType === void 0) { returnType = info.returnType; }\n        this.context = context;\n        this.info = info;\n        this.fieldName = fieldName;\n        this.subschema = subschema;\n        this.returnType = returnType;\n        this.typeMerge = typeMerge;\n    }\n    CheckResultAndHandleErrors.prototype.transformResult = function (result) {\n        return checkResultAndHandleErrors(result, this.context != null ? this.context : {}, this.info, this.fieldName, this.subschema, this.returnType, this.typeMerge);\n    };\n    return CheckResultAndHandleErrors;\n}());\nexport default CheckResultAndHandleErrors;\nexport function checkResultAndHandleErrors(result, context, info, responseKey, subschema, returnType, skipTypeMerging) {\n    if (responseKey === void 0) { responseKey = getResponseKeyFromInfo(info); }\n    if (returnType === void 0) { returnType = info.returnType; }\n    var errors = result.errors != null ? result.errors : [];\n    var data = result.data != null ? result.data[responseKey] : undefined;\n    return handleResult(data, errors, subschema, context, info, returnType, skipTypeMerging);\n}\n//# sourceMappingURL=CheckResultAndHandleErrors.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { Kind, } from 'graphql';\nimport { serializeInputValue, updateArgument } from '@graphql-tools/utils';\nvar AddArgumentsAsVariables = /** @class */ (function () {\n    function AddArgumentsAsVariables(targetSchema, args) {\n        this.targetSchema = targetSchema;\n        this.args = Object.entries(args).reduce(function (prev, _a) {\n            var _b;\n            var _c = __read(_a, 2), key = _c[0], val = _c[1];\n            return (__assign(__assign({}, prev), (_b = {}, _b[key] = val, _b)));\n        }, {});\n    }\n    AddArgumentsAsVariables.prototype.transformRequest = function (originalRequest) {\n        var _a = addVariablesToRootField(this.targetSchema, originalRequest, this.args), document = _a.document, variables = _a.variables;\n        return __assign(__assign({}, originalRequest), { document: document,\n            variables: variables });\n    };\n    return AddArgumentsAsVariables;\n}());\nexport default AddArgumentsAsVariables;\nfunction addVariablesToRootField(targetSchema, originalRequest, args) {\n    var document = originalRequest.document;\n    var variableValues = originalRequest.variables;\n    var operations = document.definitions.filter(function (def) { return def.kind === Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === Kind.FRAGMENT_DEFINITION; });\n    var newOperations = operations.map(function (operation) {\n        var variableDefinitionMap = operation.variableDefinitions.reduce(function (prev, def) {\n            var _a;\n            return (__assign(__assign({}, prev), (_a = {}, _a[def.variable.name.value] = def, _a)));\n        }, {});\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var newSelectionSet = [];\n        operation.selectionSet.selections.forEach(function (selection) {\n            if (selection.kind === Kind.FIELD) {\n                var argumentNodes = selection.arguments;\n                var argumentNodeMap_1 = argumentNodes.reduce(function (prev, argument) {\n                    var _a;\n                    return (__assign(__assign({}, prev), (_a = {}, _a[argument.name.value] = argument, _a)));\n                }, {});\n                var targetField = type.getFields()[selection.name.value];\n                // excludes __typename\n                if (targetField != null) {\n                    updateArguments(targetField, argumentNodeMap_1, variableDefinitionMap, variableValues, args);\n                }\n                newSelectionSet.push(__assign(__assign({}, selection), { arguments: Object.keys(argumentNodeMap_1).map(function (argName) { return argumentNodeMap_1[argName]; }) }));\n            }\n            else {\n                newSelectionSet.push(selection);\n            }\n        });\n        return __assign(__assign({}, operation), { variableDefinitions: Object.keys(variableDefinitionMap).map(function (varName) { return variableDefinitionMap[varName]; }), selectionSet: {\n                kind: Kind.SELECTION_SET,\n                selections: newSelectionSet,\n            } });\n    });\n    return {\n        document: __assign(__assign({}, document), { definitions: __spread(newOperations, fragments) }),\n        variables: variableValues,\n    };\n}\nfunction updateArguments(targetField, argumentNodeMap, variableDefinitionMap, variableValues, newArgs) {\n    targetField.args.forEach(function (argument) {\n        var argName = argument.name;\n        var argType = argument.type;\n        if (argName in newArgs) {\n            updateArgument(argName, argType, argumentNodeMap, variableDefinitionMap, variableValues, serializeInputValue(argType, newArgs[argName]));\n        }\n    });\n}\n//# sourceMappingURL=AddArgumentsAsVariables.js.map","import AddSelectionSets from './transforms/AddSelectionSets';\nimport ExpandAbstractTypes from './transforms/ExpandAbstractTypes';\nimport WrapConcreteTypes from './transforms/WrapConcreteTypes';\nimport FilterToSchema from './transforms/FilterToSchema';\nimport AddFragmentsByField from './transforms/AddFragmentsByField';\nimport AddTypenameToAbstract from './transforms/AddTypenameToAbstract';\nimport CheckResultAndHandleErrors from './transforms/CheckResultAndHandleErrors';\nimport AddArgumentsAsVariables from './transforms/AddArgumentsAsVariables';\nexport function defaultDelegationBinding(delegationContext) {\n    var _a;\n    var schemaOrSubschemaConfig = delegationContext.subschema, targetSchema = delegationContext.targetSchema, fieldName = delegationContext.fieldName, args = delegationContext.args, context = delegationContext.context, info = delegationContext.info, returnType = delegationContext.returnType, _b = delegationContext.transforms, transforms = _b === void 0 ? [] : _b, skipTypeMerging = delegationContext.skipTypeMerging;\n    var stitchingInfo = (_a = info === null || info === void 0 ? void 0 : info.schema.extensions) === null || _a === void 0 ? void 0 : _a.stitchingInfo;\n    var transformedSchema = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.transformedSchemas.get(schemaOrSubschemaConfig);\n    if (transformedSchema != null) {\n        delegationContext.transformedSchema = transformedSchema;\n    }\n    else {\n        transformedSchema = delegationContext.transformedSchema;\n    }\n    var delegationTransforms = [\n        new CheckResultAndHandleErrors(info, fieldName, schemaOrSubschemaConfig, context, returnType, skipTypeMerging),\n    ];\n    if (stitchingInfo != null) {\n        delegationTransforms = delegationTransforms.concat([\n            new AddSelectionSets(info.schema, returnType, {}, stitchingInfo.selectionSetsByField, stitchingInfo.dynamicSelectionSetsByField),\n            new WrapConcreteTypes(returnType, transformedSchema),\n            new ExpandAbstractTypes(info.schema, transformedSchema),\n        ]);\n    }\n    else if (info != null) {\n        delegationTransforms = delegationTransforms.concat([\n            new WrapConcreteTypes(returnType, transformedSchema),\n            new ExpandAbstractTypes(info.schema, transformedSchema),\n        ]);\n    }\n    else {\n        delegationTransforms.push(new WrapConcreteTypes(returnType, transformedSchema));\n    }\n    delegationTransforms = delegationTransforms.concat(transforms.slice().reverse());\n    if (stitchingInfo != null) {\n        delegationTransforms.push(new AddFragmentsByField(targetSchema, stitchingInfo.fragmentsByField));\n    }\n    if (args != null) {\n        delegationTransforms.push(new AddArgumentsAsVariables(targetSchema, args));\n    }\n    delegationTransforms = delegationTransforms.concat([\n        new FilterToSchema(targetSchema),\n        new AddTypenameToAbstract(targetSchema),\n    ]);\n    return delegationTransforms;\n}\n//# sourceMappingURL=delegationBindings.js.map","import { defaultDelegationBinding } from './delegationBindings';\nvar Transformer = /** @class */ (function () {\n    function Transformer(context, binding) {\n        var _this = this;\n        if (binding === void 0) { binding = defaultDelegationBinding; }\n        this.transformations = [];\n        this.delegationContext = context;\n        var delegationTransforms = binding(this.delegationContext);\n        delegationTransforms.forEach(function (transform) { return _this.addTransform(transform, {}); });\n    }\n    Transformer.prototype.addTransform = function (transform, context) {\n        if (context === void 0) { context = {}; }\n        this.transformations.push({ transform: transform, context: context });\n    };\n    Transformer.prototype.transformRequest = function (originalRequest) {\n        var _this = this;\n        return this.transformations.reduce(function (request, transformation) {\n            return transformation.transform.transformRequest != null\n                ? transformation.transform.transformRequest(request, _this.delegationContext, transformation.context)\n                : request;\n        }, originalRequest);\n    };\n    Transformer.prototype.transformResult = function (originalResult) {\n        var _this = this;\n        return this.transformations.reduceRight(function (result, transformation) {\n            return transformation.transform.transformResult != null\n                ? transformation.transform.transformResult(result, _this.delegationContext, transformation.context)\n                : result;\n        }, originalResult);\n    };\n    return Transformer;\n}());\nexport { Transformer };\n//# sourceMappingURL=Transformer.js.map","// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\nexport function createPrefix(index) {\n    return \"graphqlTools\" + index + \"_\";\n}\nexport function parseKey(prefixedKey) {\n    var match = /^graphqlTools([\\d]+)_(.*)$/.exec(prefixedKey);\n    if (match && match.length === 3 && !isNaN(Number(match[1])) && match[2]) {\n        return { index: Number(match[1]), originalKey: match[2] };\n    }\n    return null;\n}\n//# sourceMappingURL=prefix.js.map","// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\nimport { __assign, __read, __spread } from \"tslib\";\nimport { visit, Kind, } from 'graphql';\nimport { createPrefix } from './prefix';\n/**\n * Merge multiple queries into a single query in such a way that query results\n * can be split and transformed as if they were obtained by running original queries.\n *\n * Merging algorithm involves several transformations:\n *  1. Replace top-level fragment spreads with inline fragments (... on Query {})\n *  2. Add unique aliases to all top-level query fields (including those on inline fragments)\n *  3. Prefix all variable definitions and variable usages\n *  4. Prefix names (and spreads) of fragments\n *\n * i.e transform:\n *   [\n *     `query Foo($id: ID!) { foo, bar(id: $id), ...FooQuery }\n *     fragment FooQuery on Query { baz }`,\n *\n *    `query Bar($id: ID!) { foo: baz, bar(id: $id), ... on Query { baz } }`\n *   ]\n * to:\n *   query (\n *     $graphqlTools1_id: ID!\n *     $graphqlTools2_id: ID!\n *   ) {\n *     graphqlTools1_foo: foo,\n *     graphqlTools1_bar: bar(id: $graphqlTools1_id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *     graphqlTools1__foo: baz\n *     graphqlTools1__bar: bar(id: $graphqlTools1__id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *   }\n */\nexport function mergeExecutionParams(execs, extensionsReducer) {\n    var mergedVariables = Object.create(null);\n    var mergedVariableDefinitions = [];\n    var mergedSelections = [];\n    var mergedFragmentDefinitions = [];\n    var mergedExtensions = Object.create(null);\n    var operation;\n    execs.forEach(function (executionParams, index) {\n        var prefixedExecutionParams = prefixExecutionParams(createPrefix(index), executionParams);\n        prefixedExecutionParams.document.definitions.forEach(function (def) {\n            var _a;\n            if (isOperationDefinition(def)) {\n                operation = def.operation;\n                mergedSelections.push.apply(mergedSelections, __spread(def.selectionSet.selections));\n                mergedVariableDefinitions.push.apply(mergedVariableDefinitions, __spread(((_a = def.variableDefinitions) !== null && _a !== void 0 ? _a : [])));\n            }\n            if (isFragmentDefinition(def)) {\n                mergedFragmentDefinitions.push(def);\n            }\n        });\n        Object.assign(mergedVariables, prefixedExecutionParams.variables);\n        mergedExtensions = extensionsReducer(mergedExtensions, executionParams);\n    });\n    var mergedOperationDefinition = {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: operation,\n        variableDefinitions: mergedVariableDefinitions,\n        selectionSet: {\n            kind: Kind.SELECTION_SET,\n            selections: mergedSelections,\n        },\n    };\n    return {\n        document: {\n            kind: Kind.DOCUMENT,\n            definitions: __spread([mergedOperationDefinition], mergedFragmentDefinitions),\n        },\n        variables: mergedVariables,\n        extensions: mergedExtensions,\n        context: execs[0].context,\n        info: execs[0].info,\n    };\n}\nfunction prefixExecutionParams(prefix, executionParams) {\n    var _a;\n    var document = aliasTopLevelFields(prefix, executionParams.document);\n    var variableNames = Object.keys(executionParams.variables);\n    if (variableNames.length === 0) {\n        return __assign(__assign({}, executionParams), { document: document });\n    }\n    document = visit(document, (_a = {},\n        _a[Kind.VARIABLE] = function (node) { return prefixNodeName(node, prefix); },\n        _a[Kind.FRAGMENT_DEFINITION] = function (node) { return prefixNodeName(node, prefix); },\n        _a[Kind.FRAGMENT_SPREAD] = function (node) { return prefixNodeName(node, prefix); },\n        _a));\n    var prefixedVariables = variableNames.reduce(function (acc, name) {\n        acc[prefix + name] = executionParams.variables[name];\n        return acc;\n    }, Object.create(null));\n    return {\n        document: document,\n        variables: prefixedVariables,\n    };\n}\n/**\n * Adds prefixed aliases to top-level fields of the query.\n *\n * @see aliasFieldsInSelection for implementation details\n */\nfunction aliasTopLevelFields(prefix, document) {\n    var _a, _b;\n    var transformer = (_a = {},\n        _a[Kind.OPERATION_DEFINITION] = function (def) {\n            var selections = def.selectionSet.selections;\n            return __assign(__assign({}, def), { selectionSet: __assign(__assign({}, def.selectionSet), { selections: aliasFieldsInSelection(prefix, selections, document) }) });\n        },\n        _a);\n    return visit(document, transformer, (_b = {}, _b[Kind.DOCUMENT] = [\"definitions\"], _b));\n}\n/**\n * Add aliases to fields of the selection, including top-level fields of inline fragments.\n * Fragment spreads are converted to inline fragments and their top-level fields are also aliased.\n *\n * Note that this method is shallow. It adds aliases only to the top-level fields and doesn't\n * descend to field sub-selections.\n *\n * For example, transforms:\n *   {\n *     foo\n *     ... on Query { foo }\n *     ...FragmentWithBarField\n *   }\n * To:\n *   {\n *     graphqlTools1_foo: foo\n *     ... on Query { graphqlTools1_foo: foo }\n *     ... on Query { graphqlTools1_bar: bar }\n *   }\n */\nfunction aliasFieldsInSelection(prefix, selections, document) {\n    return selections.map(function (selection) {\n        switch (selection.kind) {\n            case Kind.INLINE_FRAGMENT:\n                return aliasFieldsInInlineFragment(prefix, selection, document);\n            case Kind.FRAGMENT_SPREAD: {\n                var inlineFragment = inlineFragmentSpread(selection, document);\n                return aliasFieldsInInlineFragment(prefix, inlineFragment, document);\n            }\n            case Kind.FIELD:\n            default:\n                return aliasField(selection, prefix);\n        }\n    });\n}\n/**\n * Add aliases to top-level fields of the inline fragment.\n * Returns new inline fragment node.\n *\n * For Example, transforms:\n *   ... on Query { foo, ... on Query { bar: foo } }\n * To\n *   ... on Query { graphqlTools1_foo: foo, ... on Query { graphqlTools1_bar: foo } }\n */\nfunction aliasFieldsInInlineFragment(prefix, fragment, document) {\n    var selections = fragment.selectionSet.selections;\n    return __assign(__assign({}, fragment), { selectionSet: __assign(__assign({}, fragment.selectionSet), { selections: aliasFieldsInSelection(prefix, selections, document) }) });\n}\n/**\n * Replaces fragment spread with inline fragment\n *\n * Example:\n *   query { ...Spread }\n *   fragment Spread on Query { bar }\n *\n * Transforms to:\n *   query { ... on Query { bar } }\n */\nfunction inlineFragmentSpread(spread, document) {\n    var fragment = document.definitions.find(function (def) { return isFragmentDefinition(def) && def.name.value === spread.name.value; });\n    if (!fragment) {\n        throw new Error(\"Fragment \" + spread.name.value + \" does not exist\");\n    }\n    var typeCondition = fragment.typeCondition, selectionSet = fragment.selectionSet;\n    return {\n        kind: Kind.INLINE_FRAGMENT,\n        typeCondition: typeCondition,\n        selectionSet: selectionSet,\n        directives: spread.directives,\n    };\n}\nfunction prefixNodeName(namedNode, prefix) {\n    return __assign(__assign({}, namedNode), { name: __assign(__assign({}, namedNode.name), { value: prefix + namedNode.name.value }) });\n}\n/**\n * Returns a new FieldNode with prefixed alias\n *\n * Example. Given prefix === \"graphqlTools1_\" transforms:\n *   { foo } -> { graphqlTools1_foo: foo }\n *   { foo: bar } -> { graphqlTools1_foo: bar }\n */\nfunction aliasField(field, aliasPrefix) {\n    var aliasNode = field.alias ? field.alias : field.name;\n    return __assign(__assign({}, field), { alias: __assign(__assign({}, aliasNode), { value: aliasPrefix + aliasNode.value }) });\n}\nfunction isOperationDefinition(def) {\n    return def.kind === Kind.OPERATION_DEFINITION;\n}\nfunction isFragmentDefinition(def) {\n    return def.kind === Kind.FRAGMENT_DEFINITION;\n}\n//# sourceMappingURL=mergeExecutionParams.js.map","// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\nimport { __read, __spread } from \"tslib\";\nimport { relocatedError } from '@graphql-tools/utils';\nimport { parseKey } from './prefix';\n/**\n * Split and transform result of the query produced by the `merge` function\n */\nexport function splitResult(mergedResult, numResults) {\n    var splitResults = [];\n    for (var i = 0; i < numResults; i++) {\n        splitResults.push({});\n    }\n    var data = mergedResult.data;\n    if (data) {\n        Object.keys(data).forEach(function (prefixedKey) {\n            var _a;\n            var _b = parseKey(prefixedKey), index = _b.index, originalKey = _b.originalKey;\n            if (!splitResults[index].data) {\n                splitResults[index].data = (_a = {}, _a[originalKey] = data[prefixedKey], _a);\n            }\n            else {\n                splitResults[index].data[originalKey] = data[prefixedKey];\n            }\n        });\n    }\n    var errors = mergedResult.errors;\n    if (errors) {\n        var newErrors_1 = Object.create(null);\n        errors.forEach(function (error) {\n            if (error.path) {\n                var parsedKey = parseKey(error.path[0]);\n                if (parsedKey) {\n                    var index = parsedKey.index, originalKey = parsedKey.originalKey;\n                    var newError = relocatedError(error, __spread([originalKey], error.path.slice(1)));\n                    if (!newErrors_1[index]) {\n                        newErrors_1[index] = [newError];\n                    }\n                    else {\n                        newErrors_1[index].push(newError);\n                    }\n                    return;\n                }\n            }\n            splitResults.forEach(function (_splitResult, index) {\n                if (!newErrors_1[index]) {\n                    newErrors_1[index] = [error];\n                }\n                else {\n                    newErrors_1[index].push(error);\n                }\n            });\n        });\n        Object.keys(newErrors_1).forEach(function (index) {\n            splitResults[index].errors = newErrors_1[index];\n        });\n    }\n    return splitResults;\n}\n//# sourceMappingURL=splitResult.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { getOperationAST } from 'graphql';\nimport isPromise from 'is-promise';\nimport DataLoader from 'dataloader';\nimport { memoize2of3 } from './memoize';\nimport { mergeExecutionParams } from './mergeExecutionParams';\nimport { splitResult } from './splitResult';\nexport var getBatchingExecutor = memoize2of3(function (_context, endpoint, executor) {\n    var _a, _b, _c;\n    var loader = new DataLoader(createLoadFn(executor !== null && executor !== void 0 ? executor : endpoint.executor, (_b = (_a = endpoint.batchingOptions) === null || _a === void 0 ? void 0 : _a.extensionsReducer) !== null && _b !== void 0 ? _b : defaultExtensionsReducer), (_c = endpoint.batchingOptions) === null || _c === void 0 ? void 0 : _c.dataLoaderOptions);\n    return function (executionParams) { return loader.load(executionParams); };\n});\nfunction createLoadFn(executor, extensionsReducer) {\n    var _this = this;\n    return function (execs) { return __awaiter(_this, void 0, void 0, function () {\n        var execBatches, index, exec, currentBatch, operationType, currentOperationType, containsPromises, executionResults, results;\n        return __generator(this, function (_a) {\n            execBatches = [];\n            index = 0;\n            exec = execs[index];\n            currentBatch = [exec];\n            execBatches.push(currentBatch);\n            operationType = getOperationAST(exec.document, undefined).operation;\n            while (++index < execs.length) {\n                currentOperationType = getOperationAST(execs[index].document, undefined).operation;\n                if (operationType === currentOperationType) {\n                    currentBatch.push(execs[index]);\n                }\n                else {\n                    currentBatch = [execs[index]];\n                    execBatches.push(currentBatch);\n                }\n            }\n            containsPromises = false;\n            executionResults = [];\n            execBatches.forEach(function (execBatch) {\n                var mergedExecutionParams = mergeExecutionParams(execBatch, extensionsReducer);\n                var executionResult = executor(mergedExecutionParams);\n                if (isPromise(executionResult)) {\n                    containsPromises = true;\n                }\n                executionResults.push(executionResult);\n            });\n            if (containsPromises) {\n                return [2 /*return*/, Promise.all(executionResults).then(function (resultBatches) {\n                        var results = [];\n                        resultBatches.forEach(function (resultBatch, index) {\n                            results = results.concat(splitResult(resultBatch, execBatches[index].length));\n                        });\n                        return results;\n                    })];\n            }\n            results = [];\n            executionResults.forEach(function (resultBatch, index) {\n                results = results.concat(splitResult(resultBatch, execBatches[index].length));\n            });\n            return [2 /*return*/, results];\n        });\n    }); };\n}\nfunction defaultExtensionsReducer(mergedExtensions, executionParams) {\n    var newExtensions = executionParams.extensions;\n    if (newExtensions != null) {\n        Object.assign(mergedExtensions, newExtensions);\n    }\n    return mergedExtensions;\n}\n//# sourceMappingURL=getBatchingExecutor.js.map","import { __assign } from \"tslib\";\nimport { subscribe, execute, validate, isSchema, getOperationAST, } from 'graphql';\nimport isPromise from 'is-promise';\nimport { mapAsyncIterator } from '@graphql-tools/utils';\nimport { isSubschemaConfig } from './Subschema';\nimport { createRequestFromInfo, getDelegatingOperation } from './createRequest';\nimport { Transformer } from './Transformer';\nimport AggregateError from '@ardatan/aggregate-error';\nimport { getBatchingExecutor } from './getBatchingExecutor';\nexport function delegateToSchema(options) {\n    if (isSchema(options)) {\n        throw new Error('Passing positional arguments to delegateToSchema is deprecated. ' + 'Please pass named parameters instead.');\n    }\n    var info = options.info, operationName = options.operationName, _a = options.operation, operation = _a === void 0 ? getDelegatingOperation(info.parentType, info.schema) : _a, _b = options.fieldName, fieldName = _b === void 0 ? info.fieldName : _b, _c = options.returnType, returnType = _c === void 0 ? info.returnType : _c, selectionSet = options.selectionSet, fieldNodes = options.fieldNodes;\n    var request = createRequestFromInfo({\n        info: info,\n        operation: operation,\n        fieldName: fieldName,\n        selectionSet: selectionSet,\n        fieldNodes: fieldNodes,\n        operationName: operationName,\n    });\n    return delegateRequest(__assign(__assign({}, options), { request: request,\n        operation: operation,\n        fieldName: fieldName,\n        returnType: returnType }));\n}\nfunction getDelegationReturnType(targetSchema, operation, fieldName) {\n    var rootType;\n    if (operation === 'query') {\n        rootType = targetSchema.getQueryType();\n    }\n    else if (operation === 'mutation') {\n        rootType = targetSchema.getMutationType();\n    }\n    else {\n        rootType = targetSchema.getSubscriptionType();\n    }\n    return rootType.getFields()[fieldName].type;\n}\nexport function delegateRequest(_a) {\n    var _b, _c, _d;\n    var request = _a.request, subschemaOrSubschemaConfig = _a.schema, rootValue = _a.rootValue, info = _a.info, operation = _a.operation, fieldName = _a.fieldName, args = _a.args, returnType = _a.returnType, context = _a.context, _e = _a.transforms, transforms = _e === void 0 ? [] : _e, transformedSchema = _a.transformedSchema, skipValidation = _a.skipValidation, skipTypeMerging = _a.skipTypeMerging, binding = _a.binding;\n    var operationDefinition;\n    var targetOperation;\n    var targetFieldName;\n    if (operation == null) {\n        operationDefinition = getOperationAST(request.document, undefined);\n        targetOperation = operationDefinition.operation;\n    }\n    else {\n        targetOperation = operation;\n    }\n    if (fieldName == null) {\n        operationDefinition = operationDefinition !== null && operationDefinition !== void 0 ? operationDefinition : getOperationAST(request.document, undefined);\n        targetFieldName = operationDefinition.selectionSet.selections[0].name.value;\n    }\n    else {\n        targetFieldName = fieldName;\n    }\n    var targetSchema;\n    var targetRootValue;\n    var subschemaConfig;\n    var endpoint;\n    var allTransforms;\n    if (isSubschemaConfig(subschemaOrSubschemaConfig)) {\n        var stitchingInfo = (_b = info === null || info === void 0 ? void 0 : info.schema.extensions) === null || _b === void 0 ? void 0 : _b.stitchingInfo;\n        if (stitchingInfo) {\n            var processedSubschema = stitchingInfo.transformedSubschemaConfigs.get(subschemaOrSubschemaConfig);\n            subschemaConfig = processedSubschema != null ? processedSubschema : subschemaOrSubschemaConfig;\n        }\n        else {\n            subschemaConfig = subschemaOrSubschemaConfig;\n        }\n        targetSchema = subschemaConfig.schema;\n        allTransforms = subschemaConfig.transforms != null ? subschemaConfig.transforms.concat(transforms) : transforms;\n        if (subschemaConfig.endpoint != null) {\n            endpoint = subschemaConfig.endpoint;\n        }\n        else {\n            endpoint = subschemaConfig;\n        }\n        targetRootValue = (_c = rootValue !== null && rootValue !== void 0 ? rootValue : endpoint === null || endpoint === void 0 ? void 0 : endpoint.rootValue) !== null && _c !== void 0 ? _c : info === null || info === void 0 ? void 0 : info.rootValue;\n    }\n    else {\n        targetSchema = subschemaOrSubschemaConfig;\n        targetRootValue = rootValue !== null && rootValue !== void 0 ? rootValue : info === null || info === void 0 ? void 0 : info.rootValue;\n        allTransforms = transforms;\n    }\n    var delegationContext = {\n        subschema: subschemaOrSubschemaConfig,\n        targetSchema: targetSchema,\n        operation: targetOperation,\n        fieldName: targetFieldName,\n        args: args,\n        context: context,\n        info: info,\n        returnType: (_d = returnType !== null && returnType !== void 0 ? returnType : info === null || info === void 0 ? void 0 : info.returnType) !== null && _d !== void 0 ? _d : getDelegationReturnType(targetSchema, targetOperation, targetFieldName),\n        transforms: allTransforms,\n        transformedSchema: transformedSchema !== null && transformedSchema !== void 0 ? transformedSchema : targetSchema,\n        skipTypeMerging: skipTypeMerging,\n    };\n    var transformer = new Transformer(delegationContext, binding);\n    var processedRequest = transformer.transformRequest(request);\n    if (!skipValidation) {\n        validateRequest(targetSchema, processedRequest.document);\n    }\n    if (targetOperation === 'query' || targetOperation === 'mutation') {\n        var executor = (endpoint === null || endpoint === void 0 ? void 0 : endpoint.executor) || createDefaultExecutor(targetSchema, (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.rootValue) || targetRootValue);\n        if (endpoint === null || endpoint === void 0 ? void 0 : endpoint.batch) {\n            executor = getBatchingExecutor(context, endpoint, executor);\n        }\n        var executionResult = executor(__assign(__assign({}, processedRequest), { context: context,\n            info: info }));\n        if (isPromise(executionResult)) {\n            return executionResult.then(function (originalResult) { return transformer.transformResult(originalResult); });\n        }\n        return transformer.transformResult(executionResult);\n    }\n    var subscriber = (endpoint === null || endpoint === void 0 ? void 0 : endpoint.subscriber) || createDefaultSubscriber(targetSchema, (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.rootValue) || targetRootValue);\n    return subscriber(__assign(__assign({}, processedRequest), { context: context,\n        info: info })).then(function (subscriptionResult) {\n        if (Symbol.asyncIterator in subscriptionResult) {\n            // \"subscribe\" to the subscription result and map the result through the transforms\n            return mapAsyncIterator(subscriptionResult, function (originalResult) {\n                var _a;\n                return (_a = {},\n                    _a[targetFieldName] = transformer.transformResult(originalResult),\n                    _a);\n            });\n        }\n        return transformer.transformResult(subscriptionResult);\n    });\n}\nfunction validateRequest(targetSchema, document) {\n    var errors = validate(targetSchema, document);\n    if (errors.length > 0) {\n        if (errors.length > 1) {\n            var combinedError = new AggregateError(errors);\n            throw combinedError;\n        }\n        var error = errors[0];\n        throw error.originalError || error;\n    }\n}\nfunction createDefaultExecutor(schema, rootValue) {\n    return function (_a) {\n        var document = _a.document, context = _a.context, variables = _a.variables, info = _a.info;\n        return execute({\n            schema: schema,\n            document: document,\n            contextValue: context,\n            variableValues: variables,\n            rootValue: rootValue !== null && rootValue !== void 0 ? rootValue : info === null || info === void 0 ? void 0 : info.rootValue,\n        });\n    };\n}\nfunction createDefaultSubscriber(schema, rootValue) {\n    return function (_a) {\n        var document = _a.document, context = _a.context, variables = _a.variables, info = _a.info;\n        return subscribe({\n            schema: schema,\n            document: document,\n            contextValue: context,\n            variableValues: variables,\n            rootValue: rootValue !== null && rootValue !== void 0 ? rootValue : info === null || info === void 0 ? void 0 : info.rootValue,\n        });\n    };\n}\n//# sourceMappingURL=delegateToSchema.js.map","import { defaultFieldResolver } from 'graphql';\nimport { getResponseKeyFromInfo, getErrors } from '@graphql-tools/utils';\nimport { handleResult } from './results/handleResult';\nimport { getSubschema } from './Subschema';\n/**\n * Resolver that knows how to:\n * a) handle aliases for proxied schemas\n * b) handle errors from proxied schemas\n * c) handle external to internal enum coversion\n */\nexport function defaultMergedResolver(parent, args, context, info) {\n    if (!parent) {\n        return null;\n    }\n    var responseKey = getResponseKeyFromInfo(info);\n    var errors = getErrors(parent, responseKey);\n    // check to see if parent is not a proxied result, i.e. if parent resolver was manually overwritten\n    // See https://github.com/apollographql/graphql-tools/issues/967\n    if (!errors) {\n        return defaultFieldResolver(parent, args, context, info);\n    }\n    var result = parent[responseKey];\n    var subschema = getSubschema(parent, responseKey);\n    return handleResult(result, errors, subschema, context, info);\n}\n//# sourceMappingURL=defaultMergedResolver.js.map","import { getErrors, setErrors, relocatedError, ERROR_SYMBOL } from '@graphql-tools/utils';\nimport { OBJECT_SUBSCHEMA_SYMBOL } from './symbols';\nimport { getSubschema, setObjectSubschema } from './Subschema';\nimport { defaultMergedResolver } from './defaultMergedResolver';\nimport { handleNull } from './results/handleNull';\nfunction unwrapResult(parent, path) {\n    var newParent = parent;\n    var pathLength = path.length;\n    for (var i = 0; i < pathLength; i++) {\n        var responseKey = path[i];\n        var errors = getErrors(newParent, responseKey);\n        var subschema = getSubschema(newParent, responseKey);\n        var object = newParent[responseKey];\n        if (object == null) {\n            return handleNull(errors);\n        }\n        setErrors(object, errors.map(function (error) { return relocatedError(error, error.path != null ? error.path.slice(1) : undefined); }));\n        setObjectSubschema(object, subschema);\n        newParent = object;\n    }\n    return newParent;\n}\nfunction dehoistResult(parent, delimeter) {\n    if (delimeter === void 0) { delimeter = '__gqltf__'; }\n    var result = Object.create(null);\n    Object.keys(parent).forEach(function (alias) {\n        var obj = result;\n        var fieldNames = alias.split(delimeter);\n        var fieldName = fieldNames.pop();\n        fieldNames.forEach(function (key) {\n            obj = obj[key] = obj[key] || Object.create(null);\n        });\n        obj[fieldName] = parent[alias];\n    });\n    result[ERROR_SYMBOL] = parent[ERROR_SYMBOL].map(function (error) {\n        if (error.path != null) {\n            var path = error.path.slice();\n            var pathSegment = path.shift();\n            var expandedPathSegment = pathSegment.split(delimeter);\n            return relocatedError(error, expandedPathSegment.concat(path));\n        }\n        return error;\n    });\n    result[OBJECT_SUBSCHEMA_SYMBOL] = parent[OBJECT_SUBSCHEMA_SYMBOL];\n    return result;\n}\nexport function createMergedResolver(_a) {\n    var fromPath = _a.fromPath, dehoist = _a.dehoist, _b = _a.delimeter, delimeter = _b === void 0 ? '__gqltf__' : _b;\n    var parentErrorResolver = function (parent, args, context, info) {\n        return parent instanceof Error ? parent : defaultMergedResolver(parent, args, context, info);\n    };\n    var unwrappingResolver = fromPath != null\n        ? function (parent, args, context, info) { return parentErrorResolver(unwrapResult(parent, fromPath), args, context, info); }\n        : parentErrorResolver;\n    var dehoistingResolver = dehoist\n        ? function (parent, args, context, info) { return unwrappingResolver(dehoistResult(parent, delimeter), args, context, info); }\n        : unwrappingResolver;\n    var noParentResolver = function (parent, args, context, info) {\n        return parent ? dehoistingResolver(parent, args, context, info) : {};\n    };\n    return noParentResolver;\n}\n//# sourceMappingURL=createMergedResolver.js.map","import { __assign } from \"tslib\";\nimport { Kind, TypeInfo, visit, visitWithTypeInfo, } from 'graphql';\nvar AddSelectionSetsByField = /** @class */ (function () {\n    function AddSelectionSetsByField(schema, mapping) {\n        this.schema = schema;\n        this.mapping = mapping;\n    }\n    AddSelectionSetsByField.prototype.transformRequest = function (originalRequest) {\n        var document = addSelectionSetsByField(this.schema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return AddSelectionSetsByField;\n}());\nexport default AddSelectionSetsByField;\nfunction addSelectionSetsByField(schema, document, mapping) {\n    var _a;\n    var typeInfo = new TypeInfo(schema);\n    return visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType != null) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (parentTypeName_1 in mapping) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var selectionSet = mapping[parentTypeName_1][name_1];\n                            if (selectionSet != null) {\n                                selections_1 = selections_1.concat(selectionSet.selections);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddSelectionSetsByField.js.map","import { __assign } from \"tslib\";\nimport { Kind, TypeInfo, visit, visitWithTypeInfo, } from 'graphql';\nvar AddSelectionSetsByType = /** @class */ (function () {\n    function AddSelectionSetsByType(targetSchema, mapping) {\n        this.targetSchema = targetSchema;\n        this.mapping = mapping;\n    }\n    AddSelectionSetsByType.prototype.transformRequest = function (originalRequest) {\n        var document = addSelectionSetsByType(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return AddSelectionSetsByType;\n}());\nexport default AddSelectionSetsByType;\nfunction addSelectionSetsByType(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new TypeInfo(targetSchema);\n    return visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType != null) {\n                var parentTypeName = parentType.name;\n                var selections = node.selections;\n                if (parentTypeName in mapping) {\n                    var selectionSet = mapping[parentTypeName];\n                    if (selectionSet != null) {\n                        selections = selections.concat(selectionSet.selections);\n                    }\n                }\n                if (selections !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections });\n                }\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddSelectionSetsByType.js.map","import { __assign, __values } from \"tslib\";\nimport { Kind, TypeInfo, parse, visit, visitWithTypeInfo, } from 'graphql';\nimport { concatInlineFragments } from '@graphql-tools/utils';\nvar ReplaceFieldWithFragment = /** @class */ (function () {\n    function ReplaceFieldWithFragment(targetSchema, fragments) {\n        var e_1, _a;\n        this.targetSchema = targetSchema;\n        this.mapping = {};\n        try {\n            for (var fragments_1 = __values(fragments), fragments_1_1 = fragments_1.next(); !fragments_1_1.done; fragments_1_1 = fragments_1.next()) {\n                var _b = fragments_1_1.value, field = _b.field, fragment = _b.fragment;\n                var parsedFragment = parseFragmentToInlineFragment(fragment);\n                var actualTypeName = parsedFragment.typeCondition.name.value;\n                if (!(actualTypeName in this.mapping)) {\n                    this.mapping[actualTypeName] = Object.create(null);\n                }\n                var typeMapping = this.mapping[actualTypeName];\n                if (!(field in typeMapping)) {\n                    typeMapping[field] = [parsedFragment];\n                }\n                else {\n                    typeMapping[field].push(parsedFragment);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (fragments_1_1 && !fragments_1_1.done && (_a = fragments_1.return)) _a.call(fragments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    ReplaceFieldWithFragment.prototype.transformRequest = function (originalRequest) {\n        var document = replaceFieldsWithFragments(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ReplaceFieldWithFragment;\n}());\nexport default ReplaceFieldWithFragment;\nfunction replaceFieldsWithFragments(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new TypeInfo(targetSchema);\n    return visit(document, visitWithTypeInfo(typeInfo, (_a = {},\n        _a[Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType != null) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (parentTypeName_1 in mapping) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var fragments = mapping[parentTypeName_1][name_1];\n                            if (fragments != null && fragments.length > 0) {\n                                var fragment = concatInlineFragments(parentTypeName_1, fragments);\n                                selections_1 = selections_1.concat(fragment);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\nfunction parseFragmentToInlineFragment(definitions) {\n    var e_2, _a, e_3, _b;\n    if (definitions.trim().startsWith('fragment')) {\n        var document_1 = parse(definitions);\n        try {\n            for (var _c = __values(document_1.definitions), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var definition = _d.value;\n                if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n                    return {\n                        kind: Kind.INLINE_FRAGMENT,\n                        typeCondition: definition.typeCondition,\n                        selectionSet: definition.selectionSet,\n                    };\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    var query = parse(\"{\" + definitions + \"}\").definitions[0];\n    try {\n        for (var _e = __values(query.selectionSet.selections), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var selection = _f.value;\n            if (selection.kind === Kind.INLINE_FRAGMENT) {\n                return selection;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    throw new Error('Could not parse fragment');\n}\n//# sourceMappingURL=ReplaceFieldWithFragment.js.map"],"names":[],"mappings":"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"}