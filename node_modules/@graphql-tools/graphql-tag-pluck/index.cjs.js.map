{"version":3,"file":"index.cjs.js","sources":["../../../dist/graphql-tag-pluck/src/libs/extname.js","../../../dist/graphql-tag-pluck/src/config.js","../../../dist/graphql-tag-pluck/src/utils.js","../../../dist/graphql-tag-pluck/src/visitor.js","../../../dist/graphql-tag-pluck/src/index.js"],"sourcesContent":["export const getExtNameFromFilePath = (filePath) => {\n    const partials = filePath.split('.');\n    let ext = '.' + partials.pop();\n    if (partials.length > 1 && partials[partials.length - 1] === 'flow') {\n        ext = '.' + partials.pop() + ext;\n    }\n    return ext;\n};\n//# sourceMappingURL=extname.js.map","import { getExtNameFromFilePath } from './libs/extname';\nexport default function generateConfig(filePath, code, _options) {\n    const plugins = [\n        'asyncGenerators',\n        'bigInt',\n        'classProperties',\n        'classPrivateProperties',\n        'classPrivateMethods',\n        'decorators-legacy',\n        'doExpressions',\n        'dynamicImport',\n        'exportDefaultFrom',\n        'exportNamespaceFrom',\n        'functionBind',\n        'functionSent',\n        'importMeta',\n        'logicalAssignment',\n        'nullishCoalescingOperator',\n        'numericSeparator',\n        'objectRestSpread',\n        'optionalCatchBinding',\n        'optionalChaining',\n        ['pipelineOperator', { proposal: 'smart' }],\n        'throwExpressions',\n    ];\n    // { all: true } option is bullshit thus I do it manually, just in case\n    // I still specify it\n    const flowPlugins = [['flow', { all: true }], 'flowComments'];\n    // If line has @flow header, include flow plug-ins\n    const dynamicFlowPlugins = code.includes('@flow') ? flowPlugins : [];\n    const fileExt = getExtNameFromFilePath(filePath);\n    switch (fileExt) {\n        case '.ts':\n            plugins.push('typescript');\n            break;\n        case '.tsx':\n            plugins.push('typescript', 'jsx');\n            break;\n        // Adding .jsx extension by default because it doesn't affect other syntax features\n        // (unlike .tsx) and because people are seem to use it with regular file extensions\n        // (e.g. .js) see https://github.com/dotansimha/graphql-code-generator/issues/1967\n        case '.js':\n            plugins.push('jsx', ...dynamicFlowPlugins);\n            break;\n        case '.jsx':\n            plugins.push('jsx', ...dynamicFlowPlugins);\n            break;\n        case '.flow.js':\n            plugins.push('jsx', ...flowPlugins);\n            break;\n        case '.flow.jsx':\n            plugins.push('jsx', ...flowPlugins);\n            break;\n        case '.flow':\n            plugins.push('jsx', ...flowPlugins);\n            break;\n        case '.vue':\n            plugins.push('typescript', 'vue');\n            break;\n        default:\n            plugins.push('jsx', ...dynamicFlowPlugins);\n            break;\n    }\n    // The _options filed will be used to retrieve the original options.\n    // Useful when we wanna get not config related options later on\n    return {\n        sourceType: 'module',\n        plugins,\n        allowUndeclaredExports: true,\n    };\n}\n//# sourceMappingURL=config.js.map","// Will use the shortest indention as an axis\nexport const freeText = (text, skipIndentation = false) => {\n    if (text instanceof Array) {\n        text = text.join('');\n    }\n    // This will allow inline text generation with external functions, same as ctrl+shift+c\n    // As long as we surround the inline text with ==>text<==\n    text = text.replace(/( *)==>((?:.|\\n)*?)<==/g, (_match, baseIndent, content) => {\n        return content\n            .split('\\n')\n            .map(line => `${baseIndent}${line}`)\n            .join('\\n');\n    });\n    if (skipIndentation) {\n        return text;\n    }\n    const lines = text.split('\\n');\n    const minIndent = lines\n        .filter(line => line.trim())\n        .reduce((minIndent, line) => {\n        const currIndent = line.match(/^ */)[0].length;\n        return currIndent < minIndent ? currIndent : minIndent;\n    }, Infinity);\n    return lines\n        .map(line => line.slice(minIndent))\n        .join('\\n')\n        .trim()\n        .replace(/\\n +\\n/g, '\\n\\n');\n};\n// foo_barBaz -> ['foo', 'bar', 'Baz']\nexport const splitWords = (str) => {\n    return str.replace(/[A-Z]/, ' $&').split(/[^a-zA-Z0-9]+/);\n};\n// upper -> Upper\nexport const toUpperFirst = (str) => {\n    return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase();\n};\n// foo-bar-baz -> fooBarBaz\nexport const toCamelCase = (str) => {\n    const words = splitWords(str);\n    const first = words.shift().toLowerCase();\n    const rest = words.map(toUpperFirst);\n    return [first, ...rest].join('');\n};\n//# sourceMappingURL=utils.js.map","import { freeText } from './utils';\nimport { isVariableDeclarator, isIdentifier, isTemplateLiteral, isImportDefaultSpecifier, isImportSpecifier, } from '@babel/types';\nimport { asArray } from '@graphql-tools/utils';\nconst defaults = {\n    modules: [\n        {\n            name: 'graphql-tag',\n        },\n        {\n            name: 'graphql-tag.macro',\n        },\n        {\n            name: '@apollo/client',\n            identifier: 'gql',\n        },\n        {\n            name: '@apollo/client/core',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-angular',\n            identifier: 'gql',\n        },\n        {\n            name: 'gatsby',\n            identifier: 'graphql',\n        },\n        {\n            name: 'apollo-server-express',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server',\n            identifier: 'gql',\n        },\n        {\n            name: 'react-relay',\n            identifier: 'graphql',\n        },\n        {\n            name: 'react-relay/hooks',\n            identifier: 'graphql',\n        },\n        {\n            name: 'relay-runtime',\n            identifier: 'graphql',\n        },\n        {\n            name: 'babel-plugin-relay/macro',\n            identifier: 'graphql',\n        },\n        {\n            name: 'apollo-boost',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-koa',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-hapi',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-fastify',\n            identifier: 'gql',\n        },\n        {\n            name: ' apollo-server-lambda',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-micro',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-azure-functions',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-cloud-functions',\n            identifier: 'gql',\n        },\n        {\n            name: 'apollo-server-cloudflare',\n            identifier: 'gql',\n        },\n        {\n            name: 'graphql.macro',\n            identifier: 'gql',\n        },\n        {\n            name: '@urql/core',\n            identifier: 'gql',\n        },\n        {\n            name: 'urql',\n            identifier: 'gql',\n        },\n        {\n            name: '@urql/preact',\n            identifier: 'gql',\n        },\n        {\n            name: '@urql/svelte',\n            identifier: 'gql',\n        },\n        {\n            name: '@urql/vue',\n            identifier: 'gql',\n        },\n    ],\n    gqlMagicComment: 'graphql',\n    globalGqlIdentifierName: ['gql', 'graphql'],\n};\nexport default (code, out, options = {}) => {\n    // Apply defaults to options\n    let { modules, globalGqlIdentifierName, gqlMagicComment } = {\n        ...defaults,\n        ...options,\n    };\n    // Prevent case related potential errors\n    gqlMagicComment = gqlMagicComment.toLowerCase();\n    // normalize `name` and `identifier` values\n    modules = modules.map(mod => {\n        return {\n            name: mod.name,\n            identifier: mod.identifier && mod.identifier.toLowerCase(),\n        };\n    });\n    globalGqlIdentifierName = asArray(globalGqlIdentifierName).map(s => s.toLowerCase());\n    // Keep imported identifiers\n    // import gql from 'graphql-tag' -> gql\n    // import { graphql } from 'gatsby' -> graphql\n    // Will result with ['gql', 'graphql']\n    const definedIdentifierNames = [];\n    // Will accumulate all template literals\n    const gqlTemplateLiterals = [];\n    // Check if package is registered\n    function isValidPackage(name) {\n        return modules.some(pkg => pkg.name && name && pkg.name.toLowerCase() === name.toLowerCase());\n    }\n    // Check if identifier is defined and imported from registered packages\n    function isValidIdentifier(name) {\n        return definedIdentifierNames.some(id => id === name) || globalGqlIdentifierName.includes(name);\n    }\n    const pluckStringFromFile = ({ start, end }) => {\n        return freeText(code\n            // Slice quotes\n            .slice(start + 1, end - 1)\n            // Erase string interpolations as we gonna export everything as a single\n            // string anyway\n            .replace(/\\$\\{[^}]*\\}/g, '')\n            .split('\\\\`')\n            .join('`'), options.skipIndent);\n    };\n    // Push all template literals leaded by graphql magic comment\n    // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n    const pluckMagicTemplateLiteral = (node, takeExpression = false) => {\n        const leadingComments = node.leadingComments;\n        if (!leadingComments) {\n            return;\n        }\n        if (!leadingComments.length) {\n            return;\n        }\n        const leadingComment = leadingComments[leadingComments.length - 1];\n        const leadingCommentValue = leadingComment.value.trim().toLowerCase();\n        if (leadingCommentValue !== gqlMagicComment) {\n            return;\n        }\n        const nodeToUse = takeExpression ? node.expression : node;\n        const gqlTemplateLiteral = pluckStringFromFile(nodeToUse);\n        if (gqlTemplateLiteral) {\n            gqlTemplateLiterals.push({\n                content: gqlTemplateLiteral,\n                loc: node.loc,\n                end: node.end,\n                start: node.start,\n            });\n        }\n    };\n    return {\n        CallExpression: {\n            enter(path) {\n                // Find the identifier name used from graphql-tag, commonJS\n                // e.g. import gql from 'graphql-tag' -> gql\n                if (path.node.callee.name === 'require' && isValidPackage(path.node.arguments[0].value)) {\n                    if (!isVariableDeclarator(path.parent)) {\n                        return;\n                    }\n                    if (!isIdentifier(path.parent.id)) {\n                        return;\n                    }\n                    definedIdentifierNames.push(path.parent.id.name);\n                    return;\n                }\n                const arg0 = path.node.arguments[0];\n                // Push strings template literals to gql calls\n                // e.g. gql(`query myQuery {}`) -> query myQuery {}\n                if (isIdentifier(path.node.callee) && isValidIdentifier(path.node.callee.name) && isTemplateLiteral(arg0)) {\n                    const gqlTemplateLiteral = pluckStringFromFile(arg0);\n                    // If the entire template was made out of interpolations it should be an empty\n                    // string by now and thus should be ignored\n                    if (gqlTemplateLiteral) {\n                        gqlTemplateLiterals.push({\n                            content: gqlTemplateLiteral,\n                            loc: arg0.loc,\n                            end: arg0.end,\n                            start: arg0.start,\n                        });\n                    }\n                }\n            },\n        },\n        ImportDeclaration: {\n            enter(path) {\n                // Find the identifier name used from graphql-tag, es6\n                // e.g. import gql from 'graphql-tag' -> gql\n                if (!isValidPackage(path.node.source.value)) {\n                    return;\n                }\n                const moduleNode = modules.find(pkg => pkg.name.toLowerCase() === path.node.source.value.toLowerCase());\n                const gqlImportSpecifier = path.node.specifiers.find((importSpecifier) => {\n                    // When it's a default import and registered package has no named identifier\n                    if (isImportDefaultSpecifier(importSpecifier) && !moduleNode.identifier) {\n                        return true;\n                    }\n                    // When it's a named import that matches registered package's identifier\n                    if (isImportSpecifier(importSpecifier) &&\n                        'name' in importSpecifier.imported &&\n                        importSpecifier.imported.name === moduleNode.identifier) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (!gqlImportSpecifier) {\n                    return;\n                }\n                definedIdentifierNames.push(gqlImportSpecifier.local.name);\n            },\n        },\n        ExpressionStatement: {\n            exit(path) {\n                // Push all template literals leaded by graphql magic comment\n                // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n                if (!isTemplateLiteral(path.node.expression)) {\n                    return;\n                }\n                pluckMagicTemplateLiteral(path.node, true);\n            },\n        },\n        TemplateLiteral: {\n            exit(path) {\n                pluckMagicTemplateLiteral(path.node);\n            },\n        },\n        TaggedTemplateExpression: {\n            exit(path) {\n                // Push all template literals provided to the found identifier name\n                // e.g. gql `query myQuery {}` -> query myQuery {}\n                if (!isIdentifier(path.node.tag) || !isValidIdentifier(path.node.tag.name)) {\n                    return;\n                }\n                const gqlTemplateLiteral = pluckStringFromFile(path.node.quasi);\n                if (gqlTemplateLiteral) {\n                    gqlTemplateLiterals.push({\n                        content: gqlTemplateLiteral,\n                        end: path.node.quasi.end,\n                        start: path.node.quasi.start,\n                        loc: path.node.quasi.loc,\n                    });\n                }\n            },\n        },\n        exit() {\n            out.returnValue = gqlTemplateLiterals;\n        },\n    };\n};\n//# sourceMappingURL=visitor.js.map","import generateConfig from './config';\nimport { parse } from '@babel/parser';\nimport { getExtNameFromFilePath } from './libs/extname';\nimport createVisitor from './visitor';\nimport traverse from '@babel/traverse';\nimport { freeText } from './utils';\nconst supportedExtensions = ['.js', '.jsx', '.ts', '.tsx', '.flow', '.flow.js', '.flow.jsx', '.vue'];\n// tslint:disable-next-line: no-implicit-dependencies\nfunction parseWithVue(vueTemplateCompiler, fileData) {\n    const { descriptor } = vueTemplateCompiler.parse(fileData);\n    return descriptor.script || descriptor.scriptSetup\n        ? vueTemplateCompiler.compileScript(descriptor, { id: Date.now().toString() }).content\n        : '';\n}\n/**\n * Asynchronously plucks GraphQL template literals from a single file.\n *\n * Supported file extensions include: `.js`, `.jsx`, `.ts`, `.tsx`, `.flow`, `.flow.js`, `.flow.jsx`, `.vue`\n *\n * @param filePath Path to the file containing the code. Required to detect the file type\n * @param code The contents of the file being parsed.\n * @param options Additional options for determining how a file is parsed.\n */\nexport const gqlPluckFromCodeString = async (filePath, code, options = {}) => {\n    validate({ code, options });\n    const fileExt = extractExtension(filePath);\n    if (fileExt === '.vue') {\n        code = await pluckVueFileScript(code);\n    }\n    return parseCode({ code, filePath, options })\n        .map(t => t.content)\n        .join('\\n\\n');\n};\n/**\n * Synchronously plucks GraphQL template literals from a single file\n *\n * Supported file extensions include: `.js`, `.jsx`, `.ts`, `.tsx`, `.flow`, `.flow.js`, `.flow.jsx`, `.vue`\n *\n * @param filePath Path to the file containing the code. Required to detect the file type\n * @param code The contents of the file being parsed.\n * @param options Additional options for determining how a file is parsed.\n */\nexport const gqlPluckFromCodeStringSync = (filePath, code, options = {}) => {\n    validate({ code, options });\n    const fileExt = extractExtension(filePath);\n    if (fileExt === '.vue') {\n        code = pluckVueFileScriptSync(code);\n    }\n    return parseCode({ code, filePath, options })\n        .map(t => t.content)\n        .join('\\n\\n');\n};\nexport function parseCode({ code, filePath, options, }) {\n    const out = { returnValue: null };\n    const ast = parse(code, generateConfig(filePath, code, options));\n    const visitor = createVisitor(code, out, options);\n    traverse(ast, visitor);\n    return out.returnValue || [];\n}\nfunction validate({ code, options }) {\n    if (typeof code !== 'string') {\n        throw TypeError('Provided code must be a string');\n    }\n    if (!(options instanceof Object)) {\n        throw TypeError(`Options arg must be an object`);\n    }\n}\nfunction extractExtension(filePath) {\n    const fileExt = getExtNameFromFilePath(filePath);\n    if (fileExt) {\n        if (!supportedExtensions.includes(fileExt)) {\n            throw TypeError(`Provided file type must be one of ${supportedExtensions.join(', ')} `);\n        }\n    }\n    return fileExt;\n}\nconst MissingVueTemplateCompilerError = new Error(freeText(`\n    GraphQL template literals cannot be plucked from a Vue template code without having the \"@vue/compiler-sfc\" package installed.\n    Please install it and try again.\n\n    Via NPM:\n\n        $ npm install @vue/compiler-sfc\n\n    Via Yarn:\n\n        $ yarn add @vue/compiler-sfc\n  `));\nasync function pluckVueFileScript(fileData) {\n    // tslint:disable-next-line: no-implicit-dependencies\n    let vueTemplateCompiler;\n    try {\n        // tslint:disable-next-line: no-implicit-dependencies\n        vueTemplateCompiler = await import('@vue/compiler-sfc');\n    }\n    catch (e) {\n        throw MissingVueTemplateCompilerError;\n    }\n    return parseWithVue(vueTemplateCompiler, fileData);\n}\nfunction pluckVueFileScriptSync(fileData) {\n    // tslint:disable-next-line: no-implicit-dependencies\n    let vueTemplateCompiler;\n    try {\n        // tslint:disable-next-line: no-implicit-dependencies\n        vueTemplateCompiler = require('@vue/compiler-sfc');\n    }\n    catch (e) {\n        throw MissingVueTemplateCompilerError;\n    }\n    return parseWithVue(vueTemplateCompiler, fileData);\n}\n//# sourceMappingURL=index.js.map"],"names":["asArray","isVariableDeclarator","isIdentifier","isTemplateLiteral","isImportDefaultSpecifier","isImportSpecifier","parse"],"mappings":"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"}