{"version":3,"file":"index.cjs.js","sources":["../../../dist-es5/loaders/github/src/index.js"],"sourcesContent":["import { __awaiter, __generator, __read } from \"tslib\";\nimport { parseGraphQLSDL, parseGraphQLJSON } from '@graphql-tools/utils';\nimport { fetch } from 'cross-fetch';\nimport { gqlPluckFromCodeString } from '@graphql-tools/graphql-tag-pluck';\n// github:owner/name#ref:path/to/file\nfunction extractData(pointer) {\n    var _a = __read(pointer.split('#'), 2), repo = _a[0], file = _a[1];\n    var _b = __read(repo.split(':')[1].split('/'), 2), owner = _b[0], name = _b[1];\n    var _c = __read(file.split(':'), 2), ref = _c[0], path = _c[1];\n    return {\n        owner: owner,\n        name: name,\n        ref: ref,\n        path: path,\n    };\n}\n/**\n * This loader loads a file from GitHub.\n *\n * ```js\n * const typeDefs = await loadTypedefs('github:githubUser/githubRepo#branchName:path/to/file.ts', {\n *   loaders: [new GithubLoader()],\n *   token: YOUR_GITHUB_TOKEN,\n * })\n * ```\n */\nvar GithubLoader = /** @class */ (function () {\n    function GithubLoader() {\n    }\n    GithubLoader.prototype.loaderId = function () {\n        return 'github-loader';\n    };\n    GithubLoader.prototype.canLoad = function (pointer) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, typeof pointer === 'string' && pointer.toLowerCase().startsWith('github:')];\n            });\n        });\n    };\n    GithubLoader.prototype.canLoadSync = function () {\n        return false;\n    };\n    GithubLoader.prototype.load = function (pointer, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, owner, name, ref, path, request, response, errorMessage, content, rawSDL;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = extractData(pointer), owner = _a.owner, name = _a.name, ref = _a.ref, path = _a.path;\n                        return [4 /*yield*/, fetch('https://api.github.com/graphql', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json; charset=utf-8',\n                                    Authorization: \"bearer \" + options.token,\n                                },\n                                body: JSON.stringify({\n                                    query: \"\\n          query GetGraphQLSchemaForGraphQLtools($owner: String!, $name: String!, $expression: String!) {\\n            repository(owner: $owner, name: $name) {\\n              object(expression: $expression) {\\n                ... on Blob {\\n                  text\\n                }\\n              }\\n            }\\n          }\\n        \",\n                                    variables: {\n                                        owner: owner,\n                                        name: name,\n                                        expression: ref + ':' + path,\n                                    },\n                                    operationName: 'GetGraphQLSchemaForGraphQLtools',\n                                }),\n                            })];\n                    case 1:\n                        request = _b.sent();\n                        return [4 /*yield*/, request.json()];\n                    case 2:\n                        response = _b.sent();\n                        errorMessage = null;\n                        if (response.errors && response.errors.length > 0) {\n                            errorMessage = response.errors.map(function (item) { return item.message; }).join(', ');\n                        }\n                        else if (!response.data) {\n                            errorMessage = response;\n                        }\n                        if (errorMessage) {\n                            throw new Error('Unable to download schema from github: ' + errorMessage);\n                        }\n                        content = response.data.repository.object.text;\n                        if (/\\.(gql|graphql)s?$/i.test(path)) {\n                            return [2 /*return*/, parseGraphQLSDL(pointer, content, options)];\n                        }\n                        if (/\\.json$/i.test(path)) {\n                            return [2 /*return*/, parseGraphQLJSON(pointer, content, options)];\n                        }\n                        return [4 /*yield*/, gqlPluckFromCodeString(pointer, content, options.pluckConfig)];\n                    case 3:\n                        rawSDL = _b.sent();\n                        if (rawSDL) {\n                            return [2 /*return*/, {\n                                    location: pointer,\n                                    rawSDL: rawSDL,\n                                }];\n                        }\n                        throw new Error(\"Invalid file extension: \" + path);\n                }\n            });\n        });\n    };\n    GithubLoader.prototype.loadSync = function () {\n        throw new Error('Loader GitHub has no sync mode');\n    };\n    return GithubLoader;\n}());\nexport { GithubLoader };\n//# sourceMappingURL=index.js.map"],"names":["__read","__awaiter","__generator","fetch","parseGraphQLSDL","parseGraphQLJSON","gqlPluckFromCodeString"],"mappings":"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"}