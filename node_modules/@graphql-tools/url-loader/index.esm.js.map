{"version":3,"file":"index.esm.js","sources":["../../../dist/loaders/url/src/index.js"],"sourcesContent":["/* eslint-disable no-case-declarations */\n/// <reference lib=\"dom\" />\nimport { print, Kind, parse, buildASTSchema } from 'graphql';\nimport { observableToAsyncIterable, isAsyncIterable, mapAsyncIterator, withCancel, } from '@graphql-tools/utils';\nimport { isWebUri } from 'valid-url';\nimport { fetch as crossFetch } from 'cross-fetch';\nimport { introspectSchema, wrapSchema } from '@graphql-tools/wrap';\nimport { createClient } from 'graphql-ws';\nimport WebSocket from 'isomorphic-ws';\nimport syncFetch from 'sync-fetch';\nimport isPromise from 'is-promise';\nimport { extractFiles, isExtractableFile } from 'extract-files';\nimport FormData from 'form-data';\nimport { fetchEventSource } from '@microsoft/fetch-event-source';\nimport { SubscriptionClient as LegacySubscriptionClient } from 'subscriptions-transport-ws';\nimport AbortController from 'abort-controller';\nimport { meros } from 'meros';\nimport { merge, set } from 'lodash';\nconst asyncImport = (moduleName) => import(moduleName);\nconst syncImport = (moduleName) => require(moduleName);\n/**\n * This loader loads a schema from a URL. The loaded schema is a fully-executable,\n * remote schema since it's created using [@graphql-tools/wrap](/docs/remote-schemas).\n *\n * ```\n * const schema = await loadSchema('http://localhost:3000/graphql', {\n *   loaders: [\n *     new UrlLoader(),\n *   ]\n * });\n * ```\n */\nexport class UrlLoader {\n    loaderId() {\n        return 'url';\n    }\n    async canLoad(pointer, options) {\n        return this.canLoadSync(pointer, options);\n    }\n    canLoadSync(pointer, _options) {\n        return !!isWebUri(pointer);\n    }\n    async createFormDataFromVariables({ query, variables }) {\n        const vars = Object.assign({}, variables);\n        const { clone, files } = extractFiles(vars, 'variables', ((v) => isExtractableFile(v) || (v === null || v === void 0 ? void 0 : v.promise) || isAsyncIterable(v) || isPromise(v)));\n        const map = Array.from(files.values()).reduce((prev, curr, currIndex) => {\n            prev[currIndex] = curr;\n            return prev;\n        }, {});\n        const uploads = new Map(Array.from(files.keys()).map((u, i) => [i, u]));\n        const form = new FormData();\n        form.append('operations', JSON.stringify({\n            query,\n            variables: clone,\n        }));\n        form.append('map', JSON.stringify(map));\n        await Promise.all(Array.from(uploads.entries()).map(async ([i, u]) => {\n            if (isPromise(u)) {\n                u = await u;\n            }\n            if (u === null || u === void 0 ? void 0 : u.promise) {\n                const upload = await u.promise;\n                const stream = upload.createReadStream();\n                form.append(i.toString(), stream, {\n                    filename: upload.filename,\n                    contentType: upload.mimetype,\n                });\n            }\n            else {\n                form.append(i.toString(), u, {\n                    filename: 'name' in u ? u['name'] : i,\n                    contentType: u.type,\n                });\n            }\n        }));\n        return form;\n    }\n    prepareGETUrl({ baseUrl, query, variables, operationName, }) {\n        const HTTP_URL = switchProtocols(baseUrl, {\n            wss: 'https',\n            ws: 'http',\n        });\n        const dummyHostname = 'https://dummyhostname.com';\n        const validUrl = HTTP_URL.startsWith('http')\n            ? HTTP_URL\n            : HTTP_URL.startsWith('/')\n                ? `${dummyHostname}${HTTP_URL}`\n                : `${dummyHostname}/${HTTP_URL}`;\n        const urlObj = new URL(validUrl);\n        urlObj.searchParams.set('query', query);\n        if (variables && Object.keys(variables).length > 0) {\n            urlObj.searchParams.set('variables', JSON.stringify(variables));\n        }\n        if (operationName) {\n            urlObj.searchParams.set('operationName', operationName);\n        }\n        const finalUrl = urlObj.toString().replace(dummyHostname, '');\n        return finalUrl;\n    }\n    buildExecutor({ pointer, fetch, extraHeaders, defaultMethod, useGETForQueries, multipart, }) {\n        const HTTP_URL = switchProtocols(pointer, {\n            wss: 'https',\n            ws: 'http',\n        });\n        const executor = ({ document, variables, ...rest }) => {\n            const controller = new AbortController();\n            let method = defaultMethod;\n            if (useGETForQueries) {\n                method = 'GET';\n                for (const definition of document.definitions) {\n                    if (definition.kind === Kind.OPERATION_DEFINITION) {\n                        if (definition.operation !== 'query') {\n                            method = defaultMethod;\n                        }\n                    }\n                }\n            }\n            const headers = this.getHeadersFromOptions(extraHeaders, {\n                document,\n                variables,\n                ...rest,\n            });\n            let fetchResult;\n            const query = print(document);\n            switch (method) {\n                case 'GET':\n                    const finalUrl = this.prepareGETUrl({ baseUrl: pointer, query, variables });\n                    fetchResult = fetch(finalUrl, {\n                        method: 'GET',\n                        credentials: 'include',\n                        headers: {\n                            accept: 'application/json',\n                            ...headers,\n                        },\n                    });\n                    break;\n                case 'POST':\n                    if (multipart) {\n                        fetchResult = this.createFormDataFromVariables({ query, variables }).then(form => fetch(HTTP_URL, {\n                            method: 'POST',\n                            credentials: 'include',\n                            body: form,\n                            headers: {\n                                accept: 'application/json',\n                                ...headers,\n                            },\n                            signal: controller.signal,\n                        }));\n                    }\n                    else {\n                        fetchResult = fetch(HTTP_URL, {\n                            method: 'POST',\n                            credentials: 'include',\n                            body: JSON.stringify({\n                                query,\n                                variables,\n                            }),\n                            headers: {\n                                accept: 'application/json, multipart/mixed',\n                                'content-type': 'application/json',\n                                ...headers,\n                            },\n                            signal: controller.signal,\n                        });\n                    }\n                    break;\n            }\n            if (isPromise(fetchResult)) {\n                return fetchResult.then(async (res) => {\n                    const response = {};\n                    const maybeStream = await meros(res);\n                    if (isAsyncIterable(maybeStream)) {\n                        return withCancel(mapAsyncIterator(maybeStream, part => {\n                            if (part.json) {\n                                const chunk = part.body;\n                                if (chunk.path) {\n                                    if (chunk.data) {\n                                        const path = ['data'];\n                                        merge(response, set({}, path.concat(chunk.path), chunk.data));\n                                    }\n                                    if (chunk.errors) {\n                                        response.errors = (response.errors || []).concat(chunk.errors);\n                                    }\n                                }\n                                else {\n                                    if (chunk.data) {\n                                        response.data = chunk.data;\n                                    }\n                                    if (chunk.errors) {\n                                        response.errors = chunk.errors;\n                                    }\n                                }\n                                return response;\n                            }\n                        }), () => controller.abort());\n                    }\n                    else {\n                        return maybeStream.json();\n                    }\n                });\n            }\n            return fetchResult.json();\n        };\n        return executor;\n    }\n    buildWSSubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams) {\n        const WS_URL = switchProtocols(subscriptionsEndpoint, {\n            https: 'wss',\n            http: 'ws',\n        });\n        const subscriptionClient = createClient({\n            url: WS_URL,\n            webSocketImpl,\n            connectionParams,\n            lazy: true,\n        });\n        return async ({ document, variables }) => {\n            const query = print(document);\n            return observableToAsyncIterable({\n                subscribe: observer => {\n                    const unsubscribe = subscriptionClient.subscribe({\n                        query,\n                        variables,\n                    }, observer);\n                    return {\n                        unsubscribe,\n                    };\n                },\n            });\n        };\n    }\n    buildWSLegacySubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams) {\n        const WS_URL = switchProtocols(subscriptionsEndpoint, {\n            https: 'wss',\n            http: 'ws',\n        });\n        const subscriptionClient = new LegacySubscriptionClient(WS_URL, {\n            connectionParams,\n            lazy: true,\n        }, webSocketImpl);\n        return async ({ document, variables }) => {\n            return observableToAsyncIterable(subscriptionClient.request({\n                query: document,\n                variables,\n            }));\n        };\n    }\n    buildSSESubscriber(pointer, extraHeaders, fetch, options) {\n        return async ({ document, variables, ...rest }) => {\n            const controller = new AbortController();\n            const query = print(document);\n            const finalUrl = this.prepareGETUrl({ baseUrl: pointer, query, variables });\n            const headers = this.getHeadersFromOptions(extraHeaders, {\n                document,\n                variables,\n                ...rest,\n            });\n            return observableToAsyncIterable({\n                subscribe: observer => {\n                    fetchEventSource(finalUrl, {\n                        credentials: 'include',\n                        headers,\n                        method: 'GET',\n                        onerror: error => {\n                            observer.error(error);\n                        },\n                        onmessage: event => {\n                            observer.next(JSON.parse(event.data || '{}'));\n                        },\n                        onopen: async (response) => {\n                            const contentType = response.headers.get('content-type');\n                            if (!(contentType === null || contentType === void 0 ? void 0 : contentType.startsWith('text/event-stream'))) {\n                                let error;\n                                try {\n                                    const { errors } = await response.json();\n                                    error = errors[0];\n                                }\n                                catch (error) {\n                                    // Failed to parse body\n                                }\n                                if (error) {\n                                    throw error;\n                                }\n                                throw new Error(`Expected content-type to be ${'text/event-stream'} but got \"${contentType}\".`);\n                            }\n                        },\n                        fetch,\n                        signal: controller.signal,\n                        ...options,\n                    });\n                    return {\n                        unsubscribe: () => controller.abort(),\n                    };\n                },\n            });\n        };\n    }\n    getFetch(customFetch, importFn, async) {\n        if (customFetch) {\n            if (typeof customFetch === 'string') {\n                const [moduleName, fetchFnName] = customFetch.split('#');\n                const moduleResult = importFn(moduleName);\n                if (isPromise(moduleResult)) {\n                    return moduleResult.then(module => (fetchFnName ? module[fetchFnName] : module));\n                }\n                else {\n                    return fetchFnName ? moduleResult[fetchFnName] : moduleResult;\n                }\n            }\n            else {\n                return customFetch;\n            }\n        }\n        return async ? typeof fetch === 'undefined' ? crossFetch : fetch : syncFetch;\n    }\n    getHeadersFromOptions(customHeaders, executionParams) {\n        let headers = {};\n        if (customHeaders) {\n            if (typeof customHeaders === 'function') {\n                customHeaders = customHeaders(executionParams);\n            }\n            if (Array.isArray(customHeaders)) {\n                headers = customHeaders.reduce((prev, v) => ({ ...prev, ...v }), {});\n            }\n            else if (typeof customHeaders === 'object') {\n                headers = customHeaders;\n            }\n        }\n        return headers;\n    }\n    getDefaultMethodFromOptions(method, defaultMethod) {\n        if (method) {\n            defaultMethod = method;\n        }\n        return defaultMethod;\n    }\n    getWebSocketImpl(options, importFn) {\n        if (typeof (options === null || options === void 0 ? void 0 : options.webSocketImpl) === 'string') {\n            const [moduleName, webSocketImplName] = options.webSocketImpl.split('#');\n            const importedModule = importFn(moduleName);\n            if (isPromise(importedModule)) {\n                return importedModule.then(webSocketImplName ? importedModule[webSocketImplName] : importedModule);\n            }\n            else {\n                return webSocketImplName ? importedModule[webSocketImplName] : importedModule;\n            }\n        }\n        else {\n            const websocketImpl = options.webSocketImpl || WebSocket;\n            return websocketImpl;\n        }\n    }\n    async getExecutorAndSubscriberAsync(pointer, options = {}) {\n        const fetch = await this.getFetch(options.customFetch, asyncImport, true);\n        const defaultMethod = this.getDefaultMethodFromOptions(options.method, 'POST');\n        const executor = this.buildExecutor({\n            pointer,\n            fetch,\n            extraHeaders: options.headers,\n            defaultMethod,\n            useGETForQueries: options.useGETForQueries,\n            multipart: options.multipart,\n        });\n        let subscriber;\n        const subscriptionsEndpoint = options.subscriptionsEndpoint || pointer;\n        if (options.useSSEForSubscription) {\n            subscriber = this.buildSSESubscriber(subscriptionsEndpoint, options.headers, fetch, options.eventSourceOptions);\n        }\n        else {\n            const webSocketImpl = await this.getWebSocketImpl(options, asyncImport);\n            const connectionParams = () => ({ headers: this.getHeadersFromOptions(options.headers, {}) });\n            if (options.useWebSocketLegacyProtocol) {\n                subscriber = this.buildWSLegacySubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams);\n            }\n            else {\n                subscriber = this.buildWSSubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams);\n            }\n        }\n        return {\n            executor,\n            subscriber,\n        };\n    }\n    getExecutorAndSubscriberSync(pointer, options) {\n        const fetch = this.getFetch(options === null || options === void 0 ? void 0 : options.customFetch, syncImport, false);\n        const defaultMethod = this.getDefaultMethodFromOptions(options === null || options === void 0 ? void 0 : options.method, 'POST');\n        const executor = this.buildExecutor({\n            pointer,\n            fetch,\n            extraHeaders: options.headers,\n            defaultMethod,\n            useGETForQueries: options.useGETForQueries,\n        });\n        const subscriptionsEndpoint = options.subscriptionsEndpoint || pointer;\n        let subscriber;\n        if (options.useSSEForSubscription) {\n            const asyncFetchFn = (...args) => this.getFetch(options === null || options === void 0 ? void 0 : options.customFetch, asyncImport, true).then((asyncFetch) => asyncFetch(...args));\n            subscriber = this.buildSSESubscriber(subscriptionsEndpoint, options.headers, asyncFetchFn, options.eventSourceOptions);\n        }\n        else {\n            const webSocketImpl = this.getWebSocketImpl(options, syncImport);\n            const connectionParams = () => ({ headers: this.getHeadersFromOptions(options.headers, {}) });\n            if (options.useWebSocketLegacyProtocol) {\n                subscriber = this.buildWSLegacySubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams);\n            }\n            else {\n                subscriber = this.buildWSSubscriber(subscriptionsEndpoint, webSocketImpl, connectionParams);\n            }\n        }\n        return {\n            executor,\n            subscriber,\n        };\n    }\n    async getSubschemaConfigAsync(pointer, options) {\n        const { executor, subscriber } = await this.getExecutorAndSubscriberAsync(pointer, options);\n        return {\n            schema: await introspectSchema(executor, undefined, options),\n            executor,\n            subscriber,\n        };\n    }\n    getSubschemaConfigSync(pointer, options) {\n        const { executor, subscriber } = this.getExecutorAndSubscriberSync(pointer, options);\n        return {\n            schema: introspectSchema(executor, undefined, options),\n            executor,\n            subscriber,\n        };\n    }\n    async handleSDLAsync(pointer, options) {\n        const fetch = await this.getFetch(options === null || options === void 0 ? void 0 : options.customFetch, asyncImport, true);\n        const headers = this.getHeadersFromOptions(options === null || options === void 0 ? void 0 : options.headers, {});\n        const defaultMethod = this.getDefaultMethodFromOptions(options === null || options === void 0 ? void 0 : options.method, 'GET');\n        const response = await fetch(pointer, {\n            method: defaultMethod,\n            headers,\n        });\n        const schemaString = await response.text();\n        const document = parse(schemaString, options);\n        const schema = buildASTSchema(document, options);\n        return {\n            location: pointer,\n            rawSDL: schemaString,\n            document,\n            schema,\n        };\n    }\n    handleSDLSync(pointer, options) {\n        const fetch = this.getFetch(options === null || options === void 0 ? void 0 : options.customFetch, syncImport, false);\n        const headers = this.getHeadersFromOptions(options === null || options === void 0 ? void 0 : options.headers, {});\n        const defaultMethod = this.getDefaultMethodFromOptions(options === null || options === void 0 ? void 0 : options.method, 'GET');\n        const response = fetch(pointer, {\n            method: defaultMethod,\n            headers,\n        });\n        const schemaString = response.text();\n        const document = parse(schemaString, options);\n        const schema = buildASTSchema(document, options);\n        return {\n            location: pointer,\n            rawSDL: schemaString,\n            document,\n            schema,\n        };\n    }\n    async load(pointer, options) {\n        if ((options === null || options === void 0 ? void 0 : options.handleAsSDL) || pointer.endsWith('.graphql')) {\n            return this.handleSDLAsync(pointer, options);\n        }\n        const subschemaConfig = await this.getSubschemaConfigAsync(pointer, options);\n        const remoteExecutableSchema = wrapSchema(subschemaConfig);\n        return {\n            location: pointer,\n            schema: remoteExecutableSchema,\n        };\n    }\n    loadSync(pointer, options) {\n        if ((options === null || options === void 0 ? void 0 : options.handleAsSDL) || pointer.endsWith('.graphql')) {\n            return this.handleSDLSync(pointer, options);\n        }\n        const subschemaConfig = this.getSubschemaConfigSync(pointer, options);\n        const remoteExecutableSchema = wrapSchema(subschemaConfig);\n        return {\n            location: pointer,\n            schema: remoteExecutableSchema,\n        };\n    }\n}\nfunction switchProtocols(pointer, protocolMap) {\n    const protocols = Object.keys(protocolMap).map(source => [source, protocolMap[source]]);\n    return protocols.reduce((prev, [source, target]) => prev.replace(`${source}://`, `${target}://`).replace(`${source}:\\\\`, `${target}:\\\\`), pointer);\n}\n//# sourceMappingURL=index.js.map"],"names":["LegacySubscriptionClient","crossFetch"],"mappings":"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"}