{"version":3,"file":"index.cjs.js","sources":["../../../dist-es5/load-files/src/index.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport globby, { sync as globbySync } from 'globby';\nimport unixify from 'unixify';\nimport { extname } from 'path';\nimport { statSync, readFileSync, promises as fsPromises } from 'fs';\nvar readFile = fsPromises.readFile, stat = fsPromises.stat;\nvar DEFAULT_IGNORED_EXTENSIONS = ['spec', 'test', 'd', 'map'];\nvar DEFAULT_EXTENSIONS = ['gql', 'graphql', 'graphqls', 'ts', 'js'];\nvar DEFAULT_EXPORT_NAMES = ['schema', 'typeDef', 'typeDefs', 'resolver', 'resolvers'];\nvar DEFAULT_EXTRACT_EXPORTS_FACTORY = function (exportNames) { return function (fileExport) {\n    var e_1, _a, e_2, _b;\n    if (!fileExport) {\n        return null;\n    }\n    if (fileExport.default) {\n        try {\n            for (var exportNames_1 = __values(exportNames), exportNames_1_1 = exportNames_1.next(); !exportNames_1_1.done; exportNames_1_1 = exportNames_1.next()) {\n                var exportName = exportNames_1_1.value;\n                if (fileExport.default[exportName]) {\n                    return fileExport.default[exportName];\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (exportNames_1_1 && !exportNames_1_1.done && (_a = exportNames_1.return)) _a.call(exportNames_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return fileExport.default;\n    }\n    try {\n        for (var exportNames_2 = __values(exportNames), exportNames_2_1 = exportNames_2.next(); !exportNames_2_1.done; exportNames_2_1 = exportNames_2.next()) {\n            var exportName = exportNames_2_1.value;\n            if (fileExport[exportName]) {\n                return fileExport[exportName];\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (exportNames_2_1 && !exportNames_2_1.done && (_b = exportNames_2.return)) _b.call(exportNames_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return fileExport;\n}; };\nfunction asArray(obj) {\n    if (obj instanceof Array) {\n        return obj;\n    }\n    else {\n        return [obj];\n    }\n}\nfunction isDirectorySync(path) {\n    try {\n        var pathStat = statSync(path);\n        return pathStat.isDirectory();\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction isDirectory(path) {\n    return __awaiter(this, void 0, void 0, function () {\n        var pathStat, e_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, stat(path)];\n                case 1:\n                    pathStat = _a.sent();\n                    return [2 /*return*/, pathStat.isDirectory()];\n                case 2:\n                    e_3 = _a.sent();\n                    return [2 /*return*/, false];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction scanForFilesSync(globStr, globOptions) {\n    if (globOptions === void 0) { globOptions = {}; }\n    return globbySync(globStr, __assign({ absolute: true }, globOptions));\n}\nfunction formatExtension(extension) {\n    return extension.charAt(0) === '.' ? extension : \".\" + extension;\n}\nfunction buildGlob(basePath, extensions, ignoredExtensions, recursive) {\n    if (ignoredExtensions === void 0) { ignoredExtensions = []; }\n    var ignored = ignoredExtensions.length > 0 ? \"!(\" + ignoredExtensions.map(function (e) { return \"*\" + formatExtension(e); }).join('|') + \")\" : '*';\n    var ext = extensions.map(function (e) { return \"*\" + formatExtension(e); }).join('|');\n    return \"\" + basePath + (recursive ? '/**' : '') + \"/\" + ignored + \"+(\" + ext + \")\";\n}\nvar LoadFilesDefaultOptions = {\n    ignoredExtensions: DEFAULT_IGNORED_EXTENSIONS,\n    extensions: DEFAULT_EXTENSIONS,\n    useRequire: false,\n    requireMethod: null,\n    globOptions: {\n        absolute: true,\n    },\n    exportNames: DEFAULT_EXPORT_NAMES,\n    recursive: true,\n    ignoreIndex: false,\n};\n/**\n * Synchronously loads files using the provided glob pattern.\n * @param pattern Glob pattern or patterns to use when loading files\n * @param options Additional options\n */\nexport function loadFilesSync(pattern, options) {\n    if (options === void 0) { options = LoadFilesDefaultOptions; }\n    var execOptions = __assign(__assign({}, LoadFilesDefaultOptions), options);\n    var relevantPaths = scanForFilesSync(asArray(pattern).map(function (path) {\n        return isDirectorySync(path)\n            ? buildGlob(unixify(path), execOptions.extensions, execOptions.ignoredExtensions, execOptions.recursive)\n            : unixify(path);\n    }), options.globOptions);\n    var extractExports = execOptions.extractExports || DEFAULT_EXTRACT_EXPORTS_FACTORY(execOptions.exportNames);\n    var requireMethod = execOptions.requireMethod || require;\n    return relevantPaths\n        .map(function (path) {\n        if (!checkExtension(path, options)) {\n            return null;\n        }\n        if (isIndex(path, execOptions.extensions) && options.ignoreIndex) {\n            return false;\n        }\n        var extension = extname(path);\n        if (extension === formatExtension('js') || extension === formatExtension('ts') || execOptions.useRequire) {\n            var fileExports = requireMethod(path);\n            var extractedExport = extractExports(fileExports);\n            return extractedExport;\n        }\n        else {\n            return readFileSync(path, { encoding: 'utf-8' });\n        }\n    })\n        .filter(function (v) { return v; });\n}\nfunction scanForFiles(globStr, globOptions) {\n    if (globOptions === void 0) { globOptions = {}; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, globby(globStr, __assign({ absolute: true }, globOptions))];\n        });\n    });\n}\nvar checkExtension = function (path, _a) {\n    var e_4, _b, e_5, _c, e_6, _d;\n    var extensions = _a.extensions, ignoredExtensions = _a.ignoredExtensions;\n    if (ignoredExtensions) {\n        try {\n            for (var ignoredExtensions_1 = __values(ignoredExtensions), ignoredExtensions_1_1 = ignoredExtensions_1.next(); !ignoredExtensions_1_1.done; ignoredExtensions_1_1 = ignoredExtensions_1.next()) {\n                var ignoredExtension = ignoredExtensions_1_1.value;\n                if (path.endsWith(formatExtension(ignoredExtension))) {\n                    return false;\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (ignoredExtensions_1_1 && !ignoredExtensions_1_1.done && (_b = ignoredExtensions_1.return)) _b.call(ignoredExtensions_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    }\n    if (!extensions) {\n        return true;\n    }\n    try {\n        for (var extensions_1 = __values(extensions), extensions_1_1 = extensions_1.next(); !extensions_1_1.done; extensions_1_1 = extensions_1.next()) {\n            var extension = extensions_1_1.value;\n            var formattedExtension = formatExtension(extension);\n            if (path.endsWith(formattedExtension)) {\n                if (ignoredExtensions) {\n                    try {\n                        for (var ignoredExtensions_2 = (e_6 = void 0, __values(ignoredExtensions)), ignoredExtensions_2_1 = ignoredExtensions_2.next(); !ignoredExtensions_2_1.done; ignoredExtensions_2_1 = ignoredExtensions_2.next()) {\n                            var ignoredExtension = ignoredExtensions_2_1.value;\n                            var formattedIgnoredExtension = formatExtension(ignoredExtension);\n                            if (path.endsWith(formattedIgnoredExtension + formattedExtension)) {\n                                return false;\n                            }\n                        }\n                    }\n                    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                    finally {\n                        try {\n                            if (ignoredExtensions_2_1 && !ignoredExtensions_2_1.done && (_d = ignoredExtensions_2.return)) _d.call(ignoredExtensions_2);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                    }\n                }\n                return true;\n            }\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (extensions_1_1 && !extensions_1_1.done && (_c = extensions_1.return)) _c.call(extensions_1);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return false;\n};\n/**\n * Asynchronously loads files using the provided glob pattern.\n * @param pattern Glob pattern or patterns to use when loading files\n * @param options Additional options\n */\nexport function loadFiles(pattern, options) {\n    if (options === void 0) { options = LoadFilesDefaultOptions; }\n    return __awaiter(this, void 0, void 0, function () {\n        var execOptions, relevantPaths, _a, extractExports, defaultRequireMethod, requireMethod;\n        var _this = this;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    execOptions = __assign(__assign({}, LoadFilesDefaultOptions), options);\n                    _a = scanForFiles;\n                    return [4 /*yield*/, Promise.all(asArray(pattern).map(function (path) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, isDirectory(path)];\n                                    case 1: return [2 /*return*/, (_a.sent())\n                                            ? buildGlob(unixify(path), execOptions.extensions, execOptions.ignoredExtensions, execOptions.recursive)\n                                            : unixify(path)];\n                                }\n                            });\n                        }); }))];\n                case 1: return [4 /*yield*/, _a.apply(void 0, [_b.sent(), options.globOptions])];\n                case 2:\n                    relevantPaths = _b.sent();\n                    extractExports = execOptions.extractExports || DEFAULT_EXTRACT_EXPORTS_FACTORY(execOptions.exportNames);\n                    defaultRequireMethod = function (path) { return import(path).catch(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, require(path)];\n                    }); }); }); };\n                    requireMethod = execOptions.requireMethod || defaultRequireMethod;\n                    return [2 /*return*/, Promise.all(relevantPaths\n                            .filter(function (path) { return checkExtension(path, options) && !(isIndex(path, execOptions.extensions) && options.ignoreIndex); })\n                            .map(function (path) { return __awaiter(_this, void 0, void 0, function () {\n                            var extension, fileExports, extractedExport;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        extension = extname(path);\n                                        if (!(extension === formatExtension('js') || extension === formatExtension('ts') || execOptions.useRequire)) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, requireMethod(path)];\n                                    case 1:\n                                        fileExports = _a.sent();\n                                        extractedExport = extractExports(fileExports);\n                                        return [2 /*return*/, extractedExport];\n                                    case 2: return [2 /*return*/, readFile(path, { encoding: 'utf-8' })];\n                                }\n                            });\n                        }); }))];\n            }\n        });\n    });\n}\nfunction isIndex(path, extensions) {\n    if (extensions === void 0) { extensions = []; }\n    var IS_INDEX = /(\\/|\\\\)index\\.[^\\/\\\\]+$/i; // (/ or \\) AND `index.` AND (everything except \\ and /)(end of line)\n    return IS_INDEX.test(path) && extensions.some(function (ext) { return path.endsWith(formatExtension(ext)); });\n}\n//# sourceMappingURL=index.js.map"],"names":["fsPromises","__values","statSync","__awaiter","__generator","globbySync","__assign","path","extname","readFileSync","globby"],"mappings":"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"}