{"version":3,"file":"index.esm.js","sources":["../../../dist-es5/mock/src/mocking.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { graphql, getNullableType, getNamedType, isSchema, isObjectType, isInterfaceType, isListType, isEnumType, isAbstractType, GraphQLInterfaceType, GraphQLUnionType, } from 'graphql';\nimport { buildSchemaFromTypeDefinitions } from '@graphql-tools/schema';\nimport { mapSchema, MapperKind } from '@graphql-tools/utils';\n/**\n * A convenience wrapper on top of addMocksToSchema. It adds your mock resolvers\n * to your schema and returns a client that will correctly execute your query with\n * variables. Note: when executing queries from the returned server, context and\n * root will both equal `{}`.\n * @param schema The schema to which to add mocks. This can also be a set of type\n * definitions instead.\n * @param mocks The mocks to add to the schema.\n * @param preserveResolvers Set to `true` to prevent existing resolvers from being\n * overwritten to provide mock data. This can be used to mock some parts of the\n * server and not others.\n */\nexport function mockServer(schema, mocks, preserveResolvers) {\n    if (preserveResolvers === void 0) { preserveResolvers = false; }\n    var mySchema;\n    if (!isSchema(schema)) {\n        // TODO: provide useful error messages here if this fails\n        mySchema = buildSchemaFromTypeDefinitions(schema);\n    }\n    else {\n        mySchema = schema;\n    }\n    mySchema = addMocksToSchema({ schema: mySchema, mocks: mocks, preserveResolvers: preserveResolvers });\n    return { query: function (query, vars) { return graphql(mySchema, query, {}, {}, vars); } };\n}\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line eqeqeq\n        var v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nvar defaultMockMap = new Map();\ndefaultMockMap.set('Int', function () { return Math.round(Math.random() * 200) - 100; });\ndefaultMockMap.set('Float', function () { return Math.random() * 200 - 100; });\ndefaultMockMap.set('String', function () { return 'Hello World'; });\ndefaultMockMap.set('Boolean', function () { return Math.random() > 0.5; });\ndefaultMockMap.set('ID', function () { return uuidv4(); });\n// TODO allow providing a seed such that lengths of list could be deterministic\n// this could be done by using casual to get a random list length if the casual\n// object is global.\n/**\n * Given an instance of GraphQLSchema and a mock object, returns a new schema\n * that can return mock data for any valid query that is sent to the server.\n * @param options Options object\n */\nexport function addMocksToSchema(_a) {\n    var _b;\n    var _this = this;\n    var schema = _a.schema, _c = _a.mocks, mocks = _c === void 0 ? {} : _c, _d = _a.preserveResolvers, preserveResolvers = _d === void 0 ? false : _d;\n    if (!schema) {\n        throw new Error('Must provide schema to mock');\n    }\n    if (!isSchema(schema)) {\n        throw new Error('Value at \"schema\" must be of type GraphQLSchema');\n    }\n    if (!isObject(mocks)) {\n        throw new Error('mocks must be of type Object');\n    }\n    // use Map internally, because that API is nicer.\n    var mockFunctionMap = new Map();\n    Object.keys(mocks).forEach(function (typeName) {\n        mockFunctionMap.set(typeName, mocks[typeName]);\n    });\n    mockFunctionMap.forEach(function (mockFunction, mockTypeName) {\n        if (typeof mockFunction !== 'function') {\n            throw new Error(\"mockFunctionMap[\" + mockTypeName + \"] must be a function\");\n        }\n    });\n    var mockType = function (type, _typeName, fieldName) {\n        // order of precendence for mocking:\n        // 1. if the object passed in already has fieldName, just use that\n        // --> if it's a function, that becomes your resolver\n        // --> if it's a value, the mock resolver will return that\n        // 2. if the nullableType is a list, recurse\n        // 2. if there's a mock defined for this typeName, that will be used\n        // 3. if there's no mock defined, use the default mocks for this type\n        return function (root, args, context, info) {\n            // nullability doesn't matter for the purpose of mocking.\n            var fieldType = getNullableType(type);\n            var namedFieldType = getNamedType(fieldType);\n            if (fieldName && root && typeof root[fieldName] !== 'undefined') {\n                var result = void 0;\n                // if we're here, the field is already defined\n                if (typeof root[fieldName] === 'function') {\n                    result = root[fieldName](root, args, context, info);\n                    if (isMockList(result)) {\n                        result = result.mock(root, args, context, info, fieldType, mockType);\n                    }\n                }\n                else {\n                    result = root[fieldName];\n                }\n                // Now we merge the result with the default mock for this type.\n                // This allows overriding defaults while writing very little code.\n                if (mockFunctionMap.has(namedFieldType.name)) {\n                    var mock = mockFunctionMap.get(namedFieldType.name);\n                    result = mergeMocks(mock.bind(null, root, args, context, info), result);\n                }\n                return result;\n            }\n            if (isListType(fieldType)) {\n                return [\n                    mockType(fieldType.ofType)(root, args, context, info),\n                    mockType(fieldType.ofType)(root, args, context, info),\n                ];\n            }\n            if (mockFunctionMap.has(fieldType.name) && !isAbstractType(fieldType)) {\n                // the object passed doesn't have this field, so we apply the default mock\n                var mock = mockFunctionMap.get(fieldType.name);\n                return mock(root, args, context, info);\n            }\n            if (isObjectType(fieldType)) {\n                // objects don't return actual data, we only need to mock scalars!\n                return {};\n            }\n            // if a mock function is provided for unionType or interfaceType, execute it to resolve the concrete type\n            // otherwise randomly pick a type from all implementation types\n            if (isAbstractType(fieldType)) {\n                var implementationType = void 0;\n                var interfaceMockObj = {};\n                if (mockFunctionMap.has(fieldType.name)) {\n                    var mock = mockFunctionMap.get(fieldType.name);\n                    interfaceMockObj = mock(root, args, context, info);\n                    if (!interfaceMockObj || !interfaceMockObj.__typename) {\n                        return Error(\"Please return a __typename in \\\"\" + fieldType.name + \"\\\"\");\n                    }\n                    implementationType = schema.getType(interfaceMockObj.__typename);\n                }\n                else {\n                    var possibleTypes = schema.getPossibleTypes(fieldType);\n                    implementationType = getRandomElement(possibleTypes);\n                }\n                return __assign(__assign({ __typename: implementationType }, interfaceMockObj), mockType(implementationType)(root, args, context, info));\n            }\n            if (isEnumType(fieldType)) {\n                return getRandomElement(fieldType.getValues()).value;\n            }\n            if (defaultMockMap.has(fieldType.name)) {\n                var defaultMock = defaultMockMap.get(fieldType.name);\n                return defaultMock(root, args, context, info);\n            }\n            // if we get to here, we don't have a value, and we don't have a mock for this type,\n            // we could return undefined, but that would be hard to debug, so we throw instead.\n            // however, we returning it instead of throwing it, so preserveResolvers can handle the failures.\n            return Error(\"No mock defined for type \\\"\" + fieldType.name + \"\\\"\");\n        };\n    };\n    return mapSchema(schema, (_b = {},\n        _b[MapperKind.ABSTRACT_TYPE] = function (type) {\n            var oldResolveType = type.resolveType;\n            if (preserveResolvers && oldResolveType != null && oldResolveType.length) {\n                return;\n            }\n            // the default `resolveType` always returns null. We add a fallback\n            // resolution that works with how unions and interface are mocked\n            var resolveType = function (data, _context, info) {\n                return info.schema.getType(data.__typename);\n            };\n            if (isInterfaceType(type)) {\n                return new GraphQLInterfaceType(__assign(__assign({}, type.toConfig()), { resolveType: resolveType }));\n            }\n            else {\n                return new GraphQLUnionType(__assign(__assign({}, type.toConfig()), { resolveType: resolveType }));\n            }\n        },\n        _b[MapperKind.OBJECT_FIELD] = function (fieldConfig, fieldName, typeName) {\n            var fieldType = fieldConfig.type;\n            var fieldResolver = fieldConfig.resolve;\n            var newFieldConfig = __assign({}, fieldConfig);\n            var mockResolver = mockType(fieldType, typeName, fieldName);\n            // we have to handle the root mutation and root query types differently,\n            // because no resolver is called at the root.\n            var queryType = schema.getQueryType();\n            var isOnQueryType = queryType != null && queryType.name === typeName;\n            var mutationType = schema.getMutationType();\n            var isOnMutationType = mutationType != null && mutationType.name === typeName;\n            var subscriptionType = schema.getSubscriptionType();\n            var isOnSubscriptionType = subscriptionType != null && subscriptionType.name === typeName;\n            if (isOnQueryType || isOnMutationType || isOnSubscriptionType) {\n                if (mockFunctionMap.has(typeName)) {\n                    var rootMock_1 = mockFunctionMap.get(typeName);\n                    // XXX: BUG in here, need to provide proper signature for rootMock.\n                    if (typeof rootMock_1(undefined, {}, {}, {})[fieldName] === 'function') {\n                        mockResolver = function (root, args, context, info) {\n                            var updatedRoot = root !== null && root !== void 0 ? root : {}; // TODO: should we clone instead?\n                            updatedRoot[fieldName] = rootMock_1(root, args, context, info)[fieldName];\n                            // XXX this is a bit of a hack to still use mockType, which\n                            // lets you mock lists etc. as well\n                            // otherwise we could just set field.resolve to rootMock()[fieldName]\n                            // it's like pretending there was a resolver that ran before\n                            // the root resolver.\n                            var result = mockType(fieldConfig.type, typeName, fieldName)(updatedRoot, args, context, info);\n                            return result;\n                        };\n                    }\n                }\n            }\n            if (!preserveResolvers || !fieldResolver) {\n                newFieldConfig.resolve = mockResolver;\n            }\n            else {\n                var oldResolver_1 = fieldResolver;\n                newFieldConfig.resolve = function (rootObject, args, context, info) {\n                    return Promise.all([\n                        mockResolver(rootObject, args, context, info),\n                        oldResolver_1(rootObject, args, context, info),\n                    ]).then(function (values) {\n                        var _a = __read(values, 2), mockedValue = _a[0], resolvedValue = _a[1];\n                        // In case we couldn't mock\n                        if (mockedValue instanceof Error) {\n                            // only if value was not resolved, populate the error.\n                            if (undefined === resolvedValue) {\n                                throw mockedValue;\n                            }\n                            return resolvedValue;\n                        }\n                        if (resolvedValue instanceof Date && mockedValue instanceof Date) {\n                            return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                        }\n                        if (isObject(mockedValue) && isObject(resolvedValue)) {\n                            // Object.assign() won't do here, as we need to all properties, including\n                            // the non-enumerable ones and defined using Object.defineProperty\n                            var emptyObject = Object.create(Object.getPrototypeOf(resolvedValue));\n                            return copyOwnProps(emptyObject, resolvedValue, mockedValue);\n                        }\n                        return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                    });\n                };\n            }\n            var fieldSubscriber = fieldConfig.subscribe;\n            var mockSubscriber = function () {\n                var _a;\n                var _args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    _args[_i] = arguments[_i];\n                }\n                return (_a = {},\n                    _a[Symbol.asyncIterator] = function () {\n                        return {\n                            next: function () {\n                                return __awaiter(this, void 0, void 0, function () {\n                                    return __generator(this, function (_a) {\n                                        return [2 /*return*/, {\n                                                done: true,\n                                                value: {},\n                                            }];\n                                    });\n                                });\n                            },\n                        };\n                    },\n                    _a);\n            };\n            if (!preserveResolvers || !fieldSubscriber) {\n                newFieldConfig.subscribe = mockSubscriber;\n            }\n            else {\n                newFieldConfig.subscribe = function (rootObject, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n                    var _a, mockAsyncIterable, oldAsyncIterable;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0: return [4 /*yield*/, Promise.all([\n                                    mockSubscriber(rootObject, args, context, info),\n                                    fieldSubscriber(rootObject, args, context, info),\n                                ])];\n                            case 1:\n                                _a = __read.apply(void 0, [_b.sent(), 2]), mockAsyncIterable = _a[0], oldAsyncIterable = _a[1];\n                                return [2 /*return*/, oldAsyncIterable || mockAsyncIterable];\n                        }\n                    });\n                }); };\n            }\n            return newFieldConfig;\n        },\n        _b));\n}\nfunction isObject(thing) {\n    return thing === Object(thing) && !Array.isArray(thing);\n}\n// returns a random element from that ary\nfunction getRandomElement(ary) {\n    var sample = Math.floor(Math.random() * ary.length);\n    return ary[sample];\n}\nfunction mergeObjects(a, b) {\n    return Object.assign(a, b);\n}\nfunction copyOwnPropsIfNotPresent(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function (prop) {\n        if (!Object.getOwnPropertyDescriptor(target, prop)) {\n            var propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);\n            Object.defineProperty(target, prop, propertyDescriptor == null ? {} : propertyDescriptor);\n        }\n    });\n}\nfunction copyOwnProps(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        var chain = source;\n        while (chain != null) {\n            copyOwnPropsIfNotPresent(target, chain);\n            chain = Object.getPrototypeOf(chain);\n        }\n    });\n    return target;\n}\n// takes either an object or a (possibly nested) array\n// and completes the customMock object with any fields\n// defined on genericMock\n// only merges objects or arrays. Scalars are returned as is\nfunction mergeMocks(genericMockFunction, customMock) {\n    if (Array.isArray(customMock)) {\n        return customMock.map(function (el) { return mergeMocks(genericMockFunction, el); });\n    }\n    if (customMock instanceof Promise) {\n        return customMock.then(function (res) { return mergeObjects(genericMockFunction(), res); });\n    }\n    if (isObject(customMock)) {\n        return mergeObjects(genericMockFunction(), customMock);\n    }\n    return customMock;\n}\n/**\n * @internal\n */\nexport function isMockList(obj) {\n    if (typeof (obj === null || obj === void 0 ? void 0 : obj.len) === 'number' || (Array.isArray(obj === null || obj === void 0 ? void 0 : obj.len) && typeof (obj === null || obj === void 0 ? void 0 : obj.len[0]) === 'number')) {\n        if (typeof obj.wrappedFunction === 'undefined' || typeof obj.wrappedFunction === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * This is an object you can return from your mock resolvers which calls the\n * provided `mockFunction` once for each list item.\n */\nvar MockList = /** @class */ (function () {\n    /**\n     * @param length Either the exact length of items to return or an inclusive\n     * range of possible lengths.\n     * @param mockFunction The function to call for each item in the list to\n     * resolve it. It can return another MockList or a value.\n     */\n    function MockList(length, mockFunction) {\n        this.len = length;\n        if (typeof mockFunction !== 'undefined') {\n            if (typeof mockFunction !== 'function') {\n                throw new Error('Second argument to MockList must be a function or undefined');\n            }\n            this.wrappedFunction = mockFunction;\n        }\n    }\n    /**\n     * @internal\n     */\n    MockList.prototype.mock = function (root, args, context, info, fieldType, mockTypeFunc) {\n        var arr;\n        if (Array.isArray(this.len)) {\n            arr = new Array(this.randint(this.len[0], this.len[1]));\n        }\n        else {\n            arr = new Array(this.len);\n        }\n        for (var i = 0; i < arr.length; i++) {\n            if (typeof this.wrappedFunction === 'function') {\n                var res = this.wrappedFunction(root, args, context, info);\n                if (isMockList(res)) {\n                    var nullableType = getNullableType(fieldType.ofType);\n                    arr[i] = res.mock(root, args, context, info, nullableType, mockTypeFunc);\n                }\n                else {\n                    arr[i] = res;\n                }\n            }\n            else {\n                arr[i] = mockTypeFunc(fieldType.ofType)(root, args, context, info);\n            }\n        }\n        return arr;\n    };\n    MockList.prototype.randint = function (low, high) {\n        return Math.floor(Math.random() * (high - low + 1) + low);\n    };\n    return MockList;\n}());\nexport { MockList };\n//# sourceMappingURL=mocking.js.map"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE;AAC7D,IAAI,IAAI,iBAAiB,KAAK,KAAK,CAAC,EAAE,EAAE,iBAAiB,GAAG,KAAK,CAAC,EAAE;AACpE,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC3B;AACA,QAAQ,QAAQ,GAAG,8BAA8B,CAAC,MAAM,CAAC,CAAC;AAC1D,KAAK;AACL,SAAS;AACT,QAAQ,QAAQ,GAAG,MAAM,CAAC;AAC1B,KAAK;AACL,IAAI,QAAQ,GAAG,gBAAgB,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC,CAAC;AAC1G,IAAI,OAAO,EAAE,KAAK,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE,EAAE,OAAO,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;AAChG,CAAC;AACD,SAAS,MAAM,GAAG;AAClB,IAAI,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AAChF,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;AAC/C,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC9B,KAAK,CAAC,CAAC;AACP,CAAC;AACD,IAAI,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACzF,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC/E,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC;AACpE,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3E,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,EAAE,EAAE;AACrC,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;AACtJ,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,QAAQ,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AACvD,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC3B,QAAQ,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AAC3E,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC1B,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,IAAI,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;AACpC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;AACnD,QAAQ,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACvD,KAAK,CAAC,CAAC;AACP,IAAI,eAAe,CAAC,OAAO,CAAC,UAAU,YAAY,EAAE,YAAY,EAAE;AAClE,QAAQ,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;AAChD,YAAY,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,YAAY,GAAG,sBAAsB,CAAC,CAAC;AACxF,SAAS;AACT,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,QAAQ,GAAG,UAAU,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,UAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;AACpD;AACA,YAAY,IAAI,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,YAAY,IAAI,cAAc,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACzD,YAAY,IAAI,SAAS,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,WAAW,EAAE;AAC7E,gBAAgB,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AACpC;AACA,gBAAgB,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,UAAU,EAAE;AAC3D,oBAAoB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACxE,oBAAoB,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;AAC5C,wBAAwB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC7F,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7C,iBAAiB;AACjB;AACA;AACA,gBAAgB,IAAI,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC9D,oBAAoB,IAAI,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACxE,oBAAoB,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5F,iBAAiB;AACjB,gBAAgB,OAAO,MAAM,CAAC;AAC9B,aAAa;AACb,YAAY,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AACvC,gBAAgB,OAAO;AACvB,oBAAoB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACzE,oBAAoB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACzE,iBAAiB,CAAC;AAClB,aAAa;AACb,YAAY,IAAI,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACnF;AACA,gBAAgB,IAAI,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/D,gBAAgB,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACvD,aAAa;AACb,YAAY,IAAI,YAAY,CAAC,SAAS,CAAC,EAAE;AACzC;AACA,gBAAgB,OAAO,EAAE,CAAC;AAC1B,aAAa;AACb;AACA;AACA,YAAY,IAAI,cAAc,CAAC,SAAS,CAAC,EAAE;AAC3C,gBAAgB,IAAI,kBAAkB,GAAG,KAAK,CAAC,CAAC;AAChD,gBAAgB,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1C,gBAAgB,IAAI,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACzD,oBAAoB,IAAI,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnE,oBAAoB,gBAAgB,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACvE,oBAAoB,IAAI,CAAC,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;AAC3E,wBAAwB,OAAO,KAAK,CAAC,kCAAkC,GAAG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AACjG,qBAAqB;AACrB,oBAAoB,kBAAkB,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACrF,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAC3E,oBAAoB,kBAAkB,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;AACzE,iBAAiB;AACjB,gBAAgB,OAAO,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,EAAE,gBAAgB,CAAC,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AACzJ,aAAa;AACb,YAAY,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AACvC,gBAAgB,OAAO,gBAAgB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC;AACrE,aAAa;AACb,YAAY,IAAI,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACpD,gBAAgB,IAAI,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACrE,gBAAgB,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC9D,aAAa;AACb;AACA;AACA;AACA,YAAY,OAAO,KAAK,CAAC,6BAA6B,GAAG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAChF,SAAS,CAAC;AACV,KAAK,CAAC;AACN,IAAI,OAAO,SAAS,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE;AACrC,QAAQ,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,UAAU,IAAI,EAAE;AACvD,YAAY,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;AAClD,YAAY,IAAI,iBAAiB,IAAI,cAAc,IAAI,IAAI,IAAI,cAAc,CAAC,MAAM,EAAE;AACtF,gBAAgB,OAAO;AACvB,aAAa;AACb;AACA;AACA,YAAY,IAAI,WAAW,GAAG,UAAU,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC9D,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5D,aAAa,CAAC;AACd,YAAY,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;AACvC,gBAAgB,OAAO,IAAI,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AACvH,aAAa;AACb,iBAAiB;AACjB,gBAAgB,OAAO,IAAI,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AACnH,aAAa;AACb,SAAS;AACT,QAAQ,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,UAAU,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE;AAClF,YAAY,IAAI,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC;AAC7C,YAAY,IAAI,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC;AACpD,YAAY,IAAI,cAAc,GAAG,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;AAC3D,YAAY,IAAI,YAAY,GAAG,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AACxE;AACA;AACA,YAAY,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;AAClD,YAAY,IAAI,aAAa,GAAG,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AACjF,YAAY,IAAI,YAAY,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;AACxD,YAAY,IAAI,gBAAgB,GAAG,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,KAAK,QAAQ,CAAC;AAC1F,YAAY,IAAI,gBAAgB,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC;AAChE,YAAY,IAAI,oBAAoB,GAAG,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,KAAK,QAAQ,CAAC;AACtG,YAAY,IAAI,aAAa,IAAI,gBAAgB,IAAI,oBAAoB,EAAE;AAC3E,gBAAgB,IAAI,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACnD,oBAAoB,IAAI,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACnE;AACA,oBAAoB,IAAI,OAAO,UAAU,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,UAAU,EAAE;AAC5F,wBAAwB,YAAY,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;AAC5E,4BAA4B,IAAI,WAAW,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;AAC3F,4BAA4B,WAAW,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;AACtG;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3H,4BAA4B,OAAO,MAAM,CAAC;AAC1C,yBAAyB,CAAC;AAC1B,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,CAAC,iBAAiB,IAAI,CAAC,aAAa,EAAE;AACtD,gBAAgB,cAAc,CAAC,OAAO,GAAG,YAAY,CAAC;AACtD,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,aAAa,GAAG,aAAa,CAAC;AAClD,gBAAgB,cAAc,CAAC,OAAO,GAAG,UAAU,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;AACpF,oBAAoB,OAAO,OAAO,CAAC,GAAG,CAAC;AACvC,wBAAwB,YAAY,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACrE,wBAAwB,aAAa,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACtE,qBAAqB,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AAC9C,wBAAwB,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/F;AACA,wBAAwB,IAAI,WAAW,YAAY,KAAK,EAAE;AAC1D;AACA,4BAA4B,IAAI,SAAS,KAAK,aAAa,EAAE;AAC7D,gCAAgC,MAAM,WAAW,CAAC;AAClD,6BAA6B;AAC7B,4BAA4B,OAAO,aAAa,CAAC;AACjD,yBAAyB;AACzB,wBAAwB,IAAI,aAAa,YAAY,IAAI,IAAI,WAAW,YAAY,IAAI,EAAE;AAC1F,4BAA4B,OAAO,SAAS,KAAK,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC;AAC7F,yBAAyB;AACzB,wBAAwB,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE;AAC9E;AACA;AACA,4BAA4B,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;AAClG,4BAA4B,OAAO,YAAY,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;AACzF,yBAAyB;AACzB,wBAAwB,OAAO,SAAS,KAAK,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC;AACzF,qBAAqB,CAAC,CAAC;AACvB,iBAAiB,CAAC;AAClB,aAAa;AACb,YAAY,IAAI,eAAe,GAAG,WAAW,CAAC,SAAS,CAAC;AACxD,YAAY,IAAI,cAAc,GAAG,YAAY;AAC7C,gBAAgB,IAAI,EAAE,CAAC;AACvB,gBAAgB,IAAI,KAAK,GAAG,EAAE,CAAC;AAC/B,gBAAgB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAC9D,oBAAoB,KAAK,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAC9C,iBAAiB;AACjB,gBAAgB,QAAQ,EAAE,GAAG,EAAE;AAC/B,oBAAoB,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY;AAC3D,wBAAwB,OAAO;AAC/B,4BAA4B,IAAI,EAAE,YAAY;AAC9C,gCAAgC,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AACnF,oCAAoC,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AAC3E,wCAAwC,OAAO,CAAC,CAAC,aAAa;AAC9D,gDAAgD,IAAI,EAAE,IAAI;AAC1D,gDAAgD,KAAK,EAAE,EAAE;AACzD,6CAA6C,CAAC,CAAC;AAC/C,qCAAqC,CAAC,CAAC;AACvC,iCAAiC,CAAC,CAAC;AACnC,6BAA6B;AAC7B,yBAAyB,CAAC;AAC1B,qBAAqB;AACrB,oBAAoB,EAAE,EAAE;AACxB,aAAa,CAAC;AACd,YAAY,IAAI,CAAC,iBAAiB,IAAI,CAAC,eAAe,EAAE;AACxD,gBAAgB,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC;AAC1D,aAAa;AACb,iBAAiB;AACjB,gBAAgB,cAAc,CAAC,SAAS,GAAG,UAAU,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AAC5I,oBAAoB,IAAI,EAAE,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;AAChE,oBAAoB,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AAC3D,wBAAwB,QAAQ,EAAE,CAAC,KAAK;AACxC,4BAA4B,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,YAAY,OAAO,CAAC,GAAG,CAAC;AACrE,oCAAoC,cAAc,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACnF,oCAAoC,eAAe,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AACpF,iCAAiC,CAAC,CAAC,CAAC;AACpC,4BAA4B,KAAK,CAAC;AAClC,gCAAgC,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,iBAAiB,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/H,gCAAgC,OAAO,CAAC,CAAC,aAAa,gBAAgB,IAAI,iBAAiB,CAAC,CAAC;AAC7F,yBAAyB;AACzB,qBAAqB,CAAC,CAAC;AACvB,iBAAiB,CAAC,CAAC,EAAE,CAAC;AACtB,aAAa;AACb,YAAY,OAAO,cAAc,CAAC;AAClC,SAAS;AACT,QAAQ,EAAE,EAAE,CAAC;AACb,CAAC;AACD,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,IAAI,OAAO,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5D,CAAC;AACD;AACA,SAAS,gBAAgB,CAAC,GAAG,EAAE;AAC/B,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;AACxD,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;AACvB,CAAC;AACD,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC;AACD,SAAS,wBAAwB,CAAC,MAAM,EAAE,MAAM,EAAE;AAClD,IAAI,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC/D,QAAQ,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;AAC5D,YAAY,IAAI,kBAAkB,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACnF,YAAY,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,kBAAkB,IAAI,IAAI,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC;AACtG,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;AACrB,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAClD,QAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,MAAM,EAAE;AACtC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC;AAC3B,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE;AAC9B,YAAY,wBAAwB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACpD,YAAY,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,mBAAmB,EAAE,UAAU,EAAE;AACrD,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACnC,QAAQ,OAAO,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,UAAU,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7F,KAAK;AACL,IAAI,IAAI,UAAU,YAAY,OAAO,EAAE;AACvC,QAAQ,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,YAAY,CAAC,mBAAmB,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACpG,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC9B,QAAQ,OAAO,YAAY,CAAC,mBAAmB,EAAE,EAAE,UAAU,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,OAAO,UAAU,CAAC;AACtB,CAAC;AACD;AACA;AACA;AACO,SAAS,UAAU,CAAC,GAAG,EAAE;AAChC,IAAI,IAAI,QAAQ,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,KAAK,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,QAAQ,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,EAAE;AACrO,QAAQ,IAAI,OAAO,GAAG,CAAC,eAAe,KAAK,WAAW,IAAI,OAAO,GAAG,CAAC,eAAe,KAAK,UAAU,EAAE;AACrG,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA;AACA;AACA;AACG,IAAC,QAAQ,kBAAkB,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE;AAC5C,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;AAC1B,QAAQ,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;AACjD,YAAY,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;AACpD,gBAAgB,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;AAC/F,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;AAChD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE;AAC5F,QAAQ,IAAI,GAAG,CAAC;AAChB,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACrC,YAAY,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,SAAS;AACT,aAAa;AACb,YAAY,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,SAAS;AACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;AAC5D,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC1E,gBAAgB,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;AACrC,oBAAoB,IAAI,YAAY,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACzE,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;AAC7F,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACjC,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACnF,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK,CAAC;AACN,IAAI,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE;AACtD,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AAClE,KAAK,CAAC;AACN,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC,EAAE;;;;"}