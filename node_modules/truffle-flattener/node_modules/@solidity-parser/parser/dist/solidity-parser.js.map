{"version":3,"sources":["webpack://SolidityParser/webpack/universalModuleDefinition","webpack://SolidityParser/webpack/bootstrap","webpack://SolidityParser/./src/antlr4/Utils.js","webpack://SolidityParser/./src/antlr4/Token.js","webpack://SolidityParser/./src/antlr4/IntervalSet.js","webpack://SolidityParser/./src/antlr4/atn/ATNState.js","webpack://SolidityParser/./src/antlr4/tree/Tree.js","webpack://SolidityParser/./src/antlr4/error/Errors.js","webpack://SolidityParser/./src/antlr4/PredictionContext.js","webpack://SolidityParser/./src/antlr4/atn/ATN.js","webpack://SolidityParser/./src/antlr4/atn/Transition.js","webpack://SolidityParser/./src/antlr4/atn/ATNConfigSet.js","webpack://SolidityParser/./src/antlr4/index.js","webpack://SolidityParser/./src/antlr4/atn/SemanticContext.js","webpack://SolidityParser/./src/antlr4/dfa/DFAState.js","webpack://SolidityParser/./src/antlr4/atn/ATNConfig.js","webpack://SolidityParser/./src/antlr4/RuleContext.js","webpack://SolidityParser/./src/antlr4/Lexer.js","webpack://SolidityParser/./src/antlr4/error/ErrorListener.js","webpack://SolidityParser/./src/antlr4/dfa/DFASerializer.js","webpack://SolidityParser/./src/antlr4/ParserRuleContext.js","webpack://SolidityParser/./src/antlr4/InputStream.js","webpack://SolidityParser/./src/antlr4/tree/Trees.js","webpack://SolidityParser/./src/antlr4/atn/ATNDeserializer.js","webpack://SolidityParser/./src/antlr4/atn/ATNDeserializationOptions.js","webpack://SolidityParser/./src/antlr4/atn/LexerAction.js","webpack://SolidityParser/./src/antlr4/Recognizer.js","webpack://SolidityParser/./src/antlr4/atn/ATNSimulator.js","webpack://SolidityParser/./src/antlr4/atn/PredictionMode.js","webpack://SolidityParser/./src/antlr4/polyfills/codepointat.js","webpack://SolidityParser/./src/antlr4/polyfills/fromcodepoint.js","webpack://SolidityParser/./src/antlr4/error/ErrorStrategy.js","webpack://SolidityParser/./src/index.js","webpack://SolidityParser/./src/antlr4/atn/index.js","webpack://SolidityParser/./src/antlr4/LL1Analyzer.js","webpack://SolidityParser/./src/antlr4/atn/ATNType.js","webpack://SolidityParser/./src/antlr4/atn/LexerATNSimulator.js","webpack://SolidityParser/./src/antlr4/CommonTokenFactory.js","webpack://SolidityParser/./src/antlr4/atn/LexerActionExecutor.js","webpack://SolidityParser/./src/antlr4/atn/ParserATNSimulator.js","webpack://SolidityParser/./src/antlr4/dfa/index.js","webpack://SolidityParser/./src/antlr4/dfa/DFA.js","webpack://SolidityParser/./src/antlr4/tree/index.js","webpack://SolidityParser/./src/antlr4/error/index.js","webpack://SolidityParser/./src/antlr4/error/DiagnosticErrorListener.js","webpack://SolidityParser/./src/antlr4/CharStreams.js","webpack://SolidityParser/./src/antlr4/FileStream.js","webpack://SolidityParser/./src/antlr4/CommonTokenStream.js","webpack://SolidityParser/./src/antlr4/BufferedTokenStream.js","webpack://SolidityParser/./src/antlr4/Parser.js","webpack://SolidityParser/./src/lib/SolidityLexer.js","webpack://SolidityParser/./src/lib/SolidityParser.js","webpack://SolidityParser/./src/lib/SolidityListener.js","webpack://SolidityParser/./src/ASTBuilder.js","webpack://SolidityParser/./src/ErrorListener.js","webpack://SolidityParser/./src/lib/Solidity.tokens","webpack://SolidityParser/./src/tokens.js"],"names":["arrayToString","a","join","String","prototype","seed","Math","round","random","pow","hashCode","remainder","bytes","h1","h1b","c1","c1b","c2","c2b","k1","i","key","toString","length","charCodeAt","standardEqualsFunction","b","equals","standardHashCodeFunction","Set","hashFunction","equalsFunction","data","Object","defineProperty","get","l","indexOf","add","value","hash","values","push","contains","concat","BitSet","or","set","bits","keys","map","alt","remove","minValue","min","apply","Hash","update","finish","other","Map","hashKey","put","entries","entry","oldValue","containsKey","getKeys","e","getValues","ss","AltDict","DoubleDict","count","arguments","Array","isArray","k","updateHashCode","hashStuff","d","o","escapeWhitespace","s","escapeSpaces","replace","titleCase","str","txt","charAt","toUpperCase","substr","equalArrays","exports","Token","source","type","channel","start","stop","tokenIndex","line","column","_text","INVALID_TYPE","EPSILON","MIN_USER_TOKEN_TYPE","EOF","DEFAULT_CHANNEL","HIDDEN_CHANNEL","text","getTokenSource","getInputStream","CommonToken","call","undefined","EMPTY_SOURCE","create","constructor","clone","t","input","n","size","getText","require","Interval","item","IntervalSet","intervals","readOnly","first","v","addOne","addInterval","addRange","h","splice","max","reduce","addSet","intervalslength","r","pop","complement","result","removeRange","len","removeOne","x","literalNames","symbolicNames","elemsAreChar","toTokenString","toCharString","toIndexString","names","fromCharCode","j","elementName","INITIAL_NUM_TRANSITIONS","ATNState","atn","stateNumber","INVALID_STATE_NUMBER","stateType","ruleIndex","epsilonOnlyTransitions","transitions","nextTokenWithinRule","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","BLOCK_END","STAR_LOOP_BACK","STAR_LOOP_ENTRY","PLUS_LOOP_BACK","LOOP_END","serializationNames","isNonGreedyExitState","addTransition","trans","index","isEpsilon","BasicState","DecisionState","decision","nonGreedy","BlockStartState","endState","BasicBlockStartState","BlockEndState","startState","RuleStopState","RuleStartState","stopState","isPrecedenceRule","PlusLoopbackState","PlusBlockStartState","loopBackState","StarBlockStartState","StarLoopbackState","StarLoopEntryState","isPrecedenceDecision","LoopEndState","TokensStartState","INVALID_INTERVAL","Utils","Tree","SyntaxTree","ParseTree","RuleNode","TerminalNode","ErrorNode","ParseTreeVisitor","visit","ctx","child","accept","visitChildren","children","visitTerminal","node","visitErrorNode","ParseTreeListener","enterEveryRule","exitEveryRule","TerminalNodeImpl","symbol","parentCtx","getChild","getSymbol","getParent","getPayload","getSourceInterval","getChildCount","visitor","ErrorNodeImpl","token","isErrorNode","ParseTreeWalker","walk","listener","errorNode","enterRule","exitRule","getRuleContext","DEFAULT","PredicateTransition","RecognitionException","params","Error","captureStackTrace","stack","message","recognizer","offendingToken","offendingState","state","getExpectedTokens","LexerNoViableAltException","lexer","startIndex","deadEndConfigs","NoViableAltException","startToken","_ctx","getCurrentToken","InputMismatchException","FailedPredicateException","predicate","formatMessage","_interp","states","predicateIndex","predIndex","ParseCancellationException","RuleContext","PredictionContext","cachedHashCode","EMPTY","EMPTY_RETURN_STATE","globalNodeCount","id","isEmpty","hasEmptyPath","getReturnState","PredictionContextCache","cache","existing","SingletonPredictionContext","parent","returnState","contructor","up","EmptyPredictionContext","ArrayPredictionContext","parents","returnStates","predictionContextFromRuleContext","outerContext","invokingState","transition","followState","merge","rootIsWildcard","mergeCache","mergeSingletons","mergeArrays","previous","rootMerge","mergeRoot","spc","singleParent","payloads","apc","a_","mergedReturnStates","mergedParents","a_parent","b_parent","payload","bothDollars","ax_ax","mergedParent","p","slice","M","combineCommonParents","uniqueParents","q","getCachedPredictionContext","context","contextCache","visited","changed","updated","getAllContextNodes","nodes","LL1Analyzer","ATN","grammarType","maxTokenType","decisionToState","ruleToStartState","ruleToStopState","modeNameToStartState","ruleToTokenType","lexerActions","modeToStartState","nextTokensInContext","anal","LOOK","nextTokensNoContext","nextTokens","addState","removeState","defineDecisionState","getDecisionState","following","expected","rt","INVALID_ALT_NUMBER","Predicate","PrecedencePredicate","Transition","target","label","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE","serializationTypes","EpsilonTransition","RangeTransition","RuleTransition","AtomTransition","ActionTransition","SetTransition","NotSetTransition","WildcardTransition","PrecedencePredicateTransition","label_","makeLabel","serializationType","matches","minVocabSymbol","maxVocabSymbol","ruleStart","precedence","outermostPrecedenceReturn","AbstractPredicateTransition","isCtxDependent","getPredicate","actionIndex","SemanticContext","hashATNConfig","c","hashCodeForConfigSet","equalATNConfigs","equalsForConfigSet","ATNConfigSet","fullCtx","configLookup","configs","uniqueAlt","conflictingAlts","hasSemanticContext","dipsIntoOuterContext","config","semanticContext","NONE","reachesIntoOuterContext","merged","precedenceFilterSuppressed","getStates","getPredicates","preds","optimizeConfigs","interpreter","getCachedContext","addAll","coll","containsFast","clear","setReadonly","OrderedATNConfigSet","codepointat","dfa","fromcodepoint","tree","error","CharStreams","InputStream","FileStream","CommonTokenStream","Lexer","Parser","pc","ParserRuleContext","evaluate","parser","evalPrecedence","andContext","AND","opnds","orContext","OR","localctx","sempred","precpred","compareTo","filterPrecedencePredicates","operands","precedencePredicates","reduced","differs","evaluated","sort","PredPrediction","pred","DFAState","edges","isAcceptState","prediction","lexerActionExecutor","requiresFullContext","predicates","getAltSet","alts","checkParams","isCfg","props","ATNConfig","checkContext","LexerATNConfig","passedThroughNonGreedyDecision","checkNonGreedyDecision","depth","getAltNumber","setAltNumber","altNumber","Trees","toStringTree","ruleNames","recog","ri","ruleName","Recognizer","CommonTokenFactory","TokenSource","_input","_factory","_tokenFactorySourcePair","_token","_tokenStartCharIndex","_tokenStartLine","_tokenStartColumn","_hitEOF","_channel","_type","_modeStack","_mode","DEFAULT_MODE","MORE","SKIP","DEFAULT_TOKEN_CHANNEL","HIDDEN","MIN_CHAR_VALUE","MAX_CHAR_VALUE","reset","seek","nextToken","tokenStartMarker","mark","emitEOF","continueOuter","ttype","match","notifyListeners","recover","console","log","LA","emit","release","skip","more","mode","m","pushMode","debug","popMode","sourceName","emitToken","getCharIndex","cpos","lpos","eof","getAllTokens","tokens","msg","getErrorDisplay","getErrorListenerDispatch","syntaxError","getErrorDisplayForChar","getCharErrorDisplay","re","consume","ErrorListener","offendingSymbol","reportAmbiguity","stopIndex","exact","ambigAlts","reportAttemptingFullContext","reportContextSensitivity","ConsoleErrorListener","INSTANCE","ProxyErrorListener","delegates","DFASerializer","s0","buf","sortedStates","getStateString","getEdgeLabel","baseStateStr","LexerDFASerializer","invokingStateNumber","exception","copyFrom","addChild","removeLastChild","addTokenNode","addErrorNode","badToken","getToken","getTokens","getTypedRuleContext","ctxType","getTypedRuleContexts","contexts","InterpreterRuleContext","_loadString","stream","decodeToUnicodeCodePoints","_index","strdata","codePoint","codePointAt","codeUnit","_size","name","offset","pos","LT","marker","fromCodePoint","getNodeText","res","getChildren","list","getAncestors","ancestors","findAllTokenNodes","findAllNodes","findAllRuleNodes","findTokens","_findAllNodes","descendants","ATNType","ATNStates","Transitions","ATNDeserializationOptions","LexerActions","LexerActionType","LexerSkipAction","LexerChannelAction","LexerCustomAction","LexerMoreAction","LexerTypeAction","LexerPushModeAction","LexerPopModeAction","LexerModeAction","BASE_SERIALIZED_UUID","ADDED_UNICODE_SMP","SUPPORTED_UUIDS","SERIALIZED_VERSION","SERIALIZED_UUID","initArray","tmp","ATNDeserializer","options","defaultOptions","deserializationOptions","stateFactories","actionFactories","isFeatureSupported","feature","actualUuid","idx1","idx2","deserialize","checkVersion","checkUUID","readATN","readStates","readRules","readModes","sets","readSets","readInt","bind","uuid","readInt32","readEdges","readDecisions","readLexerActions","markPrecedenceDecisions","verifyATN","generateRuleBypassTransitions","PARSER","adjust","temp","split","version","readUUID","pair","loopBackStateNumbers","endStateNumbers","nstates","stype","stateFactory","loopBackStateNumber","endStateNumber","numNonGreedyStates","numPrecedenceStates","nrules","LEXER","tokenType","nmodes","readUnicode","iset","containsEof","i1","i2","nedges","src","trg","arg1","arg2","arg3","edgeFactory","srcState","ndecisions","decState","actionType","data1","data2","lexerAction","lexerActionFactory","generateRuleBypassTransition","idx","bypassStart","bypassStop","excludeTransition","stateIsEndStateFor","matchState","maybeLoopEndState","checkCondition","condition","low","high","readLong","createByteToHex","bth","byteToHex","bb","int","sf","af","CHANNEL","CUSTOM","MODE","POP_MODE","PUSH_MODE","TYPE","LexerAction","action","isPositionDependent","execute","LexerIndexedCustomAction","_listeners","_stateNumber","tokenTypeMapCache","ruleIndexMapCache","toolVersion","runtimeVersion","addErrorListener","removeErrorListeners","getTokenTypeMap","tokenNames","getTokenNames","getRuleIndexMap","getTokenType","tokenName","getErrorHeader","getOffendingToken","getTokenErrorDisplay","ATNSimulator","sharedContextCache","ERROR","PredictionMode","SLL","LL","LL_EXACT_AMBIG_DETECTION","hasSLLConflictTerminatingPrediction","allConfigsInRuleStopStates","dup","items","altsets","getConflictingAltSubsets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConfigInRuleStopState","resolvesToJustOneViableAlt","getSingleViableAlt","allSubsetsConflict","hasNonConflictingAltSet","allSubsetsEqual","getUniqueAlt","all","getAlts","configToAlts","cfg","getStateToAltMap","minAlt","object","$defineProperty","position","TypeError","string","Number","second","stringFromCharCode","floor","_","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","isFinite","RangeError","Errors","ErrorStrategy","recoverInline","sync","inErrorRecoveryMode","reportError","DefaultErrorStrategy","errorRecoveryMode","lastErrorIndex","lastErrorStates","endErrorCondition","beginErrorCondition","reportMatch","reportNoViableAlternative","reportInputMismatch","reportFailedPredicate","notifyErrorListeners","getMessage","followSet","getErrorRecoverySet","consumeUntil","la","getTokenStream","singleTokenDeletion","reportUnwantedToken","expecting","whatFollowsLoopIterationOrRule","escapeWSAndQuote","reportMissingToken","matchedSymbol","singleTokenInsertion","getMissingSymbol","currentSymbolType","currentState","next","expectingAtLL2","nextTokenType","currentSymbol","expectedTokenType","tokenText","current","lookback","getTokenFactory","recoverSet","follow","BailErrorStrategy","antlr4","SolidityLexer","SolidityParser","ASTBuilder","buildTokenList","ParserError","args","errors","tokenize","chars","tokenSource","parse","buildParseTrees","sourceUnit","tokenList","tolerant","hasErrors","getErrors","ast","_isASTNode","hasOwnProperty","forEach","cont","prop","selector","LexerATNSimulator","ParserATNSimulator","HIT_PRED","getDecisionLookahead","look","lookBusy","seeThruPreds","_LOOK","lookContext","calledRuleStack","addEOF","removed","newContext","LexerActionExecutor","resetSimState","sim","dfaState","SimState","decisionToDFA","prevAccept","dfa_debug","MIN_DFA_EDGE","MAX_DFA_EDGE","match_calls","copyState","simulator","matchATN","execATN","old_mode","s0_closure","computeStartState","suppressEdge","addDFAState","predict","toLexerString","ds0","captureSimState","getExistingTargetState","computeTargetState","failOrAccept","reach","getReachableConfigSet","addDFAEdge","closure","skipAlt","currentAltReachedAcceptState","getTokenName","getReachableTarget","fixOffsetBeforeMatch","treatEofAsEpsilon","charPos","initialContext","speculative","getEpsilonTarget","evaluatePredicate","append","savedcolumn","savedLine","settings","from_","tk","to","cfgs","proposed","firstConfigWithRuleStopState","newState","getDFA","curChar","tt","TokenFactory","copyText","createThin","updatedLexerActions","requiresSeek","numActions","predictionMode","_startIndex","_outerContext","_dfa","debug_closure","debug_add","debug_list_atn_decisions","retry_debug","adaptivePredict","getLookaheadName","precedenceDfa","getPrecedenceStartState","getPrecedence","atnStartState","applyPrecedenceFilter","setPrecedenceStartState","previousD","D","noViableAlt","getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule","conflictIndex","evalSemanticContext","execATNWithFullContext","computeReachSet","predictedAlt","altSubSets","getConflictingAlts","predicateDFAState","decisionState","nalts","altsToCollectPredsFrom","getConflictingAltsOrUniqueAlt","altToPred","getPredsForAmbigAlts","getPredicatePredictions","foundExactAmbig","intermediate","skippedStopStates","closureBusy","removeAllConfigsNotInRuleStopState","lookToEndOfRule","endOfRuleState","statesFromAlt1","configSet","updatedContext","nPredAlts","pairs","containsPredicate","splitAccordingToSemanticValidity","semValidConfigs","semInvalidConfigs","getAltThatFinishedDecisionEntryRule","succeeded","failed","predicateEvaluationResult","predPredictions","complete","predictions","collectPredicates","initialDepth","closureCheckingStopState","getRuleName","closure_","parms","canDropLoopEntryEdgeInLeftRecursiveRule","continueCollecting","newDepth","numCtxs","decisionStartState","blockEndStateNum","blockEndState","returnStateNumber","returnStateTarget","inContext","ruleTransition","precedenceTransition","predTransition","actionTransition","pt","getRuleInvocationStack","currentPosition","predSucceeds","newSemCtx","dumpDeadEndConfigs","nvae","decs","getDeadEndConfigs","neg","interval","DFA","_states","precedenceState","setPrecedenceDfa","DFAStatesSet","serializer","DiagnosticErrorListener","exactOnly","getDecisionDescription","reportedAlts","isNodeJs","window","importScripts","fs","fromString","fromBlob","blob","encoding","onLoad","onError","reader","FileReader","onload","is","onerror","readAsText","fromBuffer","buffer","fromPath","path","callback","readFile","err","fromPathSync","readFileSync","fileName","BufferedTokenStream","adjustSeekIndex","nextTokenOnChannel","LB","previousTokenOnChannel","lazyInit","getNumberOfOnChannelTokens","fill","TokenStream","fetchedEOF","skipEofCheck","fetched","fetch","types","subset","setup","setTokenSource","getHiddenTokensToRight","nextOnChannel","filterForChannel","getHiddenTokensToLeft","prevOnChannel","left","right","hidden","getSourceName","TraceListener","_errHandler","_precedenceStack","_tracer","_parseListeners","_syntaxErrors","setInputStream","bypassAltsAtnCache","setTrace","matchWildcard","_buildParseTrees","getParseListeners","addParseListener","removeParseListener","removeParseListeners","triggerEnterRuleEvent","triggerExitRuleEvent","reverse","setTokenFactory","factory","getATNWithBypassAlts","serializedAtn","getSerializedATN","compileParseTreePattern","pattern","patternRuleIndex","ParseTreePatternMatcher","compile","setTokenStream","hasListener","addContextToParseTree","enterOuterAlt","altNum","enterRecursionRule","pushNewRecursionContext","unrollRecursionContexts","retCtx","getInvokingContext","isExpectedToken","getExpectedTokensWithinCurrentRule","getRuleIndex","getDFAStrings","dumpDFA","seenOne","printer","println","print","trace","serializedATN","decisionsToDFA","ds","T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","T__10","T__11","T__12","T__13","T__14","T__15","T__16","T__17","T__18","T__19","T__20","T__21","T__22","T__23","T__24","T__25","T__26","T__27","T__28","T__29","T__30","T__31","T__32","T__33","T__34","T__35","T__36","T__37","T__38","T__39","T__40","T__41","T__42","T__43","T__44","T__45","T__46","T__47","T__48","T__49","T__50","T__51","T__52","T__53","T__54","T__55","T__56","T__57","T__58","T__59","T__60","T__61","T__62","T__63","T__64","T__65","T__66","T__67","T__68","T__69","T__70","T__71","T__72","T__73","T__74","T__75","T__76","T__77","T__78","T__79","T__80","T__81","T__82","T__83","T__84","T__85","T__86","T__87","T__88","T__89","T__90","T__91","T__92","T__93","Int","Uint","Byte","Fixed","Ufixed","BooleanLiteral","DecimalNumber","HexNumber","NumberUnit","HexLiteral","ReservedKeyword","AnonymousKeyword","BreakKeyword","ConstantKeyword","ImmutableKeyword","ContinueKeyword","LeaveKeyword","ExternalKeyword","IndexedKeyword","InternalKeyword","PayableKeyword","PrivateKeyword","PublicKeyword","VirtualKeyword","PureKeyword","TypeKeyword","ViewKeyword","ConstructorKeyword","FallbackKeyword","ReceiveKeyword","Identifier","StringLiteralFragment","VersionLiteral","WS","COMMENT","LINE_COMMENT","channelNames","modeNames","grammarFileName","SolidityListener","RULE_sourceUnit","RULE_pragmaDirective","RULE_pragmaName","RULE_pragmaValue","RULE_version","RULE_versionOperator","RULE_versionConstraint","RULE_importDeclaration","RULE_importDirective","RULE_contractDefinition","RULE_inheritanceSpecifier","RULE_contractPart","RULE_stateVariableDeclaration","RULE_fileLevelConstant","RULE_usingForDeclaration","RULE_structDefinition","RULE_modifierDefinition","RULE_modifierInvocation","RULE_functionDefinition","RULE_functionDescriptor","RULE_returnParameters","RULE_modifierList","RULE_eventDefinition","RULE_enumValue","RULE_enumDefinition","RULE_parameterList","RULE_parameter","RULE_eventParameterList","RULE_eventParameter","RULE_functionTypeParameterList","RULE_functionTypeParameter","RULE_variableDeclaration","RULE_typeName","RULE_userDefinedTypeName","RULE_mappingKey","RULE_mapping","RULE_functionTypeName","RULE_storageLocation","RULE_stateMutability","RULE_block","RULE_statement","RULE_expressionStatement","RULE_ifStatement","RULE_tryStatement","RULE_catchClause","RULE_whileStatement","RULE_simpleStatement","RULE_forStatement","RULE_inlineAssemblyStatement","RULE_doWhileStatement","RULE_continueStatement","RULE_breakStatement","RULE_returnStatement","RULE_throwStatement","RULE_emitStatement","RULE_variableDeclarationStatement","RULE_variableDeclarationList","RULE_identifierList","RULE_elementaryTypeName","RULE_expression","RULE_primaryExpression","RULE_expressionList","RULE_nameValueList","RULE_nameValue","RULE_functionCallArguments","RULE_functionCall","RULE_assemblyBlock","RULE_assemblyItem","RULE_assemblyExpression","RULE_assemblyMember","RULE_assemblyCall","RULE_assemblyLocalDefinition","RULE_assemblyAssignment","RULE_assemblyIdentifierOrList","RULE_assemblyIdentifierList","RULE_assemblyStackAssignment","RULE_labelDefinition","RULE_assemblySwitch","RULE_assemblyCase","RULE_assemblyFunctionDefinition","RULE_assemblyFunctionReturns","RULE_assemblyFor","RULE_assemblyIf","RULE_assemblyLiteral","RULE_subAssembly","RULE_tupleExpression","RULE_typeNameExpression","RULE_numberLiteral","RULE_identifier","RULE_overrideSpecifier","RULE_stringLiteral","SourceUnitContext","pragmaDirective","PragmaDirectiveContext","importDirective","ImportDirectiveContext","contractDefinition","ContractDefinitionContext","enumDefinition","EnumDefinitionContext","structDefinition","StructDefinitionContext","functionDefinition","FunctionDefinitionContext","fileLevelConstant","FileLevelConstantContext","enterSourceUnit","exitSourceUnit","_la","la_","pragmaName","PragmaNameContext","pragmaValue","PragmaValueContext","enterPragmaDirective","exitPragmaDirective","identifier","IdentifierContext","enterPragmaName","exitPragmaName","VersionContext","expression","ExpressionContext","enterPragmaValue","exitPragmaValue","versionConstraint","VersionConstraintContext","enterVersion","exitVersion","VersionOperatorContext","enterVersionOperator","exitVersionOperator","versionOperator","enterVersionConstraint","exitVersionConstraint","ImportDeclarationContext","enterImportDeclaration","exitImportDeclaration","importDeclaration","enterImportDirective","exitImportDirective","inheritanceSpecifier","InheritanceSpecifierContext","contractPart","ContractPartContext","enterContractDefinition","exitContractDefinition","userDefinedTypeName","UserDefinedTypeNameContext","expressionList","ExpressionListContext","enterInheritanceSpecifier","exitInheritanceSpecifier","stateVariableDeclaration","StateVariableDeclarationContext","usingForDeclaration","UsingForDeclarationContext","modifierDefinition","ModifierDefinitionContext","eventDefinition","EventDefinitionContext","enterContractPart","exitContractPart","typeName","TypeNameContext","overrideSpecifier","OverrideSpecifierContext","enterStateVariableDeclaration","exitStateVariableDeclaration","enterFileLevelConstant","exitFileLevelConstant","enterUsingForDeclaration","exitUsingForDeclaration","variableDeclaration","VariableDeclarationContext","enterStructDefinition","exitStructDefinition","block","BlockContext","parameterList","ParameterListContext","enterModifierDefinition","exitModifierDefinition","ModifierInvocationContext","enterModifierInvocation","exitModifierInvocation","modifierInvocation","functionDescriptor","FunctionDescriptorContext","modifierList","ModifierListContext","returnParameters","ReturnParametersContext","enterFunctionDefinition","exitFunctionDefinition","enterFunctionDescriptor","exitFunctionDescriptor","enterReturnParameters","exitReturnParameters","stateMutability","StateMutabilityContext","enterModifierList","exitModifierList","eventParameterList","EventParameterListContext","enterEventDefinition","exitEventDefinition","EnumValueContext","enterEnumValue","exitEnumValue","enumValue","enterEnumDefinition","exitEnumDefinition","parameter","ParameterContext","enterParameterList","exitParameterList","storageLocation","StorageLocationContext","enterParameter","exitParameter","eventParameter","EventParameterContext","enterEventParameterList","exitEventParameterList","enterEventParameter","exitEventParameter","FunctionTypeParameterListContext","functionTypeParameter","FunctionTypeParameterContext","enterFunctionTypeParameterList","exitFunctionTypeParameterList","functionTypeParameterList","enterFunctionTypeParameter","exitFunctionTypeParameter","enterVariableDeclaration","exitVariableDeclaration","elementaryTypeName","ElementaryTypeNameContext","mapping","MappingContext","functionTypeName","FunctionTypeNameContext","enterTypeName","exitTypeName","_p","_parentctx","_parentState","_prevctx","_startState","_alt","enterUserDefinedTypeName","exitUserDefinedTypeName","MappingKeyContext","enterMappingKey","exitMappingKey","mappingKey","enterMapping","exitMapping","enterFunctionTypeName","exitFunctionTypeName","enterStorageLocation","exitStorageLocation","enterStateMutability","exitStateMutability","statement","StatementContext","enterBlock","exitBlock","ifStatement","IfStatementContext","tryStatement","TryStatementContext","whileStatement","WhileStatementContext","forStatement","ForStatementContext","inlineAssemblyStatement","InlineAssemblyStatementContext","doWhileStatement","DoWhileStatementContext","continueStatement","ContinueStatementContext","breakStatement","BreakStatementContext","returnStatement","ReturnStatementContext","throwStatement","ThrowStatementContext","emitStatement","EmitStatementContext","simpleStatement","SimpleStatementContext","enterStatement","exitStatement","ExpressionStatementContext","enterExpressionStatement","exitExpressionStatement","expressionStatement","enterIfStatement","exitIfStatement","catchClause","CatchClauseContext","enterTryStatement","exitTryStatement","enterCatchClause","exitCatchClause","enterWhileStatement","exitWhileStatement","variableDeclarationStatement","VariableDeclarationStatementContext","enterSimpleStatement","exitSimpleStatement","enterForStatement","exitForStatement","assemblyBlock","AssemblyBlockContext","enterInlineAssemblyStatement","exitInlineAssemblyStatement","enterDoWhileStatement","exitDoWhileStatement","enterContinueStatement","exitContinueStatement","enterBreakStatement","exitBreakStatement","enterReturnStatement","exitReturnStatement","enterThrowStatement","exitThrowStatement","functionCall","FunctionCallContext","enterEmitStatement","exitEmitStatement","identifierList","IdentifierListContext","variableDeclarationList","VariableDeclarationListContext","enterVariableDeclarationStatement","exitVariableDeclarationStatement","enterVariableDeclarationList","exitVariableDeclarationList","enterIdentifierList","exitIdentifierList","enterElementaryTypeName","exitElementaryTypeName","primaryExpression","PrimaryExpressionContext","nameValueList","NameValueListContext","functionCallArguments","FunctionCallArgumentsContext","enterExpression","exitExpression","numberLiteral","NumberLiteralContext","stringLiteral","StringLiteralContext","tupleExpression","TupleExpressionContext","typeNameExpression","TypeNameExpressionContext","enterPrimaryExpression","exitPrimaryExpression","enterExpressionList","exitExpressionList","nameValue","NameValueContext","enterNameValueList","exitNameValueList","enterNameValue","exitNameValue","enterFunctionCallArguments","exitFunctionCallArguments","enterFunctionCall","exitFunctionCall","assemblyItem","AssemblyItemContext","enterAssemblyBlock","exitAssemblyBlock","assemblyExpression","AssemblyExpressionContext","assemblyLocalDefinition","AssemblyLocalDefinitionContext","assemblyAssignment","AssemblyAssignmentContext","assemblyStackAssignment","AssemblyStackAssignmentContext","labelDefinition","LabelDefinitionContext","assemblySwitch","AssemblySwitchContext","assemblyFunctionDefinition","AssemblyFunctionDefinitionContext","assemblyFor","AssemblyForContext","assemblyIf","AssemblyIfContext","subAssembly","SubAssemblyContext","enterAssemblyItem","exitAssemblyItem","assemblyCall","AssemblyCallContext","assemblyLiteral","AssemblyLiteralContext","assemblyMember","AssemblyMemberContext","enterAssemblyExpression","exitAssemblyExpression","enterAssemblyMember","exitAssemblyMember","enterAssemblyCall","exitAssemblyCall","assemblyIdentifierOrList","AssemblyIdentifierOrListContext","enterAssemblyLocalDefinition","exitAssemblyLocalDefinition","enterAssemblyAssignment","exitAssemblyAssignment","assemblyIdentifierList","AssemblyIdentifierListContext","enterAssemblyIdentifierOrList","exitAssemblyIdentifierOrList","enterAssemblyIdentifierList","exitAssemblyIdentifierList","enterAssemblyStackAssignment","exitAssemblyStackAssignment","enterLabelDefinition","exitLabelDefinition","assemblyCase","AssemblyCaseContext","enterAssemblySwitch","exitAssemblySwitch","enterAssemblyCase","exitAssemblyCase","assemblyFunctionReturns","AssemblyFunctionReturnsContext","enterAssemblyFunctionDefinition","exitAssemblyFunctionDefinition","enterAssemblyFunctionReturns","exitAssemblyFunctionReturns","enterAssemblyFor","exitAssemblyFor","enterAssemblyIf","exitAssemblyIf","enterAssemblyLiteral","exitAssemblyLiteral","enterSubAssembly","exitSubAssembly","enterTupleExpression","exitTupleExpression","enterTypeNameExpression","exitTypeNameExpression","enterNumberLiteral","exitNumberLiteral","enterIdentifier","exitIdentifier","enterOverrideSpecifier","exitOverrideSpecifier","enterStringLiteral","exitStringLiteral","typeName_sempred","expression_sempred","toText","mapCommasToNulls","comma","el","isBinOp","op","binOps","includes","transformAST","SourceUnit","EnumDefinition","members","EnumValue","UsingForDeclaration","libraryName","PragmaDirective","ContractDefinition","kind","_currentContract","baseContracts","subNodes","InheritanceSpecifier","exprList","baseName","ContractPart","FunctionDefinition","isConstructor","isFallback","isReceiveEther","isVirtual","parameters","visibility","modifiers","mod","override","body","ModifierInvocation","TypeNameExpression","TypeName","baseTypeName","FunctionTypeName","parameterTypes","typeCtx","returnTypes","ReturnStatement","EmitStatement","eventCall","FunctionCall","ctxArgs","exprCtx","StructDefinition","VariableDeclaration","isStateVar","isIndexed","EventParameter","FunctionTypeParameter","WhileStatement","DoWhileStatement","IfStatement","trueBody","falseBody","TryStatement","catchClauses","CatchClause","isReasonStringType","UserDefinedTypeName","namePath","ElementaryTypeName","Block","statements","ExpressionStatement","NumberLiteral","number","subdenomination","MappingKey","Mapping","keyType","valueType","ModifierDefinition","Statement","SimpleStatement","Expression","operator","subExpression","isPrefix","components","memberName","base","trueExpression","falseExpression","indexStart","indexEnd","NameValueList","StateVariableDeclaration","iden","isDeclaredConst","isImmutable","decl","createNode","variables","initialValue","FileLevelConstant","ForStatement","conditionExpression","initExpression","loopExpression","PrimaryExpression","stringLiteralFragmentCtx","singleQuotes","textWithoutQuotes","substring","RegExp","TupleExpression","expr","IdentifierList","VariableDeclarationList","VariableDeclarationStatement","ImportDirective","pathString","unitAlias","symbolAliases","alias","EventDefinition","isAnonymous","EventParameterList","paramCtx","ReturnParameters","ParameterList","Parameter","InlineAssemblyStatement","language","AssemblyBlock","operations","it","AssemblyItem","AssemblyExpression","AssemblyCall","functionName","arg","AssemblyLiteral","AssemblySwitch","cases","AssemblyCase","AssemblyLocalDefinition","AssemblyFunctionDefinition","returnArgs","returnArguments","AssemblyAssignment","AssemblyMember","accessed","member","LabelDefinition","AssemblyStackAssignment","AssemblyFor","pre","post","AssemblyIf","_loc","sourceLocation","end","loc","_range","range","meta","ret","assign","obj","endsWith","module","_errors","TYPE_TOKENS","rsplit","lastIndexOf","normalizeTokenType","startsWith","test","acum","parseInt","tokenTypes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;AClFA;;;;AAKA,SAASA,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,SAAO,MAAMA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAN,GAAqB,GAA5B;AACH;;AAEDC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,GAAwBF,MAAM,CAACC,SAAP,CAAiBC,IAAjB,IAAyBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA3B,CAAjD;;AAEAN,MAAM,CAACC,SAAP,CAAiBM,QAAjB,GAA4B,YAAY;AACpC,MAAIC,SAAJ;AAAA,MAAeC,KAAf;AAAA,MAAsBC,EAAtB;AAAA,MAA0BC,GAA1B;AAAA,MAA+BC,EAA/B;AAAA,MAAmCC,GAAnC;AAAA,MAAwCC,EAAxC;AAAA,MAA4CC,GAA5C;AAAA,MAAiDC,EAAjD;AAAA,MAAqDC,CAArD;AAAA,MACIC,GAAG,GAAG,KAAKC,QAAL,EADV;AAGAX,WAAS,GAAGU,GAAG,CAACE,MAAJ,GAAa,CAAzB,CAJoC,CAIR;;AAC5BX,OAAK,GAAGS,GAAG,CAACE,MAAJ,GAAaZ,SAArB;AACAE,IAAE,GAAGV,MAAM,CAACC,SAAP,CAAiBC,IAAtB;AACAU,IAAE,GAAG,UAAL;AACAE,IAAE,GAAG,UAAL;AACAG,GAAC,GAAG,CAAJ;;AAEA,SAAOA,CAAC,GAAGR,KAAX,EAAkB;AACdO,MAAE,GACIE,GAAG,CAACG,UAAJ,CAAeJ,CAAf,IAAoB,IAAtB,GACC,CAACC,GAAG,CAACG,UAAJ,CAAe,EAAEJ,CAAjB,IAAsB,IAAvB,KAAgC,CADjC,GAEC,CAACC,GAAG,CAACG,UAAJ,CAAe,EAAEJ,CAAjB,IAAsB,IAAvB,KAAgC,EAFjC,GAGC,CAACC,GAAG,CAACG,UAAJ,CAAe,EAAEJ,CAAjB,IAAsB,IAAvB,KAAgC,EAJrC;AAKA,MAAEA,CAAF;AAEAD,MAAE,GAAM,CAACA,EAAE,GAAG,MAAN,IAAgBJ,EAAjB,IAAwB,CAAE,CAACI,EAAE,KAAK,EAAR,IAAcJ,EAAf,GAAqB,MAAtB,KAAiC,EAAzD,CAAF,GAAmE,UAAxE;AACAI,MAAE,GAAIA,EAAE,IAAI,EAAP,GAAcA,EAAE,KAAK,EAA1B;AACAA,MAAE,GAAM,CAACA,EAAE,GAAG,MAAN,IAAgBF,EAAjB,IAAwB,CAAE,CAACE,EAAE,KAAK,EAAR,IAAcF,EAAf,GAAqB,MAAtB,KAAiC,EAAzD,CAAF,GAAmE,UAAxE;AAEAJ,MAAE,IAAIM,EAAN;AACAN,MAAE,GAAIA,EAAE,IAAI,EAAP,GAAcA,EAAE,KAAK,EAA1B;AACAC,OAAG,GAAM,CAACD,EAAE,GAAG,MAAN,IAAgB,CAAjB,IAAuB,CAAE,CAACA,EAAE,KAAK,EAAR,IAAc,CAAf,GAAoB,MAArB,KAAgC,EAAvD,CAAF,GAAiE,UAAvE;AACAA,MAAE,GAAK,CAACC,GAAG,GAAG,MAAP,IAAiB,MAAlB,IAA6B,CAAE,CAACA,GAAG,KAAK,EAAT,IAAe,MAAhB,GAA0B,MAA3B,KAAsC,EAAnE,CAAN;AACH;;AAEDK,IAAE,GAAG,CAAL;;AAEA,UAAQR,SAAR;AACI,SAAK,CAAL;AACIQ,QAAE,IAAI,CAACE,GAAG,CAACG,UAAJ,CAAeJ,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,EAAxC;;AACJ,SAAK,CAAL;AACID,QAAE,IAAI,CAACE,GAAG,CAACG,UAAJ,CAAeJ,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,CAAxC;;AACJ,SAAK,CAAL;AACID,QAAE,IAAKE,GAAG,CAACG,UAAJ,CAAeJ,CAAf,IAAoB,IAA3B;AAEAD,QAAE,GAAK,CAACA,EAAE,GAAG,MAAN,IAAgBJ,EAAjB,IAAwB,CAAE,CAACI,EAAE,KAAK,EAAR,IAAcJ,EAAf,GAAqB,MAAtB,KAAiC,EAAzD,CAAD,GAAiE,UAAtE;AACAI,QAAE,GAAIA,EAAE,IAAI,EAAP,GAAcA,EAAE,KAAK,EAA1B;AACAA,QAAE,GAAK,CAACA,EAAE,GAAG,MAAN,IAAgBF,EAAjB,IAAwB,CAAE,CAACE,EAAE,KAAK,EAAR,IAAcF,EAAf,GAAqB,MAAtB,KAAiC,EAAzD,CAAD,GAAiE,UAAtE;AACAJ,QAAE,IAAIM,EAAN;AAXR;;AAcAN,IAAE,IAAIQ,GAAG,CAACE,MAAV;AAEAV,IAAE,IAAIA,EAAE,KAAK,EAAb;AACAA,IAAE,GAAK,CAACA,EAAE,GAAG,MAAN,IAAgB,UAAjB,IAAgC,CAAE,CAACA,EAAE,KAAK,EAAR,IAAc,UAAf,GAA6B,MAA9B,KAAyC,EAAzE,CAAD,GAAiF,UAAtF;AACAA,IAAE,IAAIA,EAAE,KAAK,EAAb;AACAA,IAAE,GAAM,CAACA,EAAE,GAAG,MAAN,IAAgB,UAAjB,IAAgC,CAAE,CAACA,EAAE,KAAK,EAAR,IAAc,UAAf,GAA6B,MAA9B,KAAyC,EAAzE,CAAF,GAAmF,UAAxF;AACAA,IAAE,IAAIA,EAAE,KAAK,EAAb;AAEA,SAAOA,EAAE,KAAK,CAAd;AACH,CAtDD;;AAwDA,SAASY,sBAAT,CAAgCxB,CAAhC,EAAmCyB,CAAnC,EAAsC;AAClC,SAAOzB,CAAC,CAAC0B,MAAF,CAASD,CAAT,CAAP;AACH;;AAED,SAASE,wBAAT,CAAkC3B,CAAlC,EAAqC;AACjC,SAAOA,CAAC,CAACS,QAAF,EAAP;AACH;;AAED,SAASmB,GAAT,CAAaC,YAAb,EAA2BC,cAA3B,EAA2C;AACvC,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKF,YAAL,GAAoBA,YAAY,IAAIF,wBAApC;AACA,OAAKG,cAAL,GAAsBA,cAAc,IAAIN,sBAAxC;AACA,SAAO,IAAP;AACH;;AAEDQ,MAAM,CAACC,cAAP,CAAsBL,GAAG,CAACzB,SAA1B,EAAqC,QAArC,EAA+C;AAC3C+B,KAAG,EAAE,eAAY;AACb,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIf,GAAT,IAAgB,KAAKW,IAArB,EAA2B;AACvB,UAAIX,GAAG,CAACgB,OAAJ,CAAY,OAAZ,MAAyB,CAA7B,EAAgC;AAC5BD,SAAC,GAAGA,CAAC,GAAG,KAAKJ,IAAL,CAAUX,GAAV,EAAeE,MAAvB;AACH;AACJ;;AACD,WAAOa,CAAP;AACH;AAT0C,CAA/C;;AAYAP,GAAG,CAACzB,SAAJ,CAAckC,GAAd,GAAoB,UAAUC,KAAV,EAAiB;AACjC,MAAIC,IAAI,GAAG,KAAKV,YAAL,CAAkBS,KAAlB,CAAX;AACA,MAAIlB,GAAG,GAAG,UAAUmB,IAApB;;AACA,MAAInB,GAAG,IAAI,KAAKW,IAAhB,EAAsB;AAClB,QAAIS,MAAM,GAAG,KAAKT,IAAL,CAAUX,GAAV,CAAb;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,MAAM,CAAClB,MAA3B,EAAmCH,CAAC,EAApC,EAAwC;AACpC,UAAI,KAAKW,cAAL,CAAoBQ,KAApB,EAA2BE,MAAM,CAACrB,CAAD,CAAjC,CAAJ,EAA2C;AACvC,eAAOqB,MAAM,CAACrB,CAAD,CAAb;AACH;AACJ;;AACDqB,UAAM,CAACC,IAAP,CAAYH,KAAZ;AACA,WAAOA,KAAP;AACH,GATD,MASO;AACH,SAAKP,IAAL,CAAUX,GAAV,IAAiB,CAACkB,KAAD,CAAjB;AACA,WAAOA,KAAP;AACH;AACJ,CAhBD;;AAkBAV,GAAG,CAACzB,SAAJ,CAAcuC,QAAd,GAAyB,UAAUJ,KAAV,EAAiB;AACtC,SAAO,KAAKJ,GAAL,CAASI,KAAT,KAAmB,IAA1B;AACH,CAFD;;AAIAV,GAAG,CAACzB,SAAJ,CAAc+B,GAAd,GAAoB,UAAUI,KAAV,EAAiB;AACjC,MAAIC,IAAI,GAAG,KAAKV,YAAL,CAAkBS,KAAlB,CAAX;AACA,MAAIlB,GAAG,GAAG,UAAUmB,IAApB;;AACA,MAAInB,GAAG,IAAI,KAAKW,IAAhB,EAAsB;AAClB,QAAIS,MAAM,GAAG,KAAKT,IAAL,CAAUX,GAAV,CAAb;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,MAAM,CAAClB,MAA3B,EAAmCH,CAAC,EAApC,EAAwC;AACpC,UAAI,KAAKW,cAAL,CAAoBQ,KAApB,EAA2BE,MAAM,CAACrB,CAAD,CAAjC,CAAJ,EAA2C;AACvC,eAAOqB,MAAM,CAACrB,CAAD,CAAb;AACH;AACJ;AACJ;;AACD,SAAO,IAAP;AACH,CAZD;;AAcAS,GAAG,CAACzB,SAAJ,CAAcqC,MAAd,GAAuB,YAAY;AAC/B,MAAIL,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIf,GAAT,IAAgB,KAAKW,IAArB,EAA2B;AACvB,QAAIX,GAAG,CAACgB,OAAJ,CAAY,OAAZ,MAAyB,CAA7B,EAAgC;AAC5BD,OAAC,GAAGA,CAAC,CAACQ,MAAF,CAAS,KAAKZ,IAAL,CAAUX,GAAV,CAAT,CAAJ;AACH;AACJ;;AACD,SAAOe,CAAP;AACH,CARD;;AAUAP,GAAG,CAACzB,SAAJ,CAAckB,QAAd,GAAyB,YAAY;AACjC,SAAOtB,aAAa,CAAC,KAAKyC,MAAL,EAAD,CAApB;AACH,CAFD;;AAIA,SAASI,MAAT,GAAkB;AACd,OAAKb,IAAL,GAAY,EAAZ;AACA,SAAO,IAAP;AACH;;AAEDa,MAAM,CAACzC,SAAP,CAAiBkC,GAAjB,GAAuB,UAAUC,KAAV,EAAiB;AACpC,OAAKP,IAAL,CAAUO,KAAV,IAAmB,IAAnB;AACH,CAFD;;AAIAM,MAAM,CAACzC,SAAP,CAAiB0C,EAAjB,GAAsB,UAAUC,GAAV,EAAe;AACjC,MAAIC,IAAI,GAAG,IAAX;AACAf,QAAM,CAACgB,IAAP,CAAYF,GAAG,CAACf,IAAhB,EAAsBkB,GAAtB,CAA0B,UAAUC,GAAV,EAAe;AACrCH,QAAI,CAACV,GAAL,CAASa,GAAT;AACH,GAFD;AAGH,CALD;;AAOAN,MAAM,CAACzC,SAAP,CAAiBgD,MAAjB,GAA0B,UAAUb,KAAV,EAAiB;AACvC,SAAO,KAAKP,IAAL,CAAUO,KAAV,CAAP;AACH,CAFD;;AAIAM,MAAM,CAACzC,SAAP,CAAiBuC,QAAjB,GAA4B,UAAUJ,KAAV,EAAiB;AACzC,SAAO,KAAKP,IAAL,CAAUO,KAAV,MAAqB,IAA5B;AACH,CAFD;;AAIAM,MAAM,CAACzC,SAAP,CAAiBqC,MAAjB,GAA0B,YAAY;AAClC,SAAOR,MAAM,CAACgB,IAAP,CAAY,KAAKjB,IAAjB,CAAP;AACH,CAFD;;AAIAa,MAAM,CAACzC,SAAP,CAAiBiD,QAAjB,GAA4B,YAAY;AACpC,SAAO/C,IAAI,CAACgD,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqB,KAAKd,MAAL,EAArB,CAAP;AACH,CAFD;;AAIAI,MAAM,CAACzC,SAAP,CAAiBM,QAAjB,GAA4B,YAAY;AACpC,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,MAAI,CAACiB,MAAL,CAAY,KAAKhB,MAAL,EAAZ;AACA,SAAOD,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD;;AAMAb,MAAM,CAACzC,SAAP,CAAiBuB,MAAjB,GAA0B,UAAUgC,KAAV,EAAiB;AACvC,MAAI,EAAEA,KAAK,YAAYd,MAAnB,CAAJ,EAAgC;AAC5B,WAAO,KAAP;AACH;;AACD,SAAO,KAAKnC,QAAL,OAAoBiD,KAAK,CAACjD,QAAN,EAA3B;AACH,CALD;;AAOAuB,MAAM,CAACC,cAAP,CAAsBW,MAAM,CAACzC,SAA7B,EAAwC,QAAxC,EAAkD;AAC9C+B,KAAG,EAAE,eAAY;AACb,WAAO,KAAKM,MAAL,GAAclB,MAArB;AACH;AAH6C,CAAlD;;AAMAsB,MAAM,CAACzC,SAAP,CAAiBkB,QAAjB,GAA4B,YAAY;AACpC,SAAO,MAAM,KAAKmB,MAAL,GAAcvC,IAAd,CAAmB,IAAnB,CAAN,GAAiC,GAAxC;AACH,CAFD;;AAIA,SAAS0D,GAAT,CAAa9B,YAAb,EAA2BC,cAA3B,EAA2C;AACvC,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKF,YAAL,GAAoBA,YAAY,IAAIF,wBAApC;AACA,OAAKG,cAAL,GAAsBA,cAAc,IAAIN,sBAAxC;AACA,SAAO,IAAP;AACH;;AAEDQ,MAAM,CAACC,cAAP,CAAsB0B,GAAG,CAACxD,SAA1B,EAAqC,QAArC,EAA+C;AAC3C+B,KAAG,EAAE,eAAY;AACb,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIyB,OAAT,IAAoB,KAAK7B,IAAzB,EAA+B;AAC3B,UAAI6B,OAAO,CAACxB,OAAR,CAAgB,OAAhB,MAA6B,CAAjC,EAAoC;AAChCD,SAAC,GAAGA,CAAC,GAAG,KAAKJ,IAAL,CAAU6B,OAAV,EAAmBtC,MAA3B;AACH;AACJ;;AACD,WAAOa,CAAP;AACH;AAT0C,CAA/C;;AAYAwB,GAAG,CAACxD,SAAJ,CAAc0D,GAAd,GAAoB,UAAUzC,GAAV,EAAekB,KAAf,EAAsB;AACtC,MAAIsB,OAAO,GAAG,UAAU,KAAK/B,YAAL,CAAkBT,GAAlB,CAAxB;;AACA,MAAIwC,OAAO,IAAI,KAAK7B,IAApB,EAA0B;AACtB,QAAI+B,OAAO,GAAG,KAAK/B,IAAL,CAAU6B,OAAV,CAAd;;AACA,SAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,OAAO,CAACxC,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACrC,UAAI4C,KAAK,GAAGD,OAAO,CAAC3C,CAAD,CAAnB;;AACA,UAAI,KAAKW,cAAL,CAAoBV,GAApB,EAAyB2C,KAAK,CAAC3C,GAA/B,CAAJ,EAAyC;AACrC,YAAI4C,QAAQ,GAAGD,KAAK,CAACzB,KAArB;AACAyB,aAAK,CAACzB,KAAN,GAAcA,KAAd;AACA,eAAO0B,QAAP;AACH;AACJ;;AACDF,WAAO,CAACrB,IAAR,CAAa;AAACrB,SAAG,EAACA,GAAL;AAAUkB,WAAK,EAACA;AAAhB,KAAb;AACA,WAAOA,KAAP;AACH,GAZD,MAYO;AACH,SAAKP,IAAL,CAAU6B,OAAV,IAAqB,CAAC;AAACxC,SAAG,EAACA,GAAL;AAAUkB,WAAK,EAACA;AAAhB,KAAD,CAArB;AACA,WAAOA,KAAP;AACH;AACJ,CAlBD;;AAoBAqB,GAAG,CAACxD,SAAJ,CAAc8D,WAAd,GAA4B,UAAU7C,GAAV,EAAe;AACvC,MAAIwC,OAAO,GAAG,UAAU,KAAK/B,YAAL,CAAkBT,GAAlB,CAAxB;;AACA,MAAGwC,OAAO,IAAI,KAAK7B,IAAnB,EAAyB;AACrB,QAAI+B,OAAO,GAAG,KAAK/B,IAAL,CAAU6B,OAAV,CAAd;;AACA,SAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,OAAO,CAACxC,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACrC,UAAI4C,KAAK,GAAGD,OAAO,CAAC3C,CAAD,CAAnB;AACA,UAAI,KAAKW,cAAL,CAAoBV,GAApB,EAAyB2C,KAAK,CAAC3C,GAA/B,CAAJ,EACI,OAAO,IAAP;AACP;AACJ;;AACD,SAAO,KAAP;AACH,CAXD;;AAaAuC,GAAG,CAACxD,SAAJ,CAAc+B,GAAd,GAAoB,UAAUd,GAAV,EAAe;AAC/B,MAAIwC,OAAO,GAAG,UAAU,KAAK/B,YAAL,CAAkBT,GAAlB,CAAxB;;AACA,MAAGwC,OAAO,IAAI,KAAK7B,IAAnB,EAAyB;AACrB,QAAI+B,OAAO,GAAG,KAAK/B,IAAL,CAAU6B,OAAV,CAAd;;AACA,SAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,OAAO,CAACxC,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACrC,UAAI4C,KAAK,GAAGD,OAAO,CAAC3C,CAAD,CAAnB;AACA,UAAI,KAAKW,cAAL,CAAoBV,GAApB,EAAyB2C,KAAK,CAAC3C,GAA/B,CAAJ,EACI,OAAO2C,KAAK,CAACzB,KAAb;AACP;AACJ;;AACD,SAAO,IAAP;AACH,CAXD;;AAaAqB,GAAG,CAACxD,SAAJ,CAAc2D,OAAd,GAAwB,YAAY;AAChC,MAAI3B,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIf,GAAT,IAAgB,KAAKW,IAArB,EAA2B;AACvB,QAAIX,GAAG,CAACgB,OAAJ,CAAY,OAAZ,MAAyB,CAA7B,EAAgC;AAC5BD,OAAC,GAAGA,CAAC,CAACQ,MAAF,CAAS,KAAKZ,IAAL,CAAUX,GAAV,CAAT,CAAJ;AACH;AACJ;;AACD,SAAOe,CAAP;AACH,CARD;;AAWAwB,GAAG,CAACxD,SAAJ,CAAc+D,OAAd,GAAwB,YAAY;AAChC,SAAO,KAAKJ,OAAL,GAAeb,GAAf,CAAmB,UAASkB,CAAT,EAAY;AAClC,WAAOA,CAAC,CAAC/C,GAAT;AACH,GAFM,CAAP;AAGH,CAJD;;AAOAuC,GAAG,CAACxD,SAAJ,CAAciE,SAAd,GAA0B,YAAY;AAClC,SAAO,KAAKN,OAAL,GAAeb,GAAf,CAAmB,UAASkB,CAAT,EAAY;AAC9B,WAAOA,CAAC,CAAC7B,KAAT;AACP,GAFM,CAAP;AAGH,CAJD;;AAOAqB,GAAG,CAACxD,SAAJ,CAAckB,QAAd,GAAyB,YAAY;AACjC,MAAIgD,EAAE,GAAG,KAAKP,OAAL,GAAeb,GAAf,CAAmB,UAASc,KAAT,EAAgB;AACxC,WAAO,MAAMA,KAAK,CAAC3C,GAAZ,GAAkB,GAAlB,GAAwB2C,KAAK,CAACzB,KAA9B,GAAsC,GAA7C;AACH,GAFQ,CAAT;AAGA,SAAO,MAAM+B,EAAE,CAACpE,IAAH,CAAQ,IAAR,CAAN,GAAsB,GAA7B;AACH,CALD;;AAQA,SAASqE,OAAT,GAAmB;AACf,OAAKvC,IAAL,GAAY,EAAZ;AACA,SAAO,IAAP;AACH;;AAGDuC,OAAO,CAACnE,SAAR,CAAkB+B,GAAlB,GAAwB,UAAUd,GAAV,EAAe;AACnCA,KAAG,GAAG,OAAOA,GAAb;;AACA,MAAIA,GAAG,IAAI,KAAKW,IAAhB,EAAsB;AAClB,WAAO,KAAKA,IAAL,CAAUX,GAAV,CAAP;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;AACJ,CAPD;;AASAkD,OAAO,CAACnE,SAAR,CAAkB0D,GAAlB,GAAwB,UAAUzC,GAAV,EAAekB,KAAf,EAAsB;AAC1ClB,KAAG,GAAG,OAAOA,GAAb;AACA,OAAKW,IAAL,CAAUX,GAAV,IAAiBkB,KAAjB;AACH,CAHD;;AAKAgC,OAAO,CAACnE,SAAR,CAAkBqC,MAAlB,GAA2B,YAAY;AACnC,MAAIT,IAAI,GAAG,KAAKA,IAAhB;AACA,MAAIiB,IAAI,GAAGhB,MAAM,CAACgB,IAAP,CAAY,KAAKjB,IAAjB,CAAX;AACA,SAAOiB,IAAI,CAACC,GAAL,CAAS,UAAU7B,GAAV,EAAe;AAC3B,WAAOW,IAAI,CAACX,GAAD,CAAX;AACH,GAFM,CAAP;AAGH,CAND;;AAQA,SAASmD,UAAT,GAAsB;AAClB,SAAO,IAAP;AACH;;AAED,SAAShB,IAAT,GAAgB;AACZ,OAAKiB,KAAL,GAAa,CAAb;AACA,OAAKjC,IAAL,GAAY,CAAZ;AACA,SAAO,IAAP;AACH;;AAEDgB,IAAI,CAACpD,SAAL,CAAeqD,MAAf,GAAwB,YAAY;AAChC,OAAI,IAAIrC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACsD,SAAS,CAACnD,MAAxB,EAA+BH,CAAC,EAAhC,EAAoC;AAChC,QAAImB,KAAK,GAAGmC,SAAS,CAACtD,CAAD,CAArB;AACA,QAAImB,KAAK,IAAI,IAAb,EACI;AACJ,QAAGoC,KAAK,CAACC,OAAN,CAAcrC,KAAd,CAAH,EACI,KAAKkB,MAAL,CAAYF,KAAZ,CAAkBhB,KAAlB,EADJ,KAEK;AACD,UAAIsC,CAAC,GAAG,CAAR;;AACA,sBAAetC,KAAf;AACI,aAAK,WAAL;AACA,aAAK,UAAL;AACI;;AACJ,aAAK,QAAL;AACA,aAAK,SAAL;AACIsC,WAAC,GAAGtC,KAAJ;AACA;;AACJ,aAAK,QAAL;AACIsC,WAAC,GAAGtC,KAAK,CAAC7B,QAAN,EAAJ;AACA;;AACJ;AACI6B,eAAK,CAACuC,cAAN,CAAqB,IAArB;AACA;AAbR;;AAeAD,OAAC,GAAGA,CAAC,GAAG,UAAR;AACAA,OAAC,GAAIA,CAAC,IAAI,EAAN,GAAaA,CAAC,KAAM,KAAK,EAA7B;AACAA,OAAC,GAAGA,CAAC,GAAG,UAAR;AACA,WAAKJ,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA,UAAIjC,IAAI,GAAG,KAAKA,IAAL,GAAYqC,CAAvB;AACArC,UAAI,GAAIA,IAAI,IAAI,EAAT,GAAgBA,IAAI,KAAM,KAAK,EAAtC;AACAA,UAAI,GAAGA,IAAI,GAAG,CAAP,GAAW,UAAlB;AACA,WAAKA,IAAL,GAAYA,IAAZ;AACH;AACJ;AACJ,CAlCD;;AAoCAgB,IAAI,CAACpD,SAAL,CAAesD,MAAf,GAAwB,YAAY;AAChC,MAAIlB,IAAI,GAAG,KAAKA,IAAL,GAAa,KAAKiC,KAAL,GAAa,CAArC;AACAjC,MAAI,GAAGA,IAAI,GAAIA,IAAI,KAAK,EAAxB;AACAA,MAAI,GAAGA,IAAI,GAAG,UAAd;AACAA,MAAI,GAAGA,IAAI,GAAIA,IAAI,KAAK,EAAxB;AACAA,MAAI,GAAGA,IAAI,GAAG,UAAd;AACAA,MAAI,GAAGA,IAAI,GAAIA,IAAI,KAAK,EAAxB;AACA,SAAOA,IAAP;AACH,CARD;;AAUA,SAASuC,SAAT,GAAqB;AACjB,MAAIvC,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,MAAI,CAACiB,MAAL,CAAYF,KAAZ,CAAkBmB,SAAlB;AACA,SAAOlC,IAAI,CAACkB,MAAL,EAAP;AACH;;AAEDc,UAAU,CAACpE,SAAX,CAAqB+B,GAArB,GAA2B,UAAUlC,CAAV,EAAayB,CAAb,EAAgB;AACvC,MAAIsD,CAAC,GAAG,KAAK/E,CAAL,KAAW,IAAnB;AACA,SAAO+E,CAAC,KAAK,IAAN,GAAa,IAAb,GAAqBA,CAAC,CAACtD,CAAD,CAAD,IAAQ,IAApC;AACH,CAHD;;AAKA8C,UAAU,CAACpE,SAAX,CAAqB2C,GAArB,GAA2B,UAAU9C,CAAV,EAAayB,CAAb,EAAgBuD,CAAhB,EAAmB;AAC1C,MAAID,CAAC,GAAG,KAAK/E,CAAL,KAAW,IAAnB;;AACA,MAAI+E,CAAC,KAAK,IAAV,EAAgB;AACZA,KAAC,GAAG,EAAJ;AACA,SAAK/E,CAAL,IAAU+E,CAAV;AACH;;AACDA,GAAC,CAACtD,CAAD,CAAD,GAAOuD,CAAP;AACH,CAPD;;AAUA,SAASC,gBAAT,CAA0BC,CAA1B,EAA6BC,YAA7B,EAA2C;AACvCD,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,IAAV,EAAgB,KAAhB,CAAJ;AACAF,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,IAAV,EAAgB,KAAhB,CAAJ;AACAF,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,IAAV,EAAgB,KAAhB,CAAJ;;AACA,MAAID,YAAJ,EAAkB;AACdD,KAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,GAAV,EAAe,MAAf,CAAJ;AACH;;AACD,SAAOF,CAAP;AACH;;AAED,SAASG,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,SAAOA,GAAG,CAACF,OAAJ,CAAY,QAAZ,EAAsB,UAAUG,GAAV,EAAe;AACxC,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,CAArC;AACH,GAFM,CAAP;AAGH;;AAAA;;AAED,SAASC,WAAT,CAAqB3F,CAArB,EAAwByB,CAAxB,EACA;AACI,MAAI,CAACiD,KAAK,CAACC,OAAN,CAAc3E,CAAd,CAAD,IAAqB,CAAC0E,KAAK,CAACC,OAAN,CAAclD,CAAd,CAA1B,EACI,OAAO,KAAP;AACJ,MAAIzB,CAAC,IAAIyB,CAAT,EACI,OAAO,IAAP;AACJ,MAAIzB,CAAC,CAACsB,MAAF,IAAYG,CAAC,CAACH,MAAlB,EACI,OAAO,KAAP;;AACJ,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,CAAC,CAACsB,MAAtB,EAA8BH,CAAC,EAA/B,EAAmC;AAC/B,QAAInB,CAAC,CAACmB,CAAD,CAAD,IAAQM,CAAC,CAACN,CAAD,CAAb,EACI;AACJ,QAAI,CAACnB,CAAC,CAACmB,CAAD,CAAD,CAAKO,MAAL,CAAYD,CAAC,CAACN,CAAD,CAAb,CAAL,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH;;AAAA;AAEDyE,OAAO,CAACrC,IAAR,GAAeA,IAAf;AACAqC,OAAO,CAAChE,GAAR,GAAcA,GAAd;AACAgE,OAAO,CAACjC,GAAR,GAAcA,GAAd;AACAiC,OAAO,CAAChD,MAAR,GAAiBA,MAAjB;AACAgD,OAAO,CAACtB,OAAR,GAAkBA,OAAlB;AACAsB,OAAO,CAACrB,UAAR,GAAqBA,UAArB;AACAqB,OAAO,CAACd,SAAR,GAAoBA,SAApB;AACAc,OAAO,CAACX,gBAAR,GAA2BA,gBAA3B;AACAW,OAAO,CAAC7F,aAAR,GAAwBA,aAAxB;AACA6F,OAAO,CAACP,SAAR,GAAoBA,SAApB;AACAO,OAAO,CAACD,WAAR,GAAsBA,WAAtB,C;;;;;;AC7bA;;;;AAIA;AAEA;AACA;AACA;AAEA,SAASE,KAAT,GAAiB;AAChB,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,IAAL,GAAY,IAAZ,CAFgB,CAEE;;AAClB,OAAKC,OAAL,GAAe,IAAf,CAHgB,CAGK;;AACrB,OAAKC,KAAL,GAAa,IAAb,CAJgB,CAIG;;AACnB,OAAKC,IAAL,GAAY,IAAZ,CALgB,CAKE;;AAClB,OAAKC,UAAL,GAAkB,IAAlB,CANgB,CAMQ;;AACxB,OAAKC,IAAL,GAAY,IAAZ,CAPgB,CAOE;;AAClB,OAAKC,MAAL,GAAc,IAAd,CARgB,CAQI;;AACpB,OAAKC,KAAL,GAAa,IAAb,CATgB,CASG;;AACnB,SAAO,IAAP;AACA;;AAEDT,KAAK,CAACU,YAAN,GAAqB,CAArB,C,CAEA;AACA;;AACAV,KAAK,CAACW,OAAN,GAAgB,CAAC,CAAjB;AAEAX,KAAK,CAACY,mBAAN,GAA4B,CAA5B;AAEAZ,KAAK,CAACa,GAAN,GAAY,CAAC,CAAb,C,CAEA;AACA;AACA;;AAEAb,KAAK,CAACc,eAAN,GAAwB,CAAxB,C,CAEA;AACA;;AAEAd,KAAK,CAACe,cAAN,GAAuB,CAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA5E,MAAM,CAACC,cAAP,CAAsB4D,KAAK,CAAC1F,SAA5B,EAAuC,MAAvC,EAA+C;AAC9C+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKoE,KAAZ;AACA,GAH6C;AAI9CxD,KAAG,EAAG,aAAS+D,IAAT,EAAe;AACpB,SAAKP,KAAL,GAAaO,IAAb;AACA;AAN6C,CAA/C;;AASAhB,KAAK,CAAC1F,SAAN,CAAgB2G,cAAhB,GAAiC,YAAW;AAC3C,SAAO,KAAKhB,MAAL,CAAY,CAAZ,CAAP;AACA,CAFD;;AAIAD,KAAK,CAAC1F,SAAN,CAAgB4G,cAAhB,GAAiC,YAAW;AAC3C,SAAO,KAAKjB,MAAL,CAAY,CAAZ,CAAP;AACA,CAFD;;AAIA,SAASkB,WAAT,CAAqBlB,MAArB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyD;AACxDL,OAAK,CAACoB,IAAN,CAAW,IAAX;AACA,OAAKnB,MAAL,GAAcA,MAAM,KAAKoB,SAAX,GAAuBpB,MAAvB,GAAgCkB,WAAW,CAACG,YAA1D;AACA,OAAKpB,IAAL,GAAYA,IAAI,KAAKmB,SAAT,GAAqBnB,IAArB,GAA4B,IAAxC;AACA,OAAKC,OAAL,GAAeA,OAAO,KAAKkB,SAAZ,GAAwBlB,OAAxB,GAAkCH,KAAK,CAACc,eAAvD;AACA,OAAKV,KAAL,GAAaA,KAAK,KAAKiB,SAAV,GAAsBjB,KAAtB,GAA8B,CAAC,CAA5C;AACA,OAAKC,IAAL,GAAYA,IAAI,KAAKgB,SAAT,GAAqBhB,IAArB,GAA4B,CAAC,CAAzC;AACA,OAAKC,UAAL,GAAkB,CAAC,CAAnB;;AACA,MAAI,KAAKL,MAAL,CAAY,CAAZ,MAAmB,IAAvB,EAA6B;AAC5B,SAAKM,IAAL,GAAYN,MAAM,CAAC,CAAD,CAAN,CAAUM,IAAtB;AACA,SAAKC,MAAL,GAAcP,MAAM,CAAC,CAAD,CAAN,CAAUO,MAAxB;AACA,GAHD,MAGO;AACN,SAAKA,MAAL,GAAc,CAAC,CAAf;AACA;;AACD,SAAO,IAAP;AACA;;AAEDW,WAAW,CAAC7G,SAAZ,GAAwB6B,MAAM,CAACoF,MAAP,CAAcvB,KAAK,CAAC1F,SAApB,CAAxB;AACA6G,WAAW,CAAC7G,SAAZ,CAAsBkH,WAAtB,GAAoCL,WAApC,C,CAEA;AACA;;AACAA,WAAW,CAACG,YAAZ,GAA2B,CAAE,IAAF,EAAQ,IAAR,CAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,WAAW,CAAC7G,SAAZ,CAAsBmH,KAAtB,GAA8B,YAAW;AACxC,MAAIC,CAAC,GAAG,IAAIP,WAAJ,CAAgB,KAAKlB,MAArB,EAA6B,KAAKC,IAAlC,EAAwC,KAAKC,OAA7C,EAAsD,KAAKC,KAA3D,EACN,KAAKC,IADC,CAAR;AAEAqB,GAAC,CAACpB,UAAF,GAAe,KAAKA,UAApB;AACAoB,GAAC,CAACnB,IAAF,GAAS,KAAKA,IAAd;AACAmB,GAAC,CAAClB,MAAF,GAAW,KAAKA,MAAhB;AACAkB,GAAC,CAACV,IAAF,GAAS,KAAKA,IAAd;AACA,SAAOU,CAAP;AACA,CARD;;AAUAvF,MAAM,CAACC,cAAP,CAAsB+E,WAAW,CAAC7G,SAAlC,EAA6C,MAA7C,EAAqD;AACpD+B,KAAG,EAAG,eAAW;AAChB,QAAI,KAAKoE,KAAL,KAAe,IAAnB,EAAyB;AACxB,aAAO,KAAKA,KAAZ;AACA;;AACD,QAAIkB,KAAK,GAAG,KAAKT,cAAL,EAAZ;;AACA,QAAIS,KAAK,KAAK,IAAd,EAAoB;AACnB,aAAO,IAAP;AACA;;AACD,QAAIC,CAAC,GAAGD,KAAK,CAACE,IAAd;;AACA,QAAI,KAAKzB,KAAL,GAAawB,CAAb,IAAkB,KAAKvB,IAAL,GAAYuB,CAAlC,EAAqC;AACpC,aAAOD,KAAK,CAACG,OAAN,CAAc,KAAK1B,KAAnB,EAA0B,KAAKC,IAA/B,CAAP;AACA,KAFD,MAEO;AACN,aAAO,OAAP;AACA;AACD,GAfmD;AAgBpDpD,KAAG,EAAG,aAAS+D,IAAT,EAAe;AACpB,SAAKP,KAAL,GAAaO,IAAb;AACA;AAlBmD,CAArD;;AAqBAG,WAAW,CAAC7G,SAAZ,CAAsBkB,QAAtB,GAAiC,YAAW;AAC3C,MAAIkE,GAAG,GAAG,KAAKsB,IAAf;;AACA,MAAItB,GAAG,KAAK,IAAZ,EAAkB;AACjBA,OAAG,GAAGA,GAAG,CAACH,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,EAA0BA,OAA1B,CAAkC,KAAlC,EAAyC,KAAzC,EAAgDA,OAAhD,CAAwD,KAAxD,EAA+D,KAA/D,CAAN;AACA,GAFD,MAEO;AACNG,OAAG,GAAG,WAAN;AACA;;AACD,SAAO,OAAO,KAAKY,UAAZ,GAAyB,GAAzB,GAA+B,KAAKF,KAApC,GAA4C,GAA5C,GAAkD,KAAKC,IAAvD,GAA8D,IAA9D,GACLX,GADK,GACC,KADD,GACS,KAAKQ,IADd,GACqB,GADrB,IAEJ,KAAKC,OAAL,GAAe,CAAf,GAAmB,cAAc,KAAKA,OAAtC,GAAgD,EAF5C,IAEkD,GAFlD,GAGL,KAAKI,IAHA,GAGO,GAHP,GAGa,KAAKC,MAHlB,GAG2B,GAHlC;AAIA,CAXD;;AAaAT,OAAO,CAACC,KAAR,GAAgBA,KAAhB;AACAD,OAAO,CAACoB,WAAR,GAAsBA,WAAtB,C;;;;;;ACtJA;;;;;AAKA;AAEA,IAAInB,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAmB/B,KAA/B;AAEA;;;AACA,SAASgC,QAAT,CAAkB5B,KAAlB,EAAyBC,IAAzB,EAA+B;AAC9B,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,SAAO,IAAP;AACA;;AAED2B,QAAQ,CAAC1H,SAAT,CAAmBuC,QAAnB,GAA8B,UAASoF,IAAT,EAAe;AAC5C,SAAOA,IAAI,IAAI,KAAK7B,KAAb,IAAsB6B,IAAI,GAAG,KAAK5B,IAAzC;AACA,CAFD;;AAIA2B,QAAQ,CAAC1H,SAAT,CAAmBkB,QAAnB,GAA8B,YAAW;AACxC,MAAG,KAAK4E,KAAL,KAAa,KAAKC,IAAL,GAAU,CAA1B,EAA6B;AAC5B,WAAO,KAAKD,KAAL,CAAW5E,QAAX,EAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAK4E,KAAL,CAAW5E,QAAX,KAAwB,IAAxB,GAA+B,CAAC,KAAK6E,IAAL,GAAU,CAAX,EAAc7E,QAAd,EAAtC;AACA;AACD,CAND;;AASAW,MAAM,CAACC,cAAP,CAAsB4F,QAAQ,CAAC1H,SAA/B,EAA0C,QAA1C,EAAoD;AACnD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKgE,IAAL,GAAY,KAAKD,KAAxB;AACA;AAHkD,CAApD;;AAMA,SAAS8B,WAAT,GAAuB;AACtB,OAAKC,SAAL,GAAiB,IAAjB;AACA,OAAKC,QAAL,GAAgB,KAAhB;AACA;;AAEDF,WAAW,CAAC5H,SAAZ,CAAsB+H,KAAtB,GAA8B,UAASC,CAAT,EAAY;AACzC,MAAI,KAAKH,SAAL,KAAmB,IAAnB,IAA2B,KAAKA,SAAL,CAAe1G,MAAf,KAAwB,CAAvD,EAA0D;AACzD,WAAOuE,KAAK,CAACU,YAAb;AACA,GAFD,MAEO;AACN,WAAO,KAAKyB,SAAL,CAAe,CAAf,EAAkB/B,KAAzB;AACA;AACD,CAND;;AAQA8B,WAAW,CAAC5H,SAAZ,CAAsBiI,MAAtB,GAA+B,UAASD,CAAT,EAAY;AAC1C,OAAKE,WAAL,CAAiB,IAAIR,QAAJ,CAAaM,CAAb,EAAgBA,CAAC,GAAG,CAApB,CAAjB;AACA,CAFD;;AAIAJ,WAAW,CAAC5H,SAAZ,CAAsBmI,QAAtB,GAAiC,UAASnG,CAAT,EAAYoG,CAAZ,EAAe;AAC/C,OAAKF,WAAL,CAAiB,IAAIR,QAAJ,CAAa1F,CAAb,EAAgBoG,CAAC,GAAG,CAApB,CAAjB;AACA,CAFD;;AAIAR,WAAW,CAAC5H,SAAZ,CAAsBkI,WAAtB,GAAoC,UAASF,CAAT,EAAY;AAC/C,MAAI,KAAKH,SAAL,KAAmB,IAAvB,EAA6B;AAC5B,SAAKA,SAAL,GAAiB,EAAjB;AACA,SAAKA,SAAL,CAAevF,IAAf,CAAoB0F,CAApB;AACA,GAHD,MAGO;AACN;AACA,SAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,SAAL,CAAe1G,MAAnC,EAA2CsD,CAAC,EAA5C,EAAgD;AAC/C,UAAIzD,CAAC,GAAG,KAAK6G,SAAL,CAAepD,CAAf,CAAR,CAD+C,CAE/C;;AACA,UAAIuD,CAAC,CAACjC,IAAF,GAAS/E,CAAC,CAAC8E,KAAf,EAAsB;AACrB,aAAK+B,SAAL,CAAeQ,MAAf,CAAsB5D,CAAtB,EAAyB,CAAzB,EAA4BuD,CAA5B;AACA;AACA,OAHD,CAIA;AAJA,WAKK,IAAIA,CAAC,CAACjC,IAAF,KAAW/E,CAAC,CAAC8E,KAAjB,EAAwB;AAC5B,eAAK+B,SAAL,CAAepD,CAAf,EAAkBqB,KAAlB,GAA0BkC,CAAC,CAAClC,KAA5B;AACA;AACA,SAHI,CAIL;AAJK,aAKA,IAAIkC,CAAC,CAAClC,KAAF,IAAW9E,CAAC,CAAC+E,IAAjB,EAAuB;AAC3B,iBAAK8B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAaxH,IAAI,CAACgD,GAAL,CAASlC,CAAC,CAAC8E,KAAX,EAAkBkC,CAAC,CAAClC,KAApB,CAAb,EAAyC5F,IAAI,CAACoI,GAAL,CAAStH,CAAC,CAAC+E,IAAX,EAAiBiC,CAAC,CAACjC,IAAnB,CAAzC,CAApB;AACA,iBAAKwC,MAAL,CAAY9D,CAAZ;AACA;AACA;AACD,KApBK,CAqBN;;;AACA,SAAKoD,SAAL,CAAevF,IAAf,CAAoB0F,CAApB;AACA;AACD,CA5BD;;AA8BAJ,WAAW,CAAC5H,SAAZ,CAAsBwI,MAAtB,GAA+B,UAASjF,KAAT,EAAgB;AAC9C,MAAIA,KAAK,CAACsE,SAAN,KAAoB,IAAxB,EAA8B;AAC7B,SAAK,IAAIpD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACsE,SAAN,CAAgB1G,MAApC,EAA4CsD,CAAC,EAA7C,EAAiD;AAChD,UAAIzD,CAAC,GAAGuC,KAAK,CAACsE,SAAN,CAAgBpD,CAAhB,CAAR;AACA,WAAKyD,WAAL,CAAiB,IAAIR,QAAJ,CAAa1G,CAAC,CAAC8E,KAAf,EAAsB9E,CAAC,CAAC+E,IAAxB,CAAjB;AACA;AACD;;AACD,SAAO,IAAP;AACA,CARD;;AAUA6B,WAAW,CAAC5H,SAAZ,CAAsBuI,MAAtB,GAA+B,UAAS9D,CAAT,EAAY;AAC1C;AACA,MAAIA,CAAC,GAAG,KAAKgE,eAAL,GAAuB,CAA/B,EAAkC;AACjC,QAAIzG,CAAC,GAAG,KAAK6F,SAAL,CAAepD,CAAf,CAAR;AACA,QAAIiE,CAAC,GAAG,KAAKb,SAAL,CAAepD,CAAC,GAAG,CAAnB,CAAR,CAFiC,CAGjC;;AACA,QAAIzC,CAAC,CAAC+D,IAAF,IAAU2C,CAAC,CAAC3C,IAAhB,EAAsB;AACrB,WAAK8B,SAAL,CAAec,GAAf,CAAmBlE,CAAC,GAAG,CAAvB;AACA,WAAK8D,MAAL,CAAY9D,CAAZ;AACA,KAHD,MAGO,IAAIzC,CAAC,CAAC+D,IAAF,IAAU2C,CAAC,CAAC5C,KAAhB,EAAuB;AAC7B,WAAK+B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAa1F,CAAC,CAAC8D,KAAf,EAAsB4C,CAAC,CAAC3C,IAAxB,CAApB;AACA,WAAK8B,SAAL,CAAec,GAAf,CAAmBlE,CAAC,GAAG,CAAvB;AACA;AACD;AACD,CAdD;;AAgBAmD,WAAW,CAAC5H,SAAZ,CAAsB4I,UAAtB,GAAmC,UAAS9C,KAAT,EAAgBC,IAAhB,EAAsB;AACrD,MAAI8C,MAAM,GAAG,IAAIjB,WAAJ,EAAb;AACAiB,QAAM,CAACX,WAAP,CAAmB,IAAIR,QAAJ,CAAa5B,KAAb,EAAmBC,IAAI,GAAC,CAAxB,CAAnB;;AACA,OAAI,IAAI/E,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAK6G,SAAL,CAAe1G,MAA9B,EAAsCH,CAAC,EAAvC,EAA2C;AACvC6H,UAAM,CAACC,WAAP,CAAmB,KAAKjB,SAAL,CAAe7G,CAAf,CAAnB;AACH;;AACD,SAAO6H,MAAP;AACH,CAPD;;AASAjB,WAAW,CAAC5H,SAAZ,CAAsBuC,QAAtB,GAAiC,UAASoF,IAAT,EAAe;AAC/C,MAAI,KAAKE,SAAL,KAAmB,IAAvB,EAA6B;AAC5B,WAAO,KAAP;AACA,GAFD,MAEO;AACN,SAAK,IAAIpD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,SAAL,CAAe1G,MAAnC,EAA2CsD,CAAC,EAA5C,EAAgD;AAC/C,UAAG,KAAKoD,SAAL,CAAepD,CAAf,EAAkBlC,QAAlB,CAA2BoF,IAA3B,CAAH,EAAqC;AACpC,eAAO,IAAP;AACA;AACD;;AACD,WAAO,KAAP;AACA;AACD,CAXD;;AAaA9F,MAAM,CAACC,cAAP,CAAsB8F,WAAW,CAAC5H,SAAlC,EAA6C,QAA7C,EAAuD;AACtD+B,KAAG,EAAG,eAAW;AAChB,QAAIgH,GAAG,GAAG,CAAV;AACA,SAAKlB,SAAL,CAAe/E,GAAf,CAAmB,UAAS9B,CAAT,EAAY;AAAC+H,SAAG,IAAI/H,CAAC,CAACG,MAAT;AAAiB,KAAjD;AACA,WAAO4H,GAAP;AACA;AALqD,CAAvD;;AAQAnB,WAAW,CAAC5H,SAAZ,CAAsB8I,WAAtB,GAAoC,UAASd,CAAT,EAAY;AAC5C,MAAGA,CAAC,CAAClC,KAAF,KAAUkC,CAAC,CAACjC,IAAF,GAAO,CAApB,EAAuB;AACnB,SAAKiD,SAAL,CAAehB,CAAC,CAAClC,KAAjB;AACH,GAFD,MAEO,IAAI,KAAK+B,SAAL,KAAiB,IAArB,EAA2B;AAC9B,QAAIpD,CAAC,GAAG,CAAR;;AACA,SAAI,IAAI6C,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKO,SAAL,CAAe1G,MAA9B,EAAsCmG,CAAC,EAAvC,EAA2C;AACvC,UAAItG,CAAC,GAAG,KAAK6G,SAAL,CAAepD,CAAf,CAAR,CADuC,CAEvC;;AACA,UAAIuD,CAAC,CAACjC,IAAF,IAAQ/E,CAAC,CAAC8E,KAAd,EAAqB;AACjB;AACH,OAFD,CAGA;AAHA,WAIK,IAAGkC,CAAC,CAAClC,KAAF,GAAQ9E,CAAC,CAAC8E,KAAV,IAAmBkC,CAAC,CAACjC,IAAF,GAAO/E,CAAC,CAAC+E,IAA/B,EAAqC;AACtC,eAAK8B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAa1G,CAAC,CAAC8E,KAAf,EAAsBkC,CAAC,CAAClC,KAAxB,CAApB;AACA,cAAImD,CAAC,GAAG,IAAIvB,QAAJ,CAAaM,CAAC,CAACjC,IAAf,EAAqB/E,CAAC,CAAC+E,IAAvB,CAAR;AACA,eAAK8B,SAAL,CAAeQ,MAAf,CAAsB5D,CAAtB,EAAyB,CAAzB,EAA4BwE,CAA5B;AACA;AACH,SALI,CAML;AANK,aAOA,IAAGjB,CAAC,CAAClC,KAAF,IAAS9E,CAAC,CAAC8E,KAAX,IAAoBkC,CAAC,CAACjC,IAAF,IAAQ/E,CAAC,CAAC+E,IAAjC,EAAuC;AACxC,iBAAK8B,SAAL,CAAeQ,MAAf,CAAsB5D,CAAtB,EAAyB,CAAzB;AACAA,aAAC,GAAGA,CAAC,GAAG,CAAR,CAFwC,CAE7B;AACd,WAHI,CAIL;AAJK,eAKA,IAAGuD,CAAC,CAAClC,KAAF,GAAQ9E,CAAC,CAAC+E,IAAb,EAAmB;AACpB,mBAAK8B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAa1G,CAAC,CAAC8E,KAAf,EAAsBkC,CAAC,CAAClC,KAAxB,CAApB;AACH,aAFI,CAGL;AAHK,iBAIA,IAAGkC,CAAC,CAACjC,IAAF,GAAO/E,CAAC,CAAC+E,IAAZ,EAAkB;AACnB,qBAAK8B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAaM,CAAC,CAACjC,IAAf,EAAqB/E,CAAC,CAAC+E,IAAvB,CAApB;AACH;;AACDtB,OAAC,IAAI,CAAL;AACH;AACJ;AACJ,CAlCD;;AAoCAmD,WAAW,CAAC5H,SAAZ,CAAsBgJ,SAAtB,GAAkC,UAAShB,CAAT,EAAY;AAC7C,MAAI,KAAKH,SAAL,KAAmB,IAAvB,EAA6B;AAC5B,SAAK,IAAIpD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,SAAL,CAAe1G,MAAnC,EAA2CsD,CAAC,EAA5C,EAAgD;AAC/C,UAAIzD,CAAC,GAAG,KAAK6G,SAAL,CAAepD,CAAf,CAAR,CAD+C,CAE/C;;AACA,UAAIuD,CAAC,GAAGhH,CAAC,CAAC8E,KAAV,EAAiB;AAChB;AACA,OAFD,CAGA;AAHA,WAIK,IAAIkC,CAAC,KAAKhH,CAAC,CAAC8E,KAAR,IAAiBkC,CAAC,KAAKhH,CAAC,CAAC+E,IAAF,GAAS,CAApC,EAAuC;AAC3C,eAAK8B,SAAL,CAAeQ,MAAf,CAAsB5D,CAAtB,EAAyB,CAAzB;AACA;AACA,SAHI,CAIL;AAJK,aAKA,IAAIuD,CAAC,KAAKhH,CAAC,CAAC8E,KAAZ,EAAmB;AACvB,iBAAK+B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAa1G,CAAC,CAAC8E,KAAF,GAAU,CAAvB,EAA0B9E,CAAC,CAAC+E,IAA5B,CAApB;AACA;AACA,WAHI,CAIL;AAJK,eAKA,IAAIiC,CAAC,KAAKhH,CAAC,CAAC+E,IAAF,GAAS,CAAnB,EAAsB;AAC1B,mBAAK8B,SAAL,CAAepD,CAAf,IAAoB,IAAIiD,QAAJ,CAAa1G,CAAC,CAAC8E,KAAf,EAAsB9E,CAAC,CAAC+E,IAAF,GAAS,CAA/B,CAApB;AACA;AACA,aAHI,CAIL;AAJK,iBAKA,IAAIiC,CAAC,GAAGhH,CAAC,CAAC+E,IAAF,GAAS,CAAjB,EAAoB;AACxB,oBAAIkD,CAAC,GAAG,IAAIvB,QAAJ,CAAa1G,CAAC,CAAC8E,KAAf,EAAsBkC,CAAtB,CAAR;AACAhH,iBAAC,CAAC8E,KAAF,GAAUkC,CAAC,GAAG,CAAd;AACA,qBAAKH,SAAL,CAAeQ,MAAf,CAAsB5D,CAAtB,EAAyB,CAAzB,EAA4BwE,CAA5B;AACA;AACA;AACD;AACD;AACD,CAhCD;;AAkCArB,WAAW,CAAC5H,SAAZ,CAAsBkB,QAAtB,GAAiC,UAASgI,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,EAAoD;AACpFF,cAAY,GAAGA,YAAY,IAAI,IAA/B;AACAC,eAAa,GAAGA,aAAa,IAAI,IAAjC;AACAC,cAAY,GAAGA,YAAY,IAAI,KAA/B;;AACA,MAAI,KAAKvB,SAAL,KAAmB,IAAvB,EAA6B;AAC5B,WAAO,IAAP;AACA,GAFD,MAEO,IAAGqB,YAAY,KAAG,IAAf,IAAuBC,aAAa,KAAG,IAA1C,EAAgD;AACtD,WAAO,KAAKE,aAAL,CAAmBH,YAAnB,EAAiCC,aAAjC,CAAP;AACA,GAFM,MAEA,IAAGC,YAAH,EAAiB;AACvB,WAAO,KAAKE,YAAL,EAAP;AACA,GAFM,MAEA;AACN,WAAO,KAAKC,aAAL,EAAP;AACA;AACD,CAbD;;AAeA3B,WAAW,CAAC5H,SAAZ,CAAsBsJ,YAAtB,GAAqC,YAAW;AAC/C,MAAIE,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6G,SAAL,CAAe1G,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC/C,QAAIgH,CAAC,GAAG,KAAKH,SAAL,CAAe7G,CAAf,CAAR;;AACA,QAAGgH,CAAC,CAACjC,IAAF,KAASiC,CAAC,CAAClC,KAAF,GAAQ,CAApB,EAAuB;AACtB,UAAKkC,CAAC,CAAClC,KAAF,KAAUJ,KAAK,CAACa,GAArB,EAA2B;AAC1BiD,aAAK,CAAClH,IAAN,CAAW,OAAX;AACA,OAFD,MAEO;AACNkH,aAAK,CAAClH,IAAN,CAAW,MAAMvC,MAAM,CAAC0J,YAAP,CAAoBzB,CAAC,CAAClC,KAAtB,CAAN,GAAqC,GAAhD;AACA;AACD,KAND,MAMO;AACN0D,WAAK,CAAClH,IAAN,CAAW,MAAMvC,MAAM,CAAC0J,YAAP,CAAoBzB,CAAC,CAAClC,KAAtB,CAAN,GAAqC,MAArC,GAA8C/F,MAAM,CAAC0J,YAAP,CAAoBzB,CAAC,CAACjC,IAAF,GAAO,CAA3B,CAA9C,GAA8E,GAAzF;AACA;AACD;;AACD,MAAIyD,KAAK,CAACrI,MAAN,GAAe,CAAnB,EAAsB;AACrB,WAAO,MAAMqI,KAAK,CAAC1J,IAAN,CAAW,IAAX,CAAN,GAAyB,GAAhC;AACA,GAFD,MAEO;AACN,WAAO0J,KAAK,CAAC,CAAD,CAAZ;AACA;AACD,CAnBD;;AAsBA5B,WAAW,CAAC5H,SAAZ,CAAsBuJ,aAAtB,GAAsC,YAAW;AAChD,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6G,SAAL,CAAe1G,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC/C,QAAIgH,CAAC,GAAG,KAAKH,SAAL,CAAe7G,CAAf,CAAR;;AACA,QAAGgH,CAAC,CAACjC,IAAF,KAASiC,CAAC,CAAClC,KAAF,GAAQ,CAApB,EAAuB;AACtB,UAAKkC,CAAC,CAAClC,KAAF,KAAUJ,KAAK,CAACa,GAArB,EAA2B;AAC1BiD,aAAK,CAAClH,IAAN,CAAW,OAAX;AACA,OAFD,MAEO;AACNkH,aAAK,CAAClH,IAAN,CAAW0F,CAAC,CAAClC,KAAF,CAAQ5E,QAAR,EAAX;AACA;AACD,KAND,MAMO;AACNsI,WAAK,CAAClH,IAAN,CAAW0F,CAAC,CAAClC,KAAF,CAAQ5E,QAAR,KAAqB,IAArB,GAA4B,CAAC8G,CAAC,CAACjC,IAAF,GAAO,CAAR,EAAW7E,QAAX,EAAvC;AACA;AACD;;AACD,MAAIsI,KAAK,CAACrI,MAAN,GAAe,CAAnB,EAAsB;AACrB,WAAO,MAAMqI,KAAK,CAAC1J,IAAN,CAAW,IAAX,CAAN,GAAyB,GAAhC;AACA,GAFD,MAEO;AACN,WAAO0J,KAAK,CAAC,CAAD,CAAZ;AACA;AACD,CAnBD;;AAsBA5B,WAAW,CAAC5H,SAAZ,CAAsBqJ,aAAtB,GAAsC,UAASH,YAAT,EAAuBC,aAAvB,EAAsC;AAC3E,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6G,SAAL,CAAe1G,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC/C,QAAIgH,CAAC,GAAG,KAAKH,SAAL,CAAe7G,CAAf,CAAR;;AACA,SAAK,IAAI0I,CAAC,GAAG1B,CAAC,CAAClC,KAAf,EAAsB4D,CAAC,GAAG1B,CAAC,CAACjC,IAA5B,EAAkC2D,CAAC,EAAnC,EAAuC;AACtCF,WAAK,CAAClH,IAAN,CAAW,KAAKqH,WAAL,CAAiBT,YAAjB,EAA+BC,aAA/B,EAA8CO,CAA9C,CAAX;AACA;AACD;;AACD,MAAIF,KAAK,CAACrI,MAAN,GAAe,CAAnB,EAAsB;AACrB,WAAO,MAAMqI,KAAK,CAAC1J,IAAN,CAAW,IAAX,CAAN,GAAyB,GAAhC;AACA,GAFD,MAEO;AACN,WAAO0J,KAAK,CAAC,CAAD,CAAZ;AACA;AACD,CAbD;;AAeA5B,WAAW,CAAC5H,SAAZ,CAAsB2J,WAAtB,GAAoC,UAAST,YAAT,EAAuBC,aAAvB,EAAsCtJ,CAAtC,EAAyC;AAC5E,MAAIA,CAAC,KAAK6F,KAAK,CAACa,GAAhB,EAAqB;AACpB,WAAO,OAAP;AACA,GAFD,MAEO,IAAI1G,CAAC,KAAK6F,KAAK,CAACW,OAAhB,EAAyB;AAC/B,WAAO,WAAP;AACA,GAFM,MAEA;AACN,WAAO6C,YAAY,CAACrJ,CAAD,CAAZ,IAAmBsJ,aAAa,CAACtJ,CAAD,CAAvC;AACA;AACD,CARD;;AAUA4F,OAAO,CAACiC,QAAR,GAAmBA,QAAnB;AACAjC,OAAO,CAACmC,WAAR,GAAsBA,WAAtB,C;;;;;;ACzSA;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIgC,uBAAuB,GAAG,CAA9B;;AAEA,SAASC,QAAT,GAAoB;AAChB;AACA,OAAKC,GAAL,GAAW,IAAX;AACA,OAAKC,WAAL,GAAmBF,QAAQ,CAACG,oBAA5B;AACA,OAAKC,SAAL,GAAiB,IAAjB;AACA,OAAKC,SAAL,GAAiB,CAAjB,CALgB,CAKI;;AACpB,OAAKC,sBAAL,GAA8B,KAA9B,CANgB,CAOhB;;AACA,OAAKC,WAAL,GAAmB,EAAnB,CARgB,CAShB;;AACA,OAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAO,IAAP;AACH,C,CAED;;;AACAR,QAAQ,CAACzD,YAAT,GAAwB,CAAxB;AACAyD,QAAQ,CAACS,KAAT,GAAiB,CAAjB;AACAT,QAAQ,CAACU,UAAT,GAAsB,CAAtB;AACAV,QAAQ,CAACW,WAAT,GAAuB,CAAvB;AACAX,QAAQ,CAACY,gBAAT,GAA4B,CAA5B;AACAZ,QAAQ,CAACa,gBAAT,GAA4B,CAA5B;AACAb,QAAQ,CAACc,WAAT,GAAuB,CAAvB;AACAd,QAAQ,CAACe,SAAT,GAAqB,CAArB;AACAf,QAAQ,CAACgB,SAAT,GAAqB,CAArB;AACAhB,QAAQ,CAACiB,cAAT,GAA0B,CAA1B;AACAjB,QAAQ,CAACkB,eAAT,GAA2B,EAA3B;AACAlB,QAAQ,CAACmB,cAAT,GAA0B,EAA1B;AACAnB,QAAQ,CAACoB,QAAT,GAAoB,EAApB;AAEApB,QAAQ,CAACqB,kBAAT,GAA8B,CAClB,SADkB,EAElB,OAFkB,EAGlB,YAHkB,EAIlB,aAJkB,EAKlB,kBALkB,EAMlB,kBANkB,EAOlB,aAPkB,EAQlB,WARkB,EASlB,WATkB,EAUlB,gBAVkB,EAWlB,iBAXkB,EAYlB,gBAZkB,EAalB,UAbkB,CAA9B;AAeArB,QAAQ,CAACG,oBAAT,GAAgC,CAAC,CAAjC;;AAEAH,QAAQ,CAAC7J,SAAT,CAAmBkB,QAAnB,GAA8B,YAAW;AACxC,SAAO,KAAK6I,WAAZ;AACA,CAFD;;AAIAF,QAAQ,CAAC7J,SAAT,CAAmBuB,MAAnB,GAA4B,UAASgC,KAAT,EAAgB;AACxC,MAAIA,KAAK,YAAYsG,QAArB,EAA+B;AAC3B,WAAO,KAAKE,WAAL,KAAmBxG,KAAK,CAACwG,WAAhC;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ,CAND;;AAQAF,QAAQ,CAAC7J,SAAT,CAAmBmL,oBAAnB,GAA0C,YAAW;AACjD,SAAO,KAAP;AACH,CAFD;;AAKAtB,QAAQ,CAAC7J,SAAT,CAAmBoL,aAAnB,GAAmC,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACzD,MAAGA,KAAK,KAAGvE,SAAX,EAAsB;AACrBuE,SAAK,GAAG,CAAC,CAAT;AACA;;AACE,MAAI,KAAKlB,WAAL,CAAiBjJ,MAAjB,KAA0B,CAA9B,EAAiC;AAC7B,SAAKgJ,sBAAL,GAA8BkB,KAAK,CAACE,SAApC;AACH,GAFD,MAEO,IAAG,KAAKpB,sBAAL,KAAgCkB,KAAK,CAACE,SAAzC,EAAoD;AACvD,SAAKpB,sBAAL,GAA8B,KAA9B;AACH;;AACD,MAAImB,KAAK,KAAG,CAAC,CAAb,EAAgB;AACZ,SAAKlB,WAAL,CAAiB9H,IAAjB,CAAsB+I,KAAtB;AACH,GAFD,MAEO;AACH,SAAKjB,WAAL,CAAiB/B,MAAjB,CAAwBiD,KAAxB,EAA+B,CAA/B,EAAkCD,KAAlC;AACH;AACJ,CAdD;;AAgBA,SAASG,UAAT,GAAsB;AACrB3B,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACG,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACS,KAA1B;AACA,SAAO,IAAP;AACH;;AAEDkB,UAAU,CAACxL,SAAX,GAAuB6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAAvB;AACAwL,UAAU,CAACxL,SAAX,CAAqBkH,WAArB,GAAmCsE,UAAnC;;AAGA,SAASC,aAAT,GAAyB;AACxB5B,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACG,OAAK4E,QAAL,GAAgB,CAAC,CAAjB;AACA,OAAKC,SAAL,GAAiB,KAAjB;AACA,SAAO,IAAP;AACH;;AAEDF,aAAa,CAACzL,SAAd,GAA0B6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAA1B;AACAyL,aAAa,CAACzL,SAAd,CAAwBkH,WAAxB,GAAsCuE,aAAtC,C,CAGA;;AACA,SAASG,eAAT,GAA2B;AAC1BH,eAAa,CAAC3E,IAAd,CAAmB,IAAnB;AACA,OAAK+E,QAAL,GAAgB,IAAhB;AACA,SAAO,IAAP;AACA;;AAEDD,eAAe,CAAC5L,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAcwE,aAAa,CAACzL,SAA5B,CAA5B;AACA4L,eAAe,CAAC5L,SAAhB,CAA0BkH,WAA1B,GAAwC0E,eAAxC;;AAGA,SAASE,oBAAT,GAAgC;AAC/BF,iBAAe,CAAC9E,IAAhB,CAAqB,IAArB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACW,WAA1B;AACA,SAAO,IAAP;AACA;;AAEDsB,oBAAoB,CAAC9L,SAArB,GAAiC6B,MAAM,CAACoF,MAAP,CAAc2E,eAAe,CAAC5L,SAA9B,CAAjC;AACA8L,oBAAoB,CAAC9L,SAArB,CAA+BkH,WAA/B,GAA6C4E,oBAA7C,C,CAGA;;AACA,SAASC,aAAT,GAAyB;AACxBlC,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACgB,SAA1B;AACG,OAAKmB,UAAL,GAAkB,IAAlB;AACA,SAAO,IAAP;AACH;;AAEDD,aAAa,CAAC/L,SAAd,GAA0B6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAA1B;AACA+L,aAAa,CAAC/L,SAAd,CAAwBkH,WAAxB,GAAsC6E,aAAtC,C,CAGA;AACA;AACA;AACA;AACA;;AACA,SAASE,aAAT,GAAyB;AACxBpC,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACG,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACe,SAA1B;AACA,SAAO,IAAP;AACH;;AAEDqB,aAAa,CAACjM,SAAd,GAA0B6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAA1B;AACAiM,aAAa,CAACjM,SAAd,CAAwBkH,WAAxB,GAAsC+E,aAAtC;;AAEA,SAASC,cAAT,GAA0B;AACzBrC,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACU,UAA1B;AACA,OAAK4B,SAAL,GAAiB,IAAjB;AACA,OAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAO,IAAP;AACA;;AAEDF,cAAc,CAAClM,SAAf,GAA2B6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAA3B;AACAkM,cAAc,CAAClM,SAAf,CAAyBkH,WAAzB,GAAuCgF,cAAvC,C,CAEA;AACA;AACA;;AACA,SAASG,iBAAT,GAA6B;AAC5BZ,eAAa,CAAC3E,IAAd,CAAmB,IAAnB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACmB,cAA1B;AACA,SAAO,IAAP;AACA;;AAEDqB,iBAAiB,CAACrM,SAAlB,GAA8B6B,MAAM,CAACoF,MAAP,CAAcwE,aAAa,CAACzL,SAA5B,CAA9B;AACAqM,iBAAiB,CAACrM,SAAlB,CAA4BkH,WAA5B,GAA0CmF,iBAA1C,C,CAGA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,GAA+B;AAC9BV,iBAAe,CAAC9E,IAAhB,CAAqB,IAArB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACY,gBAA1B;AACG,OAAK8B,aAAL,GAAqB,IAArB;AACA,SAAO,IAAP;AACH;;AAEDD,mBAAmB,CAACtM,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAc2E,eAAe,CAAC5L,SAA9B,CAAhC;AACAsM,mBAAmB,CAACtM,SAApB,CAA8BkH,WAA9B,GAA4CoF,mBAA5C,C,CAEA;;AACA,SAASE,mBAAT,GAA+B;AAC9BZ,iBAAe,CAAC9E,IAAhB,CAAqB,IAArB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACa,gBAA1B;AACA,SAAO,IAAP;AACA;;AAED8B,mBAAmB,CAACxM,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAc2E,eAAe,CAAC5L,SAA9B,CAAhC;AACAwM,mBAAmB,CAACxM,SAApB,CAA8BkH,WAA9B,GAA4CsF,mBAA5C;;AAGA,SAASC,iBAAT,GAA6B;AAC5B5C,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACiB,cAA1B;AACA,SAAO,IAAP;AACA;;AAED2B,iBAAiB,CAACzM,SAAlB,GAA8B6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAA9B;AACAyM,iBAAiB,CAACzM,SAAlB,CAA4BkH,WAA5B,GAA0CuF,iBAA1C;;AAGA,SAASC,kBAAT,GAA8B;AAC7BjB,eAAa,CAAC3E,IAAd,CAAmB,IAAnB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACkB,eAA1B;AACG,OAAKwB,aAAL,GAAqB,IAArB,CAH0B,CAI1B;;AACA,OAAKI,oBAAL,GAA4B,IAA5B;AACA,SAAO,IAAP;AACH;;AAEDD,kBAAkB,CAAC1M,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAcwE,aAAa,CAACzL,SAA5B,CAA/B;AACA0M,kBAAkB,CAAC1M,SAAnB,CAA6BkH,WAA7B,GAA2CwF,kBAA3C,C,CAGA;;AACA,SAASE,YAAT,GAAwB;AACvB/C,UAAQ,CAAC/C,IAAT,CAAc,IAAd;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACoB,QAA1B;AACA,OAAKsB,aAAL,GAAqB,IAArB;AACA,SAAO,IAAP;AACA;;AAEDK,YAAY,CAAC5M,SAAb,GAAyB6B,MAAM,CAACoF,MAAP,CAAc4C,QAAQ,CAAC7J,SAAvB,CAAzB;AACA4M,YAAY,CAAC5M,SAAb,CAAuBkH,WAAvB,GAAqC0F,YAArC,C,CAGA;;AACA,SAASC,gBAAT,GAA4B;AAC3BpB,eAAa,CAAC3E,IAAd,CAAmB,IAAnB;AACA,OAAKmD,SAAL,GAAiBJ,QAAQ,CAACc,WAA1B;AACA,SAAO,IAAP;AACA;;AAEDkC,gBAAgB,CAAC7M,SAAjB,GAA6B6B,MAAM,CAACoF,MAAP,CAAcwE,aAAa,CAACzL,SAA5B,CAA7B;AACA6M,gBAAgB,CAAC7M,SAAjB,CAA2BkH,WAA3B,GAAyC2F,gBAAzC;AAEApH,OAAO,CAACoE,QAAR,GAAmBA,QAAnB;AACApE,OAAO,CAAC+F,UAAR,GAAqBA,UAArB;AACA/F,OAAO,CAACgG,aAAR,GAAwBA,aAAxB;AACAhG,OAAO,CAACmG,eAAR,GAA0BA,eAA1B;AACAnG,OAAO,CAACsG,aAAR,GAAwBA,aAAxB;AACAtG,OAAO,CAACmH,YAAR,GAAuBA,YAAvB;AACAnH,OAAO,CAACyG,cAAR,GAAyBA,cAAzB;AACAzG,OAAO,CAACwG,aAAR,GAAwBA,aAAxB;AACAxG,OAAO,CAACoH,gBAAR,GAA2BA,gBAA3B;AACApH,OAAO,CAAC4G,iBAAR,GAA4BA,iBAA5B;AACA5G,OAAO,CAACgH,iBAAR,GAA4BA,iBAA5B;AACAhH,OAAO,CAACiH,kBAAR,GAA6BA,kBAA7B;AACAjH,OAAO,CAAC6G,mBAAR,GAA8BA,mBAA9B;AACA7G,OAAO,CAAC+G,mBAAR,GAA8BA,mBAA9B;AACA/G,OAAO,CAACqG,oBAAR,GAA+BA,oBAA/B,C;;;;;;ACrUA;;;;AAIA;AAEA;AACA;AACA;AAEA,IAAIpG,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAsB/B,KAAlC;;AACA,IAAIgC,QAAQ,GAAGD,mBAAO,CAAC,CAAD,CAAP,CAA4BC,QAA3C;;AACA,IAAIoF,gBAAgB,GAAG,IAAIpF,QAAJ,CAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,CAAvB;;AACA,IAAIqF,KAAK,GAAGtF,mBAAO,CAAC,CAAD,CAAnB;;AAGA,SAASuF,IAAT,GAAgB;AACf,SAAO,IAAP;AACA;;AAED,SAASC,UAAT,GAAsB;AACrBD,MAAI,CAAClG,IAAL,CAAU,IAAV;AACA,SAAO,IAAP;AACA;;AAEDmG,UAAU,CAACjN,SAAX,GAAuB6B,MAAM,CAACoF,MAAP,CAAc+F,IAAI,CAAChN,SAAnB,CAAvB;AACAiN,UAAU,CAACjN,SAAX,CAAqBkH,WAArB,GAAmC+F,UAAnC;;AAEA,SAASC,SAAT,GAAqB;AACpBD,YAAU,CAACnG,IAAX,CAAgB,IAAhB;AACA,SAAO,IAAP;AACA;;AAEDoG,SAAS,CAAClN,SAAV,GAAsB6B,MAAM,CAACoF,MAAP,CAAcgG,UAAU,CAACjN,SAAzB,CAAtB;AACAkN,SAAS,CAAClN,SAAV,CAAoBkH,WAApB,GAAkCgG,SAAlC;;AAEA,SAASC,QAAT,GAAoB;AACnBD,WAAS,CAACpG,IAAV,CAAe,IAAf;AACA,SAAO,IAAP;AACA;;AAEDqG,QAAQ,CAACnN,SAAT,GAAqB6B,MAAM,CAACoF,MAAP,CAAciG,SAAS,CAAClN,SAAxB,CAArB;AACAmN,QAAQ,CAACnN,SAAT,CAAmBkH,WAAnB,GAAiCiG,QAAjC;;AAEA,SAASC,YAAT,GAAwB;AACvBF,WAAS,CAACpG,IAAV,CAAe,IAAf;AACA,SAAO,IAAP;AACA;;AAEDsG,YAAY,CAACpN,SAAb,GAAyB6B,MAAM,CAACoF,MAAP,CAAciG,SAAS,CAAClN,SAAxB,CAAzB;AACAoN,YAAY,CAACpN,SAAb,CAAuBkH,WAAvB,GAAqCkG,YAArC;;AAEA,SAASC,SAAT,GAAqB;AACpBD,cAAY,CAACtG,IAAb,CAAkB,IAAlB;AACA,SAAO,IAAP;AACA;;AAEDuG,SAAS,CAACrN,SAAV,GAAsB6B,MAAM,CAACoF,MAAP,CAAcmG,YAAY,CAACpN,SAA3B,CAAtB;AACAqN,SAAS,CAACrN,SAAV,CAAoBkH,WAApB,GAAkCmG,SAAlC;;AAEA,SAASC,gBAAT,GAA4B;AAC3B,SAAO,IAAP;AACA;;AAEDA,gBAAgB,CAACtN,SAAjB,CAA2BuN,KAA3B,GAAmC,UAASC,GAAT,EAAc;AAC/C,MAAIjJ,KAAK,CAACC,OAAN,CAAcgJ,GAAd,CAAJ,EAAwB;AACxB,WAAOA,GAAG,CAAC1K,GAAJ,CAAQ,UAAS2K,KAAT,EAAgB;AACrB,aAAOA,KAAK,CAACC,MAAN,CAAa,IAAb,CAAP;AACH,KAFA,EAEE,IAFF,CAAP;AAGA,GAJA,MAIM;AACN,WAAOF,GAAG,CAACE,MAAJ,CAAW,IAAX,CAAP;AACA;AACD,CARD;;AAUAJ,gBAAgB,CAACtN,SAAjB,CAA2B2N,aAA3B,GAA2C,UAASH,GAAT,EAAc;AACvD,SAAO,KAAKD,KAAL,CAAWC,GAAG,CAACI,QAAf,CAAP;AACD,CAFD;;AAIAN,gBAAgB,CAACtN,SAAjB,CAA2B6N,aAA3B,GAA2C,UAASC,IAAT,EAAe,CACzD,CADD;;AAGAR,gBAAgB,CAACtN,SAAjB,CAA2B+N,cAA3B,GAA4C,UAASD,IAAT,EAAe,CAC1D,CADD;;AAIA,SAASE,iBAAT,GAA6B;AAC5B,SAAO,IAAP;AACA;;AAEDA,iBAAiB,CAAChO,SAAlB,CAA4B6N,aAA5B,GAA4C,UAASC,IAAT,EAAe,CAC1D,CADD;;AAGAE,iBAAiB,CAAChO,SAAlB,CAA4B+N,cAA5B,GAA6C,UAASD,IAAT,EAAe,CAC3D,CADD;;AAGAE,iBAAiB,CAAChO,SAAlB,CAA4BiO,cAA5B,GAA6C,UAASH,IAAT,EAAe,CAC3D,CADD;;AAGAE,iBAAiB,CAAChO,SAAlB,CAA4BkO,aAA5B,GAA4C,UAASJ,IAAT,EAAe,CAC1D,CADD;;AAGA,SAASK,gBAAT,CAA0BC,MAA1B,EAAkC;AACjChB,cAAY,CAACtG,IAAb,CAAkB,IAAlB;AACA,OAAKuH,SAAL,GAAiB,IAAjB;AACA,OAAKD,MAAL,GAAcA,MAAd;AACA,SAAO,IAAP;AACA;;AAEDD,gBAAgB,CAACnO,SAAjB,GAA6B6B,MAAM,CAACoF,MAAP,CAAcmG,YAAY,CAACpN,SAA3B,CAA7B;AACAmO,gBAAgB,CAACnO,SAAjB,CAA2BkH,WAA3B,GAAyCiH,gBAAzC;;AAEAA,gBAAgB,CAACnO,SAAjB,CAA2BsO,QAA3B,GAAsC,UAAStN,CAAT,EAAY;AACjD,SAAO,IAAP;AACA,CAFD;;AAIAmN,gBAAgB,CAACnO,SAAjB,CAA2BuO,SAA3B,GAAuC,YAAW;AACjD,SAAO,KAAKH,MAAZ;AACA,CAFD;;AAIAD,gBAAgB,CAACnO,SAAjB,CAA2BwO,SAA3B,GAAuC,YAAW;AACjD,SAAO,KAAKH,SAAZ;AACA,CAFD;;AAIAF,gBAAgB,CAACnO,SAAjB,CAA2ByO,UAA3B,GAAwC,YAAW;AAClD,SAAO,KAAKL,MAAZ;AACA,CAFD;;AAIAD,gBAAgB,CAACnO,SAAjB,CAA2B0O,iBAA3B,GAA+C,YAAW;AACzD,MAAI,KAAKN,MAAL,KAAgB,IAApB,EAA0B;AACzB,WAAOtB,gBAAP;AACA;;AACD,MAAI9G,UAAU,GAAG,KAAKoI,MAAL,CAAYpI,UAA7B;AACA,SAAO,IAAI0B,QAAJ,CAAa1B,UAAb,EAAyBA,UAAzB,CAAP;AACA,CAND;;AAQAmI,gBAAgB,CAACnO,SAAjB,CAA2B2O,aAA3B,GAA2C,YAAW;AACrD,SAAO,CAAP;AACA,CAFD;;AAIAR,gBAAgB,CAACnO,SAAjB,CAA2B0N,MAA3B,GAAoC,UAASkB,OAAT,EAAkB;AACrD,SAAOA,OAAO,CAACf,aAAR,CAAsB,IAAtB,CAAP;AACA,CAFD;;AAIAM,gBAAgB,CAACnO,SAAjB,CAA2BwH,OAA3B,GAAqC,YAAW;AAC/C,SAAO,KAAK4G,MAAL,CAAY1H,IAAnB;AACA,CAFD;;AAIAyH,gBAAgB,CAACnO,SAAjB,CAA2BkB,QAA3B,GAAsC,YAAW;AAChD,MAAI,KAAKkN,MAAL,CAAYxI,IAAZ,KAAqBF,KAAK,CAACa,GAA/B,EAAoC;AACnC,WAAO,OAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAK6H,MAAL,CAAY1H,IAAnB;AACA;AACD,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AAEA,SAASmI,aAAT,CAAuBC,KAAvB,EAA8B;AAC7BX,kBAAgB,CAACrH,IAAjB,CAAsB,IAAtB,EAA4BgI,KAA5B;AACA,SAAO,IAAP;AACA;;AAEDD,aAAa,CAAC7O,SAAd,GAA0B6B,MAAM,CAACoF,MAAP,CAAckH,gBAAgB,CAACnO,SAA/B,CAA1B;AACA6O,aAAa,CAAC7O,SAAd,CAAwBkH,WAAxB,GAAsC2H,aAAtC;;AAEAA,aAAa,CAAC7O,SAAd,CAAwB+O,WAAxB,GAAsC,YAAW;AAChD,SAAO,IAAP;AACA,CAFD;;AAIAF,aAAa,CAAC7O,SAAd,CAAwB0N,MAAxB,GAAiC,UAASkB,OAAT,EAAkB;AAClD,SAAOA,OAAO,CAACb,cAAR,CAAuB,IAAvB,CAAP;AACA,CAFD;;AAIA,SAASiB,eAAT,GAA2B;AAC1B,SAAO,IAAP;AACA;;AAEDA,eAAe,CAAChP,SAAhB,CAA0BiP,IAA1B,GAAiC,UAASC,QAAT,EAAmB9H,CAAnB,EAAsB;AACtD,MAAI+H,SAAS,GAAG/H,CAAC,YAAYiG,SAAb,IACbjG,CAAC,CAAC2H,WAAF,KAAkBhI,SAAlB,IAA+BK,CAAC,CAAC2H,WAAF,EADlC;;AAEA,MAAII,SAAJ,EAAe;AACdD,YAAQ,CAACnB,cAAT,CAAwB3G,CAAxB;AACA,GAFD,MAEO,IAAIA,CAAC,YAAYgG,YAAjB,EAA+B;AACrC8B,YAAQ,CAACrB,aAAT,CAAuBzG,CAAvB;AACA,GAFM,MAEA;AACN,SAAKgI,SAAL,CAAeF,QAAf,EAAyB9H,CAAzB;;AACA,SAAK,IAAIpG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoG,CAAC,CAACuH,aAAF,EAApB,EAAuC3N,CAAC,EAAxC,EAA4C;AAC3C,UAAIyM,KAAK,GAAGrG,CAAC,CAACkH,QAAF,CAAWtN,CAAX,CAAZ;AACA,WAAKiO,IAAL,CAAUC,QAAV,EAAoBzB,KAApB;AACA;;AACD,SAAK4B,QAAL,CAAcH,QAAd,EAAwB9H,CAAxB;AACA;AACD,CAfD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;;;AACA4H,eAAe,CAAChP,SAAhB,CAA0BoP,SAA1B,GAAsC,UAASF,QAAT,EAAmBxG,CAAnB,EAAsB;AAC3D,MAAI8E,GAAG,GAAG9E,CAAC,CAAC4G,cAAF,EAAV;AACAJ,UAAQ,CAACjB,cAAT,CAAwBT,GAAxB;AACAA,KAAG,CAAC4B,SAAJ,CAAcF,QAAd;AACA,CAJD;;AAMAF,eAAe,CAAChP,SAAhB,CAA0BqP,QAA1B,GAAqC,UAASH,QAAT,EAAmBxG,CAAnB,EAAsB;AAC1D,MAAI8E,GAAG,GAAG9E,CAAC,CAAC4G,cAAF,EAAV;AACA9B,KAAG,CAAC6B,QAAJ,CAAaH,QAAb;AACAA,UAAQ,CAAChB,aAAT,CAAuBV,GAAvB;AACA,CAJD;;AAMAwB,eAAe,CAACO,OAAhB,GAA0B,IAAIP,eAAJ,EAA1B;AAEAvJ,OAAO,CAAC0H,QAAR,GAAmBA,QAAnB;AACA1H,OAAO,CAAC4H,SAAR,GAAoBA,SAApB;AACA5H,OAAO,CAAC2H,YAAR,GAAuBA,YAAvB;AACA3H,OAAO,CAACoJ,aAAR,GAAwBA,aAAxB;AACApJ,OAAO,CAAC0I,gBAAR,GAA2BA,gBAA3B;AACA1I,OAAO,CAACuI,iBAAR,GAA4BA,iBAA5B;AACAvI,OAAO,CAAC6H,gBAAR,GAA2BA,gBAA3B;AACA7H,OAAO,CAACuJ,eAAR,GAA0BA,eAA1B;AACAvJ,OAAO,CAACqH,gBAAR,GAA2BA,gBAA3B,C;;;;;;ACjOA;;;;AAKA;AACA;AACA;AACA;AACA;AAEA,IAAI0C,mBAAmB,GAAG/H,mBAAO,CAAC,CAAD,CAAP,CAA+B+H,mBAAzD;;AAEA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACrCC,OAAK,CAAC7I,IAAN,CAAW,IAAX;;AACA,MAAI,CAAC,CAAC6I,KAAK,CAACC,iBAAZ,EAA+B;AACxBD,SAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8BH,oBAA9B;AACN,GAFD,MAEO;AACN,QAAII,KAAK,GAAG,IAAIF,KAAJ,GAAYE,KAAxB;AACA;;AACD,OAAKC,OAAL,GAAeJ,MAAM,CAACI,OAAtB;AACG,OAAKC,UAAL,GAAkBL,MAAM,CAACK,UAAzB;AACA,OAAK1I,KAAL,GAAaqI,MAAM,CAACrI,KAApB;AACA,OAAKmG,GAAL,GAAWkC,MAAM,CAAClC,GAAlB,CAVkC,CAWlC;AACA;AACA;;AACA,OAAKwC,cAAL,GAAsB,IAAtB,CAdkC,CAelC;AACA;AACA;AACA;AACA;;AACA,OAAKC,cAAL,GAAsB,CAAC,CAAvB;;AACA,MAAI,KAAKF,UAAL,KAAkB,IAAtB,EAA4B;AACxB,SAAKE,cAAL,GAAsB,KAAKF,UAAL,CAAgBG,KAAtC;AACH;;AACD,SAAO,IAAP;AACH;;AAEDT,oBAAoB,CAACzP,SAArB,GAAiC6B,MAAM,CAACoF,MAAP,CAAc0I,KAAK,CAAC3P,SAApB,CAAjC;AACAyP,oBAAoB,CAACzP,SAArB,CAA+BkH,WAA/B,GAA6CuI,oBAA7C,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,oBAAoB,CAACzP,SAArB,CAA+BmQ,iBAA/B,GAAmD,YAAW;AAC1D,MAAI,KAAKJ,UAAL,KAAkB,IAAtB,EAA4B;AACxB,WAAO,KAAKA,UAAL,CAAgBjG,GAAhB,CAAoBqG,iBAApB,CAAsC,KAAKF,cAA3C,EAA2D,KAAKzC,GAAhE,CAAP;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;AACJ,CAND;;AAQAiC,oBAAoB,CAACzP,SAArB,CAA+BkB,QAA/B,GAA0C,YAAW;AACjD,SAAO,KAAK4O,OAAZ;AACH,CAFD;;AAIA,SAASM,yBAAT,CAAmCC,KAAnC,EAA0ChJ,KAA1C,EAAiDiJ,UAAjD,EAA6DC,cAA7D,EAA6E;AAC5Ed,sBAAoB,CAAC3I,IAArB,CAA0B,IAA1B,EAAgC;AAACgJ,WAAO,EAAC,EAAT;AAAaC,cAAU,EAACM,KAAxB;AAA+BhJ,SAAK,EAACA,KAArC;AAA4CmG,OAAG,EAAC;AAAhD,GAAhC;AACG,OAAK8C,UAAL,GAAkBA,UAAlB;AACA,OAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAO,IAAP;AACH;;AAEDH,yBAAyB,CAACpQ,SAA1B,GAAsC6B,MAAM,CAACoF,MAAP,CAAcwI,oBAAoB,CAACzP,SAAnC,CAAtC;AACAoQ,yBAAyB,CAACpQ,SAA1B,CAAoCkH,WAApC,GAAkDkJ,yBAAlD;;AAEAA,yBAAyB,CAACpQ,SAA1B,CAAoCkB,QAApC,GAA+C,YAAW;AACtD,MAAIkN,MAAM,GAAG,EAAb;;AACA,MAAI,KAAKkC,UAAL,IAAmB,CAAnB,IAAwB,KAAKA,UAAL,GAAkB,KAAKjJ,KAAL,CAAWE,IAAzD,EAA+D;AAC3D6G,UAAM,GAAG,KAAK/G,KAAL,CAAWG,OAAX,EAAoB,KAAK8I,UAAL,EAAgB,KAAKA,UAAzC,EAAT;AACH;;AACD,SAAO,8BAA8BlC,MAArC;AACH,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AACA,SAASoC,oBAAT,CAA8BT,UAA9B,EAA0C1I,KAA1C,EAAiDoJ,UAAjD,EAA6DT,cAA7D,EAA6EO,cAA7E,EAA6F/C,GAA7F,EAAkG;AACjGA,KAAG,GAAGA,GAAG,IAAIuC,UAAU,CAACW,IAAxB;AACAV,gBAAc,GAAGA,cAAc,IAAID,UAAU,CAACY,eAAX,EAAnC;AACAF,YAAU,GAAGA,UAAU,IAAIV,UAAU,CAACY,eAAX,EAA3B;AACAtJ,OAAK,GAAGA,KAAK,IAAI0I,UAAU,CAACnJ,cAAX,EAAjB;AACA6I,sBAAoB,CAAC3I,IAArB,CAA0B,IAA1B,EAAgC;AAACgJ,WAAO,EAAC,EAAT;AAAaC,cAAU,EAACA,UAAxB;AAAoC1I,SAAK,EAACA,KAA1C;AAAiDmG,OAAG,EAACA;AAArD,GAAhC,EALiG,CAM9F;AACH;;AACG,OAAK+C,cAAL,GAAsBA,cAAtB,CAR8F,CAS9F;AACA;AACA;AACA;;AACA,OAAKE,UAAL,GAAkBA,UAAlB;AACA,OAAKT,cAAL,GAAsBA,cAAtB;AACH;;AAEDQ,oBAAoB,CAACxQ,SAArB,GAAiC6B,MAAM,CAACoF,MAAP,CAAcwI,oBAAoB,CAACzP,SAAnC,CAAjC;AACAwQ,oBAAoB,CAACxQ,SAArB,CAA+BkH,WAA/B,GAA6CsJ,oBAA7C,C,CAEA;AACA;AACA;;AACA,SAASI,sBAAT,CAAgCb,UAAhC,EAA4C;AAC3CN,sBAAoB,CAAC3I,IAArB,CAA0B,IAA1B,EAAgC;AAACgJ,WAAO,EAAC,EAAT;AAAaC,cAAU,EAACA,UAAxB;AAAoC1I,SAAK,EAAC0I,UAAU,CAACnJ,cAAX,EAA1C;AAAuE4G,OAAG,EAACuC,UAAU,CAACW;AAAtF,GAAhC;AACG,OAAKV,cAAL,GAAsBD,UAAU,CAACY,eAAX,EAAtB;AACH;;AAEDC,sBAAsB,CAAC5Q,SAAvB,GAAmC6B,MAAM,CAACoF,MAAP,CAAcwI,oBAAoB,CAACzP,SAAnC,CAAnC;AACA4Q,sBAAsB,CAAC5Q,SAAvB,CAAiCkH,WAAjC,GAA+C0J,sBAA/C,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,wBAAT,CAAkCd,UAAlC,EAA8Ce,SAA9C,EAAyDhB,OAAzD,EAAkE;AACjEL,sBAAoB,CAAC3I,IAArB,CAA0B,IAA1B,EAAgC;AAACgJ,WAAO,EAAC,KAAKiB,aAAL,CAAmBD,SAAnB,EAA6BhB,OAAO,IAAI,IAAxC,CAAT;AAAwDC,cAAU,EAACA,UAAnE;AACR1I,SAAK,EAAC0I,UAAU,CAACnJ,cAAX,EADE;AAC2B4G,OAAG,EAACuC,UAAU,CAACW;AAD1C,GAAhC;AAEG,MAAI3L,CAAC,GAAGgL,UAAU,CAACiB,OAAX,CAAmBlH,GAAnB,CAAuBmH,MAAvB,CAA8BlB,UAAU,CAACG,KAAzC,CAAR;AACA,MAAI7E,KAAK,GAAGtG,CAAC,CAACqF,WAAF,CAAc,CAAd,CAAZ;;AACA,MAAIiB,KAAK,YAAYmE,mBAArB,EAA0C;AACtC,SAAKtF,SAAL,GAAiBmB,KAAK,CAACnB,SAAvB;AACA,SAAKgH,cAAL,GAAsB7F,KAAK,CAAC8F,SAA5B;AACH,GAHD,MAGO;AACH,SAAKjH,SAAL,GAAiB,CAAjB;AACA,SAAKgH,cAAL,GAAsB,CAAtB;AACH;;AACD,OAAKJ,SAAL,GAAiBA,SAAjB;AACA,OAAKd,cAAL,GAAsBD,UAAU,CAACY,eAAX,EAAtB;AACA,SAAO,IAAP;AACH;;AAEDE,wBAAwB,CAAC7Q,SAAzB,GAAqC6B,MAAM,CAACoF,MAAP,CAAcwI,oBAAoB,CAACzP,SAAnC,CAArC;AACA6Q,wBAAwB,CAAC7Q,SAAzB,CAAmCkH,WAAnC,GAAiD2J,wBAAjD;;AAEAA,wBAAwB,CAAC7Q,SAAzB,CAAmC+Q,aAAnC,GAAmD,UAASD,SAAT,EAAoBhB,OAApB,EAA6B;AAC5E,MAAIA,OAAO,KAAI,IAAf,EAAqB;AACjB,WAAOA,OAAP;AACH,GAFD,MAEO;AACH,WAAO,wBAAwBgB,SAAxB,GAAoC,IAA3C;AACH;AACJ,CAND;;AAQA,SAASM,0BAAT,GAAsC;AACrCzB,OAAK,CAAC7I,IAAN,CAAW,IAAX;AACA6I,OAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8BwB,0BAA9B;AACA,SAAO,IAAP;AACA;;AAEDA,0BAA0B,CAACpR,SAA3B,GAAuC6B,MAAM,CAACoF,MAAP,CAAc0I,KAAK,CAAC3P,SAApB,CAAvC;AACAoR,0BAA0B,CAACpR,SAA3B,CAAqCkH,WAArC,GAAmDkK,0BAAnD;AAEA3L,OAAO,CAACgK,oBAAR,GAA+BA,oBAA/B;AACAhK,OAAO,CAAC+K,oBAAR,GAA+BA,oBAA/B;AACA/K,OAAO,CAAC2K,yBAAR,GAAoCA,yBAApC;AACA3K,OAAO,CAACmL,sBAAR,GAAiCA,sBAAjC;AACAnL,OAAO,CAACoL,wBAAR,GAAmCA,wBAAnC;AACApL,OAAO,CAAC2L,0BAAR,GAAqCA,0BAArC,C;;;;;;ACxKA;;AACA;;;;AAIA;AAEA,IAAIC,WAAW,GAAG5J,mBAAO,CAAC,EAAD,CAAP,CAAyB4J,WAA3C;;AACA,IAAIjO,IAAI,GAAGqE,mBAAO,CAAC,CAAD,CAAP,CAAmBrE,IAA9B;;AAEA,SAASkO,iBAAT,CAA2BC,cAA3B,EAA2C;AAC1C,OAAKA,cAAL,GAAsBA,cAAtB;AACA,C,CAED;AACA;AACA;;;AACAD,iBAAiB,CAACE,KAAlB,GAA0B,IAA1B,C,CAEA;AACA;AACA;AACA;;AACAF,iBAAiB,CAACG,kBAAlB,GAAuC,UAAvC;AAEAH,iBAAiB,CAACI,eAAlB,GAAoC,CAApC;AACAJ,iBAAiB,CAACK,EAAlB,GAAuBL,iBAAiB,CAACI,eAAzC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAJ,iBAAiB,CAACtR,SAAlB,CAA4B4R,OAA5B,GAAsC,YAAW;AAChD,SAAO,SAASN,iBAAiB,CAACE,KAAlC;AACA,CAFD;;AAIAF,iBAAiB,CAACtR,SAAlB,CAA4B6R,YAA5B,GAA2C,YAAW;AACrD,SAAO,KAAKC,cAAL,CAAoB,KAAK3Q,MAAL,GAAc,CAAlC,MAAyCmQ,iBAAiB,CAACG,kBAAlE;AACA,CAFD;;AAIAH,iBAAiB,CAACtR,SAAlB,CAA4BM,QAA5B,GAAuC,YAAW;AACjD,SAAO,KAAKiR,cAAZ;AACA,CAFD;;AAKAD,iBAAiB,CAACtR,SAAlB,CAA4B0E,cAA5B,GAA6C,UAAStC,IAAT,EAAe;AACxDA,MAAI,CAACiB,MAAL,CAAY,KAAKkO,cAAjB;AACH,CAFD;AAGA;;;;;AAMA;AACA;AACA;;;AAEA,SAASQ,sBAAT,GAAkC;AACjC,OAAKC,KAAL,GAAa,EAAb;AACA,SAAO,IAAP;AACA,C,CAED;AACA;AACA;AACA;;;AACAD,sBAAsB,CAAC/R,SAAvB,CAAiCkC,GAAjC,GAAuC,UAASsL,GAAT,EAAc;AACpD,MAAIA,GAAG,KAAK8D,iBAAiB,CAACE,KAA9B,EAAqC;AACpC,WAAOF,iBAAiB,CAACE,KAAzB;AACA;;AACD,MAAIS,QAAQ,GAAG,KAAKD,KAAL,CAAWxE,GAAX,KAAmB,IAAlC;;AACA,MAAIyE,QAAQ,KAAK,IAAjB,EAAuB;AACtB,WAAOA,QAAP;AACA;;AACD,OAAKD,KAAL,CAAWxE,GAAX,IAAkBA,GAAlB;AACA,SAAOA,GAAP;AACA,CAVD;;AAYAuE,sBAAsB,CAAC/R,SAAvB,CAAiC+B,GAAjC,GAAuC,UAASyL,GAAT,EAAc;AACpD,SAAO,KAAKwE,KAAL,CAAWxE,GAAX,KAAmB,IAA1B;AACA,CAFD;;AAIA3L,MAAM,CAACC,cAAP,CAAsBiQ,sBAAsB,CAAC/R,SAA7C,EAAwD,QAAxD,EAAkE;AACjE+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKiQ,KAAL,CAAW7Q,MAAlB;AACA;AAHgE,CAAlE;;AAMA,SAAS+Q,0BAAT,CAAoCC,MAApC,EAA4CC,WAA5C,EAAyD;AACxD,MAAI9R,QAAQ,GAAG,CAAf;;AACA,MAAG6R,MAAM,KAAK,IAAd,EAAoB;AACnB,QAAI/P,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,QAAI,CAACiB,MAAL,CAAY8O,MAAZ,EAAoBC,WAApB;AACM9R,YAAQ,GAAG8B,IAAI,CAACkB,MAAL,EAAX;AACN;;AACDgO,mBAAiB,CAACxK,IAAlB,CAAuB,IAAvB,EAA6BxG,QAA7B;AACA,OAAK+N,SAAL,GAAiB8D,MAAjB;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACA;;AAEDF,0BAA0B,CAAClS,SAA3B,GAAuC6B,MAAM,CAACoF,MAAP,CAAcqK,iBAAiB,CAACtR,SAAhC,CAAvC;AACAkS,0BAA0B,CAAClS,SAA3B,CAAqCqS,UAArC,GAAkDH,0BAAlD;;AAEAA,0BAA0B,CAACjL,MAA3B,GAAoC,UAASkL,MAAT,EAAiBC,WAAjB,EAA8B;AACjE,MAAIA,WAAW,KAAKd,iBAAiB,CAACG,kBAAlC,IAAwDU,MAAM,KAAK,IAAvE,EAA6E;AAC5E;AACA,WAAOb,iBAAiB,CAACE,KAAzB;AACA,GAHD,MAGO;AACN,WAAO,IAAIU,0BAAJ,CAA+BC,MAA/B,EAAuCC,WAAvC,CAAP;AACA;AACD,CAPD;;AASAvQ,MAAM,CAACC,cAAP,CAAsBoQ,0BAA0B,CAAClS,SAAjD,EAA4D,QAA5D,EAAsE;AACrE+B,KAAG,EAAG,eAAW;AAChB,WAAO,CAAP;AACA;AAHoE,CAAtE;;AAMAmQ,0BAA0B,CAAClS,SAA3B,CAAqCwO,SAArC,GAAiD,UAASlD,KAAT,EAAgB;AAChE,SAAO,KAAK+C,SAAZ;AACA,CAFD;;AAIA6D,0BAA0B,CAAClS,SAA3B,CAAqC8R,cAArC,GAAsD,UAASxG,KAAT,EAAgB;AACrE,SAAO,KAAK8G,WAAZ;AACA,CAFD;;AAIAF,0BAA0B,CAAClS,SAA3B,CAAqCuB,MAArC,GAA8C,UAASgC,KAAT,EAAgB;AAC7D,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAY2O,0BAAnB,CAAJ,EAAoD;AAC1D,WAAO,KAAP;AACA,GAFM,MAEA,IAAI,KAAK5R,QAAL,OAAoBiD,KAAK,CAACjD,QAAN,EAAxB,EAA0C;AAChD,WAAO,KAAP,CADgD,CAClC;AACd,GAFM,MAEA;AACN,QAAG,KAAK8R,WAAL,KAAqB7O,KAAK,CAAC6O,WAA9B,EACU,OAAO,KAAP,CADV,KAEW,IAAG,KAAK/D,SAAL,IAAgB,IAAnB,EACD,OAAO9K,KAAK,CAAC8K,SAAN,IAAiB,IAAxB,CADC,KAGD,OAAO,KAAKA,SAAL,CAAe9M,MAAf,CAAsBgC,KAAK,CAAC8K,SAA5B,CAAP;AACV;AACD,CAfD;;AAiBA6D,0BAA0B,CAAClS,SAA3B,CAAqCkB,QAArC,GAAgD,YAAW;AAC1D,MAAIoR,EAAE,GAAG,KAAKjE,SAAL,KAAmB,IAAnB,GAA0B,EAA1B,GAA+B,KAAKA,SAAL,CAAenN,QAAf,EAAxC;;AACA,MAAIoR,EAAE,CAACnR,MAAH,KAAc,CAAlB,EAAqB;AACpB,QAAI,KAAKiR,WAAL,KAAqBd,iBAAiB,CAACG,kBAA3C,EAA+D;AAC9D,aAAO,GAAP;AACA,KAFD,MAEO;AACN,aAAO,KAAK,KAAKW,WAAjB;AACA;AACD,GAND,MAMO;AACN,WAAO,KAAK,KAAKA,WAAV,GAAwB,GAAxB,GAA8BE,EAArC;AACA;AACD,CAXD;;AAaA,SAASC,sBAAT,GAAkC;AACjCL,4BAA0B,CAACpL,IAA3B,CAAgC,IAAhC,EAAsC,IAAtC,EAA4CwK,iBAAiB,CAACG,kBAA9D;AACA,SAAO,IAAP;AACA;;AAEDc,sBAAsB,CAACvS,SAAvB,GAAmC6B,MAAM,CAACoF,MAAP,CAAciL,0BAA0B,CAAClS,SAAzC,CAAnC;AACAuS,sBAAsB,CAACvS,SAAvB,CAAiCkH,WAAjC,GAA+CqL,sBAA/C;;AAEAA,sBAAsB,CAACvS,SAAvB,CAAiC4R,OAAjC,GAA2C,YAAW;AACrD,SAAO,IAAP;AACA,CAFD;;AAIAW,sBAAsB,CAACvS,SAAvB,CAAiCwO,SAAjC,GAA6C,UAASlD,KAAT,EAAgB;AAC5D,SAAO,IAAP;AACA,CAFD;;AAIAiH,sBAAsB,CAACvS,SAAvB,CAAiC8R,cAAjC,GAAkD,UAASxG,KAAT,EAAgB;AACjE,SAAO,KAAK8G,WAAZ;AACA,CAFD;;AAIAG,sBAAsB,CAACvS,SAAvB,CAAiCuB,MAAjC,GAA0C,UAASgC,KAAT,EAAgB;AACzD,SAAO,SAASA,KAAhB;AACA,CAFD;;AAIAgP,sBAAsB,CAACvS,SAAvB,CAAiCkB,QAAjC,GAA4C,YAAW;AACtD,SAAO,GAAP;AACA,CAFD;;AAIAoQ,iBAAiB,CAACE,KAAlB,GAA0B,IAAIe,sBAAJ,EAA1B;;AAEA,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,YAAzC,EAAuD;AACtD;AACA;AACA;AACA;AACA,MAAItK,CAAC,GAAG,IAAIhF,IAAJ,EAAR;AACAgF,GAAC,CAAC/E,MAAF,CAASoP,OAAT,EAAkBC,YAAlB;AACA,MAAIpS,QAAQ,GAAG8H,CAAC,CAAC9E,MAAF,EAAf;AACAgO,mBAAiB,CAACxK,IAAlB,CAAuB,IAAvB,EAA6BxG,QAA7B;AACA,OAAKmS,OAAL,GAAeA,OAAf;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,SAAO,IAAP;AACA;;AAEDF,sBAAsB,CAACxS,SAAvB,GAAmC6B,MAAM,CAACoF,MAAP,CAAcqK,iBAAiB,CAACtR,SAAhC,CAAnC;AACAwS,sBAAsB,CAACxS,SAAvB,CAAiCkH,WAAjC,GAA+CsL,sBAA/C;;AAEAA,sBAAsB,CAACxS,SAAvB,CAAiC4R,OAAjC,GAA2C,YAAW;AACrD;AACA;AACA,SAAO,KAAKc,YAAL,CAAkB,CAAlB,MAAyBpB,iBAAiB,CAACG,kBAAlD;AACA,CAJD;;AAMA5P,MAAM,CAACC,cAAP,CAAsB0Q,sBAAsB,CAACxS,SAA7C,EAAwD,QAAxD,EAAkE;AACjE+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAK2Q,YAAL,CAAkBvR,MAAzB;AACA;AAHgE,CAAlE;;AAMAqR,sBAAsB,CAACxS,SAAvB,CAAiCwO,SAAjC,GAA6C,UAASlD,KAAT,EAAgB;AAC5D,SAAO,KAAKmH,OAAL,CAAanH,KAAb,CAAP;AACA,CAFD;;AAIAkH,sBAAsB,CAACxS,SAAvB,CAAiC8R,cAAjC,GAAkD,UAASxG,KAAT,EAAgB;AACjE,SAAO,KAAKoH,YAAL,CAAkBpH,KAAlB,CAAP;AACA,CAFD;;AAIAkH,sBAAsB,CAACxS,SAAvB,CAAiCuB,MAAjC,GAA0C,UAASgC,KAAT,EAAgB;AACzD,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAYiP,sBAAnB,CAAJ,EAAgD;AACtD,WAAO,KAAP;AACA,GAFM,MAEA,IAAI,KAAKlS,QAAL,OAAoBiD,KAAK,CAACjD,QAAN,EAAxB,EAA0C;AAChD,WAAO,KAAP,CADgD,CAClC;AACd,GAFM,MAEA;AACN,WAAO,KAAKoS,YAAL,KAAsBnP,KAAK,CAACmP,YAA5B,IACL,KAAKD,OAAL,KAAiBlP,KAAK,CAACkP,OADzB;AAEA;AACD,CAXD;;AAaAD,sBAAsB,CAACxS,SAAvB,CAAiCkB,QAAjC,GAA4C,YAAW;AACtD,MAAI,KAAK0Q,OAAL,EAAJ,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO;AACN,QAAI7M,CAAC,GAAG,GAAR;;AACA,SAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK0R,YAAL,CAAkBvR,MAAtC,EAA8CH,CAAC,EAA/C,EAAmD;AAClD,UAAIA,CAAC,GAAG,CAAR,EAAW;AACV+D,SAAC,GAAGA,CAAC,GAAG,IAAR;AACA;;AACD,UAAI,KAAK2N,YAAL,CAAkB1R,CAAlB,MAAyBsQ,iBAAiB,CAACG,kBAA/C,EAAmE;AAClE1M,SAAC,GAAGA,CAAC,GAAG,GAAR;AACA;AACA;;AACDA,OAAC,GAAGA,CAAC,GAAG,KAAK2N,YAAL,CAAkB1R,CAAlB,CAAR;;AACA,UAAI,KAAKyR,OAAL,CAAazR,CAAb,MAAoB,IAAxB,EAA8B;AAC7B+D,SAAC,GAAGA,CAAC,GAAG,GAAJ,GAAU,KAAK0N,OAAL,CAAazR,CAAb,CAAd;AACA,OAFD,MAEO;AACN+D,SAAC,GAAGA,CAAC,GAAG,MAAR;AACA;AACD;;AACD,WAAOA,CAAC,GAAG,GAAX;AACA;AACD,CAtBD,C,CAwBA;AACA;AACA;;;AACA,SAAS4N,gCAAT,CAA0C7I,GAA1C,EAA+C8I,YAA/C,EAA6D;AAC5D,MAAIA,YAAY,KAAK7L,SAAjB,IAA8B6L,YAAY,KAAK,IAAnD,EAAyD;AACxDA,gBAAY,GAAGvB,WAAW,CAACG,KAA3B;AACA,GAH2D,CAI5D;AACA;;;AACA,MAAIoB,YAAY,CAACvE,SAAb,KAA2B,IAA3B,IAAmCuE,YAAY,KAAKvB,WAAW,CAACG,KAApE,EAA2E;AAC1E,WAAOF,iBAAiB,CAACE,KAAzB;AACA,GAR2D,CAS5D;;;AACA,MAAIW,MAAM,GAAGQ,gCAAgC,CAAC7I,GAAD,EAAM8I,YAAY,CAACvE,SAAnB,CAA7C;AACA,MAAI6B,KAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAW2B,YAAY,CAACC,aAAxB,CAAZ;AACA,MAAIC,UAAU,GAAG5C,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,CAAjB;AACA,SAAO8H,0BAA0B,CAACjL,MAA3B,CAAkCkL,MAAlC,EAA0CW,UAAU,CAACC,WAAX,CAAuBhJ,WAAjE,CAAP;AACA;AACD;;;;;;;;;;;;;;AAYA,SAASiJ,KAAT,CAAenT,CAAf,EAAkByB,CAAlB,EAAqB2R,cAArB,EAAqCC,UAArC,EAAiD;AAChD;AACA,MAAIrT,CAAC,KAAKyB,CAAV,EAAa;AACZ,WAAOzB,CAAP;AACA;;AACD,MAAIA,CAAC,YAAYqS,0BAAb,IAA2C5Q,CAAC,YAAY4Q,0BAA5D,EAAwF;AACvF,WAAOiB,eAAe,CAACtT,CAAD,EAAIyB,CAAJ,EAAO2R,cAAP,EAAuBC,UAAvB,CAAtB;AACA,GAP+C,CAQhD;AACA;;;AACA,MAAID,cAAJ,EAAoB;AACnB,QAAIpT,CAAC,YAAY0S,sBAAjB,EAAyC;AACxC,aAAO1S,CAAP;AACA;;AACD,QAAIyB,CAAC,YAAYiR,sBAAjB,EAAyC;AACxC,aAAOjR,CAAP;AACA;AACD,GAjB+C,CAkBhD;;;AACA,MAAIzB,CAAC,YAAYqS,0BAAjB,EAA6C;AAC5CrS,KAAC,GAAG,IAAI2S,sBAAJ,CAA2B,CAAC3S,CAAC,CAAC2O,SAAF,EAAD,CAA3B,EAA4C,CAAC3O,CAAC,CAACuS,WAAH,CAA5C,CAAJ;AACA;;AACD,MAAI9Q,CAAC,YAAY4Q,0BAAjB,EAA6C;AAC5C5Q,KAAC,GAAG,IAAIkR,sBAAJ,CAA2B,CAAClR,CAAC,CAACkN,SAAF,EAAD,CAA3B,EAA4C,CAAClN,CAAC,CAAC8Q,WAAH,CAA5C,CAAJ;AACA;;AACD,SAAOgB,WAAW,CAACvT,CAAD,EAAIyB,CAAJ,EAAO2R,cAAP,EAAuBC,UAAvB,CAAlB;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBtT,CAAzB,EAA4ByB,CAA5B,EAA+B2R,cAA/B,EAA+CC,UAA/C,EAA2D;AAC1D,MAAIA,UAAU,KAAK,IAAnB,EAAyB;AACxB,QAAIG,QAAQ,GAAGH,UAAU,CAACnR,GAAX,CAAelC,CAAf,EAAkByB,CAAlB,CAAf;;AACA,QAAI+R,QAAQ,KAAK,IAAjB,EAAuB;AACtB,aAAOA,QAAP;AACA;;AACDA,YAAQ,GAAGH,UAAU,CAACnR,GAAX,CAAeT,CAAf,EAAkBzB,CAAlB,CAAX;;AACA,QAAIwT,QAAQ,KAAK,IAAjB,EAAuB;AACtB,aAAOA,QAAP;AACA;AACD;;AAED,MAAIC,SAAS,GAAGC,SAAS,CAAC1T,CAAD,EAAIyB,CAAJ,EAAO2R,cAAP,CAAzB;;AACA,MAAIK,SAAS,KAAK,IAAlB,EAAwB;AACvB,QAAIJ,UAAU,KAAK,IAAnB,EAAyB;AACxBA,gBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBgS,SAArB;AACA;;AACD,WAAOA,SAAP;AACA;;AACD,MAAIzT,CAAC,CAACuS,WAAF,KAAkB9Q,CAAC,CAAC8Q,WAAxB,EAAqC;AACpC,QAAID,MAAM,GAAGa,KAAK,CAACnT,CAAC,CAACwO,SAAH,EAAc/M,CAAC,CAAC+M,SAAhB,EAA2B4E,cAA3B,EAA2CC,UAA3C,CAAlB,CADoC,CAEpC;AACA;;AACA,QAAIf,MAAM,KAAKtS,CAAC,CAACwO,SAAjB,EAA4B;AAC3B,aAAOxO,CAAP,CAD2B,CACjB;AACV;;AACD,QAAIsS,MAAM,KAAK7Q,CAAC,CAAC+M,SAAjB,EAA4B;AAC3B,aAAO/M,CAAP,CAD2B,CACjB;AACV,KATmC,CAUpC;AACA;AACA;AACA;;;AACA,QAAIkS,GAAG,GAAGtB,0BAA0B,CAACjL,MAA3B,CAAkCkL,MAAlC,EAA0CtS,CAAC,CAACuS,WAA5C,CAAV;;AACA,QAAIc,UAAU,KAAK,IAAnB,EAAyB;AACxBA,gBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBkS,GAArB;AACA;;AACD,WAAOA,GAAP;AACA,GAnBD,MAmBO;AAAE;AACR;AACA,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAI5T,CAAC,KAAKyB,CAAN,IAAYzB,CAAC,CAACwO,SAAF,KAAgB,IAAhB,IAAwBxO,CAAC,CAACwO,SAAF,KAAgB/M,CAAC,CAAC+M,SAA1D,EAAsE;AAAE;AACtD;AACA;AACjBoF,kBAAY,GAAG5T,CAAC,CAACwO,SAAjB;AACA;;AACD,QAAIoF,YAAY,KAAK,IAArB,EAA2B;AAAE;AAC5B;AACA,UAAIC,QAAQ,GAAG,CAAE7T,CAAC,CAACuS,WAAJ,EAAiB9Q,CAAC,CAAC8Q,WAAnB,CAAf;;AACA,UAAIvS,CAAC,CAACuS,WAAF,GAAgB9Q,CAAC,CAAC8Q,WAAtB,EAAmC;AAClCsB,gBAAQ,CAAC,CAAD,CAAR,GAAcpS,CAAC,CAAC8Q,WAAhB;AACAsB,gBAAQ,CAAC,CAAD,CAAR,GAAc7T,CAAC,CAACuS,WAAhB;AACA;;AACD,UAAIK,OAAO,GAAG,CAAEgB,YAAF,EAAgBA,YAAhB,CAAd;AACA,UAAIE,GAAG,GAAG,IAAInB,sBAAJ,CAA2BC,OAA3B,EAAoCiB,QAApC,CAAV;;AACA,UAAIR,UAAU,KAAK,IAAnB,EAAyB;AACxBA,kBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBqS,GAArB;AACA;;AACD,aAAOA,GAAP;AACA,KArBK,CAsBN;AACA;AACA;;;AACA,QAAID,QAAQ,GAAG,CAAE7T,CAAC,CAACuS,WAAJ,EAAiB9Q,CAAC,CAAC8Q,WAAnB,CAAf;AACA,QAAIK,OAAO,GAAG,CAAE5S,CAAC,CAACwO,SAAJ,EAAe/M,CAAC,CAAC+M,SAAjB,CAAd;;AACA,QAAIxO,CAAC,CAACuS,WAAF,GAAgB9Q,CAAC,CAAC8Q,WAAtB,EAAmC;AAAE;AACpCsB,cAAQ,CAAC,CAAD,CAAR,GAAcpS,CAAC,CAAC8Q,WAAhB;AACAsB,cAAQ,CAAC,CAAD,CAAR,GAAc7T,CAAC,CAACuS,WAAhB;AACAK,aAAO,GAAG,CAAEnR,CAAC,CAAC+M,SAAJ,EAAexO,CAAC,CAACwO,SAAjB,CAAV;AACA;;AACD,QAAIuF,EAAE,GAAG,IAAIpB,sBAAJ,CAA2BC,OAA3B,EAAoCiB,QAApC,CAAT;;AACA,QAAIR,UAAU,KAAK,IAAnB,EAAyB;AACxBA,gBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBsS,EAArB;AACA;;AACD,WAAOA,EAAP;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASL,SAAT,CAAmB1T,CAAnB,EAAsByB,CAAtB,EAAyB2R,cAAzB,EAAyC;AACxC,MAAIA,cAAJ,EAAoB;AACnB,QAAIpT,CAAC,KAAKyR,iBAAiB,CAACE,KAA5B,EAAmC;AAClC,aAAOF,iBAAiB,CAACE,KAAzB,CADkC,CACF;AAChC;;AACD,QAAIlQ,CAAC,KAAKgQ,iBAAiB,CAACE,KAA5B,EAAmC;AAClC,aAAOF,iBAAiB,CAACE,KAAzB,CADkC,CACF;AAChC;AACD,GAPD,MAOO;AACN,QAAI3R,CAAC,KAAKyR,iBAAiB,CAACE,KAAxB,IAAiClQ,CAAC,KAAKgQ,iBAAiB,CAACE,KAA7D,EAAoE;AACnE,aAAOF,iBAAiB,CAACE,KAAzB,CADmE,CACnC;AAChC,KAFD,MAEO,IAAI3R,CAAC,KAAKyR,iBAAiB,CAACE,KAA5B,EAAmC;AAAE;AAC3C,UAAIkC,QAAQ,GAAG,CAAEpS,CAAC,CAAC8Q,WAAJ,EACbd,iBAAiB,CAACG,kBADL,CAAf;AAEA,UAAIgB,OAAO,GAAG,CAAEnR,CAAC,CAAC+M,SAAJ,EAAe,IAAf,CAAd;AACA,aAAO,IAAImE,sBAAJ,CAA2BC,OAA3B,EAAoCiB,QAApC,CAAP;AACA,KALM,MAKA,IAAIpS,CAAC,KAAKgQ,iBAAiB,CAACE,KAA5B,EAAmC;AAAE;AAC3C,UAAIkC,QAAQ,GAAG,CAAE7T,CAAC,CAACuS,WAAJ,EAAiBd,iBAAiB,CAACG,kBAAnC,CAAf;AACA,UAAIgB,OAAO,GAAG,CAAE5S,CAAC,CAACwO,SAAJ,EAAe,IAAf,CAAd;AACA,aAAO,IAAImE,sBAAJ,CAA2BC,OAA3B,EAAoCiB,QAApC,CAAP;AACA;AACD;;AACD,SAAO,IAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,WAAT,CAAqBvT,CAArB,EAAwByB,CAAxB,EAA2B2R,cAA3B,EAA2CC,UAA3C,EAAuD;AACtD,MAAIA,UAAU,KAAK,IAAnB,EAAyB;AACxB,QAAIG,QAAQ,GAAGH,UAAU,CAACnR,GAAX,CAAelC,CAAf,EAAkByB,CAAlB,CAAf;;AACA,QAAI+R,QAAQ,KAAK,IAAjB,EAAuB;AACtB,aAAOA,QAAP;AACA;;AACDA,YAAQ,GAAGH,UAAU,CAACnR,GAAX,CAAeT,CAAf,EAAkBzB,CAAlB,CAAX;;AACA,QAAIwT,QAAQ,KAAK,IAAjB,EAAuB;AACtB,aAAOA,QAAP;AACA;AACD,GAVqD,CAWtD;;;AACA,MAAIrS,CAAC,GAAG,CAAR,CAZsD,CAY3C;;AACX,MAAI0I,CAAC,GAAG,CAAR,CAbsD,CAa3C;;AACX,MAAIjF,CAAC,GAAG,CAAR,CAdsD,CAc3C;;AAEX,MAAIoP,kBAAkB,GAAG,EAAzB;AACA,MAAIC,aAAa,GAAG,EAApB,CAjBsD,CAkBtD;;AACA,SAAO9S,CAAC,GAAGnB,CAAC,CAAC6S,YAAF,CAAevR,MAAnB,IAA6BuI,CAAC,GAAGpI,CAAC,CAACoR,YAAF,CAAevR,MAAvD,EAA+D;AAC9D,QAAI4S,QAAQ,GAAGlU,CAAC,CAAC4S,OAAF,CAAUzR,CAAV,CAAf;AACA,QAAIgT,QAAQ,GAAG1S,CAAC,CAACmR,OAAF,CAAU/I,CAAV,CAAf;;AACA,QAAI7J,CAAC,CAAC6S,YAAF,CAAe1R,CAAf,MAAsBM,CAAC,CAACoR,YAAF,CAAehJ,CAAf,CAA1B,EAA6C;AAC5C;AACA,UAAIuK,OAAO,GAAGpU,CAAC,CAAC6S,YAAF,CAAe1R,CAAf,CAAd,CAF4C,CAG5C;;AACA,UAAIkT,WAAW,GAAGD,OAAO,KAAK3C,iBAAiB,CAACG,kBAA9B,IAChBsC,QAAQ,KAAK,IADG,IACKC,QAAQ,KAAK,IADpC;AAEA,UAAIG,KAAK,GAAIJ,QAAQ,KAAK,IAAb,IAAqBC,QAAQ,KAAK,IAAlC,IAA0CD,QAAQ,KAAKC,QAApE,CAN4C,CAMmC;AAC3D;AACA;;AACpB,UAAIE,WAAW,IAAIC,KAAnB,EAA0B;AACzBL,qBAAa,CAACrP,CAAD,CAAb,GAAmBsP,QAAnB,CADyB,CACI;;AAC7BF,0BAAkB,CAACpP,CAAD,CAAlB,GAAwBwP,OAAxB;AACA,OAHD,MAGO;AAAE;AACR,YAAIG,YAAY,GAAGpB,KAAK,CAACe,QAAD,EAAWC,QAAX,EAAqBf,cAArB,EAAqCC,UAArC,CAAxB;AACAY,qBAAa,CAACrP,CAAD,CAAb,GAAmB2P,YAAnB;AACAP,0BAAkB,CAACpP,CAAD,CAAlB,GAAwBwP,OAAxB;AACA;;AACDjT,OAAC,IAAI,CAAL,CAjB4C,CAiBpC;;AACR0I,OAAC,IAAI,CAAL,CAlB4C,CAkBpC;AACR,KAnBD,MAmBO,IAAI7J,CAAC,CAAC6S,YAAF,CAAe1R,CAAf,IAAoBM,CAAC,CAACoR,YAAF,CAAehJ,CAAf,CAAxB,EAA2C;AAAE;AACnDoK,mBAAa,CAACrP,CAAD,CAAb,GAAmBsP,QAAnB;AACAF,wBAAkB,CAACpP,CAAD,CAAlB,GAAwB5E,CAAC,CAAC6S,YAAF,CAAe1R,CAAf,CAAxB;AACAA,OAAC,IAAI,CAAL;AACA,KAJM,MAIA;AAAE;AACR8S,mBAAa,CAACrP,CAAD,CAAb,GAAmBuP,QAAnB;AACAH,wBAAkB,CAACpP,CAAD,CAAlB,GAAwBnD,CAAC,CAACoR,YAAF,CAAehJ,CAAf,CAAxB;AACAA,OAAC,IAAI,CAAL;AACA;;AACDjF,KAAC,IAAI,CAAL;AACA,GAnDqD,CAoDtD;;;AACA,MAAIzD,CAAC,GAAGnB,CAAC,CAAC6S,YAAF,CAAevR,MAAvB,EAA+B;AAC9B,SAAK,IAAIkT,CAAC,GAAGrT,CAAb,EAAgBqT,CAAC,GAAGxU,CAAC,CAAC6S,YAAF,CAAevR,MAAnC,EAA2CkT,CAAC,EAA5C,EAAgD;AAC/CP,mBAAa,CAACrP,CAAD,CAAb,GAAmB5E,CAAC,CAAC4S,OAAF,CAAU4B,CAAV,CAAnB;AACAR,wBAAkB,CAACpP,CAAD,CAAlB,GAAwB5E,CAAC,CAAC6S,YAAF,CAAe2B,CAAf,CAAxB;AACA5P,OAAC,IAAI,CAAL;AACA;AACD,GAND,MAMO;AACN,SAAK,IAAI4P,CAAC,GAAG3K,CAAb,EAAgB2K,CAAC,GAAG/S,CAAC,CAACoR,YAAF,CAAevR,MAAnC,EAA2CkT,CAAC,EAA5C,EAAgD;AAC/CP,mBAAa,CAACrP,CAAD,CAAb,GAAmBnD,CAAC,CAACmR,OAAF,CAAU4B,CAAV,CAAnB;AACAR,wBAAkB,CAACpP,CAAD,CAAlB,GAAwBnD,CAAC,CAACoR,YAAF,CAAe2B,CAAf,CAAxB;AACA5P,OAAC,IAAI,CAAL;AACA;AACD,GAjEqD,CAkEtD;;;AACA,MAAIA,CAAC,GAAGqP,aAAa,CAAC3S,MAAtB,EAA8B;AAAE;AAC/B,QAAIsD,CAAC,KAAK,CAAV,EAAa;AAAE;AACd,UAAImP,EAAE,GAAG1B,0BAA0B,CAACjL,MAA3B,CAAkC6M,aAAa,CAAC,CAAD,CAA/C,EACPD,kBAAkB,CAAC,CAAD,CADX,CAAT;;AAEA,UAAIX,UAAU,KAAK,IAAnB,EAAyB;AACxBA,kBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBsS,EAArB;AACA;;AACD,aAAOA,EAAP;AACA;;AACDE,iBAAa,GAAGA,aAAa,CAACQ,KAAd,CAAoB,CAApB,EAAuB7P,CAAvB,CAAhB;AACAoP,sBAAkB,GAAGA,kBAAkB,CAACS,KAAnB,CAAyB,CAAzB,EAA4B7P,CAA5B,CAArB;AACA;;AAED,MAAI8P,CAAC,GAAG,IAAI/B,sBAAJ,CAA2BsB,aAA3B,EAA0CD,kBAA1C,CAAR,CAhFsD,CAkFtD;AACA;;AACA,MAAIU,CAAC,KAAK1U,CAAV,EAAa;AACZ,QAAIqT,UAAU,KAAK,IAAnB,EAAyB;AACxBA,gBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBzB,CAArB;AACA;;AACD,WAAOA,CAAP;AACA;;AACD,MAAI0U,CAAC,KAAKjT,CAAV,EAAa;AACZ,QAAI4R,UAAU,KAAK,IAAnB,EAAyB;AACxBA,gBAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBA,CAArB;AACA;;AACD,WAAOA,CAAP;AACA;;AACDkT,sBAAoB,CAACV,aAAD,CAApB;;AAEA,MAAIZ,UAAU,KAAK,IAAnB,EAAyB;AACxBA,cAAU,CAACvQ,GAAX,CAAe9C,CAAf,EAAkByB,CAAlB,EAAqBiT,CAArB;AACA;;AACD,SAAOA,CAAP;AACA,C,CAED;AACA;AACA;AACA;;;AACA,SAASC,oBAAT,CAA8B/B,OAA9B,EAAuC;AACtC,MAAIgC,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,OAAO,CAACtR,MAA5B,EAAoCkT,CAAC,EAArC,EAAyC;AACxC,QAAIlC,MAAM,GAAGM,OAAO,CAAC4B,CAAD,CAApB;;AACA,QAAI,EAAElC,MAAM,IAAIsC,aAAZ,CAAJ,EAAgC;AAC/BA,mBAAa,CAACtC,MAAD,CAAb,GAAwBA,MAAxB;AACA;AACD;;AACD,OAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,OAAO,CAACtR,MAA5B,EAAoCuT,CAAC,EAArC,EAAyC;AACxCjC,WAAO,CAACiC,CAAD,CAAP,GAAaD,aAAa,CAAChC,OAAO,CAACiC,CAAD,CAAR,CAA1B;AACA;AACD;;AAED,SAASC,0BAAT,CAAoCC,OAApC,EAA6CC,YAA7C,EAA2DC,OAA3D,EAAoE;AACnE,MAAIF,OAAO,CAAChD,OAAR,EAAJ,EAAuB;AACtB,WAAOgD,OAAP;AACA;;AACD,MAAI3C,QAAQ,GAAG6C,OAAO,CAACF,OAAD,CAAP,IAAoB,IAAnC;;AACA,MAAI3C,QAAQ,KAAK,IAAjB,EAAuB;AACtB,WAAOA,QAAP;AACA;;AACDA,UAAQ,GAAG4C,YAAY,CAAC9S,GAAb,CAAiB6S,OAAjB,CAAX;;AACA,MAAI3C,QAAQ,KAAK,IAAjB,EAAuB;AACtB6C,WAAO,CAACF,OAAD,CAAP,GAAmB3C,QAAnB;AACA,WAAOA,QAAP;AACA;;AACD,MAAI8C,OAAO,GAAG,KAAd;AACA,MAAItC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIzR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyR,OAAO,CAACtR,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACxC,QAAImR,MAAM,GAAGwC,0BAA0B,CAACC,OAAO,CAACpG,SAAR,CAAkBxN,CAAlB,CAAD,EAAuB6T,YAAvB,EAAqCC,OAArC,CAAvC;;AACA,QAAIC,OAAO,IAAI5C,MAAM,KAAKyC,OAAO,CAACpG,SAAR,CAAkBxN,CAAlB,CAA1B,EAAgD;AAC/C,UAAI,CAAC+T,OAAL,EAAc;AACbtC,eAAO,GAAG,EAAV;;AACA,aAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkL,OAAO,CAACzT,MAA5B,EAAoCuI,CAAC,EAArC,EAAyC;AACxC+I,iBAAO,CAAC/I,CAAD,CAAP,GAAakL,OAAO,CAACpG,SAAR,CAAkB9E,CAAlB,CAAb;AACA;;AACDqL,eAAO,GAAG,IAAV;AACA;;AACDtC,aAAO,CAACzR,CAAD,CAAP,GAAamR,MAAb;AACA;AACD;;AACD,MAAI,CAAC4C,OAAL,EAAc;AACbF,gBAAY,CAAC3S,GAAb,CAAiB0S,OAAjB;AACAE,WAAO,CAACF,OAAD,CAAP,GAAmBA,OAAnB;AACA,WAAOA,OAAP;AACA;;AACD,MAAII,OAAO,GAAG,IAAd;;AACA,MAAIvC,OAAO,CAACtR,MAAR,KAAmB,CAAvB,EAA0B;AACzB6T,WAAO,GAAG1D,iBAAiB,CAACE,KAA5B;AACA,GAFD,MAEO,IAAIiB,OAAO,CAACtR,MAAR,KAAmB,CAAvB,EAA0B;AAChC6T,WAAO,GAAG9C,0BAA0B,CAACjL,MAA3B,CAAkCwL,OAAO,CAAC,CAAD,CAAzC,EAA8CmC,OAAO,CAC5D9C,cADqD,CACtC,CADsC,CAA9C,CAAV;AAEA,GAHM,MAGA;AACNkD,WAAO,GAAG,IAAIxC,sBAAJ,CAA2BC,OAA3B,EAAoCmC,OAAO,CAAClC,YAA5C,CAAV;AACA;;AACDmC,cAAY,CAAC3S,GAAb,CAAiB8S,OAAjB;AACAF,SAAO,CAACE,OAAD,CAAP,GAAmBA,OAAnB;AACAF,SAAO,CAACF,OAAD,CAAP,GAAmBI,OAAnB;AAEA,SAAOA,OAAP;AACA,C,CAED;;;AACA,SAASC,kBAAT,CAA4BL,OAA5B,EAAqCM,KAArC,EAA4CJ,OAA5C,EAAqD;AACpD,MAAII,KAAK,KAAK,IAAd,EAAoB;AACnBA,SAAK,GAAG,EAAR;AACA,WAAOD,kBAAkB,CAACL,OAAD,EAAUM,KAAV,EAAiBJ,OAAjB,CAAzB;AACA,GAHD,MAGO,IAAIA,OAAO,KAAK,IAAhB,EAAsB;AAC5BA,WAAO,GAAG,EAAV;AACA,WAAOG,kBAAkB,CAACL,OAAD,EAAUM,KAAV,EAAiBJ,OAAjB,CAAzB;AACA,GAHM,MAGA;AACN,QAAIF,OAAO,KAAK,IAAZ,IAAoBE,OAAO,CAACF,OAAD,CAAP,KAAqB,IAA7C,EAAmD;AAClD,aAAOM,KAAP;AACA;;AACDJ,WAAO,CAACF,OAAD,CAAP,GAAmBA,OAAnB;AACAM,SAAK,CAAC5S,IAAN,CAAWsS,OAAX;;AACA,SAAK,IAAI5T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4T,OAAO,CAACzT,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACxCiU,wBAAkB,CAACL,OAAO,CAACpG,SAAR,CAAkBxN,CAAlB,CAAD,EAAuBkU,KAAvB,EAA8BJ,OAA9B,CAAlB;AACA;;AACD,WAAOI,KAAP;AACA;AACD;;AAEDzP,OAAO,CAACuN,KAAR,GAAgBA,KAAhB;AACAvN,OAAO,CAAC6L,iBAAR,GAA4BA,iBAA5B;AACA7L,OAAO,CAACsM,sBAAR,GAAiCA,sBAAjC;AACAtM,OAAO,CAACyM,0BAAR,GAAqCA,0BAArC;AACAzM,OAAO,CAACkN,gCAAR,GAA2CA,gCAA3C;AACAlN,OAAO,CAACkP,0BAAR,GAAqCA,0BAArC,C;;;;;;AC1tBA;;;;AAKA,IAAIQ,WAAW,GAAG1N,mBAAO,CAAC,EAAD,CAAP,CAA4B0N,WAA9C;;AACA,IAAIvN,WAAW,GAAGH,mBAAO,CAAC,CAAD,CAAP,CAA4BG,WAA9C;;AAEA,SAASwN,GAAT,CAAaC,WAAb,EAA2BC,YAA3B,EAAyC;AAErC;AACA;AACA,OAAKD,WAAL,GAAmBA,WAAnB,CAJqC,CAKrC;;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,OAAKrE,MAAL,GAAc,EAAd,CAPqC,CAQrC;AACA;AACA;;AACA,OAAKsE,eAAL,GAAuB,EAAvB,CAXqC,CAYrC;;AACA,OAAKC,gBAAL,GAAwB,EAAxB,CAbqC,CAcrC;;AACA,OAAKC,eAAL,GAAuB,IAAvB;AACA,OAAKC,oBAAL,GAA4B,EAA5B,CAhBqC,CAiBrC;AACA;AACA;AACA;AACA;;AACA,OAAKC,eAAL,GAAuB,IAAvB,CAtBqC,CAuBrC;AACA;;AACA,OAAKC,YAAL,GAAoB,IAApB;AACA,OAAKC,gBAAL,GAAwB,EAAxB;AAEA,SAAO,IAAP;AACH,C,CAED;AACA;AACA;AACA;;;AACAT,GAAG,CAACpV,SAAJ,CAAc8V,mBAAd,GAAoC,UAAS/Q,CAAT,EAAYyI,GAAZ,EAAiB;AACjD,MAAIuI,IAAI,GAAG,IAAIZ,WAAJ,CAAgB,IAAhB,CAAX;AACA,SAAOY,IAAI,CAACC,IAAL,CAAUjR,CAAV,EAAa,IAAb,EAAmByI,GAAnB,CAAP;AACH,CAHD,C,CAKA;AACA;AACA;;;AACA4H,GAAG,CAACpV,SAAJ,CAAciW,mBAAd,GAAoC,UAASlR,CAAT,EAAY;AAC5C,MAAIA,CAAC,CAACsF,mBAAF,KAA0B,IAA9B,EAAqC;AACjC,WAAOtF,CAAC,CAACsF,mBAAT;AACH;;AACDtF,GAAC,CAACsF,mBAAF,GAAwB,KAAKyL,mBAAL,CAAyB/Q,CAAzB,EAA4B,IAA5B,CAAxB;AACAA,GAAC,CAACsF,mBAAF,CAAsBvC,QAAtB,GAAiC,IAAjC;AACA,SAAO/C,CAAC,CAACsF,mBAAT;AACH,CAPD;;AASA+K,GAAG,CAACpV,SAAJ,CAAckW,UAAd,GAA2B,UAASnR,CAAT,EAAYyI,GAAZ,EAAiB;AACxC,MAAKA,GAAG,KAAGzG,SAAX,EAAuB;AACnB,WAAO,KAAKkP,mBAAL,CAAyBlR,CAAzB,CAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAK+Q,mBAAL,CAAyB/Q,CAAzB,EAA4ByI,GAA5B,CAAP;AACH;AACJ,CAND;;AAQA4H,GAAG,CAACpV,SAAJ,CAAcmW,QAAd,GAAyB,UAAUjG,KAAV,EAAiB;AACtC,MAAKA,KAAK,KAAK,IAAf,EAAsB;AAClBA,SAAK,CAACpG,GAAN,GAAY,IAAZ;AACAoG,SAAK,CAACnG,WAAN,GAAoB,KAAKkH,MAAL,CAAY9P,MAAhC;AACH;;AACD,OAAK8P,MAAL,CAAY3O,IAAZ,CAAiB4N,KAAjB;AACH,CAND;;AAQAkF,GAAG,CAACpV,SAAJ,CAAcoW,WAAd,GAA4B,UAAUlG,KAAV,EAAiB;AACzC,OAAKe,MAAL,CAAYf,KAAK,CAACnG,WAAlB,IAAiC,IAAjC,CADyC,CACF;AAC1C,CAFD;;AAIAqL,GAAG,CAACpV,SAAJ,CAAcqW,mBAAd,GAAoC,UAAUtR,CAAV,EAAa;AAC7C,OAAKwQ,eAAL,CAAqBjT,IAArB,CAA0ByC,CAA1B;AACAA,GAAC,CAAC2G,QAAF,GAAa,KAAK6J,eAAL,CAAqBpU,MAArB,GAA4B,CAAzC;AACA,SAAO4D,CAAC,CAAC2G,QAAT;AACH,CAJD;;AAMA0J,GAAG,CAACpV,SAAJ,CAAcsW,gBAAd,GAAiC,UAAU5K,QAAV,EAAoB;AACjD,MAAI,KAAK6J,eAAL,CAAqBpU,MAArB,KAA8B,CAAlC,EAAqC;AACjC,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAKoU,eAAL,CAAqB7J,QAArB,CAAP;AACH;AACJ,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIhG,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAsB/B,KAAlC;;AAEA0P,GAAG,CAACpV,SAAJ,CAAcmQ,iBAAd,GAAkC,UAAUpG,WAAV,EAAuByD,GAAvB,EAA6B;AAC3D,MAAKzD,WAAW,GAAG,CAAd,IAAmBA,WAAW,IAAI,KAAKkH,MAAL,CAAY9P,MAAnD,EAA4D;AACxD,UAAM,uBAAN;AACH;;AACD,MAAI4D,CAAC,GAAG,KAAKkM,MAAL,CAAYlH,WAAZ,CAAR;AACA,MAAIwM,SAAS,GAAG,KAAKL,UAAL,CAAgBnR,CAAhB,CAAhB;;AACA,MAAI,CAACwR,SAAS,CAAChU,QAAV,CAAmBmD,KAAK,CAACW,OAAzB,CAAL,EAAwC;AACpC,WAAOkQ,SAAP;AACH;;AACD,MAAIC,QAAQ,GAAG,IAAI5O,WAAJ,EAAf;AACA4O,UAAQ,CAAChO,MAAT,CAAgB+N,SAAhB;AACAC,UAAQ,CAACxN,SAAT,CAAmBtD,KAAK,CAACW,OAAzB;;AACA,SAAOmH,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACqF,aAAJ,IAAqB,CAArC,IAA0C0D,SAAS,CAAChU,QAAV,CAAmBmD,KAAK,CAACW,OAAzB,CAAjD,EAAoF;AAChF,QAAIwM,aAAa,GAAG,KAAK5B,MAAL,CAAYzD,GAAG,CAACqF,aAAhB,CAApB;AACA,QAAI4D,EAAE,GAAG5D,aAAa,CAACzI,WAAd,CAA0B,CAA1B,CAAT;AACAmM,aAAS,GAAG,KAAKL,UAAL,CAAgBO,EAAE,CAAC1D,WAAnB,CAAZ;AACAyD,YAAQ,CAAChO,MAAT,CAAgB+N,SAAhB;AACAC,YAAQ,CAACxN,SAAT,CAAmBtD,KAAK,CAACW,OAAzB;AACAmH,OAAG,GAAGA,GAAG,CAACa,SAAV;AACH;;AACD,MAAIkI,SAAS,CAAChU,QAAV,CAAmBmD,KAAK,CAACW,OAAzB,CAAJ,EAAuC;AACnCmQ,YAAQ,CAACvO,MAAT,CAAgBvC,KAAK,CAACa,GAAtB;AACH;;AACD,SAAOiQ,QAAP;AACH,CAxBD;;AA0BApB,GAAG,CAACsB,kBAAJ,GAAyB,CAAzB;AAEAjR,OAAO,CAAC2P,GAAR,GAAcA,GAAd,C;;;;;;AC7IA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI1P,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAsB/B,KAAlC;;AACA,IAAIgC,QAAQ,GAAGD,mBAAO,CAAC,CAAD,CAAP,CAA4BC,QAA3C;;AACA,IAAIE,WAAW,GAAGH,mBAAO,CAAC,CAAD,CAAP,CAA4BG,WAA9C;;AACA,IAAI+O,SAAS,GAAGlP,mBAAO,CAAC,EAAD,CAAP,CAA6BkP,SAA7C;;AACA,IAAIC,mBAAmB,GAAGnP,mBAAO,CAAC,EAAD,CAAP,CAA6BmP,mBAAvD;;AAEA,SAASC,UAAT,CAAqBC,MAArB,EAA6B;AACzB;AACA,MAAIA,MAAM,KAAG/P,SAAT,IAAsB+P,MAAM,KAAG,IAAnC,EAAyC;AACrC,UAAM,wBAAN;AACH;;AACD,OAAKA,MAAL,GAAcA,MAAd,CALyB,CAMzB;;AACA,OAAKvL,SAAL,GAAiB,KAAjB;AACA,OAAKwL,KAAL,GAAa,IAAb;AACA,SAAO,IAAP;AACH,C,CACG;;;AACJF,UAAU,CAACxQ,OAAX,GAAqB,CAArB;AACAwQ,UAAU,CAACG,KAAX,GAAmB,CAAnB;AACAH,UAAU,CAACI,IAAX,GAAkB,CAAlB;AACAJ,UAAU,CAACK,SAAX,GAAuB,CAAvB,C,CAA0B;;AAC1BL,UAAU,CAACM,IAAX,GAAkB,CAAlB;AACAN,UAAU,CAACO,MAAX,GAAoB,CAApB;AACAP,UAAU,CAACQ,GAAX,GAAiB,CAAjB,C,CAAoB;;AACpBR,UAAU,CAACS,OAAX,GAAqB,CAArB;AACAT,UAAU,CAACU,QAAX,GAAsB,CAAtB;AACAV,UAAU,CAACW,UAAX,GAAwB,EAAxB;AAEAX,UAAU,CAAC3L,kBAAX,GAAgC,CACpB,SADoB,EAEpB,SAFoB,EAGpB,OAHoB,EAIpB,MAJoB,EAKpB,WALoB,EAMpB,MANoB,EAOpB,QAPoB,EAQpB,KARoB,EASpB,SAToB,EAUpB,UAVoB,EAWpB,YAXoB,CAAhC;AAcA2L,UAAU,CAACY,kBAAX,GAAgC;AACxBC,mBAAiB,EAAEb,UAAU,CAACxQ,OADN;AAExBsR,iBAAe,EAAEd,UAAU,CAACG,KAFJ;AAGxBY,gBAAc,EAAEf,UAAU,CAACI,IAHH;AAIxBzH,qBAAmB,EAAEqH,UAAU,CAACK,SAJR;AAKxBW,gBAAc,EAAEhB,UAAU,CAACM,IALH;AAMxBW,kBAAgB,EAAEjB,UAAU,CAACO,MANL;AAOxBW,eAAa,EAAElB,UAAU,CAACQ,GAPF;AAQxBW,kBAAgB,EAAEnB,UAAU,CAACS,OARL;AASxBW,oBAAkB,EAAEpB,UAAU,CAACU,QATP;AAUxBW,+BAA6B,EAAErB,UAAU,CAACW;AAVlB,CAAhC,C,CAcA;;AACA,SAASK,cAAT,CAAwBf,MAAxB,EAAgCC,KAAhC,EAAuC;AACtCF,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACA,OAAKqB,MAAL,GAAcpB,KAAd,CAFsC,CAEjB;;AAClB,OAAKA,KAAL,GAAa,KAAKqB,SAAL,EAAb;AACA,OAAKC,iBAAL,GAAyBxB,UAAU,CAACM,IAApC;AACA,SAAO,IAAP;AACH;;AAEDU,cAAc,CAAC7X,SAAf,GAA2B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA3B;AACA6X,cAAc,CAAC7X,SAAf,CAAyBkH,WAAzB,GAAuC2Q,cAAvC;;AAEAA,cAAc,CAAC7X,SAAf,CAAyBoY,SAAzB,GAAqC,YAAW;AAC/C,MAAIrT,CAAC,GAAG,IAAI6C,WAAJ,EAAR;AACG7C,GAAC,CAACkD,MAAF,CAAS,KAAKkQ,MAAd;AACA,SAAOpT,CAAP;AACH,CAJD;;AAMA8S,cAAc,CAAC7X,SAAf,CAAyBsY,OAAzB,GAAmC,UAAUlK,MAAV,EAAkBmK,cAAlB,EAAmCC,cAAnC,EAAmD;AAClF,SAAO,KAAKL,MAAL,KAAgB/J,MAAvB;AACH,CAFD;;AAIAyJ,cAAc,CAAC7X,SAAf,CAAyBkB,QAAzB,GAAoC,YAAW;AAC9C,SAAO,KAAKiX,MAAZ;AACA,CAFD;;AAIA,SAASP,cAAT,CAAwBa,SAAxB,EAAmCvO,SAAnC,EAA8CwO,UAA9C,EAA0D3F,WAA1D,EAAuE;AACtE8D,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsB2R,SAAtB;AACG,OAAKvO,SAAL,GAAiBA,SAAjB,CAFmE,CAEvC;;AAC5B,OAAKwO,UAAL,GAAkBA,UAAlB;AACA,OAAK3F,WAAL,GAAmBA,WAAnB,CAJmE,CAInC;;AAChC,OAAKsF,iBAAL,GAAyBxB,UAAU,CAACI,IAApC;AACA,OAAK1L,SAAL,GAAiB,IAAjB;AACA,SAAO,IAAP;AACH;;AAEDqM,cAAc,CAAC5X,SAAf,GAA2B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA3B;AACA4X,cAAc,CAAC5X,SAAf,CAAyBkH,WAAzB,GAAuC0Q,cAAvC;;AAEAA,cAAc,CAAC5X,SAAf,CAAyBsY,OAAzB,GAAmC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACpF,SAAO,KAAP;AACA,CAFD;;AAKA,SAASd,iBAAT,CAA2BZ,MAA3B,EAAmC6B,yBAAnC,EAA8D;AAC7D9B,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACG,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACxQ,OAApC;AACA,OAAKkF,SAAL,GAAiB,IAAjB;AACA,OAAKoN,yBAAL,GAAiCA,yBAAjC;AACA,SAAO,IAAP;AACH;;AAEDjB,iBAAiB,CAAC1X,SAAlB,GAA8B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA9B;AACA0X,iBAAiB,CAAC1X,SAAlB,CAA4BkH,WAA5B,GAA0CwQ,iBAA1C;;AAEAA,iBAAiB,CAAC1X,SAAlB,CAA4BsY,OAA5B,GAAsC,UAAUlK,MAAV,EAAkBmK,cAAlB,EAAmCC,cAAnC,EAAmD;AACxF,SAAO,KAAP;AACA,CAFD;;AAIAd,iBAAiB,CAAC1X,SAAlB,CAA4BkB,QAA5B,GAAuC,YAAW;AACjD,SAAO,SAAP;AACA,CAFD;;AAIA,SAASyW,eAAT,CAAyBb,MAAzB,EAAiChR,KAAjC,EAAwCC,IAAxC,EAA8C;AAC7C8Q,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACA,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACG,KAApC;AACG,OAAKlR,KAAL,GAAaA,KAAb;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKgR,KAAL,GAAa,KAAKqB,SAAL,EAAb;AACA,SAAO,IAAP;AACH;;AAEDT,eAAe,CAAC3X,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA5B;AACA2X,eAAe,CAAC3X,SAAhB,CAA0BkH,WAA1B,GAAwCyQ,eAAxC;;AAEAA,eAAe,CAAC3X,SAAhB,CAA0BoY,SAA1B,GAAsC,YAAW;AAC7C,MAAIrT,CAAC,GAAG,IAAI6C,WAAJ,EAAR;AACA7C,GAAC,CAACoD,QAAF,CAAW,KAAKrC,KAAhB,EAAuB,KAAKC,IAA5B;AACA,SAAOhB,CAAP;AACH,CAJD;;AAMA4S,eAAe,CAAC3X,SAAhB,CAA0BsY,OAA1B,GAAoC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACrF,SAAOpK,MAAM,IAAI,KAAKtI,KAAf,IAAwBsI,MAAM,IAAI,KAAKrI,IAA9C;AACA,CAFD;;AAIA4R,eAAe,CAAC3X,SAAhB,CAA0BkB,QAA1B,GAAqC,YAAW;AAC/C,SAAO,MAAMnB,MAAM,CAAC0J,YAAP,CAAoB,KAAK3D,KAAzB,CAAN,GAAwC,MAAxC,GAAiD/F,MAAM,CAAC0J,YAAP,CAAoB,KAAK1D,IAAzB,CAAjD,GAAkF,GAAzF;AACA,CAFD;;AAIA,SAAS6S,2BAAT,CAAqC9B,MAArC,EAA6C;AAC5CD,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACA,SAAO,IAAP;AACA;;AAED8B,2BAA2B,CAAC5Y,SAA5B,GAAwC6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAAxC;AACA4Y,2BAA2B,CAAC5Y,SAA5B,CAAsCkH,WAAtC,GAAoD0R,2BAApD;;AAEA,SAASpJ,mBAAT,CAA6BsH,MAA7B,EAAqC5M,SAArC,EAAgDiH,SAAhD,EAA2D0H,cAA3D,EAA2E;AAC1ED,6BAA2B,CAAC9R,IAA5B,CAAiC,IAAjC,EAAuCgQ,MAAvC;AACG,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACK,SAApC;AACA,OAAKhN,SAAL,GAAiBA,SAAjB;AACA,OAAKiH,SAAL,GAAiBA,SAAjB;AACA,OAAK0H,cAAL,GAAsBA,cAAtB,CALuE,CAKjC;;AACtC,OAAKtN,SAAL,GAAiB,IAAjB;AACA,SAAO,IAAP;AACH;;AAEDiE,mBAAmB,CAACxP,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAc2R,2BAA2B,CAAC5Y,SAA1C,CAAhC;AACAwP,mBAAmB,CAACxP,SAApB,CAA8BkH,WAA9B,GAA4CsI,mBAA5C;;AAEAA,mBAAmB,CAACxP,SAApB,CAA8BsY,OAA9B,GAAwC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACzF,SAAO,KAAP;AACA,CAFD;;AAIAhJ,mBAAmB,CAACxP,SAApB,CAA8B8Y,YAA9B,GAA6C,YAAW;AACvD,SAAO,IAAInC,SAAJ,CAAc,KAAKzM,SAAnB,EAA8B,KAAKiH,SAAnC,EAA8C,KAAK0H,cAAnD,CAAP;AACA,CAFD;;AAIArJ,mBAAmB,CAACxP,SAApB,CAA8BkB,QAA9B,GAAyC,YAAW;AACnD,SAAO,UAAU,KAAKgJ,SAAf,GAA2B,GAA3B,GAAiC,KAAKiH,SAA7C;AACA,CAFD;;AAIA,SAAS2G,gBAAT,CAA0BhB,MAA1B,EAAkC5M,SAAlC,EAA6C6O,WAA7C,EAA0DF,cAA1D,EAA0E;AACzEhC,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACG,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACO,MAApC;AACA,OAAKlN,SAAL,GAAiBA,SAAjB;AACA,OAAK6O,WAAL,GAAmBA,WAAW,KAAGhS,SAAd,GAA0B,CAAC,CAA3B,GAA+BgS,WAAlD;AACA,OAAKF,cAAL,GAAsBA,cAAc,KAAG9R,SAAjB,GAA6B,KAA7B,GAAqC8R,cAA3D,CALsE,CAKK;;AAC3E,OAAKtN,SAAL,GAAiB,IAAjB;AACA,SAAO,IAAP;AACH;;AAEDuM,gBAAgB,CAAC9X,SAAjB,GAA6B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA7B;AACA8X,gBAAgB,CAAC9X,SAAjB,CAA2BkH,WAA3B,GAAyC4Q,gBAAzC;;AAGAA,gBAAgB,CAAC9X,SAAjB,CAA2BsY,OAA3B,GAAqC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACtF,SAAO,KAAP;AACA,CAFD;;AAIAV,gBAAgB,CAAC9X,SAAjB,CAA2BkB,QAA3B,GAAsC,YAAW;AAChD,SAAO,YAAY,KAAKgJ,SAAjB,GAA6B,GAA7B,GAAmC,KAAK6O,WAA/C;AACA,CAFD,C,CAKA;;;AACA,SAAShB,aAAT,CAAuBjB,MAAvB,EAA+BnU,GAA/B,EAAoC;AACnCkU,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACA,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACQ,GAApC;;AACG,MAAI1U,GAAG,KAAIoE,SAAP,IAAoBpE,GAAG,KAAI,IAA/B,EAAqC;AACjC,SAAKoU,KAAL,GAAapU,GAAb;AACH,GAFD,MAEO;AACH,SAAKoU,KAAL,GAAa,IAAInP,WAAJ,EAAb;AACA,SAAKmP,KAAL,CAAW9O,MAAX,CAAkBvC,KAAK,CAACU,YAAxB;AACH;;AACD,SAAO,IAAP;AACH;;AAED2R,aAAa,CAAC/X,SAAd,GAA0B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA1B;AACA+X,aAAa,CAAC/X,SAAd,CAAwBkH,WAAxB,GAAsC6Q,aAAtC;;AAEAA,aAAa,CAAC/X,SAAd,CAAwBsY,OAAxB,GAAkC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACnF,SAAO,KAAKzB,KAAL,CAAWxU,QAAX,CAAoB6L,MAApB,CAAP;AACA,CAFD;;AAKA2J,aAAa,CAAC/X,SAAd,CAAwBkB,QAAxB,GAAmC,YAAW;AAC7C,SAAO,KAAK6V,KAAL,CAAW7V,QAAX,EAAP;AACA,CAFD;;AAIA,SAAS8W,gBAAT,CAA0BlB,MAA1B,EAAkCnU,GAAlC,EAAuC;AACtCoV,eAAa,CAACjR,IAAd,CAAmB,IAAnB,EAAyBgQ,MAAzB,EAAiCnU,GAAjC;AACA,OAAK0V,iBAAL,GAAyBxB,UAAU,CAACS,OAApC;AACA,SAAO,IAAP;AACA;;AAEDU,gBAAgB,CAAChY,SAAjB,GAA6B6B,MAAM,CAACoF,MAAP,CAAc8Q,aAAa,CAAC/X,SAA5B,CAA7B;AACAgY,gBAAgB,CAAChY,SAAjB,CAA2BkH,WAA3B,GAAyC8Q,gBAAzC;;AAEAA,gBAAgB,CAAChY,SAAjB,CAA2BsY,OAA3B,GAAqC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACtF,SAAOpK,MAAM,IAAImK,cAAV,IAA4BnK,MAAM,IAAIoK,cAAtC,IACL,CAACT,aAAa,CAAC/X,SAAd,CAAwBsY,OAAxB,CAAgCxR,IAAhC,CAAqC,IAArC,EAA2CsH,MAA3C,EAAmDmK,cAAnD,EAAmEC,cAAnE,CADH;AAEA,CAHD;;AAKAR,gBAAgB,CAAChY,SAAjB,CAA2BkB,QAA3B,GAAsC,YAAW;AAChD,SAAO,MAAM6W,aAAa,CAAC/X,SAAd,CAAwBkB,QAAxB,CAAiC4F,IAAjC,CAAsC,IAAtC,CAAb;AACA,CAFD;;AAIA,SAASmR,kBAAT,CAA4BnB,MAA5B,EAAoC;AACnCD,YAAU,CAAC/P,IAAX,CAAgB,IAAhB,EAAsBgQ,MAAtB;AACA,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACU,QAApC;AACA,SAAO,IAAP;AACA;;AAEDU,kBAAkB,CAACjY,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAc4P,UAAU,CAAC7W,SAAzB,CAA/B;AACAiY,kBAAkB,CAACjY,SAAnB,CAA6BkH,WAA7B,GAA2C+Q,kBAA3C;;AAGAA,kBAAkB,CAACjY,SAAnB,CAA6BsY,OAA7B,GAAuC,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACxF,SAAOpK,MAAM,IAAImK,cAAV,IAA4BnK,MAAM,IAAIoK,cAA7C;AACA,CAFD;;AAIAP,kBAAkB,CAACjY,SAAnB,CAA6BkB,QAA7B,GAAwC,YAAW;AAClD,SAAO,GAAP;AACA,CAFD;;AAIA,SAASgX,6BAAT,CAAuCpB,MAAvC,EAA+C4B,UAA/C,EAA2D;AAC1DE,6BAA2B,CAAC9R,IAA5B,CAAiC,IAAjC,EAAuCgQ,MAAvC;AACG,OAAKuB,iBAAL,GAAyBxB,UAAU,CAACW,UAApC;AACA,OAAKkB,UAAL,GAAkBA,UAAlB;AACA,OAAKnN,SAAL,GAAiB,IAAjB;AACA,SAAO,IAAP;AACH;;AAED2M,6BAA6B,CAAClY,SAA9B,GAA0C6B,MAAM,CAACoF,MAAP,CAAc2R,2BAA2B,CAAC5Y,SAA1C,CAA1C;AACAkY,6BAA6B,CAAClY,SAA9B,CAAwCkH,WAAxC,GAAsDgR,6BAAtD;;AAEAA,6BAA6B,CAAClY,SAA9B,CAAwCsY,OAAxC,GAAkD,UAASlK,MAAT,EAAiBmK,cAAjB,EAAkCC,cAAlC,EAAkD;AACnG,SAAO,KAAP;AACA,CAFD;;AAIAN,6BAA6B,CAAClY,SAA9B,CAAwC8Y,YAAxC,GAAuD,YAAW;AACjE,SAAO,IAAIlC,mBAAJ,CAAwB,KAAK8B,UAA7B,CAAP;AACA,CAFD;;AAIAR,6BAA6B,CAAClY,SAA9B,CAAwCkB,QAAxC,GAAmD,YAAW;AAC7D,SAAO,KAAKwX,UAAL,GAAkB,QAAzB;AACA,CAFD;;AAIAjT,OAAO,CAACoR,UAAR,GAAqBA,UAArB;AACApR,OAAO,CAACoS,cAAR,GAAyBA,cAAzB;AACApS,OAAO,CAACsS,aAAR,GAAwBA,aAAxB;AACAtS,OAAO,CAACuS,gBAAR,GAA2BA,gBAA3B;AACAvS,OAAO,CAACmS,cAAR,GAAyBA,cAAzB;AACAnS,OAAO,CAACqS,gBAAR,GAA2BA,gBAA3B;AACArS,OAAO,CAACiS,iBAAR,GAA4BA,iBAA5B;AACAjS,OAAO,CAACkS,eAAR,GAA0BA,eAA1B;AACAlS,OAAO,CAACwS,kBAAR,GAA6BA,kBAA7B;AACAxS,OAAO,CAAC+J,mBAAR,GAA8BA,mBAA9B;AACA/J,OAAO,CAACyS,6BAAR,GAAwCA,6BAAxC;AACAzS,OAAO,CAACmT,2BAAR,GAAsCA,2BAAtC,C;;;;;;AC3TA;;AACA;;;;AAKA;AACA;AACA;AACA;AACA;AAEA,IAAIxD,GAAG,GAAG3N,mBAAO,CAAC,CAAD,CAAP,CAAiB2N,GAA3B;;AACA,IAAIrI,KAAK,GAAGtF,mBAAO,CAAC,CAAD,CAAnB;;AACA,IAAIrE,IAAI,GAAG2J,KAAK,CAAC3J,IAAjB;AACA,IAAI3B,GAAG,GAAGsL,KAAK,CAACtL,GAAhB;;AACA,IAAIuX,eAAe,GAAGvR,mBAAO,CAAC,EAAD,CAAP,CAA6BuR,eAAnD;;AACA,IAAIhG,KAAK,GAAGvL,mBAAO,CAAC,CAAD,CAAP,CAAkCuL,KAA9C;;AAEA,SAASiG,aAAT,CAAuBC,CAAvB,EAA0B;AACzB,SAAOA,CAAC,CAACC,oBAAF,EAAP;AACA;;AAED,SAASC,eAAT,CAAyBvZ,CAAzB,EAA4ByB,CAA5B,EAA+B;AAC9B,MAAKzB,CAAC,KAAGyB,CAAT,EAAa;AACZ,WAAO,IAAP;AACA,GAFD,MAEO,IAAKzB,CAAC,KAAG,IAAJ,IAAYyB,CAAC,KAAG,IAArB,EAA4B;AAClC,WAAO,KAAP;AACA,GAFM,MAGD,OAAOzB,CAAC,CAACwZ,kBAAF,CAAqB/X,CAArB,CAAP;AACL;;AAGF,SAASgY,YAAT,CAAsBC,OAAtB,EAA+B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAKC,YAAL,GAAoB,IAAI/X,GAAJ,CAAQwX,aAAR,EAAuBG,eAAvB,CAApB,CAZ8B,CAa9B;AACA;AACA;;AACA,OAAKG,OAAL,GAAeA,OAAO,KAAKxS,SAAZ,GAAwB,IAAxB,GAA+BwS,OAA9C,CAhB8B,CAiB9B;AACA;AACA;AACA;AACA;;AACA,OAAKzR,QAAL,GAAgB,KAAhB,CAtB8B,CAuB9B;;AACA,OAAK2R,OAAL,GAAe,EAAf,CAxB8B,CA0B9B;AACA;AACA;AACA;;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL,GAAuB,IAAvB,CA/B8B,CAiC9B;AACA;;AACA,OAAKC,kBAAL,GAA0B,KAA1B;AACA,OAAKC,oBAAL,GAA4B,KAA5B;AAEA,OAAKtI,cAAL,GAAsB,CAAC,CAAvB;AAEA,SAAO,IAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA+H,YAAY,CAACtZ,SAAb,CAAuBkC,GAAvB,GAA6B,UAAS4X,MAAT,EAAiB5G,UAAjB,EAA6B;AACzD,MAAIA,UAAU,KAAKnM,SAAnB,EAA8B;AAC7BmM,cAAU,GAAG,IAAb;AACA;;AACD,MAAI,KAAKpL,QAAT,EAAmB;AAClB,UAAM,sBAAN;AACA;;AACD,MAAIgS,MAAM,CAACC,eAAP,KAA2Bf,eAAe,CAACgB,IAA/C,EAAqD;AACpD,SAAKJ,kBAAL,GAA0B,IAA1B;AACA;;AACD,MAAIE,MAAM,CAACG,uBAAP,GAAiC,CAArC,EAAwC;AACvC,SAAKJ,oBAAL,GAA4B,IAA5B;AACA;;AACD,MAAI5H,QAAQ,GAAG,KAAKuH,YAAL,CAAkBtX,GAAlB,CAAsB4X,MAAtB,CAAf;;AACA,MAAI7H,QAAQ,KAAK6H,MAAjB,EAAyB;AACxB,SAAKvI,cAAL,GAAsB,CAAC,CAAvB;AACA,SAAKkI,OAAL,CAAanX,IAAb,CAAkBwX,MAAlB,EAFwB,CAEG;;AAC3B,WAAO,IAAP;AACA,GAlBwD,CAmBzD;;;AACA,MAAI7G,cAAc,GAAG,CAAC,KAAKsG,OAA3B;AACA,MAAIW,MAAM,GAAGlH,KAAK,CAACf,QAAQ,CAAC2C,OAAV,EAAmBkF,MAAM,CAAClF,OAA1B,EAAmC3B,cAAnC,EAAmDC,UAAnD,CAAlB,CArByD,CAsBzD;AACA;AACA;;AACAjB,UAAQ,CAACgI,uBAAT,GAAmC/Z,IAAI,CAACoI,GAAL,CAAU2J,QAAQ,CAACgI,uBAAnB,EAA4CH,MAAM,CAACG,uBAAnD,CAAnC,CAzByD,CA0BzD;;AACA,MAAIH,MAAM,CAACK,0BAAX,EAAuC;AACtClI,YAAQ,CAACkI,0BAAT,GAAsC,IAAtC;AACA;;AACDlI,UAAQ,CAAC2C,OAAT,GAAmBsF,MAAnB,CA9ByD,CA8B9B;;AAC3B,SAAO,IAAP;AACA,CAhCD;;AAkCAZ,YAAY,CAACtZ,SAAb,CAAuBoa,SAAvB,GAAmC,YAAW;AAC7C,MAAInJ,MAAM,GAAG,IAAIxP,GAAJ,EAAb;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyY,OAAL,CAAatY,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;AAC7CiQ,UAAM,CAAC/O,GAAP,CAAW,KAAKuX,OAAL,CAAazY,CAAb,EAAgBkP,KAA3B;AACA;;AACD,SAAOe,MAAP;AACA,CAND;;AAQAqI,YAAY,CAACtZ,SAAb,CAAuBqa,aAAvB,GAAuC,YAAW;AACjD,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAItZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyY,OAAL,CAAatY,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;AAC7C,QAAIkY,CAAC,GAAG,KAAKO,OAAL,CAAazY,CAAb,EAAgB+Y,eAAxB;;AACA,QAAIb,CAAC,KAAKF,eAAe,CAACgB,IAA1B,EAAgC;AAC/BM,WAAK,CAAChY,IAAN,CAAW4W,CAAC,CAACa,eAAb;AACA;AACD;;AACD,SAAOO,KAAP;AACA,CATD;;AAWAzY,MAAM,CAACC,cAAP,CAAsBwX,YAAY,CAACtZ,SAAnC,EAA8C,OAA9C,EAAuD;AACtD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAK0X,OAAZ;AACA;AAHqD,CAAvD;;AAMAH,YAAY,CAACtZ,SAAb,CAAuBua,eAAvB,GAAyC,UAASC,WAAT,EAAsB;AAC9D,MAAI,KAAK1S,QAAT,EAAmB;AAClB,UAAM,sBAAN;AACA;;AACD,MAAI,KAAK0R,YAAL,CAAkBrY,MAAlB,KAA6B,CAAjC,EAAoC;AACnC;AACA;;AACD,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyY,OAAL,CAAatY,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;AAC7C,QAAI8Y,MAAM,GAAG,KAAKL,OAAL,CAAazY,CAAb,CAAb;AACA8Y,UAAM,CAAClF,OAAP,GAAiB4F,WAAW,CAACC,gBAAZ,CAA6BX,MAAM,CAAClF,OAApC,CAAjB;AACA;AACD,CAXD;;AAaA0E,YAAY,CAACtZ,SAAb,CAAuB0a,MAAvB,GAAgC,UAASC,IAAT,EAAe;AAC9C,OAAK,IAAI3Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2Z,IAAI,CAACxZ,MAAzB,EAAiCH,CAAC,EAAlC,EAAsC;AACrC,SAAKkB,GAAL,CAASyY,IAAI,CAAC3Z,CAAD,CAAb;AACA;;AACD,SAAO,KAAP;AACA,CALD;;AAOAsY,YAAY,CAACtZ,SAAb,CAAuBuB,MAAvB,GAAgC,UAASgC,KAAT,EAAgB;AAC/C,SAAO,SAASA,KAAT,IACLA,KAAK,YAAY+V,YAAjB,IACDvM,KAAK,CAACvH,WAAN,CAAkB,KAAKiU,OAAvB,EAAgClW,KAAK,CAACkW,OAAtC,CADC,IAED,KAAKF,OAAL,KAAiBhW,KAAK,CAACgW,OAFtB,IAGD,KAAKG,SAAL,KAAmBnW,KAAK,CAACmW,SAHxB,IAID,KAAKC,eAAL,KAAyBpW,KAAK,CAACoW,eAJ9B,IAKD,KAAKC,kBAAL,KAA4BrW,KAAK,CAACqW,kBALjC,IAMD,KAAKC,oBAAL,KAA8BtW,KAAK,CAACsW,oBAPrC;AAQA,CATD;;AAWAP,YAAY,CAACtZ,SAAb,CAAuBM,QAAvB,GAAkC,YAAW;AACzC,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACA,OAAKsB,cAAL,CAAoBtC,IAApB;AACA,SAAOA,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD;;AAOAgW,YAAY,CAACtZ,SAAb,CAAuB0E,cAAvB,GAAwC,UAAStC,IAAT,EAAe;AACtD,MAAI,KAAK0F,QAAT,EAAmB;AAClB,QAAI,KAAKyJ,cAAL,KAAwB,CAAC,CAA7B,EAAgC;AACtB,UAAInP,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,UAAI,CAACiB,MAAL,CAAY,KAAKoW,OAAjB;AACT,WAAKlI,cAAL,GAAsBnP,IAAI,CAACkB,MAAL,EAAtB;AACA;;AACKlB,QAAI,CAACiB,MAAL,CAAY,KAAKkO,cAAjB;AACN,GAPD,MAOO;AACAnP,QAAI,CAACiB,MAAL,CAAY,KAAKoW,OAAjB;AACN;AACD,CAXD;;AAcA5X,MAAM,CAACC,cAAP,CAAsBwX,YAAY,CAACtZ,SAAnC,EAA8C,QAA9C,EAAwD;AACvD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAK0X,OAAL,CAAatY,MAApB;AACA;AAHsD,CAAxD;;AAMAmY,YAAY,CAACtZ,SAAb,CAAuB4R,OAAvB,GAAiC,YAAW;AAC3C,SAAO,KAAK6H,OAAL,CAAatY,MAAb,KAAwB,CAA/B;AACA,CAFD;;AAIAmY,YAAY,CAACtZ,SAAb,CAAuBuC,QAAvB,GAAkC,UAASoF,IAAT,EAAe;AAChD,MAAI,KAAK6R,YAAL,KAAsB,IAA1B,EAAgC;AAC/B,UAAM,mDAAN;AACA;;AACD,SAAO,KAAKA,YAAL,CAAkBjX,QAAlB,CAA2BoF,IAA3B,CAAP;AACA,CALD;;AAOA2R,YAAY,CAACtZ,SAAb,CAAuB4a,YAAvB,GAAsC,UAASjT,IAAT,EAAe;AACpD,MAAI,KAAK6R,YAAL,KAAsB,IAA1B,EAAgC;AAC/B,UAAM,mDAAN;AACA;;AACD,SAAO,KAAKA,YAAL,CAAkBoB,YAAlB,CAA+BjT,IAA/B,CAAP;AACA,CALD;;AAOA2R,YAAY,CAACtZ,SAAb,CAAuB6a,KAAvB,GAA+B,YAAW;AACzC,MAAI,KAAK/S,QAAT,EAAmB;AAClB,UAAM,sBAAN;AACA;;AACD,OAAK2R,OAAL,GAAe,EAAf;AACA,OAAKlI,cAAL,GAAsB,CAAC,CAAvB;AACA,OAAKiI,YAAL,GAAoB,IAAI/X,GAAJ,EAApB;AACA,CAPD;;AASA6X,YAAY,CAACtZ,SAAb,CAAuB8a,WAAvB,GAAqC,UAAShT,QAAT,EAAmB;AACvD,OAAKA,QAAL,GAAgBA,QAAhB;;AACA,MAAIA,QAAJ,EAAc;AACb,SAAK0R,YAAL,GAAoB,IAApB,CADa,CACa;AAC1B;AACD,CALD;;AAOAF,YAAY,CAACtZ,SAAb,CAAuBkB,QAAvB,GAAkC,YAAW;AAC5C,SAAO6L,KAAK,CAACnN,aAAN,CAAoB,KAAK6Z,OAAzB,KACL,KAAKG,kBAAL,GAA0B,yBAAyB,KAAKA,kBAAxD,GAA6E,EADxE,KAEL,KAAKF,SAAL,KAAmBtE,GAAG,CAACsB,kBAAvB,GAA4C,gBAAgB,KAAKgD,SAAjE,GAA6E,EAFxE,KAGL,KAAKC,eAAL,KAAyB,IAAzB,GAAgC,sBAAsB,KAAKA,eAA3D,GAA6E,EAHxE,KAIL,KAAKE,oBAAL,GAA4B,uBAA5B,GAAsD,EAJjD,CAAP;AAKA,CAND;;AAQA,SAASkB,mBAAT,GAA+B;AAC9BzB,cAAY,CAACxS,IAAb,CAAkB,IAAlB;AACA,OAAK0S,YAAL,GAAoB,IAAI/X,GAAJ,EAApB;AACA,SAAO,IAAP;AACA;;AAEDsZ,mBAAmB,CAAC/a,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAcqS,YAAY,CAACtZ,SAA3B,CAAhC;AACA+a,mBAAmB,CAAC/a,SAApB,CAA8BkH,WAA9B,GAA4C6T,mBAA5C;AAEAtV,OAAO,CAAC6T,YAAR,GAAuBA,YAAvB;AACA7T,OAAO,CAACsV,mBAAR,GAA8BA,mBAA9B,C;;;;;;AC9PA;;;;AAIAtV,OAAO,CAACqE,GAAR,GAAcrC,mBAAO,CAAC,EAAD,CAArB;AACAhC,OAAO,CAACuV,WAAR,GAAsBvT,mBAAO,CAAC,EAAD,CAA7B;AACAhC,OAAO,CAACwV,GAAR,GAAcxT,mBAAO,CAAC,EAAD,CAArB;AACAhC,OAAO,CAACyV,aAAR,GAAwBzT,mBAAO,CAAC,EAAD,CAA/B;AACAhC,OAAO,CAAC0V,IAAR,GAAe1T,mBAAO,CAAC,EAAD,CAAtB;AACAhC,OAAO,CAAC2V,KAAR,GAAgB3T,mBAAO,CAAC,EAAD,CAAvB;AACAhC,OAAO,CAACC,KAAR,GAAgB+B,mBAAO,CAAC,CAAD,CAAP,CAAmB/B,KAAnC;AACAD,OAAO,CAAC4V,WAAR,GAAsB5T,mBAAO,CAAC,EAAD,CAAP,CAAyB4T,WAA/C;AACA5V,OAAO,CAACoB,WAAR,GAAsBY,mBAAO,CAAC,CAAD,CAAP,CAAmBZ,WAAzC;AACApB,OAAO,CAAC6V,WAAR,GAAsB7T,mBAAO,CAAC,EAAD,CAAP,CAAyB6T,WAA/C;AACA7V,OAAO,CAAC8V,UAAR,GAAqB9T,mBAAO,CAAC,EAAD,CAAP,CAAwB8T,UAA7C;AACA9V,OAAO,CAAC+V,iBAAR,GAA4B/T,mBAAO,CAAC,EAAD,CAAP,CAA+B+T,iBAA3D;AACA/V,OAAO,CAACgW,KAAR,GAAgBhU,mBAAO,CAAC,EAAD,CAAP,CAAmBgU,KAAnC;AACAhW,OAAO,CAACiW,MAAR,GAAiBjU,mBAAO,CAAC,EAAD,CAAP,CAAoBiU,MAArC;;AACA,IAAIC,EAAE,GAAGlU,mBAAO,CAAC,CAAD,CAAhB;;AACAhC,OAAO,CAACsM,sBAAR,GAAiC4J,EAAE,CAAC5J,sBAApC;AACAtM,OAAO,CAACmW,iBAAR,GAA4BnU,mBAAO,CAAC,EAAD,CAAP,CAA+BmU,iBAA3D;AACAnW,OAAO,CAACiC,QAAR,GAAmBD,mBAAO,CAAC,CAAD,CAAP,CAAyBC,QAA5C;AACAjC,OAAO,CAACsH,KAAR,GAAgBtF,mBAAO,CAAC,CAAD,CAAvB,C;;;;;;ACtBA;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIhG,GAAG,GAAGgG,mBAAO,CAAC,CAAD,CAAP,CAAsBhG,GAAhC;;AACA,IAAI2B,IAAI,GAAGqE,mBAAO,CAAC,CAAD,CAAP,CAAsBrE,IAAjC;;AAEA,SAAS4V,eAAT,GAA2B;AAC1B,SAAO,IAAP;AACA;;AAEDA,eAAe,CAAChZ,SAAhB,CAA0BM,QAA1B,GAAqC,YAAW;AAC5C,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACA,OAAKsB,cAAL,CAAoBtC,IAApB;AACA,SAAOA,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA0V,eAAe,CAAChZ,SAAhB,CAA0B6b,QAA1B,GAAqC,UAASC,MAAT,EAAiBlJ,YAAjB,EAA+B,CACnE,CADD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAoG,eAAe,CAAChZ,SAAhB,CAA0B+b,cAA1B,GAA2C,UAASD,MAAT,EAAiBlJ,YAAjB,EAA+B;AACzE,SAAO,IAAP;AACA,CAFD;;AAIAoG,eAAe,CAACgD,UAAhB,GAA6B,UAASnc,CAAT,EAAYyB,CAAZ,EAAe;AAC3C,MAAIzB,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKmZ,eAAe,CAACgB,IAAxC,EAA8C;AAC7C,WAAO1Y,CAAP;AACA;;AACD,MAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK0X,eAAe,CAACgB,IAAxC,EAA8C;AAC7C,WAAOna,CAAP;AACA;;AACD,MAAIgJ,MAAM,GAAG,IAAIoT,GAAJ,CAAQpc,CAAR,EAAWyB,CAAX,CAAb;;AACA,MAAIuH,MAAM,CAACqT,KAAP,CAAa/a,MAAb,KAAwB,CAA5B,EAA+B;AAC9B,WAAO0H,MAAM,CAACqT,KAAP,CAAa,CAAb,CAAP;AACA,GAFD,MAEO;AACN,WAAOrT,MAAP;AACA;AACD,CAbD;;AAeAmQ,eAAe,CAACmD,SAAhB,GAA4B,UAAStc,CAAT,EAAYyB,CAAZ,EAAe;AAC1C,MAAIzB,CAAC,KAAK,IAAV,EAAgB;AACf,WAAOyB,CAAP;AACA;;AACD,MAAIA,CAAC,KAAK,IAAV,EAAgB;AACf,WAAOzB,CAAP;AACA;;AACD,MAAIA,CAAC,KAAKmZ,eAAe,CAACgB,IAAtB,IAA8B1Y,CAAC,KAAK0X,eAAe,CAACgB,IAAxD,EAA8D;AAC7D,WAAOhB,eAAe,CAACgB,IAAvB;AACA;;AACD,MAAInR,MAAM,GAAG,IAAIuT,EAAJ,CAAOvc,CAAP,EAAUyB,CAAV,CAAb;;AACA,MAAIuH,MAAM,CAACqT,KAAP,CAAa/a,MAAb,KAAwB,CAA5B,EAA+B;AAC9B,WAAO0H,MAAM,CAACqT,KAAP,CAAa,CAAb,CAAP;AACA,GAFD,MAEO;AACN,WAAOrT,MAAP;AACA;AACD,CAhBD;;AAkBA,SAAS8N,SAAT,CAAmBzM,SAAnB,EAA8BiH,SAA9B,EAAyC0H,cAAzC,EAAyD;AACxDG,iBAAe,CAAClS,IAAhB,CAAqB,IAArB;AACA,OAAKoD,SAAL,GAAiBA,SAAS,KAAKnD,SAAd,GAA0B,CAAC,CAA3B,GAA+BmD,SAAhD;AACA,OAAKiH,SAAL,GAAiBA,SAAS,KAAKpK,SAAd,GAA0B,CAAC,CAA3B,GAA+BoK,SAAhD;AACA,OAAK0H,cAAL,GAAsBA,cAAc,KAAK9R,SAAnB,GAA+B,KAA/B,GAAuC8R,cAA7D,CAJwD,CAIqB;;AAC7E,SAAO,IAAP;AACA;;AAEDlC,SAAS,CAAC3W,SAAV,GAAsB6B,MAAM,CAACoF,MAAP,CAAc+R,eAAe,CAAChZ,SAA9B,CAAtB;AACA2W,SAAS,CAAC3W,SAAV,CAAoBkH,WAApB,GAAkCyP,SAAlC,C,CAEA;AACA;AACA;;AACAqC,eAAe,CAACgB,IAAhB,GAAuB,IAAIrD,SAAJ,EAAvB;;AAGAA,SAAS,CAAC3W,SAAV,CAAoB6b,QAApB,GAA+B,UAASC,MAAT,EAAiBlJ,YAAjB,EAA+B;AAC7D,MAAIyJ,QAAQ,GAAG,KAAKxD,cAAL,GAAsBjG,YAAtB,GAAqC,IAApD;AACA,SAAOkJ,MAAM,CAACQ,OAAP,CAAeD,QAAf,EAAyB,KAAKnS,SAA9B,EAAyC,KAAKiH,SAA9C,CAAP;AACA,CAHD;;AAKAwF,SAAS,CAAC3W,SAAV,CAAoB0E,cAApB,GAAqC,UAAStC,IAAT,EAAe;AACnDA,MAAI,CAACiB,MAAL,CAAY,KAAK6G,SAAjB,EAA4B,KAAKiH,SAAjC,EAA4C,KAAK0H,cAAjD;AACA,CAFD;;AAIAlC,SAAS,CAAC3W,SAAV,CAAoBuB,MAApB,GAA6B,UAASgC,KAAT,EAAgB;AAC5C,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAYoT,SAAnB,CAAJ,EAAmC;AACzC,WAAO,KAAP;AACA,GAFM,MAEA;AACN,WAAO,KAAKzM,SAAL,KAAmB3G,KAAK,CAAC2G,SAAzB,IACL,KAAKiH,SAAL,KAAmB5N,KAAK,CAAC4N,SADpB,IAEL,KAAK0H,cAAL,KAAwBtV,KAAK,CAACsV,cAFhC;AAGA;AACD,CAVD;;AAYAlC,SAAS,CAAC3W,SAAV,CAAoBkB,QAApB,GAA+B,YAAW;AACzC,SAAO,MAAM,KAAKgJ,SAAX,GAAuB,GAAvB,GAA6B,KAAKiH,SAAlC,GAA8C,IAArD;AACA,CAFD;;AAIA,SAASyF,mBAAT,CAA6B8B,UAA7B,EAAyC;AACxCM,iBAAe,CAAClS,IAAhB,CAAqB,IAArB;AACA,OAAK4R,UAAL,GAAkBA,UAAU,KAAK3R,SAAf,GAA2B,CAA3B,GAA+B2R,UAAjD;AACA;;AAED9B,mBAAmB,CAAC5W,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAc+R,eAAe,CAAChZ,SAA9B,CAAhC;AACA4W,mBAAmB,CAAC5W,SAApB,CAA8BkH,WAA9B,GAA4C0P,mBAA5C;;AAEAA,mBAAmB,CAAC5W,SAApB,CAA8B6b,QAA9B,GAAyC,UAASC,MAAT,EAAiBlJ,YAAjB,EAA+B;AACvE,SAAOkJ,MAAM,CAACS,QAAP,CAAgB3J,YAAhB,EAA8B,KAAK8F,UAAnC,CAAP;AACA,CAFD;;AAIA9B,mBAAmB,CAAC5W,SAApB,CAA8B+b,cAA9B,GAA+C,UAASD,MAAT,EAAiBlJ,YAAjB,EAA+B;AAC7E,MAAIkJ,MAAM,CAACS,QAAP,CAAgB3J,YAAhB,EAA8B,KAAK8F,UAAnC,CAAJ,EAAoD;AACnD,WAAOM,eAAe,CAACgB,IAAvB;AACA,GAFD,MAEO;AACN,WAAO,IAAP;AACA;AACD,CAND;;AAQApD,mBAAmB,CAAC5W,SAApB,CAA8Bwc,SAA9B,GAA0C,UAASjZ,KAAT,EAAgB;AACzD,SAAO,KAAKmV,UAAL,GAAkBnV,KAAK,CAACmV,UAA/B;AACA,CAFD;;AAIA9B,mBAAmB,CAAC5W,SAApB,CAA8B0E,cAA9B,GAA+C,UAAStC,IAAT,EAAe;AAC1DA,MAAI,CAACiB,MAAL,CAAY,EAAZ;AACH,CAFD;;AAIAuT,mBAAmB,CAAC5W,SAApB,CAA8BuB,MAA9B,GAAuC,UAASgC,KAAT,EAAgB;AACtD,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAYqT,mBAAnB,CAAJ,EAA6C;AACnD,WAAO,KAAP;AACA,GAFM,MAEA;AACN,WAAO,KAAK8B,UAAL,KAAoBnV,KAAK,CAACmV,UAAjC;AACA;AACD,CARD;;AAUA9B,mBAAmB,CAAC5W,SAApB,CAA8BkB,QAA9B,GAAyC,YAAW;AACnD,SAAO,MAAI,KAAKwX,UAAT,GAAoB,UAA3B;AACA,CAFD;;AAMA9B,mBAAmB,CAAC6F,0BAApB,GAAiD,UAAS9Z,GAAT,EAAc;AAC9D,MAAIkG,MAAM,GAAG,EAAb;AACAlG,KAAG,CAACN,MAAJ,GAAaS,GAAb,CAAkB,UAAS8R,OAAT,EAAkB;AACnC,QAAIA,OAAO,YAAYgC,mBAAvB,EAA4C;AAC3C/N,YAAM,CAACvG,IAAP,CAAYsS,OAAZ;AACA;AACD,GAJD;AAKA,SAAO/L,MAAP;AACA,CARD,C,CAWA;AACA;AACA;;;AACA,SAASoT,GAAT,CAAapc,CAAb,EAAgByB,CAAhB,EAAmB;AAClB0X,iBAAe,CAAClS,IAAhB,CAAqB,IAArB;AACA,MAAI4V,QAAQ,GAAG,IAAIjb,GAAJ,EAAf;;AACA,MAAI5B,CAAC,YAAYoc,GAAjB,EAAsB;AACrBpc,KAAC,CAACqc,KAAF,CAAQpZ,GAAR,CAAY,UAAS+B,CAAT,EAAY;AACvB6X,cAAQ,CAACxa,GAAT,CAAa2C,CAAb;AACA,KAFD;AAGA,GAJD,MAIO;AACN6X,YAAQ,CAACxa,GAAT,CAAarC,CAAb;AACA;;AACD,MAAIyB,CAAC,YAAY2a,GAAjB,EAAsB;AACrB3a,KAAC,CAAC4a,KAAF,CAAQpZ,GAAR,CAAY,UAAS+B,CAAT,EAAY;AACvB6X,cAAQ,CAACxa,GAAT,CAAa2C,CAAb;AACA,KAFD;AAGA,GAJD,MAIO;AACN6X,YAAQ,CAACxa,GAAT,CAAaZ,CAAb;AACA;;AACD,MAAIqb,oBAAoB,GAAG/F,mBAAmB,CAAC6F,0BAApB,CAA+CC,QAA/C,CAA3B;;AACA,MAAIC,oBAAoB,CAACxb,MAArB,GAA8B,CAAlC,EAAqC;AACpC;AACA,QAAIyb,OAAO,GAAG,IAAd;AACAD,wBAAoB,CAAC7Z,GAArB,CAA0B,UAASuR,CAAT,EAAY;AACrC,UAAGuI,OAAO,KAAG,IAAV,IAAkBvI,CAAC,CAACqE,UAAF,GAAakE,OAAO,CAAClE,UAA1C,EAAsD;AACrDkE,eAAO,GAAGvI,CAAV;AACA;AACD,KAJD;AAKAqI,YAAQ,CAACxa,GAAT,CAAa0a,OAAb;AACA;;AACD,OAAKV,KAAL,GAAaQ,QAAQ,CAACra,MAAT,EAAb;AACA,SAAO,IAAP;AACA;;AAED4Z,GAAG,CAACjc,SAAJ,GAAgB6B,MAAM,CAACoF,MAAP,CAAc+R,eAAe,CAAChZ,SAA9B,CAAhB;AACAic,GAAG,CAACjc,SAAJ,CAAckH,WAAd,GAA4B+U,GAA5B;;AAEAA,GAAG,CAACjc,SAAJ,CAAcuB,MAAd,GAAuB,UAASgC,KAAT,EAAgB;AACtC,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAY0Y,GAAnB,CAAJ,EAA6B;AACnC,WAAO,KAAP;AACA,GAFM,MAEA;AACN,WAAO,KAAKC,KAAL,KAAe3Y,KAAK,CAAC2Y,KAA5B;AACA;AACD,CARD;;AAUAD,GAAG,CAACjc,SAAJ,CAAc0E,cAAd,GAA+B,UAAStC,IAAT,EAAe;AAC1CA,MAAI,CAACiB,MAAL,CAAY,KAAK6Y,KAAjB,EAAwB,KAAxB;AACH,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,GAAG,CAACjc,SAAJ,CAAc6b,QAAd,GAAyB,UAASC,MAAT,EAAiBlJ,YAAjB,EAA+B;AACvD,OAAK,IAAI5R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkb,KAAL,CAAW/a,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AAC3C,QAAI,CAAC,KAAKkb,KAAL,CAAWlb,CAAX,EAAc6a,QAAd,CAAuBC,MAAvB,EAA+BlJ,YAA/B,CAAL,EAAmD;AAClD,aAAO,KAAP;AACA;AACD;;AACD,SAAO,IAAP;AACA,CAPD;;AASAqJ,GAAG,CAACjc,SAAJ,CAAc+b,cAAd,GAA+B,UAASD,MAAT,EAAiBlJ,YAAjB,EAA+B;AAC7D,MAAIiK,OAAO,GAAG,KAAd;AACA,MAAIH,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAI1b,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkb,KAAL,CAAW/a,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AAC3C,QAAI4T,OAAO,GAAG,KAAKsH,KAAL,CAAWlb,CAAX,CAAd;AACA,QAAI8b,SAAS,GAAGlI,OAAO,CAACmH,cAAR,CAAuBD,MAAvB,EAA+BlJ,YAA/B,CAAhB;AACAiK,WAAO,IAAKC,SAAS,KAAKlI,OAA1B;;AACA,QAAIkI,SAAS,KAAK,IAAlB,EAAwB;AACvB;AACA,aAAO,IAAP;AACA,KAHD,MAGO,IAAIA,SAAS,KAAK9D,eAAe,CAACgB,IAAlC,EAAwC;AAC9C;AACA0C,cAAQ,CAACpa,IAAT,CAAcwa,SAAd;AACA;AACD;;AACD,MAAI,CAACD,OAAL,EAAc;AACb,WAAO,IAAP;AACA;;AACD,MAAIH,QAAQ,CAACvb,MAAT,KAAoB,CAAxB,EAA2B;AAC1B;AACA,WAAO6X,eAAe,CAACgB,IAAvB;AACA;;AACD,MAAInR,MAAM,GAAG,IAAb;AACA6T,UAAQ,CAAC5Z,GAAT,CAAa,UAAS+B,CAAT,EAAY;AACxBgE,UAAM,GAAGA,MAAM,KAAK,IAAX,GAAkBhE,CAAlB,GAAsBmU,eAAe,CAACgD,UAAhB,CAA2BnT,MAA3B,EAAmChE,CAAnC,CAA/B;AACA,GAFD;AAGA,SAAOgE,MAAP;AACA,CA3BD;;AA6BAoT,GAAG,CAACjc,SAAJ,CAAckB,QAAd,GAAyB,YAAW;AACnC,MAAI6D,CAAC,GAAG,EAAR;AACA,OAAKmX,KAAL,CAAWpZ,GAAX,CAAe,UAAS+B,CAAT,EAAY;AAC1BE,KAAC,IAAI,QAAQF,CAAC,CAAC3D,QAAF,EAAb;AACA,GAFD;AAGA,SAAO6D,CAAC,CAAC5D,MAAF,GAAW,CAAX,GAAe4D,CAAC,CAACuP,KAAF,CAAQ,CAAR,CAAf,GAA4BvP,CAAnC;AACA,CAND,C,CAQA;AACA;AACA;AACA;;;AACA,SAASqX,EAAT,CAAYvc,CAAZ,EAAeyB,CAAf,EAAkB;AACjB0X,iBAAe,CAAClS,IAAhB,CAAqB,IAArB;AACA,MAAI4V,QAAQ,GAAG,IAAIjb,GAAJ,EAAf;;AACA,MAAI5B,CAAC,YAAYuc,EAAjB,EAAqB;AACpBvc,KAAC,CAACqc,KAAF,CAAQpZ,GAAR,CAAY,UAAS+B,CAAT,EAAY;AACvB6X,cAAQ,CAACxa,GAAT,CAAa2C,CAAb;AACA,KAFD;AAGA,GAJD,MAIO;AACN6X,YAAQ,CAACxa,GAAT,CAAarC,CAAb;AACA;;AACD,MAAIyB,CAAC,YAAY8a,EAAjB,EAAqB;AACpB9a,KAAC,CAAC4a,KAAF,CAAQpZ,GAAR,CAAY,UAAS+B,CAAT,EAAY;AACvB6X,cAAQ,CAACxa,GAAT,CAAa2C,CAAb;AACA,KAFD;AAGA,GAJD,MAIO;AACN6X,YAAQ,CAACxa,GAAT,CAAaZ,CAAb;AACA;;AAED,MAAIqb,oBAAoB,GAAG/F,mBAAmB,CAAC6F,0BAApB,CAA+CC,QAA/C,CAA3B;;AACA,MAAIC,oBAAoB,CAACxb,MAArB,GAA8B,CAAlC,EAAqC;AACpC;AACA,QAAI4D,CAAC,GAAG4X,oBAAoB,CAACI,IAArB,CAA0B,UAASld,CAAT,EAAYyB,CAAZ,EAAe;AAChD,aAAOzB,CAAC,CAAC2c,SAAF,CAAYlb,CAAZ,CAAP;AACA,KAFO,CAAR;AAGA,QAAIsb,OAAO,GAAG7X,CAAC,CAACA,CAAC,CAAC5D,MAAF,GAAS,CAAV,CAAf;AACAub,YAAQ,CAACxa,GAAT,CAAa0a,OAAb;AACA;;AACD,OAAKV,KAAL,GAAaQ,QAAQ,CAACra,MAAT,EAAb;AACA,SAAO,IAAP;AACA;;AAED+Z,EAAE,CAACpc,SAAH,GAAe6B,MAAM,CAACoF,MAAP,CAAc+R,eAAe,CAAChZ,SAA9B,CAAf;AACAoc,EAAE,CAACpc,SAAH,CAAakH,WAAb,GAA2BkV,EAA3B;;AAEAA,EAAE,CAACpc,SAAH,CAAakH,WAAb,GAA2B,UAAS3D,KAAT,EAAgB;AAC1C,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,IAAP;AACA,GAFD,MAEO,IAAI,EAAEA,KAAK,YAAY6Y,EAAnB,CAAJ,EAA4B;AAClC,WAAO,KAAP;AACA,GAFM,MAEA;AACN,WAAO,KAAKF,KAAL,KAAe3Y,KAAK,CAAC2Y,KAA5B;AACA;AACD,CARD;;AAUAE,EAAE,CAACpc,SAAH,CAAa0E,cAAb,GAA8B,UAAStC,IAAT,EAAe;AACzCA,MAAI,CAACiB,MAAL,CAAY,KAAK6Y,KAAjB,EAAwB,IAAxB;AACH,CAFD,C,CAIA;AACA;AACA;AACA;;;AACAE,EAAE,CAACpc,SAAH,CAAa6b,QAAb,GAAwB,UAASC,MAAT,EAAiBlJ,YAAjB,EAA+B;AACtD,OAAK,IAAI5R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkb,KAAL,CAAW/a,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AAC3C,QAAI,KAAKkb,KAAL,CAAWlb,CAAX,EAAc6a,QAAd,CAAuBC,MAAvB,EAA+BlJ,YAA/B,CAAJ,EAAkD;AACjD,aAAO,IAAP;AACA;AACD;;AACD,SAAO,KAAP;AACA,CAPD;;AASAwJ,EAAE,CAACpc,SAAH,CAAa+b,cAAb,GAA8B,UAASD,MAAT,EAAiBlJ,YAAjB,EAA+B;AAC5D,MAAIiK,OAAO,GAAG,KAAd;AACA,MAAIH,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAI1b,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkb,KAAL,CAAW/a,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AAC3C,QAAI4T,OAAO,GAAG,KAAKsH,KAAL,CAAWlb,CAAX,CAAd;AACA,QAAI8b,SAAS,GAAGlI,OAAO,CAACmH,cAAR,CAAuBD,MAAvB,EAA+BlJ,YAA/B,CAAhB;AACAiK,WAAO,IAAKC,SAAS,KAAKlI,OAA1B;;AACA,QAAIkI,SAAS,KAAK9D,eAAe,CAACgB,IAAlC,EAAwC;AACvC;AACA,aAAOhB,eAAe,CAACgB,IAAvB;AACA,KAHD,MAGO,IAAI8C,SAAS,KAAK,IAAlB,EAAwB;AAC9B;AACAJ,cAAQ,CAACpa,IAAT,CAAcwa,SAAd;AACA;AACD;;AACD,MAAI,CAACD,OAAL,EAAc;AACb,WAAO,IAAP;AACA;;AACD,MAAIH,QAAQ,CAACvb,MAAT,KAAoB,CAAxB,EAA2B;AAC1B;AACA,WAAO,IAAP;AACA;;AACD,MAAI0H,MAAM,GAAG,IAAb;AACA6T,UAAQ,CAAC5Z,GAAT,CAAa,UAAS+B,CAAT,EAAY;AACxB,WAAOgE,MAAM,KAAK,IAAX,GAAkBhE,CAAlB,GAAsBmU,eAAe,CAACmD,SAAhB,CAA0BtT,MAA1B,EAAkChE,CAAlC,CAA7B;AACA,GAFD;AAGA,SAAOgE,MAAP;AACA,CA3BD;;AA6BAuT,EAAE,CAACpc,SAAH,CAAakB,QAAb,GAAwB,YAAW;AAClC,MAAI6D,CAAC,GAAG,EAAR;AACA,OAAKmX,KAAL,CAAWpZ,GAAX,CAAe,UAAS+B,CAAT,EAAY;AAC1BE,KAAC,IAAI,QAAQF,CAAC,CAAC3D,QAAF,EAAb;AACA,GAFD;AAGA,SAAO6D,CAAC,CAAC5D,MAAF,GAAW,CAAX,GAAe4D,CAAC,CAACuP,KAAF,CAAQ,CAAR,CAAf,GAA4BvP,CAAnC;AACA,CAND;;AAQAU,OAAO,CAACuT,eAAR,GAA0BA,eAA1B;AACAvT,OAAO,CAACmR,mBAAR,GAA8BA,mBAA9B;AACAnR,OAAO,CAACkR,SAAR,GAAoBA,SAApB,C;;;;;;ACnZA;;AACA;;;;AAIA;AAEA,IAAI2C,YAAY,GAAG7R,mBAAO,CAAC,CAAD,CAAP,CAAiC6R,YAApD;;AACA,IAAIvM,KAAK,GAAGtF,mBAAO,CAAC,CAAD,CAAnB;;AACA,IAAIrE,IAAI,GAAG2J,KAAK,CAAC3J,IAAjB;AACA,IAAI3B,GAAG,GAAGsL,KAAK,CAACtL,GAAhB,C,CAEA;;AAEA,SAASub,cAAT,CAAwBC,IAAxB,EAA8Bla,GAA9B,EAAmC;AAClC,OAAKA,GAAL,GAAWA,GAAX;AACA,OAAKka,IAAL,GAAYA,IAAZ;AACA,SAAO,IAAP;AACA;;AAEDD,cAAc,CAAChd,SAAf,CAAyBkB,QAAzB,GAAoC,YAAW;AAC9C,SAAO,MAAM,KAAK+b,IAAX,GAAkB,IAAlB,GAAyB,KAAKla,GAA9B,GAAoC,GAA3C;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASma,QAAT,CAAkBnT,WAAlB,EAA+B0P,OAA/B,EAAwC;AACvC,MAAI1P,WAAW,KAAK,IAApB,EAA0B;AACzBA,eAAW,GAAG,CAAC,CAAf;AACA;;AACD,MAAI0P,OAAO,KAAK,IAAhB,EAAsB;AACrBA,WAAO,GAAG,IAAIH,YAAJ,EAAV;AACA;;AACD,OAAKvP,WAAL,GAAmBA,WAAnB;AACA,OAAK0P,OAAL,GAAeA,OAAf,CARuC,CASvC;AACA;;AACA,OAAK0D,KAAL,GAAa,IAAb;AACA,OAAKC,aAAL,GAAqB,KAArB,CAZuC,CAavC;AACA;AACA;AACA;;AACA,OAAKC,UAAL,GAAkB,CAAlB;AACA,OAAKC,mBAAL,GAA2B,IAA3B,CAlBuC,CAmBvC;AACA;AACA;AACA;;AACA,OAAKC,mBAAL,GAA2B,KAA3B,CAvBuC,CAwBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAKC,UAAL,GAAkB,IAAlB;AACA,SAAO,IAAP;AACA,C,CAED;AACA;;;AACAN,QAAQ,CAACld,SAAT,CAAmByd,SAAnB,GAA+B,YAAW;AACzC,MAAIC,IAAI,GAAG,IAAIjc,GAAJ,EAAX;;AACA,MAAI,KAAKgY,OAAL,KAAiB,IAArB,EAA2B;AAC1B,SAAK,IAAIzY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyY,OAAL,CAAatY,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;AAC7C,UAAIkY,CAAC,GAAG,KAAKO,OAAL,CAAazY,CAAb,CAAR;AACA0c,UAAI,CAACxb,GAAL,CAASgX,CAAC,CAACnW,GAAX;AACA;AACD;;AACD,MAAI2a,IAAI,CAACvc,MAAL,KAAgB,CAApB,EAAuB;AACtB,WAAO,IAAP;AACA,GAFD,MAEO;AACN,WAAOuc,IAAP;AACA;AACD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,QAAQ,CAACld,SAAT,CAAmBuB,MAAnB,GAA4B,UAASgC,KAAT,EAAgB;AAC3C;AACA,SAAO,SAASA,KAAT,IACJA,KAAK,YAAY2Z,QAAjB,IACA,KAAKzD,OAAL,CAAalY,MAAb,CAAoBgC,KAAK,CAACkW,OAA1B,CAFH;AAGA,CALD;;AAOAyD,QAAQ,CAACld,SAAT,CAAmBkB,QAAnB,GAA8B,YAAW;AACxC,MAAI6D,CAAC,GAAG,KAAK,KAAKgF,WAAV,GAAwB,GAAxB,GAA8B,KAAK0P,OAA3C;;AACA,MAAG,KAAK2D,aAAR,EAAuB;AAChBrY,KAAC,GAAGA,CAAC,GAAG,IAAR;AACA,QAAI,KAAKyY,UAAL,KAAoB,IAAxB,EACIzY,CAAC,GAAGA,CAAC,GAAG,KAAKyY,UAAb,CADJ,KAGIzY,CAAC,GAAGA,CAAC,GAAG,KAAKsY,UAAb;AACP;;AACJ,SAAOtY,CAAP;AACA,CAVD;;AAYAmY,QAAQ,CAACld,SAAT,CAAmBM,QAAnB,GAA8B,YAAW;AACxC,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,MAAI,CAACiB,MAAL,CAAY,KAAKoW,OAAjB;;AACA,MAAG,KAAK2D,aAAR,EAAuB;AAChB,QAAI,KAAKI,UAAL,KAAoB,IAAxB,EACIpb,IAAI,CAACiB,MAAL,CAAY,KAAKma,UAAjB,EADJ,KAGIpb,IAAI,CAACiB,MAAL,CAAY,KAAKga,UAAjB;AACP;;AACD,SAAOjb,IAAI,CAACkB,MAAL,EAAP;AACH,CAVD;;AAYAmC,OAAO,CAACyX,QAAR,GAAmBA,QAAnB;AACAzX,OAAO,CAACuX,cAAR,GAAyBA,cAAzB,C;;;;;;ACvJA;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIvR,aAAa,GAAGhE,mBAAO,CAAC,CAAD,CAAP,CAAsBgE,aAA1C;;AACA,IAAIuN,eAAe,GAAGvR,mBAAO,CAAC,EAAD,CAAP,CAA6BuR,eAAnD;;AACA,IAAI5V,IAAI,GAAGqE,mBAAO,CAAC,CAAD,CAAP,CAAoBrE,IAA/B;;AAGA,SAASua,WAAT,CAAqBjO,MAArB,EAA6BkO,KAA7B,EAAoC;AACnC,MAAGlO,MAAM,KAAG,IAAZ,EAAkB;AACjB,QAAI7G,MAAM,GAAG;AAAEqH,WAAK,EAAC,IAAR;AAAcnN,SAAG,EAAC,IAAlB;AAAwB6R,aAAO,EAAC,IAAhC;AAAsCmF,qBAAe,EAAC;AAAtD,KAAb;;AACA,QAAG6D,KAAH,EAAU;AACT/U,YAAM,CAACoR,uBAAP,GAAiC,CAAjC;AACA;;AACD,WAAOpR,MAAP;AACA,GAND,MAMO;AACN,QAAIgV,KAAK,GAAG,EAAZ;AACAA,SAAK,CAAC3N,KAAN,GAAcR,MAAM,CAACQ,KAAP,IAAgB,IAA9B;AACA2N,SAAK,CAAC9a,GAAN,GAAa2M,MAAM,CAAC3M,GAAP,KAAegE,SAAhB,GAA6B,IAA7B,GAAoC2I,MAAM,CAAC3M,GAAvD;AACA8a,SAAK,CAACjJ,OAAN,GAAgBlF,MAAM,CAACkF,OAAP,IAAkB,IAAlC;AACAiJ,SAAK,CAAC9D,eAAN,GAAwBrK,MAAM,CAACqK,eAAP,IAA0B,IAAlD;;AACA,QAAG6D,KAAH,EAAU;AACTC,WAAK,CAAC5D,uBAAN,GAAgCvK,MAAM,CAACuK,uBAAP,IAAkC,CAAlE;AACA4D,WAAK,CAAC1D,0BAAN,GAAmCzK,MAAM,CAACyK,0BAAP,IAAqC,KAAxE;AACA;;AACD,WAAO0D,KAAP;AACA;AACD;;AAED,SAASC,SAAT,CAAmBpO,MAAnB,EAA2BoK,MAA3B,EAAmC;AAClC,OAAKiE,YAAL,CAAkBrO,MAAlB,EAA0BoK,MAA1B;AACApK,QAAM,GAAGiO,WAAW,CAACjO,MAAD,CAApB;AACAoK,QAAM,GAAG6D,WAAW,CAAC7D,MAAD,EAAS,IAAT,CAApB,CAHkC,CAI/B;;AACA,OAAK5J,KAAL,GAAaR,MAAM,CAACQ,KAAP,KAAe,IAAf,GAAsBR,MAAM,CAACQ,KAA7B,GAAqC4J,MAAM,CAAC5J,KAAzD,CAL+B,CAM/B;;AACA,OAAKnN,GAAL,GAAW2M,MAAM,CAAC3M,GAAP,KAAa,IAAb,GAAoB2M,MAAM,CAAC3M,GAA3B,GAAiC+W,MAAM,CAAC/W,GAAnD,CAP+B,CAQ/B;AACA;AACA;;AACA,OAAK6R,OAAL,GAAelF,MAAM,CAACkF,OAAP,KAAiB,IAAjB,GAAwBlF,MAAM,CAACkF,OAA/B,GAAyCkF,MAAM,CAAClF,OAA/D;AACA,OAAKmF,eAAL,GAAuBrK,MAAM,CAACqK,eAAP,KAAyB,IAAzB,GAAgCrK,MAAM,CAACqK,eAAvC,GAClBD,MAAM,CAACC,eAAP,KAAyB,IAAzB,GAAgCD,MAAM,CAACC,eAAvC,GAAyDf,eAAe,CAACgB,IAD9E,CAZ+B,CAc/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAKC,uBAAL,GAA+BH,MAAM,CAACG,uBAAtC;AACA,OAAKE,0BAAL,GAAkCL,MAAM,CAACK,0BAAzC;AACA,SAAO,IAAP;AACH;;AAED2D,SAAS,CAAC9d,SAAV,CAAoB+d,YAApB,GAAmC,UAASrO,MAAT,EAAiBoK,MAAjB,EAAyB;AAC3D,MAAG,CAACpK,MAAM,CAACkF,OAAP,KAAiB,IAAjB,IAAyBlF,MAAM,CAACkF,OAAP,KAAiB7N,SAA3C,MACA+S,MAAM,KAAG,IAAT,IAAiBA,MAAM,CAAClF,OAAP,KAAiB,IAAlC,IAA0CkF,MAAM,CAAClF,OAAP,KAAiB7N,SAD3D,CAAH,EAC0E;AACzE,SAAK6N,OAAL,GAAe,IAAf;AACA;AACD,CALD;;AAQAkJ,SAAS,CAAC9d,SAAV,CAAoBM,QAApB,GAA+B,YAAW;AACtC,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACA,OAAKsB,cAAL,CAAoBtC,IAApB;AACA,SAAOA,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD;;AAOAwa,SAAS,CAAC9d,SAAV,CAAoB0E,cAApB,GAAqC,UAAStC,IAAT,EAAe;AAChDA,MAAI,CAACiB,MAAL,CAAY,KAAK6M,KAAL,CAAWnG,WAAvB,EAAoC,KAAKhH,GAAzC,EAA8C,KAAK6R,OAAnD,EAA4D,KAAKmF,eAAjE;AACH,CAFD,C,CAIA;AACA;AACA;;;AAEA+D,SAAS,CAAC9d,SAAV,CAAoBuB,MAApB,GAA6B,UAASgC,KAAT,EAAgB;AACzC,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAYua,SAApB,CAAJ,EAAoC;AACvC,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAK5N,KAAL,CAAWnG,WAAX,KAAyBxG,KAAK,CAAC2M,KAAN,CAAYnG,WAArC,IACH,KAAKhH,GAAL,KAAWQ,KAAK,CAACR,GADd,KAEF,KAAK6R,OAAL,KAAe,IAAf,GAAsBrR,KAAK,CAACqR,OAAN,KAAgB,IAAtC,GAA6C,KAAKA,OAAL,CAAarT,MAAb,CAAoBgC,KAAK,CAACqR,OAA1B,CAF3C,KAGH,KAAKmF,eAAL,CAAqBxY,MAArB,CAA4BgC,KAAK,CAACwW,eAAlC,CAHG,IAIH,KAAKI,0BAAL,KAAkC5W,KAAK,CAAC4W,0BAJ5C;AAKH;AACJ,CAZD;;AAeA2D,SAAS,CAAC9d,SAAV,CAAoBmZ,oBAApB,GAA2C,YAAW;AAClD,MAAI/W,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACAhB,MAAI,CAACiB,MAAL,CAAY,KAAK6M,KAAL,CAAWnG,WAAvB,EAAoC,KAAKhH,GAAzC,EAA8C,KAAKgX,eAAnD;AACA,SAAO3X,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD;;AAOAwa,SAAS,CAAC9d,SAAV,CAAoBqZ,kBAApB,GAAyC,UAAS9V,KAAT,EAAgB;AACrD,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAYua,SAApB,CAAJ,EAAoC;AACvC,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAK5N,KAAL,CAAWnG,WAAX,KAAyBxG,KAAK,CAAC2M,KAAN,CAAYnG,WAArC,IACH,KAAKhH,GAAL,KAAWQ,KAAK,CAACR,GADd,IAEH,KAAKgX,eAAL,CAAqBxY,MAArB,CAA4BgC,KAAK,CAACwW,eAAlC,CAFJ;AAGH;AACJ,CAVD;;AAaA+D,SAAS,CAAC9d,SAAV,CAAoBkB,QAApB,GAA+B,YAAW;AACtC,SAAO,MAAM,KAAKgP,KAAX,GAAmB,GAAnB,GAAyB,KAAKnN,GAA9B,IACF,KAAK6R,OAAL,KAAe,IAAf,GAAsB,OAAO,KAAKA,OAAL,CAAa1T,QAAb,EAAP,GAAiC,GAAvD,GAA6D,EAD3D,KAEF,KAAK6Y,eAAL,KAAyBf,eAAe,CAACgB,IAAzC,GACQ,MAAM,KAAKD,eAAL,CAAqB7Y,QAArB,EADd,GAES,EAJP,KAKF,KAAK+Y,uBAAL,GAA6B,CAA7B,GACQ,SAAS,KAAKA,uBADtB,GAES,EAPP,IAOa,GAPpB;AAQH,CATD;;AAYA,SAAS+D,cAAT,CAAwBtO,MAAxB,EAAgCoK,MAAhC,EAAwC;AACvCgE,WAAS,CAAChX,IAAV,CAAe,IAAf,EAAqB4I,MAArB,EAA6BoK,MAA7B,EADuC,CAGpC;;AACH,MAAIwD,mBAAmB,GAAG5N,MAAM,CAAC4N,mBAAP,IAA8B,IAAxD;AACG,OAAKA,mBAAL,GAA2BA,mBAAmB,KAAKxD,MAAM,KAAG,IAAT,GAAgBA,MAAM,CAACwD,mBAAvB,GAA6C,IAAlD,CAA9C;AACA,OAAKW,8BAAL,GAAsCnE,MAAM,KAAG,IAAT,GAAgB,KAAKoE,sBAAL,CAA4BpE,MAA5B,EAAoC,KAAK5J,KAAzC,CAAhB,GAAkE,KAAxG;AACA,SAAO,IAAP;AACH;;AAED8N,cAAc,CAAChe,SAAf,GAA2B6B,MAAM,CAACoF,MAAP,CAAc6W,SAAS,CAAC9d,SAAxB,CAA3B;AACAge,cAAc,CAAChe,SAAf,CAAyBkH,WAAzB,GAAuC8W,cAAvC;;AAEAA,cAAc,CAAChe,SAAf,CAAyB0E,cAAzB,GAA0C,UAAStC,IAAT,EAAe;AACrDA,MAAI,CAACiB,MAAL,CAAY,KAAK6M,KAAL,CAAWnG,WAAvB,EAAoC,KAAKhH,GAAzC,EAA8C,KAAK6R,OAAnD,EAA4D,KAAKmF,eAAjE,EAAkF,KAAKkE,8BAAvF,EAAuH,KAAKX,mBAA5H;AACH,CAFD;;AAIAU,cAAc,CAAChe,SAAf,CAAyBuB,MAAzB,GAAkC,UAASgC,KAAT,EAAgB;AAC9C,SAAO,SAASA,KAAT,IACEA,KAAK,YAAYya,cAAjB,IACD,KAAKC,8BAAL,IAAuC1a,KAAK,CAAC0a,8BAD5C,KAEA,KAAKX,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB/b,MAAzB,CAAgCgC,KAAK,CAAC+Z,mBAAtC,CAA3B,GAAwF,CAAC/Z,KAAK,CAAC+Z,mBAF/F,KAGDQ,SAAS,CAAC9d,SAAV,CAAoBuB,MAApB,CAA2BuF,IAA3B,CAAgC,IAAhC,EAAsCvD,KAAtC,CAJR;AAKH,CAND;;AAQAya,cAAc,CAAChe,SAAf,CAAyBmZ,oBAAzB,GAAgD6E,cAAc,CAAChe,SAAf,CAAyBM,QAAzE;AAEA0d,cAAc,CAAChe,SAAf,CAAyBqZ,kBAAzB,GAA8C2E,cAAc,CAAChe,SAAf,CAAyBuB,MAAvE;;AAGAyc,cAAc,CAAChe,SAAf,CAAyBke,sBAAzB,GAAkD,UAASvY,MAAT,EAAiBmR,MAAjB,EAAyB;AACvE,SAAOnR,MAAM,CAACsY,8BAAP,IACFnH,MAAM,YAAYrL,aAAnB,IAAqCqL,MAAM,CAACnL,SADhD;AAEH,CAHD;;AAKAlG,OAAO,CAACqY,SAAR,GAAoBA,SAApB;AACArY,OAAO,CAACuY,cAAR,GAAyBA,cAAzB,C;;;;;;AC/KA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI7Q,QAAQ,GAAG1F,mBAAO,CAAC,CAAD,CAAP,CAAuB0F,QAAtC;;AACA,IAAIL,gBAAgB,GAAGrF,mBAAO,CAAC,CAAD,CAAP,CAAuBqF,gBAA9C;;AACA,IAAI4J,kBAAkB,GAAGjP,mBAAO,CAAC,CAAD,CAAP,CAAqBiP,kBAA9C;;AAEA,SAASrF,WAAT,CAAqBc,MAArB,EAA6BU,aAA7B,EAA4C;AAC3C1F,UAAQ,CAACrG,IAAT,CAAc,IAAd,EAD2C,CAE3C;;AACA,OAAKuH,SAAL,GAAiB8D,MAAM,IAAI,IAA3B,CAH2C,CAI3C;AACA;AACA;;AACA,OAAKU,aAAL,GAAqBA,aAAa,IAAI,CAAC,CAAvC;AACA,SAAO,IAAP;AACA;;AAEDxB,WAAW,CAACrR,SAAZ,GAAwB6B,MAAM,CAACoF,MAAP,CAAckG,QAAQ,CAACnN,SAAvB,CAAxB;AACAqR,WAAW,CAACrR,SAAZ,CAAsBkH,WAAtB,GAAoCmK,WAApC;;AAEAA,WAAW,CAACrR,SAAZ,CAAsBme,KAAtB,GAA8B,YAAW;AACxC,MAAI7W,CAAC,GAAG,CAAR;AACA,MAAI+M,CAAC,GAAG,IAAR;;AACA,SAAOA,CAAC,KAAK,IAAb,EAAmB;AAClBA,KAAC,GAAGA,CAAC,CAAChG,SAAN;AACA/G,KAAC,IAAI,CAAL;AACA;;AACD,SAAOA,CAAP;AACA,CARD,C,CAUA;AACA;;;AACA+J,WAAW,CAACrR,SAAZ,CAAsB4R,OAAtB,GAAgC,YAAW;AAC1C,SAAO,KAAKiB,aAAL,KAAuB,CAAC,CAA/B;AACA,CAFD,C,CAIA;;;AAEAxB,WAAW,CAACrR,SAAZ,CAAsB0O,iBAAtB,GAA0C,YAAW;AACpD,SAAO5B,gBAAP;AACA,CAFD;;AAIAuE,WAAW,CAACrR,SAAZ,CAAsBsP,cAAtB,GAAuC,YAAW;AACjD,SAAO,IAAP;AACA,CAFD;;AAIA+B,WAAW,CAACrR,SAAZ,CAAsByO,UAAtB,GAAmC,YAAW;AAC7C,SAAO,IAAP;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA4C,WAAW,CAACrR,SAAZ,CAAsBwH,OAAtB,GAAgC,YAAW;AAC1C,MAAI,KAAKmH,aAAL,OAAyB,CAA7B,EAAgC;AAC/B,WAAO,EAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAKf,QAAL,CAAc9K,GAAd,CAAkB,UAAS2K,KAAT,EAAgB;AACxC,aAAOA,KAAK,CAACjG,OAAN,EAAP;AACA,KAFM,EAEJ1H,IAFI,CAEC,EAFD,CAAP;AAGA;AACD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;;;AACAuR,WAAW,CAACrR,SAAZ,CAAsBoe,YAAtB,GAAqC,YAAW;AAAE,SAAO1H,kBAAP;AAA4B,CAA9E,C,CAEA;AACA;AACA;AACA;AACA;;;AACArF,WAAW,CAACrR,SAAZ,CAAsBqe,YAAtB,GAAqC,UAASC,SAAT,EAAoB,CAAG,CAA5D;;AAEAjN,WAAW,CAACrR,SAAZ,CAAsBsO,QAAtB,GAAiC,UAAStN,CAAT,EAAY;AAC5C,SAAO,IAAP;AACA,CAFD;;AAIAqQ,WAAW,CAACrR,SAAZ,CAAsB2O,aAAtB,GAAsC,YAAW;AAChD,SAAO,CAAP;AACA,CAFD;;AAIA0C,WAAW,CAACrR,SAAZ,CAAsB0N,MAAtB,GAA+B,UAASkB,OAAT,EAAkB;AAChD,SAAOA,OAAO,CAACjB,aAAR,CAAsB,IAAtB,CAAP;AACA,CAFD,C,CAIA;;;AACAlI,OAAO,CAAC4L,WAAR,GAAsBA,WAAtB;;AACA,IAAIkN,KAAK,GAAG9W,mBAAO,CAAC,EAAD,CAAP,CAAwB8W,KAApC,C,CAGA;AACA;AACA;;;AAEAlN,WAAW,CAACrR,SAAZ,CAAsBwe,YAAtB,GAAqC,UAASC,SAAT,EAAoBC,KAApB,EAA2B;AAC/D,SAAOH,KAAK,CAACC,YAAN,CAAmB,IAAnB,EAAyBC,SAAzB,EAAoCC,KAApC,CAAP;AACA,CAFD;;AAIArN,WAAW,CAACrR,SAAZ,CAAsBkB,QAAtB,GAAiC,UAASud,SAAT,EAAoB1Y,IAApB,EAA0B;AAC1D0Y,WAAS,GAAGA,SAAS,IAAI,IAAzB;AACA1Y,MAAI,GAAGA,IAAI,IAAI,IAAf;AACA,MAAIsO,CAAC,GAAG,IAAR;AACA,MAAItP,CAAC,GAAG,GAAR;;AACA,SAAOsP,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKtO,IAA3B,EAAiC;AAChC,QAAI0Y,SAAS,KAAK,IAAlB,EAAwB;AACvB,UAAI,CAACpK,CAAC,CAACzC,OAAF,EAAL,EAAkB;AACjB7M,SAAC,IAAIsP,CAAC,CAACxB,aAAP;AACA;AACD,KAJD,MAIO;AACN,UAAI8L,EAAE,GAAGtK,CAAC,CAACnK,SAAX;AACA,UAAI0U,QAAQ,GAAID,EAAE,IAAI,CAAN,IAAWA,EAAE,GAAGF,SAAS,CAACtd,MAA3B,GAAqCsd,SAAS,CAACE,EAAD,CAA9C,GACX,KAAKA,EADT;AAEA5Z,OAAC,IAAI6Z,QAAL;AACA;;AACD,QAAIvK,CAAC,CAAChG,SAAF,KAAgB,IAAhB,KAAyBoQ,SAAS,KAAK,IAAd,IAAsB,CAACpK,CAAC,CAAChG,SAAF,CAAYuD,OAAZ,EAAhD,CAAJ,EAA4E;AAC3E7M,OAAC,IAAI,GAAL;AACA;;AACDsP,KAAC,GAAGA,CAAC,CAAChG,SAAN;AACA;;AACDtJ,GAAC,IAAI,GAAL;AACA,SAAOA,CAAP;AACA,CAvBD,C;;;;;;ACpIA;;;;AAIA;AAEA;AACA;AACA;AAEA,IAAIW,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAmB/B,KAA/B;;AACA,IAAImZ,UAAU,GAAGpX,mBAAO,CAAC,EAAD,CAAP,CAAwBoX,UAAzC;;AACA,IAAIC,kBAAkB,GAAGrX,mBAAO,CAAC,EAAD,CAAP,CAAgCqX,kBAAzD;;AACA,IAAIrP,oBAAoB,GAAIhI,mBAAO,CAAC,CAAD,CAAP,CAA0BgI,oBAAtD;;AACA,IAAIW,yBAAyB,GAAG3I,mBAAO,CAAC,CAAD,CAAP,CAA0B2I,yBAA1D;;AAEA,SAAS2O,WAAT,GAAuB;AACtB,SAAO,IAAP;AACA;;AAED,SAAStD,KAAT,CAAepU,KAAf,EAAsB;AACrBwX,YAAU,CAAC/X,IAAX,CAAgB,IAAhB;AACA,OAAKkY,MAAL,GAAc3X,KAAd;AACA,OAAK4X,QAAL,GAAgBH,kBAAkB,CAACvP,OAAnC;AACA,OAAK2P,uBAAL,GAA+B,CAAE,IAAF,EAAQ7X,KAAR,CAA/B;AAEA,OAAK2J,OAAL,GAAe,IAAf,CANqB,CAMA;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAKmO,MAAL,GAAc,IAAd,CAfqB,CAiBrB;AACA;AACA;;AACA,OAAKC,oBAAL,GAA4B,CAAC,CAA7B,CApBqB,CAsBrB;;AACA,OAAKC,eAAL,GAAuB,CAAC,CAAxB,CAvBqB,CAyBrB;;AACA,OAAKC,iBAAL,GAAyB,CAAC,CAA1B,CA1BqB,CA4BrB;AACA;;AACA,OAAKC,OAAL,GAAe,KAAf,CA9BqB,CAgCrB;;AACA,OAAKC,QAAL,GAAgB9Z,KAAK,CAACc,eAAtB,CAjCqB,CAmCrB;;AACA,OAAKiZ,KAAL,GAAa/Z,KAAK,CAACU,YAAnB;AAEA,OAAKsZ,UAAL,GAAkB,EAAlB;AACA,OAAKC,KAAL,GAAalE,KAAK,CAACmE,YAAnB,CAvCqB,CAyCrB;AACA;AACA;;AACA,OAAKzZ,KAAL,GAAa,IAAb;AAEA,SAAO,IAAP;AACA;;AAEDsV,KAAK,CAACzb,SAAN,GAAkB6B,MAAM,CAACoF,MAAP,CAAc4X,UAAU,CAAC7e,SAAzB,CAAlB;AACAyb,KAAK,CAACzb,SAAN,CAAgBkH,WAAhB,GAA8BuU,KAA9B;AAEAA,KAAK,CAACmE,YAAN,GAAqB,CAArB;AACAnE,KAAK,CAACoE,IAAN,GAAa,CAAC,CAAd;AACApE,KAAK,CAACqE,IAAN,GAAa,CAAC,CAAd;AAEArE,KAAK,CAACsE,qBAAN,GAA8Bra,KAAK,CAACc,eAApC;AACAiV,KAAK,CAACuE,MAAN,GAAeta,KAAK,CAACe,cAArB;AACAgV,KAAK,CAACwE,cAAN,GAAuB,MAAvB;AACAxE,KAAK,CAACyE,cAAN,GAAuB,QAAvB;;AAEAzE,KAAK,CAACzb,SAAN,CAAgBmgB,KAAhB,GAAwB,YAAW;AAClC;AACA,MAAI,KAAKnB,MAAL,KAAgB,IAApB,EAA0B;AACzB,SAAKA,MAAL,CAAYoB,IAAZ,CAAiB,CAAjB,EADyB,CACJ;;AACrB;;AACD,OAAKjB,MAAL,GAAc,IAAd;AACA,OAAKM,KAAL,GAAa/Z,KAAK,CAACU,YAAnB;AACA,OAAKoZ,QAAL,GAAgB9Z,KAAK,CAACc,eAAtB;AACA,OAAK4Y,oBAAL,GAA4B,CAAC,CAA7B;AACA,OAAKE,iBAAL,GAAyB,CAAC,CAA1B;AACA,OAAKD,eAAL,GAAuB,CAAC,CAAxB;AACA,OAAKlZ,KAAL,GAAa,IAAb;AAEA,OAAKoZ,OAAL,GAAe,KAAf;AACA,OAAKI,KAAL,GAAalE,KAAK,CAACmE,YAAnB;AACA,OAAKF,UAAL,GAAkB,EAAlB;;AAEA,OAAK1O,OAAL,CAAamP,KAAb;AACA,CAlBD,C,CAoBA;;;AACA1E,KAAK,CAACzb,SAAN,CAAgBqgB,SAAhB,GAA4B,YAAW;AACtC,MAAI,KAAKrB,MAAL,KAAgB,IAApB,EAA0B;AACzB,UAAM,6CAAN;AACA,GAHqC,CAKtC;AACA;;;AACA,MAAIsB,gBAAgB,GAAG,KAAKtB,MAAL,CAAYuB,IAAZ,EAAvB;;AACA,MAAI;AACH,WAAO,IAAP,EAAa;AACZ,UAAI,KAAKhB,OAAT,EAAkB;AACjB,aAAKiB,OAAL;AACA,eAAO,KAAKrB,MAAZ;AACA;;AACD,WAAKA,MAAL,GAAc,IAAd;AACA,WAAKK,QAAL,GAAgB9Z,KAAK,CAACc,eAAtB;AACA,WAAK4Y,oBAAL,GAA4B,KAAKJ,MAAL,CAAY1T,KAAxC;AACA,WAAKgU,iBAAL,GAAyB,KAAKtO,OAAL,CAAa9K,MAAtC;AACA,WAAKmZ,eAAL,GAAuB,KAAKrO,OAAL,CAAa/K,IAApC;AACA,WAAKE,KAAL,GAAa,IAAb;AACA,UAAIsa,aAAa,GAAG,KAApB;;AACA,aAAO,IAAP,EAAa;AACZ,aAAKhB,KAAL,GAAa/Z,KAAK,CAACU,YAAnB;AACA,YAAIsa,KAAK,GAAGjF,KAAK,CAACqE,IAAlB;;AACA,YAAI;AACHY,eAAK,GAAG,KAAK1P,OAAL,CAAa2P,KAAb,CAAmB,KAAK3B,MAAxB,EAAgC,KAAKW,KAArC,CAAR;AACA,SAFD,CAEE,OAAO3b,CAAP,EAAU;AACR,cAAGA,CAAC,YAAYyL,oBAAhB,EAAsC;AACtB,iBAAKmR,eAAL,CAAqB5c,CAArB,EADsB,CACG;;AACzB,iBAAK6c,OAAL,CAAa7c,CAAb;AACH,WAHb,MAGmB;AACH8c,mBAAO,CAACC,GAAR,CAAY/c,CAAC,CAAC6L,KAAd;AACA,kBAAM7L,CAAN;AACH;AAChB;;AACD,YAAI,KAAKgb,MAAL,CAAYgC,EAAZ,CAAe,CAAf,MAAsBtb,KAAK,CAACa,GAAhC,EAAqC;AACpC,eAAKgZ,OAAL,GAAe,IAAf;AACA;;AACD,YAAI,KAAKE,KAAL,KAAe/Z,KAAK,CAACU,YAAzB,EAAuC;AACtC,eAAKqZ,KAAL,GAAaiB,KAAb;AACA;;AACD,YAAI,KAAKjB,KAAL,KAAehE,KAAK,CAACqE,IAAzB,EAA+B;AAC9BW,uBAAa,GAAG,IAAhB;AACA;AACA;;AACD,YAAI,KAAKhB,KAAL,KAAehE,KAAK,CAACoE,IAAzB,EAA+B;AAC9B;AACA;AACD;;AACD,UAAIY,aAAJ,EAAmB;AAClB;AACA;;AACD,UAAI,KAAKtB,MAAL,KAAgB,IAApB,EAA0B;AACzB,aAAK8B,IAAL;AACA;;AACD,aAAO,KAAK9B,MAAZ;AACA;AACD,GAjDD,SAiDU;AACT;AACA;AACA,SAAKH,MAAL,CAAYkC,OAAZ,CAAoBZ,gBAApB;AACA;AACD,CA9DD,C,CAgEA;AACA;AACA;AACA;AACA;AACA;;;AACA7E,KAAK,CAACzb,SAAN,CAAgBmhB,IAAhB,GAAuB,YAAW;AACjC,OAAK1B,KAAL,GAAahE,KAAK,CAACqE,IAAnB;AACA,CAFD;;AAIArE,KAAK,CAACzb,SAAN,CAAgBohB,IAAhB,GAAuB,YAAW;AACjC,OAAK3B,KAAL,GAAahE,KAAK,CAACoE,IAAnB;AACA,CAFD;;AAIApE,KAAK,CAACzb,SAAN,CAAgBqhB,IAAhB,GAAuB,UAASC,CAAT,EAAY;AAClC,OAAK3B,KAAL,GAAa2B,CAAb;AACA,CAFD;;AAIA7F,KAAK,CAACzb,SAAN,CAAgBuhB,QAAhB,GAA2B,UAASD,CAAT,EAAY;AACtC,MAAI,KAAKtQ,OAAL,CAAawQ,KAAjB,EAAwB;AACvBV,WAAO,CAACC,GAAR,CAAY,cAAcO,CAA1B;AACA;;AACD,OAAK5B,UAAL,CAAgBpd,IAAhB,CAAqB,KAAKqd,KAA1B;;AACA,OAAK0B,IAAL,CAAUC,CAAV;AACA,CAND;;AAQA7F,KAAK,CAACzb,SAAN,CAAgByhB,OAAhB,GAA0B,YAAW;AACpC,MAAI,KAAK/B,UAAL,CAAgBve,MAAhB,KAA2B,CAA/B,EAAkC;AACjC,UAAM,aAAN;AACA;;AACD,MAAI,KAAK6P,OAAL,CAAawQ,KAAjB,EAAwB;AACvBV,WAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKrB,UAAL,CAAgBpL,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAjC;AACA;;AACD,OAAK+M,IAAL,CAAU,KAAK3B,UAAL,CAAgB/W,GAAhB,EAAV;AACA,SAAO,KAAKgX,KAAZ;AACA,CATD,C,CAWA;;;AACA9d,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,aAAvC,EAAsD;AACrD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKid,MAAZ;AACA,GAHoD;AAIrDrc,KAAG,EAAG,aAAS0E,KAAT,EAAgB;AACrB,SAAK2X,MAAL,GAAc,IAAd;AACA,SAAKE,uBAAL,GAA+B,CAAE,IAAF,EAAQ,KAAKF,MAAb,CAA/B;AACA,SAAKmB,KAAL;AACA,SAAKnB,MAAL,GAAc3X,KAAd;AACA,SAAK6X,uBAAL,GAA+B,CAAE,IAAF,EAAQ,KAAKF,MAAb,CAA/B;AACA;AAVoD,CAAtD;AAaAnd,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,YAAvC,EAAqD;AACpD+B,KAAG,EAAG,SAAS2f,UAAT,GAAsB;AAC3B,WAAO,KAAK1C,MAAL,CAAY0C,UAAnB;AACA;AAHmD,CAArD,E,CAMA;AACA;AACA;AACA;AACA;;AACAjG,KAAK,CAACzb,SAAN,CAAgB2hB,SAAhB,GAA4B,UAAS7S,KAAT,EAAgB;AAC3C,OAAKqQ,MAAL,GAAcrQ,KAAd;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;;;AACA2M,KAAK,CAACzb,SAAN,CAAgBihB,IAAhB,GAAuB,YAAW;AACjC,MAAI7Z,CAAC,GAAG,KAAK6X,QAAL,CAAchY,MAAd,CAAqB,KAAKiY,uBAA1B,EAAmD,KAAKO,KAAxD,EACN,KAAKtZ,KADC,EACM,KAAKqZ,QADX,EACqB,KAAKJ,oBAD1B,EACgD,KACnDwC,YADmD,KAClC,CAFd,EAEiB,KAAKvC,eAFtB,EAGN,KAAKC,iBAHC,CAAR;;AAIA,OAAKqC,SAAL,CAAeva,CAAf;AACA,SAAOA,CAAP;AACA,CAPD;;AASAqU,KAAK,CAACzb,SAAN,CAAgBwgB,OAAhB,GAA0B,YAAW;AACpC,MAAIqB,IAAI,GAAG,KAAK3b,MAAhB;AACA,MAAI4b,IAAI,GAAG,KAAK7b,IAAhB;;AACA,MAAI8b,GAAG,GAAG,KAAK9C,QAAL,CAAchY,MAAd,CAAqB,KAAKiY,uBAA1B,EAAmDxZ,KAAK,CAACa,GAAzD,EACR,IADQ,EACFb,KAAK,CAACc,eADJ,EACqB,KAAKwY,MAAL,CAAY1T,KADjC,EAER,KAAK0T,MAAL,CAAY1T,KAAZ,GAAoB,CAFZ,EAEewW,IAFf,EAEqBD,IAFrB,CAAV;;AAGA,OAAKF,SAAL,CAAeI,GAAf;AACA,SAAOA,GAAP;AACA,CARD;;AAUAlgB,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,MAAvC,EAA+C;AAC9C+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAK6D,IAAZ;AACA,GAH6C;AAI9CjD,KAAG,EAAG,aAASiD,IAAT,EAAe;AACpB,SAAK6Z,KAAL,GAAa7Z,IAAb;AACA;AAN6C,CAA/C;AASA/D,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,MAAvC,EAA+C;AAC9C+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKiP,OAAL,CAAa/K,IAApB;AACA,GAH6C;AAI9CtD,KAAG,EAAG,aAASsD,IAAT,EAAe;AACpB,SAAK+K,OAAL,CAAa/K,IAAb,GAAoBA,IAApB;AACA;AAN6C,CAA/C;AASApE,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,QAAvC,EAAiD;AAChD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKiP,OAAL,CAAa9K,MAApB;AACA,GAH+C;AAIhDvD,KAAG,EAAG,aAASuD,MAAT,EAAiB;AACtB,SAAK8K,OAAL,CAAa9K,MAAb,GAAsBA,MAAtB;AACA;AAN+C,CAAjD,E,CAUA;;AACAuV,KAAK,CAACzb,SAAN,CAAgB4hB,YAAhB,GAA+B,YAAW;AACzC,SAAO,KAAK5C,MAAL,CAAY1T,KAAnB;AACA,CAFD,C,CAIA;AACA;;;AACAzJ,MAAM,CAACC,cAAP,CAAsB2Z,KAAK,CAACzb,SAA5B,EAAuC,MAAvC,EAA+C;AAC9C+B,KAAG,EAAG,eAAW;AAChB,QAAI,KAAKoE,KAAL,KAAe,IAAnB,EAAyB;AACxB,aAAO,KAAKA,KAAZ;AACA,KAFD,MAEO;AACN,aAAO,KAAK6K,OAAL,CAAaxJ,OAAb,CAAqB,KAAKwX,MAA1B,CAAP;AACA;AACD,GAP6C;AAQ9Crc,KAAG,EAAG,aAAS+D,IAAT,EAAe;AACpB,SAAKP,KAAL,GAAaO,IAAb;AACA;AAV6C,CAA/C,E,CAYA;AACA;AACA;;AACA+U,KAAK,CAACzb,SAAN,CAAgBgiB,YAAhB,GAA+B,YAAW;AACzC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAI7a,CAAC,GAAG,KAAKiZ,SAAL,EAAR;;AACA,SAAOjZ,CAAC,CAACxB,IAAF,KAAWF,KAAK,CAACa,GAAxB,EAA6B;AAC5B0b,UAAM,CAAC3f,IAAP,CAAY8E,CAAZ;AACAA,KAAC,GAAG,KAAKiZ,SAAL,EAAJ;AACA;;AACD,SAAO4B,MAAP;AACA,CARD;;AAUAxG,KAAK,CAACzb,SAAN,CAAgB4gB,eAAhB,GAAkC,UAAS5c,CAAT,EAAY;AAC7C,MAAI8B,KAAK,GAAG,KAAKsZ,oBAAjB;AACA,MAAIrZ,IAAI,GAAG,KAAKiZ,MAAL,CAAY1T,KAAvB;;AACA,MAAI5E,IAAI,GAAG,KAAKsY,MAAL,CAAYxX,OAAZ,CAAoB1B,KAApB,EAA2BC,IAA3B,CAAX;;AACA,MAAImc,GAAG,GAAG,kCAAkC,KAAKC,eAAL,CAAqBzb,IAArB,CAAlC,GAA+D,GAAzE;AACA,MAAIwI,QAAQ,GAAG,KAAKkT,wBAAL,EAAf;AACAlT,UAAQ,CAACmT,WAAT,CAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAKhD,eAAtC,EACE,KAAKC,iBADP,EAC0B4C,GAD1B,EAC+Ble,CAD/B;AAEA,CARD;;AAUAyX,KAAK,CAACzb,SAAN,CAAgBmiB,eAAhB,GAAkC,UAASpd,CAAT,EAAY;AAC7C,MAAIH,CAAC,GAAG,EAAR;;AACA,OAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+D,CAAC,CAAC5D,MAAtB,EAA8BH,CAAC,EAA/B,EAAmC;AAClC4D,KAAC,CAACtC,IAAF,CAAOyC,CAAC,CAAC/D,CAAD,CAAR;AACA;;AACD,SAAO4D,CAAC,CAAC9E,IAAF,CAAO,EAAP,CAAP;AACA,CAND;;AAQA2b,KAAK,CAACzb,SAAN,CAAgBsiB,sBAAhB,GAAyC,UAASpJ,CAAT,EAAY;AACpD,MAAIA,CAAC,CAAC9X,UAAF,CAAa,CAAb,MAAoBsE,KAAK,CAACa,GAA9B,EAAmC;AAClC,WAAO,OAAP;AACA,GAFD,MAEO,IAAI2S,CAAC,KAAK,IAAV,EAAgB;AACtB,WAAO,KAAP;AACA,GAFM,MAEA,IAAIA,CAAC,KAAK,IAAV,EAAgB;AACtB,WAAO,KAAP;AACA,GAFM,MAEA,IAAIA,CAAC,KAAK,IAAV,EAAgB;AACtB,WAAO,KAAP;AACA,GAFM,MAEA;AACN,WAAOA,CAAP;AACA;AACD,CAZD;;AAcAuC,KAAK,CAACzb,SAAN,CAAgBuiB,mBAAhB,GAAsC,UAASrJ,CAAT,EAAY;AACjD,SAAO,MAAM,KAAKoJ,sBAAL,CAA4BpJ,CAA5B,CAAN,GAAuC,GAA9C;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AACA;;;AACAuC,KAAK,CAACzb,SAAN,CAAgB6gB,OAAhB,GAA0B,UAAS2B,EAAT,EAAa;AACtC,MAAI,KAAKxD,MAAL,CAAYgC,EAAZ,CAAe,CAAf,MAAsBtb,KAAK,CAACa,GAAhC,EAAqC;AACpC,QAAIic,EAAE,YAAYpS,yBAAlB,EAA6C;AAC5C;AACA,WAAKY,OAAL,CAAayR,OAAb,CAAqB,KAAKzD,MAA1B;AACA,KAHD,MAGO;AACN;AACA,WAAKA,MAAL,CAAYyD,OAAZ;AACA;AACD;AACD,CAVD;;AAYAhd,OAAO,CAACgW,KAAR,GAAgBA,KAAhB,C;;;;;;AClXA;;AACA;;;;AAKA;AACA;AACA;AAEA,SAASiH,aAAT,GAAyB;AACxB,SAAO,IAAP;AACA;;AAEDA,aAAa,CAAC1iB,SAAd,CAAwBqiB,WAAxB,GAAsC,UAAStS,UAAT,EAAqB4S,eAArB,EAAsC1c,IAAtC,EAA4CC,MAA5C,EAAoDgc,GAApD,EAAyDle,CAAzD,EAA4D,CACjG,CADD;;AAGA0e,aAAa,CAAC1iB,SAAd,CAAwB4iB,eAAxB,GAA0C,UAAS7S,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDC,KAAjD,EAAwDC,SAAxD,EAAmEtJ,OAAnE,EAA4E,CACrH,CADD;;AAGAiJ,aAAa,CAAC1iB,SAAd,CAAwBgjB,2BAAxB,GAAsD,UAASjT,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDlJ,eAAjD,EAAkEF,OAAlE,EAA2E,CAChI,CADD;;AAGAiJ,aAAa,CAAC1iB,SAAd,CAAwBijB,wBAAxB,GAAmD,UAASlT,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDxF,UAAjD,EAA6D5D,OAA7D,EAAsE,CACxH,CADD;;AAGA,SAASyJ,oBAAT,GAAgC;AAC/BR,eAAa,CAAC5b,IAAd,CAAmB,IAAnB;AACA,SAAO,IAAP;AACA;;AAEDoc,oBAAoB,CAACljB,SAArB,GAAiC6B,MAAM,CAACoF,MAAP,CAAcyb,aAAa,CAAC1iB,SAA5B,CAAjC;AACAkjB,oBAAoB,CAACljB,SAArB,CAA+BkH,WAA/B,GAA6Cgc,oBAA7C,C,CAEA;AACA;AACA;;AACAA,oBAAoB,CAACC,QAArB,GAAgC,IAAID,oBAAJ,EAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,oBAAoB,CAACljB,SAArB,CAA+BqiB,WAA/B,GAA6C,UAAStS,UAAT,EAAqB4S,eAArB,EAAsC1c,IAAtC,EAA4CC,MAA5C,EAAoDgc,GAApD,EAAyDle,CAAzD,EAA4D;AACrG8c,SAAO,CAAC1F,KAAR,CAAc,UAAUnV,IAAV,GAAiB,GAAjB,GAAuBC,MAAvB,GAAgC,GAAhC,GAAsCgc,GAApD;AACH,CAFD;;AAIA,SAASkB,kBAAT,CAA4BC,SAA5B,EAAuC;AACtCX,eAAa,CAAC5b,IAAd,CAAmB,IAAnB;;AACG,MAAIuc,SAAS,KAAG,IAAhB,EAAsB;AAClB,UAAM,WAAN;AACH;;AACD,OAAKA,SAAL,GAAiBA,SAAjB;AACH,SAAO,IAAP;AACA;;AAEDD,kBAAkB,CAACpjB,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAcyb,aAAa,CAAC1iB,SAA5B,CAA/B;AACAojB,kBAAkB,CAACpjB,SAAnB,CAA6BkH,WAA7B,GAA2Ckc,kBAA3C;;AAEAA,kBAAkB,CAACpjB,SAAnB,CAA6BqiB,WAA7B,GAA2C,UAAStS,UAAT,EAAqB4S,eAArB,EAAsC1c,IAAtC,EAA4CC,MAA5C,EAAoDgc,GAApD,EAAyDle,CAAzD,EAA4D;AACnG,OAAKqf,SAAL,CAAevgB,GAAf,CAAmB,UAAS8B,CAAT,EAAY;AAAEA,KAAC,CAACyd,WAAF,CAActS,UAAd,EAA0B4S,eAA1B,EAA2C1c,IAA3C,EAAiDC,MAAjD,EAAyDgc,GAAzD,EAA8Dle,CAA9D;AAAmE,GAApG;AACH,CAFD;;AAIAof,kBAAkB,CAACpjB,SAAnB,CAA6B4iB,eAA7B,GAA+C,UAAS7S,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDC,KAAjD,EAAwDC,SAAxD,EAAmEtJ,OAAnE,EAA4E;AACvH,OAAK4J,SAAL,CAAevgB,GAAf,CAAmB,UAAS8B,CAAT,EAAY;AAAEA,KAAC,CAACge,eAAF,CAAkB7S,UAAlB,EAA8BkL,GAA9B,EAAmC3K,UAAnC,EAA+CuS,SAA/C,EAA0DC,KAA1D,EAAiEC,SAAjE,EAA4EtJ,OAA5E;AAAuF,GAAxH;AACH,CAFD;;AAIA2J,kBAAkB,CAACpjB,SAAnB,CAA6BgjB,2BAA7B,GAA2D,UAASjT,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDlJ,eAAjD,EAAkEF,OAAlE,EAA2E;AACrI,OAAK4J,SAAL,CAAevgB,GAAf,CAAmB,UAAS8B,CAAT,EAAY;AAAEA,KAAC,CAACoe,2BAAF,CAA8BjT,UAA9B,EAA0CkL,GAA1C,EAA+C3K,UAA/C,EAA2DuS,SAA3D,EAAsElJ,eAAtE,EAAuFF,OAAvF;AAAkG,GAAnI;AACA,CAFD;;AAIA2J,kBAAkB,CAACpjB,SAAnB,CAA6BijB,wBAA7B,GAAwD,UAASlT,UAAT,EAAqBkL,GAArB,EAA0B3K,UAA1B,EAAsCuS,SAAtC,EAAiDxF,UAAjD,EAA6D5D,OAA7D,EAAsE;AAC7H,OAAK4J,SAAL,CAAevgB,GAAf,CAAmB,UAAS8B,CAAT,EAAY;AAAEA,KAAC,CAACqe,wBAAF,CAA2BlT,UAA3B,EAAuCkL,GAAvC,EAA4C3K,UAA5C,EAAwDuS,SAAxD,EAAmExF,UAAnE,EAA+E5D,OAA/E;AAA0F,GAA3H;AACA,CAFD;;AAIAhU,OAAO,CAACid,aAAR,GAAwBA,aAAxB;AACAjd,OAAO,CAACyd,oBAAR,GAA+BA,oBAA/B;AACAzd,OAAO,CAAC2d,kBAAR,GAA6BA,kBAA7B,C;;;;;;ACrFA;;;;AAKA;AAGA,SAASE,aAAT,CAAuBrI,GAAvB,EAA4B/R,YAA5B,EAA0CC,aAA1C,EAAyD;AACxD,OAAK8R,GAAL,GAAWA,GAAX;AACA,OAAK/R,YAAL,GAAoBA,YAAY,IAAI,EAApC;AACA,OAAKC,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACA,SAAO,IAAP;AACA;;AAEDma,aAAa,CAACtjB,SAAd,CAAwBkB,QAAxB,GAAmC,YAAW;AAC3C,MAAG,KAAK+Z,GAAL,CAASsI,EAAT,KAAgB,IAAnB,EAAyB;AACrB,WAAO,IAAP;AACH;;AACD,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIvS,MAAM,GAAG,KAAKgK,GAAL,CAASwI,YAAT,EAAb;;AACA,OAAI,IAAIziB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACiQ,MAAM,CAAC9P,MAArB,EAA4BH,CAAC,EAA7B,EAAiC;AAC7B,QAAI+D,CAAC,GAAGkM,MAAM,CAACjQ,CAAD,CAAd;;AACA,QAAG+D,CAAC,CAACoY,KAAF,KAAU,IAAb,EAAmB;AACd,UAAI7V,CAAC,GAAGvC,CAAC,CAACoY,KAAF,CAAQhc,MAAhB;;AACA,WAAI,IAAIuI,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACpC,CAAd,EAAgBoC,CAAC,EAAjB,EAAqB;AACjB,YAAItC,CAAC,GAAGrC,CAAC,CAACoY,KAAF,CAAQzT,CAAR,KAAc,IAAtB;;AACA,YAAGtC,CAAC,KAAG,IAAJ,IAAYA,CAAC,CAAC2C,WAAF,KAAkB,UAAjC,EAA6C;AACzCyZ,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,KAAKkhB,cAAL,CAAoB3e,CAApB,CAAX,CAAN;AACAye,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,GAAX,CAAN;AACAghB,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,KAAKmhB,YAAL,CAAkBja,CAAlB,CAAX,CAAN;AACA8Z,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,IAAX,CAAN;AACAghB,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,KAAKkhB,cAAL,CAAoBtc,CAApB,CAAX,CAAN;AACAoc,aAAG,GAAGA,GAAG,CAAChhB,MAAJ,CAAW,IAAX,CAAN;AACH;AACJ;AACL;AACJ;;AACD,SAAOghB,GAAG,CAACriB,MAAJ,KAAa,CAAb,GAAiB,IAAjB,GAAwBqiB,GAA/B;AACF,CAxBD;;AA0BAF,aAAa,CAACtjB,SAAd,CAAwB2jB,YAAxB,GAAuC,UAAS3iB,CAAT,EAAY;AAC/C,MAAIA,CAAC,KAAG,CAAR,EAAW;AACP,WAAO,KAAP;AACH,GAFD,MAEO,IAAG,KAAKkI,YAAL,KAAqB,IAArB,IAA6B,KAAKC,aAAL,KAAqB,IAArD,EAA2D;AAC9D,WAAO,KAAKD,YAAL,CAAkBlI,CAAC,GAAC,CAApB,KAA0B,KAAKmI,aAAL,CAAmBnI,CAAC,GAAC,CAArB,CAAjC;AACH,GAFM,MAEA;AACH,WAAOjB,MAAM,CAAC0J,YAAP,CAAoBzI,CAAC,GAAC,CAAtB,CAAP;AACH;AACJ,CARD;;AAUAsiB,aAAa,CAACtjB,SAAd,CAAwB0jB,cAAxB,GAAyC,UAAS3e,CAAT,EAAY;AACjD,MAAI6e,YAAY,GAAG,CAAE7e,CAAC,CAACqY,aAAF,GAAkB,GAAlB,GAAwB,EAA1B,IAAgC,GAAhC,GAAsCrY,CAAC,CAACgF,WAAxC,IAAwDhF,CAAC,CAACwY,mBAAF,GAAwB,GAAxB,GAA8B,EAAtF,CAAnB;;AACA,MAAGxY,CAAC,CAACqY,aAAL,EAAoB;AAChB,QAAIrY,CAAC,CAACyY,UAAF,KAAiB,IAArB,EAA2B;AACvB,aAAOoG,YAAY,GAAG,IAAf,GAAsB7e,CAAC,CAACyY,UAAF,CAAatc,QAAb,EAA7B;AACH,KAFD,MAEO;AACH,aAAO0iB,YAAY,GAAG,IAAf,GAAsB7e,CAAC,CAACsY,UAAF,CAAanc,QAAb,EAA7B;AACH;AACJ,GAND,MAMO;AACH,WAAO0iB,YAAP;AACH;AACJ,CAXD;;AAaA,SAASC,kBAAT,CAA4B5I,GAA5B,EAAiC;AAChCqI,eAAa,CAACxc,IAAd,CAAmB,IAAnB,EAAyBmU,GAAzB,EAA8B,IAA9B;AACA,SAAO,IAAP;AACA;;AAED4I,kBAAkB,CAAC7jB,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAcqc,aAAa,CAACtjB,SAA5B,CAA/B;AACA6jB,kBAAkB,CAAC7jB,SAAnB,CAA6BkH,WAA7B,GAA2C2c,kBAA3C;;AAEAA,kBAAkB,CAAC7jB,SAAnB,CAA6B2jB,YAA7B,GAA4C,UAAS3iB,CAAT,EAAY;AACvD,SAAO,MAAMjB,MAAM,CAAC0J,YAAP,CAAoBzI,CAApB,CAAN,GAA+B,GAAtC;AACA,CAFD;;AAIAyE,OAAO,CAAC6d,aAAR,GAAwBA,aAAxB;AACA7d,OAAO,CAACoe,kBAAR,GAA6BA,kBAA7B,C;;;;;;AC7EA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIxS,WAAW,GAAG5J,mBAAO,CAAC,EAAD,CAAP,CAAyB4J,WAA3C;;AACA,IAAIrE,IAAI,GAAGvF,mBAAO,CAAC,CAAD,CAAlB;;AACA,IAAIqF,gBAAgB,GAAGE,IAAI,CAACF,gBAA5B;AACA,IAAIM,YAAY,GAAGJ,IAAI,CAACI,YAAxB;AACA,IAAIe,gBAAgB,GAAGnB,IAAI,CAACmB,gBAA5B;AACA,IAAIU,aAAa,GAAG7B,IAAI,CAAC6B,aAAzB;;AACA,IAAInH,QAAQ,GAAGD,mBAAO,CAAC,CAAD,CAAP,CAAyBC,QAAxC;;AAEA,SAASkU,iBAAT,CAA2BzJ,MAA3B,EAAmC2R,mBAAnC,EAAwD;AACvD3R,QAAM,GAAGA,MAAM,IAAI,IAAnB;AACA2R,qBAAmB,GAAGA,mBAAmB,IAAI,IAA7C;AACAzS,aAAW,CAACvK,IAAZ,CAAiB,IAAjB,EAAuBqL,MAAvB,EAA+B2R,mBAA/B;AACA,OAAK5Z,SAAL,GAAiB,CAAC,CAAlB,CAJuD,CAKpD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAK0D,QAAL,GAAgB,IAAhB;AACA,OAAK9H,KAAL,GAAa,IAAb;AACA,OAAKC,IAAL,GAAY,IAAZ,CAboD,CAcpD;AACA;;AACA,OAAKge,SAAL,GAAiB,IAAjB;AACH;;AAEDnI,iBAAiB,CAAC5b,SAAlB,GAA8B6B,MAAM,CAACoF,MAAP,CAAcoK,WAAW,CAACrR,SAA1B,CAA9B;AACA4b,iBAAiB,CAAC5b,SAAlB,CAA4BkH,WAA5B,GAA0C0U,iBAA1C,C,CAEA;;AACAA,iBAAiB,CAAC5b,SAAlB,CAA4BgkB,QAA5B,GAAuC,UAASxW,GAAT,EAAc;AACjD;AACA,OAAKa,SAAL,GAAiBb,GAAG,CAACa,SAArB;AACA,OAAKwE,aAAL,GAAqBrF,GAAG,CAACqF,aAAzB;AACA,OAAKjF,QAAL,GAAgB,IAAhB;AACA,OAAK9H,KAAL,GAAa0H,GAAG,CAAC1H,KAAjB;AACA,OAAKC,IAAL,GAAYyH,GAAG,CAACzH,IAAhB,CANiD,CAOjD;;AACA,MAAGyH,GAAG,CAACI,QAAP,EAAiB;AACb,SAAKA,QAAL,GAAgB,EAAhB,CADa,CAEb;;AACHJ,OAAG,CAACI,QAAJ,CAAa9K,GAAb,CAAiB,UAAS2K,KAAT,EAAgB;AAChC,UAAIA,KAAK,YAAYoB,aAArB,EAAoC;AAC1B,aAAKjB,QAAL,CAActL,IAAd,CAAmBmL,KAAnB;AACAA,aAAK,CAACY,SAAN,GAAkB,IAAlB;AACH;AACV,KALE,EAKA,IALA;AAMH;AACD,CAlBD,C,CAoBA;;;AACAuN,iBAAiB,CAAC5b,SAAlB,CAA4BoP,SAA5B,GAAwC,UAASF,QAAT,EAAmB,CAC1D,CADD;;AAGA0M,iBAAiB,CAAC5b,SAAlB,CAA4BqP,QAA5B,GAAuC,UAASH,QAAT,EAAmB,CACzD,CADD,C,CAGA;;;AACA0M,iBAAiB,CAAC5b,SAAlB,CAA4BikB,QAA5B,GAAuC,UAASxW,KAAT,EAAgB;AACnD,MAAI,KAAKG,QAAL,KAAkB,IAAtB,EAA4B;AACxB,SAAKA,QAAL,GAAgB,EAAhB;AACH;;AACD,OAAKA,QAAL,CAActL,IAAd,CAAmBmL,KAAnB;AACA,SAAOA,KAAP;AACH,CAND,C,CAQA;AACA;AACA;AACA;;;AACAmO,iBAAiB,CAAC5b,SAAlB,CAA4BkkB,eAA5B,GAA8C,YAAW;AACrD,MAAI,KAAKtW,QAAL,KAAkB,IAAtB,EAA4B;AACxB,SAAKA,QAAL,CAAcjF,GAAd;AACH;AACJ,CAJD;;AAMAiT,iBAAiB,CAAC5b,SAAlB,CAA4BmkB,YAA5B,GAA2C,UAASrV,KAAT,EAAgB;AACvD,MAAIhB,IAAI,GAAG,IAAIK,gBAAJ,CAAqBW,KAArB,CAAX;AACA,OAAKmV,QAAL,CAAcnW,IAAd;AACAA,MAAI,CAACO,SAAL,GAAiB,IAAjB;AACA,SAAOP,IAAP;AACH,CALD;;AAOA8N,iBAAiB,CAAC5b,SAAlB,CAA4BokB,YAA5B,GAA2C,UAASC,QAAT,EAAmB;AAC1D,MAAIvW,IAAI,GAAG,IAAIe,aAAJ,CAAkBwV,QAAlB,CAAX;AACA,OAAKJ,QAAL,CAAcnW,IAAd;AACAA,MAAI,CAACO,SAAL,GAAiB,IAAjB;AACA,SAAOP,IAAP;AACH,CALD;;AAOA8N,iBAAiB,CAAC5b,SAAlB,CAA4BsO,QAA5B,GAAuC,UAAStN,CAAT,EAAY4E,IAAZ,EAAkB;AACxDA,MAAI,GAAGA,IAAI,IAAI,IAAf;;AACA,MAAI,KAAKgI,QAAL,KAAkB,IAAlB,IAA0B5M,CAAC,GAAG,CAA9B,IAAmCA,CAAC,IAAI,KAAK4M,QAAL,CAAczM,MAA1D,EAAkE;AACjE,WAAO,IAAP;AACA;;AACD,MAAIyE,IAAI,KAAK,IAAb,EAAmB;AAClB,WAAO,KAAKgI,QAAL,CAAc5M,CAAd,CAAP;AACA,GAFD,MAEO;AACN,SAAI,IAAI0I,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKkE,QAAL,CAAczM,MAA7B,EAAqCuI,CAAC,EAAtC,EAA0C;AACzC,UAAI+D,KAAK,GAAG,KAAKG,QAAL,CAAclE,CAAd,CAAZ;;AACA,UAAG+D,KAAK,YAAY7H,IAApB,EAA0B;AACzB,YAAG5E,CAAC,KAAG,CAAP,EAAU;AACT,iBAAOyM,KAAP;AACA,SAFD,MAEO;AACNzM,WAAC,IAAI,CAAL;AACA;AACD;AACD;;AACD,WAAO,IAAP;AACG;AACJ,CApBD;;AAuBA4a,iBAAiB,CAAC5b,SAAlB,CAA4BskB,QAA5B,GAAuC,UAAS5D,KAAT,EAAgB1f,CAAhB,EAAmB;AACzD,MAAI,KAAK4M,QAAL,KAAkB,IAAlB,IAA0B5M,CAAC,GAAG,CAA9B,IAAmCA,CAAC,IAAI,KAAK4M,QAAL,CAAczM,MAA1D,EAAkE;AACjE,WAAO,IAAP;AACA;;AACD,OAAI,IAAIuI,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKkE,QAAL,CAAczM,MAA7B,EAAqCuI,CAAC,EAAtC,EAA0C;AACzC,QAAI+D,KAAK,GAAG,KAAKG,QAAL,CAAclE,CAAd,CAAZ;;AACA,QAAI+D,KAAK,YAAYL,YAArB,EAAmC;AAClC,UAAIK,KAAK,CAACW,MAAN,CAAaxI,IAAb,KAAsB8a,KAA1B,EAAiC;AAChC,YAAG1f,CAAC,KAAG,CAAP,EAAU;AACT,iBAAOyM,KAAP;AACA,SAFD,MAEO;AACNzM,WAAC,IAAI,CAAL;AACA;AACD;AACK;AACP;;AACE,SAAO,IAAP;AACH,CAjBD;;AAmBA4a,iBAAiB,CAAC5b,SAAlB,CAA4BukB,SAA5B,GAAwC,UAAS7D,KAAT,EAAiB;AACrD,MAAI,KAAK9S,QAAL,KAAiB,IAArB,EAA2B;AACvB,WAAO,EAAP;AACH,GAFD,MAEO;AACT,QAAIqU,MAAM,GAAG,EAAb;;AACA,SAAI,IAAIvY,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKkE,QAAL,CAAczM,MAA7B,EAAqCuI,CAAC,EAAtC,EAA0C;AACzC,UAAI+D,KAAK,GAAG,KAAKG,QAAL,CAAclE,CAAd,CAAZ;;AACA,UAAI+D,KAAK,YAAYL,YAArB,EAAmC;AAClC,YAAIK,KAAK,CAACW,MAAN,CAAaxI,IAAb,KAAsB8a,KAA1B,EAAiC;AAChCuB,gBAAM,CAAC3f,IAAP,CAAYmL,KAAZ;AACA;AACD;AACD;;AACD,WAAOwU,MAAP;AACG;AACJ,CAfD;;AAiBArG,iBAAiB,CAAC5b,SAAlB,CAA4BwkB,mBAA5B,GAAkD,UAASC,OAAT,EAAkBzjB,CAAlB,EAAqB;AACnE,SAAO,KAAKsN,QAAL,CAActN,CAAd,EAAiByjB,OAAjB,CAAP;AACH,CAFD;;AAIA7I,iBAAiB,CAAC5b,SAAlB,CAA4B0kB,oBAA5B,GAAmD,UAASD,OAAT,EAAkB;AACjE,MAAI,KAAK7W,QAAL,KAAiB,IAArB,EAA2B;AACvB,WAAO,EAAP;AACH,GAFD,MAEO;AACT,QAAI+W,QAAQ,GAAG,EAAf;;AACA,SAAI,IAAIjb,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKkE,QAAL,CAAczM,MAA7B,EAAqCuI,CAAC,EAAtC,EAA0C;AACzC,UAAI+D,KAAK,GAAG,KAAKG,QAAL,CAAclE,CAAd,CAAZ;;AACA,UAAI+D,KAAK,YAAYgX,OAArB,EAA8B;AAC7BE,gBAAQ,CAACriB,IAAT,CAAcmL,KAAd;AACA;AACD;;AACD,WAAOkX,QAAP;AACA;AACD,CAbD;;AAeA/I,iBAAiB,CAAC5b,SAAlB,CAA4B2O,aAA5B,GAA4C,YAAW;AACtD,MAAI,KAAKf,QAAL,KAAiB,IAArB,EAA2B;AAC1B,WAAO,CAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAKA,QAAL,CAAczM,MAArB;AACA;AACD,CAND;;AAQAya,iBAAiB,CAAC5b,SAAlB,CAA4B0O,iBAA5B,GAAgD,YAAW;AACvD,MAAI,KAAK5I,KAAL,KAAe,IAAf,IAAuB,KAAKC,IAAL,KAAc,IAAzC,EAA+C;AAC3C,WAAO+G,gBAAP;AACH,GAFD,MAEO;AACH,WAAO,IAAIpF,QAAJ,CAAa,KAAK5B,KAAL,CAAWE,UAAxB,EAAoC,KAAKD,IAAL,CAAUC,UAA9C,CAAP;AACH;AACJ,CAND;;AAQAqL,WAAW,CAACG,KAAZ,GAAoB,IAAIoK,iBAAJ,EAApB;;AAEA,SAASgJ,sBAAT,CAAgCzS,MAAhC,EAAwC2R,mBAAxC,EAA6D5Z,SAA7D,EAAwE;AACvE0R,mBAAiB,CAAC9U,IAAlB,CAAuBqL,MAAvB,EAA+B2R,mBAA/B;AACG,OAAK5Z,SAAL,GAAiBA,SAAjB;AACA,SAAO,IAAP;AACH;;AAED0a,sBAAsB,CAAC5kB,SAAvB,GAAmC6B,MAAM,CAACoF,MAAP,CAAc2U,iBAAiB,CAAC5b,SAAhC,CAAnC;AACA4kB,sBAAsB,CAAC5kB,SAAvB,CAAiCkH,WAAjC,GAA+C0d,sBAA/C;AAEAnf,OAAO,CAACmW,iBAAR,GAA4BA,iBAA5B,C;;;;;;AChOA;;AACA;;;;AAIA;AAEA,IAAIlW,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAmB/B,KAA/B;;AACA+B,mBAAO,CAAC,EAAD,CAAP;;AACAA,mBAAO,CAAC,EAAD,CAAP,C,CAEA;;;AAEA,SAASod,WAAT,CAAqBC,MAArB,EAA6BC,yBAA7B,EAAwD;AACvDD,QAAM,CAACE,MAAP,GAAgB,CAAhB;AACAF,QAAM,CAACljB,IAAP,GAAc,EAAd;;AACA,MAAIkjB,MAAM,CAACC,yBAAX,EAAsC;AACrC,SAAK,IAAI/jB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8jB,MAAM,CAACG,OAAP,CAAe9jB,MAAnC,GAA6C;AAC5C,UAAI+jB,SAAS,GAAGJ,MAAM,CAACG,OAAP,CAAeE,WAAf,CAA2BnkB,CAA3B,CAAhB;AACA8jB,YAAM,CAACljB,IAAP,CAAYU,IAAZ,CAAiB4iB,SAAjB;AACAlkB,OAAC,IAAIkkB,SAAS,IAAI,MAAb,GAAsB,CAAtB,GAA0B,CAA/B;AACA;AACD,GAND,MAMO;AACN,SAAK,IAAIlkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8jB,MAAM,CAACG,OAAP,CAAe9jB,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC/C,UAAIokB,QAAQ,GAAGN,MAAM,CAACG,OAAP,CAAe7jB,UAAf,CAA0BJ,CAA1B,CAAf;AACA8jB,YAAM,CAACljB,IAAP,CAAYU,IAAZ,CAAiB8iB,QAAjB;AACA;AACD;;AACDN,QAAM,CAACO,KAAP,GAAeP,MAAM,CAACljB,IAAP,CAAYT,MAA3B;AACA,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASma,WAAT,CAAqB1Z,IAArB,EAA2BmjB,yBAA3B,EAAsD;AACrD,OAAKO,IAAL,GAAY,SAAZ;AACA,OAAKL,OAAL,GAAerjB,IAAf;AACA,OAAKmjB,yBAAL,GAAiCA,yBAAyB,IAAI,KAA9D;;AACAF,aAAW,CAAC,IAAD,CAAX;;AACA,SAAO,IAAP;AACA;;AAEDhjB,MAAM,CAACC,cAAP,CAAsBwZ,WAAW,CAACtb,SAAlC,EAA6C,OAA7C,EAAsD;AACrD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKijB,MAAZ;AACA;AAHoD,CAAtD;AAMAnjB,MAAM,CAACC,cAAP,CAAsBwZ,WAAW,CAACtb,SAAlC,EAA6C,MAA7C,EAAqD;AACpD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKsjB,KAAZ;AACA;AAHmD,CAArD,E,CAMA;AACA;AACA;AACA;;AACA/J,WAAW,CAACtb,SAAZ,CAAsBmgB,KAAtB,GAA8B,YAAW;AACxC,OAAK6E,MAAL,GAAc,CAAd;AACA,CAFD;;AAIA1J,WAAW,CAACtb,SAAZ,CAAsByiB,OAAtB,GAAgC,YAAW;AAC1C,MAAI,KAAKuC,MAAL,IAAe,KAAKK,KAAxB,EAA+B;AAC9B;AACA,UAAO,oBAAP;AACA;;AACD,OAAKL,MAAL,IAAe,CAAf;AACA,CAND;;AAQA1J,WAAW,CAACtb,SAAZ,CAAsBghB,EAAtB,GAA2B,UAASuE,MAAT,EAAiB;AAC3C,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACjB,WAAO,CAAP,CADiB,CACP;AACV;;AACD,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACfA,UAAM,IAAI,CAAV,CADe,CACF;AACb;;AACD,MAAIC,GAAG,GAAG,KAAKR,MAAL,GAAcO,MAAd,GAAuB,CAAjC;;AACA,MAAIC,GAAG,GAAG,CAAN,IAAWA,GAAG,IAAI,KAAKH,KAA3B,EAAkC;AAAE;AACnC,WAAO3f,KAAK,CAACa,GAAb;AACA;;AACD,SAAO,KAAK3E,IAAL,CAAU4jB,GAAV,CAAP;AACA,CAZD;;AAcAlK,WAAW,CAACtb,SAAZ,CAAsBylB,EAAtB,GAA2B,UAASF,MAAT,EAAiB;AAC3C,SAAO,KAAKvE,EAAL,CAAQuE,MAAR,CAAP;AACA,CAFD,C,CAIA;;;AACAjK,WAAW,CAACtb,SAAZ,CAAsBugB,IAAtB,GAA6B,YAAW;AACvC,SAAO,CAAC,CAAR;AACA,CAFD;;AAIAjF,WAAW,CAACtb,SAAZ,CAAsBkhB,OAAtB,GAAgC,UAASwE,MAAT,EAAiB,CAChD,CADD,C,CAGA;AACA;AACA;;;AACApK,WAAW,CAACtb,SAAZ,CAAsBogB,IAAtB,GAA6B,UAAS4E,MAAT,EAAiB;AAC7C,MAAIA,MAAM,IAAI,KAAKA,MAAnB,EAA2B;AAC1B,SAAKA,MAAL,GAAcA,MAAd,CAD0B,CACJ;AAChB;;AACN;AACA,GAL4C,CAM7C;;;AACA,OAAKA,MAAL,GAAc9kB,IAAI,CAACgD,GAAL,CAAS8hB,MAAT,EAAiB,KAAKK,KAAtB,CAAd;AACA,CARD;;AAUA/J,WAAW,CAACtb,SAAZ,CAAsBwH,OAAtB,GAAgC,UAAS1B,KAAT,EAAgBC,IAAhB,EAAsB;AACrD,MAAIA,IAAI,IAAI,KAAKsf,KAAjB,EAAwB;AACvBtf,QAAI,GAAG,KAAKsf,KAAL,GAAa,CAApB;AACA;;AACD,MAAIvf,KAAK,IAAI,KAAKuf,KAAlB,EAAyB;AACxB,WAAO,EAAP;AACA,GAFD,MAEO;AACN,QAAI,KAAKN,yBAAT,EAAoC;AACnC,UAAIlc,MAAM,GAAG,EAAb;;AACA,WAAK,IAAI7H,CAAC,GAAG8E,KAAb,EAAoB9E,CAAC,IAAI+E,IAAzB,EAA+B/E,CAAC,EAAhC,EAAoC;AACnC6H,cAAM,IAAI9I,MAAM,CAAC4lB,aAAP,CAAqB,KAAK/jB,IAAL,CAAUZ,CAAV,CAArB,CAAV;AACA;;AACD,aAAO6H,MAAP;AACA,KAND,MAMO;AACN,aAAO,KAAKoc,OAAL,CAAa3Q,KAAb,CAAmBxO,KAAnB,EAA0BC,IAAI,GAAG,CAAjC,CAAP;AACA;AACD;AACD,CAjBD;;AAmBAuV,WAAW,CAACtb,SAAZ,CAAsBkB,QAAtB,GAAiC,YAAW;AAC3C,SAAO,KAAK+jB,OAAZ;AACA,CAFD;;AAIAxf,OAAO,CAAC6V,WAAR,GAAsBA,WAAtB,C;;;;;;ACtIA;;;;AAKA,IAAIvO,KAAK,GAAGtF,mBAAO,CAAC,CAAD,CAAnB;;AACA,IAAI/B,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAsB/B,KAAlC;;AACA,IAAIyH,QAAQ,GAAG1F,mBAAO,CAAC,CAAD,CAAP,CAAkB0F,QAAjC;;AACA,IAAIE,SAAS,GAAG5F,mBAAO,CAAC,CAAD,CAAP,CAAkB4F,SAAlC;;AACA,IAAID,YAAY,GAAG3F,mBAAO,CAAC,CAAD,CAAP,CAAkB2F,YAArC;;AACA,IAAIwO,iBAAiB,GAAGnU,mBAAO,CAAC,EAAD,CAAP,CAAkCmU,iBAA1D;;AACA,IAAIvK,WAAW,GAAG5J,mBAAO,CAAC,EAAD,CAAP,CAA4B4J,WAA9C;;AACA,IAAIqF,kBAAkB,GAAGjP,mBAAO,CAAC,CAAD,CAAP,CAAwBiP,kBAAjD;AAGA;;;AACA,SAAS6H,KAAT,GAAiB,CAChB,C,CAED;AACA;AACA;;;AACAA,KAAK,CAACC,YAAN,GAAqB,UAASrD,IAAT,EAAesD,SAAf,EAA0BC,KAA1B,EAAiC;AACrDD,WAAS,GAAGA,SAAS,IAAI,IAAzB;AACAC,OAAK,GAAGA,KAAK,IAAI,IAAjB;;AACG,MAAGA,KAAK,KAAG,IAAX,EAAiB;AACdD,aAAS,GAAGC,KAAK,CAACD,SAAlB;AACF;;AACD,MAAI1Z,CAAC,GAAGwZ,KAAK,CAACqH,WAAN,CAAkBzK,IAAlB,EAAwBsD,SAAxB,CAAR;AACA1Z,GAAC,GAAGgI,KAAK,CAACjI,gBAAN,CAAuBC,CAAvB,EAA0B,KAA1B,CAAJ;AACA,MAAImU,CAAC,GAAGiC,IAAI,CAACxM,aAAL,EAAR;;AACA,MAAGuK,CAAC,KAAG,CAAP,EAAU;AACN,WAAOnU,CAAP;AACH;;AACD,MAAI8gB,GAAG,GAAG,MAAM9gB,CAAN,GAAU,GAApB;;AACA,MAAGmU,CAAC,GAAC,CAAL,EAAQ;AACJnU,KAAC,GAAGwZ,KAAK,CAACC,YAAN,CAAmBrD,IAAI,CAAC7M,QAAL,CAAc,CAAd,CAAnB,EAAqCmQ,SAArC,CAAJ;AACAoH,OAAG,GAAGA,GAAG,CAACrjB,MAAJ,CAAWuC,CAAX,CAAN;AACH;;AACD,OAAI,IAAI/D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACkY,CAAd,EAAgBlY,CAAC,EAAjB,EAAqB;AACjB+D,KAAC,GAAGwZ,KAAK,CAACC,YAAN,CAAmBrD,IAAI,CAAC7M,QAAL,CAActN,CAAd,CAAnB,EAAqCyd,SAArC,CAAJ;AACAoH,OAAG,GAAGA,GAAG,CAACrjB,MAAJ,CAAW,MAAMuC,CAAjB,CAAN;AACH;;AACD8gB,KAAG,GAAGA,GAAG,CAACrjB,MAAJ,CAAW,GAAX,CAAN;AACA,SAAOqjB,GAAP;AACH,CAvBD;;AAyBAtH,KAAK,CAACqH,WAAN,GAAoB,UAASxe,CAAT,EAAYqX,SAAZ,EAAuBC,KAAvB,EAA8B;AACjDD,WAAS,GAAGA,SAAS,IAAI,IAAzB;AACAC,OAAK,GAAGA,KAAK,IAAI,IAAjB;;AACG,MAAGA,KAAK,KAAG,IAAX,EAAiB;AACbD,aAAS,GAAGC,KAAK,CAACD,SAAlB;AACH;;AACD,MAAGA,SAAS,KAAG,IAAf,EAAqB;AAClB,QAAIrX,CAAC,YAAYiK,WAAjB,EAA8B;AAC1B,UAAIiN,SAAS,GAAGlX,CAAC,CAACgX,YAAF,EAAhB;;AACA,UAAKE,SAAS,IAAE5H,kBAAhB,EAAqC;AACjC,eAAO+H,SAAS,CAACrX,CAAC,CAAC8C,SAAH,CAAT,GAAuB,GAAvB,GAA2BoU,SAAlC;AACH;;AACD,aAAOG,SAAS,CAACrX,CAAC,CAAC8C,SAAH,CAAhB;AACH,KAND,MAMO,IAAK9C,CAAC,YAAYiG,SAAlB,EAA6B;AAChC,aAAOjG,CAAC,CAAClG,QAAF,EAAP;AACH,KAFM,MAEA,IAAGkG,CAAC,YAAYgG,YAAhB,EAA8B;AACjC,UAAGhG,CAAC,CAACgH,MAAF,KAAW,IAAd,EAAoB;AAChB,eAAOhH,CAAC,CAACgH,MAAF,CAAS1H,IAAhB;AACH;AACJ;AACH,GApB6C,CAqB9C;;;AACA,MAAIuN,OAAO,GAAG7M,CAAC,CAACqH,UAAF,EAAd;;AACA,MAAIwF,OAAO,YAAYvO,KAAvB,EAA+B;AAC5B,WAAOuO,OAAO,CAACvN,IAAf;AACF;;AACD,SAAOU,CAAC,CAACqH,UAAF,GAAevN,QAAf,EAAP;AACH,CA3BD,C,CA8BA;;;AACAqd,KAAK,CAACuH,WAAN,GAAoB,UAAS1e,CAAT,EAAY;AAC/B,MAAI2e,IAAI,GAAG,EAAX;;AACA,OAAI,IAAI/kB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAC,CAACuH,aAAF,EAAd,EAAgC3N,CAAC,EAAjC,EAAqC;AACpC+kB,QAAI,CAACzjB,IAAL,CAAU8E,CAAC,CAACkH,QAAF,CAAWtN,CAAX,CAAV;AACA;;AACD,SAAO+kB,IAAP;AACA,CAND,C,CAQA;AACA;AACA;;;AACAxH,KAAK,CAACyH,YAAN,GAAqB,UAAS5e,CAAT,EAAY;AAC7B,MAAI6e,SAAS,GAAG,EAAhB;AACA7e,GAAC,GAAGA,CAAC,CAACoH,SAAF,EAAJ;;AACA,SAAMpH,CAAC,KAAG,IAAV,EAAgB;AACZ6e,aAAS,GAAG,CAAC7e,CAAD,EAAI5E,MAAJ,CAAWyjB,SAAX,CAAZ;AACA7e,KAAC,GAAGA,CAAC,CAACoH,SAAF,EAAJ;AACH;;AACD,SAAOyX,SAAP;AACH,CARD;;AAUA1H,KAAK,CAAC2H,iBAAN,GAA0B,UAAS9e,CAAT,EAAYsZ,KAAZ,EAAmB;AACzC,SAAOnC,KAAK,CAAC4H,YAAN,CAAmB/e,CAAnB,EAAsBsZ,KAAtB,EAA6B,IAA7B,CAAP;AACH,CAFD;;AAIAnC,KAAK,CAAC6H,gBAAN,GAAyB,UAAShf,CAAT,EAAY8C,SAAZ,EAAuB;AAC/C,SAAOqU,KAAK,CAAC4H,YAAN,CAAmB/e,CAAnB,EAAsB8C,SAAtB,EAAiC,KAAjC,CAAP;AACA,CAFD;;AAIAqU,KAAK,CAAC4H,YAAN,GAAqB,UAAS/e,CAAT,EAAYkE,KAAZ,EAAmB+a,UAAnB,EAA+B;AACnD,MAAInR,KAAK,GAAG,EAAZ;;AACAqJ,OAAK,CAAC+H,aAAN,CAAoBlf,CAApB,EAAuBkE,KAAvB,EAA8B+a,UAA9B,EAA0CnR,KAA1C;;AACA,SAAOA,KAAP;AACA,CAJD;;AAMAqJ,KAAK,CAAC+H,aAAN,GAAsB,UAASlf,CAAT,EAAYkE,KAAZ,EAAmB+a,UAAnB,EAA+BnR,KAA/B,EAAsC;AAC3D;AACA,MAAGmR,UAAU,IAAKjf,CAAC,YAAYgG,YAA/B,EAA8C;AAC7C,QAAGhG,CAAC,CAACgH,MAAF,CAASxI,IAAT,KAAgB0F,KAAnB,EAA0B;AACzB4J,WAAK,CAAC5S,IAAN,CAAW8E,CAAX;AACA;AACD,GAJD,MAIO,IAAG,CAACif,UAAD,IAAgBjf,CAAC,YAAYwU,iBAAhC,EAAoD;AAC1D,QAAGxU,CAAC,CAAC8C,SAAF,KAAcoB,KAAjB,EAAwB;AACvB4J,WAAK,CAAC5S,IAAN,CAAW8E,CAAX;AACA;AACD,GAV0D,CAW3D;;;AACA,OAAI,IAAIpG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAC,CAACuH,aAAF,EAAd,EAAgC3N,CAAC,EAAjC,EAAqC;AACpCud,SAAK,CAAC+H,aAAN,CAAoBlf,CAAC,CAACkH,QAAF,CAAWtN,CAAX,CAApB,EAAmCsK,KAAnC,EAA0C+a,UAA1C,EAAsDnR,KAAtD;AACA;AACD,CAfD;;AAiBAqJ,KAAK,CAACgI,WAAN,GAAoB,UAASnf,CAAT,EAAY;AAC/B,MAAI8N,KAAK,GAAG,CAAC9N,CAAD,CAAZ;;AACG,OAAI,IAAIpG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAC,CAACuH,aAAF,EAAd,EAAgC3N,CAAC,EAAjC,EAAqC;AACjCkU,SAAK,GAAGA,KAAK,CAAC1S,MAAN,CAAa+b,KAAK,CAACgI,WAAN,CAAkBnf,CAAC,CAACkH,QAAF,CAAWtN,CAAX,CAAlB,CAAb,CAAR;AACH;;AACD,SAAOkU,KAAP;AACH,CAND;;AASAzP,OAAO,CAAC8Y,KAAR,GAAgBA,KAAhB,C;;;;;;AC3IA;;;;AAKA,IAAI7Y,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAsB/B,KAAlC;;AACA,IAAI0P,GAAG,GAAG3N,mBAAO,CAAC,CAAD,CAAP,CAAiB2N,GAA3B;;AACA,IAAIoR,OAAO,GAAG/e,mBAAO,CAAC,EAAD,CAAP,CAAqB+e,OAAnC;;AACA,IAAIC,SAAS,GAAGhf,mBAAO,CAAC,CAAD,CAAvB;;AACA,IAAIoC,QAAQ,GAAG4c,SAAS,CAAC5c,QAAzB;AACA,IAAI2B,UAAU,GAAGib,SAAS,CAACjb,UAA3B;AACA,IAAIC,aAAa,GAAGgb,SAAS,CAAChb,aAA9B;AACA,IAAIG,eAAe,GAAG6a,SAAS,CAAC7a,eAAhC;AACA,IAAIG,aAAa,GAAG0a,SAAS,CAAC1a,aAA9B;AACA,IAAIa,YAAY,GAAG6Z,SAAS,CAAC7Z,YAA7B;AACA,IAAIV,cAAc,GAAGua,SAAS,CAACva,cAA/B;AACA,IAAID,aAAa,GAAGwa,SAAS,CAACxa,aAA9B;AACA,IAAIY,gBAAgB,GAAG4Z,SAAS,CAAC5Z,gBAAjC;AACA,IAAIR,iBAAiB,GAAGoa,SAAS,CAACpa,iBAAlC;AACA,IAAII,iBAAiB,GAAGga,SAAS,CAACha,iBAAlC;AACA,IAAIC,kBAAkB,GAAG+Z,SAAS,CAAC/Z,kBAAnC;AACA,IAAIJ,mBAAmB,GAAGma,SAAS,CAACna,mBAApC;AACA,IAAIE,mBAAmB,GAAGia,SAAS,CAACja,mBAApC;AACA,IAAIV,oBAAoB,GAAG2a,SAAS,CAAC3a,oBAArC;;AACA,IAAI4a,WAAW,GAAGjf,mBAAO,CAAC,CAAD,CAAzB;;AACA,IAAIoP,UAAU,GAAG6P,WAAW,CAAC7P,UAA7B;AACA,IAAIgB,cAAc,GAAG6O,WAAW,CAAC7O,cAAjC;AACA,IAAIE,aAAa,GAAG2O,WAAW,CAAC3O,aAAhC;AACA,IAAIC,gBAAgB,GAAG0O,WAAW,CAAC1O,gBAAnC;AACA,IAAIJ,cAAc,GAAG8O,WAAW,CAAC9O,cAAjC;AACA,IAAID,eAAe,GAAG+O,WAAW,CAAC/O,eAAlC;AACA,IAAIG,gBAAgB,GAAG4O,WAAW,CAAC5O,gBAAnC;AACA,IAAIJ,iBAAiB,GAAGgP,WAAW,CAAChP,iBAApC;AACA,IAAIO,kBAAkB,GAAGyO,WAAW,CAACzO,kBAArC;AACA,IAAIzI,mBAAmB,GAAGkX,WAAW,CAAClX,mBAAtC;AACA,IAAI0I,6BAA6B,GAAGwO,WAAW,CAACxO,6BAAhD;;AACA,IAAItQ,WAAW,GAAGH,mBAAO,CAAC,CAAD,CAAP,CAA4BG,WAA9C;;AACA,IAAIF,QAAQ,GAAGD,mBAAO,CAAC,CAAD,CAAP,CAA4BC,QAA3C;;AACA,IAAIif,yBAAyB,GAAGlf,mBAAO,CAAC,EAAD,CAAP,CAAuCkf,yBAAvE;;AACA,IAAIC,YAAY,GAAGnf,mBAAO,CAAC,EAAD,CAA1B;;AACA,IAAIof,eAAe,GAAGD,YAAY,CAACC,eAAnC;AACA,IAAIC,eAAe,GAAGF,YAAY,CAACE,eAAnC;AACA,IAAIC,kBAAkB,GAAGH,YAAY,CAACG,kBAAtC;AACA,IAAIC,iBAAiB,GAAGJ,YAAY,CAACI,iBAArC;AACA,IAAIC,eAAe,GAAGL,YAAY,CAACK,eAAnC;AACA,IAAIC,eAAe,GAAGN,YAAY,CAACM,eAAnC;AACA,IAAIC,mBAAmB,GAAGP,YAAY,CAACO,mBAAvC;AACA,IAAIC,kBAAkB,GAAGR,YAAY,CAACQ,kBAAtC;AACA,IAAIC,eAAe,GAAGT,YAAY,CAACS,eAAnC,C,CACA;AACA;;AACA,IAAIC,oBAAoB,GAAG,sCAA3B,C,CAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAG,sCAAxB,C,CAEA;AACA;;AACA,IAAIC,eAAe,GAAG,CAAEF,oBAAF,EAAwBC,iBAAxB,CAAtB;AAEA,IAAIE,kBAAkB,GAAG,CAAzB,C,CAEA;;AACA,IAAIC,eAAe,GAAGH,iBAAtB;;AAEA,SAASI,SAAT,CAAoBxmB,MAApB,EAA4BgB,KAA5B,EAAmC;AAClC,MAAIylB,GAAG,GAAG,EAAV;AACAA,KAAG,CAACzmB,MAAM,GAAC,CAAR,CAAH,GAAgBgB,KAAhB;AACA,SAAOylB,GAAG,CAAC9kB,GAAJ,CAAQ,UAAS9B,CAAT,EAAY;AAAC,WAAOmB,KAAP;AAAc,GAAnC,CAAP;AACA;;AAED,SAAS0lB,eAAT,CAA0BC,OAA1B,EAAmC;AAE/B,MAAKA,OAAO,KAAI/gB,SAAX,IAAwB+gB,OAAO,KAAK,IAAzC,EAAgD;AAC5CA,WAAO,GAAGnB,yBAAyB,CAACoB,cAApC;AACH;;AACD,OAAKC,sBAAL,GAA8BF,OAA9B;AACA,OAAKG,cAAL,GAAsB,IAAtB;AACA,OAAKC,eAAL,GAAuB,IAAvB;AAEA,SAAO,IAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,eAAe,CAAC7nB,SAAhB,CAA0BmoB,kBAA1B,GAA+C,UAASC,OAAT,EAAkBC,UAAlB,EAA8B;AACzE,MAAIC,IAAI,GAAGd,eAAe,CAACvlB,OAAhB,CAAwBmmB,OAAxB,CAAX;;AACA,MAAIE,IAAI,GAAC,CAAT,EAAY;AACR,WAAO,KAAP;AACH;;AACD,MAAIC,IAAI,GAAGf,eAAe,CAACvlB,OAAhB,CAAwBomB,UAAxB,CAAX;AACA,SAAOE,IAAI,IAAID,IAAf;AACH,CAPD;;AASAT,eAAe,CAAC7nB,SAAhB,CAA0BwoB,WAA1B,GAAwC,UAAS5mB,IAAT,EAAe;AACnD,OAAKue,KAAL,CAAWve,IAAX;AACA,OAAK6mB,YAAL;AACA,OAAKC,SAAL;AACA,MAAI5e,GAAG,GAAG,KAAK6e,OAAL,EAAV;AACA,OAAKC,UAAL,CAAgB9e,GAAhB;AACA,OAAK+e,SAAL,CAAe/e,GAAf;AACA,OAAKgf,SAAL,CAAehf,GAAf;AACA,MAAIif,IAAI,GAAG,EAAX,CARmD,CASnD;;AACA,OAAKC,QAAL,CAAclf,GAAd,EAAmBif,IAAnB,EAAyB,KAAKE,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAzB,EAVmD,CAWnD;AACA;;AACA,MAAI,KAAKf,kBAAL,CAAwBZ,iBAAxB,EAA2C,KAAK4B,IAAhD,CAAJ,EAA2D;AACvD,SAAKH,QAAL,CAAclf,GAAd,EAAmBif,IAAnB,EAAyB,KAAKK,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAzB;AACH;;AACD,OAAKG,SAAL,CAAevf,GAAf,EAAoBif,IAApB;AACA,OAAKO,aAAL,CAAmBxf,GAAnB;AACA,OAAKyf,gBAAL,CAAsBzf,GAAtB;AACA,OAAK0f,uBAAL,CAA6B1f,GAA7B;AACA,OAAK2f,SAAL,CAAe3f,GAAf;;AACA,MAAI,KAAKke,sBAAL,CAA4B0B,6BAA5B,IAA6D5f,GAAG,CAACuL,WAAJ,KAAoBmR,OAAO,CAACmD,MAA7F,EAAsG;AAClG,SAAKD,6BAAL,CAAmC5f,GAAnC,EADkG,CAElG;;AACA,SAAK2f,SAAL,CAAe3f,GAAf;AACH;;AACD,SAAOA,GAAP;AACH,CA3BD;;AA6BA+d,eAAe,CAAC7nB,SAAhB,CAA0BmgB,KAA1B,GAAkC,UAASve,IAAT,EAAe;AAChD,MAAIgoB,MAAM,GAAG,SAATA,MAAS,CAAS1Q,CAAT,EAAY;AAClB,QAAIlR,CAAC,GAAGkR,CAAC,CAAC9X,UAAF,CAAa,CAAb,CAAR;AACA,WAAO4G,CAAC,GAAC,CAAF,GAAOA,CAAC,GAAC,CAAT,GAAa,CAAC,CAArB;AACN,GAHD;;AAIG,MAAI6hB,IAAI,GAAGjoB,IAAI,CAACkoB,KAAL,CAAW,EAAX,EAAehnB,GAAf,CAAmB8mB,MAAnB,CAAX,CAL6C,CAM7C;;AACAC,MAAI,CAAC,CAAD,CAAJ,GAAUjoB,IAAI,CAACR,UAAL,CAAgB,CAAhB,CAAV;AACA,OAAKQ,IAAL,GAAYioB,IAAZ;AACA,OAAKrE,GAAL,GAAW,CAAX;AACH,CAVD;;AAYAqC,eAAe,CAAC7nB,SAAhB,CAA0ByoB,YAA1B,GAAyC,YAAW;AAChD,MAAIsB,OAAO,GAAG,KAAKd,OAAL,EAAd;;AACA,MAAKc,OAAO,KAAKtC,kBAAjB,EAAsC;AAClC,UAAO,4CAA4CsC,OAA5C,GAAsD,aAAtD,GAAsEtC,kBAAtE,GAA2F,IAAlG;AACH;AACJ,CALD;;AAOAI,eAAe,CAAC7nB,SAAhB,CAA0B0oB,SAA1B,GAAsC,YAAW;AAC7C,MAAIS,IAAI,GAAG,KAAKa,QAAL,EAAX;;AACA,MAAIxC,eAAe,CAACvlB,OAAhB,CAAwBknB,IAAxB,IAA8B,CAAlC,EAAqC;AACjC,UAAO,0CAA0CA,IAA1C,GACS,aADT,GACyBzB,eADzB,GAC2C,qBAD3C,EACkEyB,IADlE,EACwEzB,eAD/E;AAEH;;AACD,OAAKyB,IAAL,GAAYA,IAAZ;AACH,CAPD;;AASAtB,eAAe,CAAC7nB,SAAhB,CAA0B2oB,OAA1B,GAAoC,YAAW;AAC3C,MAAItT,WAAW,GAAG,KAAK4T,OAAL,EAAlB;AACA,MAAI3T,YAAY,GAAG,KAAK2T,OAAL,EAAnB;AACA,SAAO,IAAI7T,GAAJ,CAAQC,WAAR,EAAqBC,YAArB,CAAP;AACH,CAJD;;AAMAuS,eAAe,CAAC7nB,SAAhB,CAA0B4oB,UAA1B,GAAuC,UAAS9e,GAAT,EAAc;AACpD,MAAIJ,CAAJ,EAAOugB,IAAP,EAAalgB,WAAb;AACG,MAAImgB,oBAAoB,GAAG,EAA3B;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,OAAO,GAAG,KAAKnB,OAAL,EAAd;;AACA,OAAI,IAAIjoB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACopB,OAAf,EAAwBppB,CAAC,EAAzB,EAA6B;AACzB,QAAIqpB,KAAK,GAAG,KAAKpB,OAAL,EAAZ,CADyB,CAEzB;;AACA,QAAIoB,KAAK,KAAGxgB,QAAQ,CAACzD,YAArB,EAAmC;AAC/B0D,SAAG,CAACqM,QAAJ,CAAa,IAAb;AACA;AACH;;AACD,QAAIjM,SAAS,GAAG,KAAK+e,OAAL,EAAhB;;AACA,QAAI/e,SAAS,KAAK,MAAlB,EAA0B;AACtBA,eAAS,GAAG,CAAC,CAAb;AACH;;AACD,QAAInF,CAAC,GAAG,KAAKulB,YAAL,CAAkBD,KAAlB,EAAyBngB,SAAzB,CAAR;;AACA,QAAImgB,KAAK,KAAKxgB,QAAQ,CAACoB,QAAvB,EAAiC;AAAE;AAC/B,UAAIsf,mBAAmB,GAAG,KAAKtB,OAAL,EAA1B;AACAiB,0BAAoB,CAAC5nB,IAArB,CAA0B,CAACyC,CAAD,EAAIwlB,mBAAJ,CAA1B;AACH,KAHD,MAGO,IAAGxlB,CAAC,YAAY6G,eAAhB,EAAiC;AACpC,UAAI4e,cAAc,GAAG,KAAKvB,OAAL,EAArB;AACAkB,qBAAe,CAAC7nB,IAAhB,CAAqB,CAACyC,CAAD,EAAIylB,cAAJ,CAArB;AACH;;AACD1gB,OAAG,CAACqM,QAAJ,CAAapR,CAAb;AACH,GAzBgD,CA0BjD;AACH;;;AACG,OAAK2E,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACwgB,oBAAoB,CAAC/oB,MAAjC,EAAyCuI,CAAC,EAA1C,EAA8C;AAC1CugB,QAAI,GAAGC,oBAAoB,CAACxgB,CAAD,CAA3B;AACAugB,QAAI,CAAC,CAAD,CAAJ,CAAQ1d,aAAR,GAAwBzC,GAAG,CAACmH,MAAJ,CAAWgZ,IAAI,CAAC,CAAD,CAAf,CAAxB;AACH;;AAED,OAAKvgB,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACygB,eAAe,CAAChpB,MAA5B,EAAoCuI,CAAC,EAArC,EAAyC;AACrCugB,QAAI,GAAGE,eAAe,CAACzgB,CAAD,CAAtB;AACAugB,QAAI,CAAC,CAAD,CAAJ,CAAQpe,QAAR,GAAmB/B,GAAG,CAACmH,MAAJ,CAAWgZ,IAAI,CAAC,CAAD,CAAf,CAAnB;AACH;;AAED,MAAIQ,kBAAkB,GAAG,KAAKxB,OAAL,EAAzB;;AACA,OAAKvf,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC+gB,kBAAZ,EAAgC/gB,CAAC,EAAjC,EAAqC;AACjCK,eAAW,GAAG,KAAKkf,OAAL,EAAd;AACAnf,OAAG,CAACmH,MAAJ,CAAWlH,WAAX,EAAwB4B,SAAxB,GAAoC,IAApC;AACH;;AAED,MAAI+e,mBAAmB,GAAG,KAAKzB,OAAL,EAA1B;;AACA,OAAKvf,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACghB,mBAAZ,EAAiChhB,CAAC,EAAlC,EAAsC;AAClCK,eAAW,GAAG,KAAKkf,OAAL,EAAd;AACAnf,OAAG,CAACmH,MAAJ,CAAWlH,WAAX,EAAwBqC,gBAAxB,GAA2C,IAA3C;AACH;AACJ,CAjDD;;AAmDAyb,eAAe,CAAC7nB,SAAhB,CAA0B6oB,SAA1B,GAAsC,UAAS/e,GAAT,EAAc;AAChD,MAAI9I,CAAJ;AACA,MAAI2pB,MAAM,GAAG,KAAK1B,OAAL,EAAb;;AACA,MAAInf,GAAG,CAACuL,WAAJ,KAAoBmR,OAAO,CAACoE,KAAhC,EAAwC;AACpC9gB,OAAG,CAAC6L,eAAJ,GAAsBgS,SAAS,CAACgD,MAAD,EAAS,CAAT,CAA/B;AACH;;AACD7gB,KAAG,CAAC0L,gBAAJ,GAAuBmS,SAAS,CAACgD,MAAD,EAAS,CAAT,CAAhC;;AACA,OAAK3pB,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC2pB,MAAZ,EAAoB3pB,CAAC,EAArB,EAAyB;AACrB,QAAI+D,CAAC,GAAG,KAAKkkB,OAAL,EAAR;AACA,QAAIjd,UAAU,GAAGlC,GAAG,CAACmH,MAAJ,CAAWlM,CAAX,CAAjB;AACA+E,OAAG,CAAC0L,gBAAJ,CAAqBxU,CAArB,IAA0BgL,UAA1B;;AACA,QAAKlC,GAAG,CAACuL,WAAJ,KAAoBmR,OAAO,CAACoE,KAAjC,EAAyC;AACrC,UAAIC,SAAS,GAAG,KAAK5B,OAAL,EAAhB;;AACA,UAAI4B,SAAS,KAAK,MAAlB,EAA0B;AACtBA,iBAAS,GAAGnlB,KAAK,CAACa,GAAlB;AACH;;AACDuD,SAAG,CAAC6L,eAAJ,CAAoB3U,CAApB,IAAyB6pB,SAAzB;AACH;AACJ;;AACD/gB,KAAG,CAAC2L,eAAJ,GAAsBkS,SAAS,CAACgD,MAAD,EAAS,CAAT,CAA/B;;AACA,OAAK3pB,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAAvB,EAA+BH,CAAC,EAAhC,EAAoC;AAChC,QAAIkP,KAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAZ;;AACA,QAAI,EAAEkP,KAAK,YAAYjE,aAAnB,CAAJ,EAAuC;AACnC;AACH;;AACDnC,OAAG,CAAC2L,eAAJ,CAAoBvF,KAAK,CAAChG,SAA1B,IAAuCgG,KAAvC;AACApG,OAAG,CAAC0L,gBAAJ,CAAqBtF,KAAK,CAAChG,SAA3B,EAAsCiC,SAAtC,GAAkD+D,KAAlD;AACH;AACJ,CA5BD;;AA8BA2X,eAAe,CAAC7nB,SAAhB,CAA0B8oB,SAA1B,GAAsC,UAAShf,GAAT,EAAc;AAChD,MAAIghB,MAAM,GAAG,KAAK7B,OAAL,EAAb;;AACA,OAAK,IAAIjoB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC8pB,MAAhB,EAAwB9pB,CAAC,EAAzB,EAA6B;AACzB,QAAI+D,CAAC,GAAG,KAAKkkB,OAAL,EAAR;AACAnf,OAAG,CAAC+L,gBAAJ,CAAqBvT,IAArB,CAA0BwH,GAAG,CAACmH,MAAJ,CAAWlM,CAAX,CAA1B;AACH;AACJ,CAND;;AAQA8iB,eAAe,CAAC7nB,SAAhB,CAA0BgpB,QAA1B,GAAqC,UAASlf,GAAT,EAAcif,IAAd,EAAoBgC,WAApB,EAAiC;AAClE,MAAIzJ,CAAC,GAAG,KAAK2H,OAAL,EAAR;;AACA,OAAK,IAAIjoB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACsgB,CAAhB,EAAmBtgB,CAAC,EAApB,EAAwB;AACpB,QAAIgqB,IAAI,GAAG,IAAIpjB,WAAJ,EAAX;AACAmhB,QAAI,CAACzmB,IAAL,CAAU0oB,IAAV;AACA,QAAI1jB,CAAC,GAAG,KAAK2hB,OAAL,EAAR;AACA,QAAIgC,WAAW,GAAG,KAAKhC,OAAL,EAAlB;;AACA,QAAIgC,WAAW,KAAG,CAAlB,EAAqB;AACjBD,UAAI,CAAC/iB,MAAL,CAAY,CAAC,CAAb;AACH;;AACD,SAAK,IAAIyB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACpC,CAAhB,EAAmBoC,CAAC,EAApB,EAAwB;AACpB,UAAIwhB,EAAE,GAAGH,WAAW,EAApB;AACA,UAAII,EAAE,GAAGJ,WAAW,EAApB;AACAC,UAAI,CAAC7iB,QAAL,CAAc+iB,EAAd,EAAkBC,EAAlB;AACH;AACJ;AACJ,CAhBD;;AAkBAtD,eAAe,CAAC7nB,SAAhB,CAA0BqpB,SAA1B,GAAsC,UAASvf,GAAT,EAAcif,IAAd,EAAoB;AACzD,MAAI/nB,CAAJ,EAAO0I,CAAP,EAAUwG,KAAV,EAAiB7E,KAAjB,EAAwByL,MAAxB;AACG,MAAIsU,MAAM,GAAG,KAAKnC,OAAL,EAAb;;AACA,OAAKjoB,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACoqB,MAAZ,EAAoBpqB,CAAC,EAArB,EAAyB;AACrB,QAAIqqB,GAAG,GAAG,KAAKpC,OAAL,EAAV;AACA,QAAIqC,GAAG,GAAG,KAAKrC,OAAL,EAAV;AACA,QAAIvI,KAAK,GAAG,KAAKuI,OAAL,EAAZ;AACA,QAAIsC,IAAI,GAAG,KAAKtC,OAAL,EAAX;AACA,QAAIuC,IAAI,GAAG,KAAKvC,OAAL,EAAX;AACA,QAAIwC,IAAI,GAAG,KAAKxC,OAAL,EAAX;AACA5d,SAAK,GAAG,KAAKqgB,WAAL,CAAiB5hB,GAAjB,EAAsB4W,KAAtB,EAA6B2K,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,IAAnD,EAAyD1C,IAAzD,CAAR;AACA,QAAI4C,QAAQ,GAAG7hB,GAAG,CAACmH,MAAJ,CAAWoa,GAAX,CAAf;AACAM,YAAQ,CAACvgB,aAAT,CAAuBC,KAAvB;AACH,GAbqD,CActD;;;AACA,OAAKrK,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAAvB,EAA+BH,CAAC,EAAhC,EAAoC;AAChCkP,SAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAR;;AACA,SAAK0I,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACwG,KAAK,CAAC9F,WAAN,CAAkBjJ,MAA9B,EAAsCuI,CAAC,EAAvC,EAA2C;AACvC,UAAItC,CAAC,GAAG8I,KAAK,CAAC9F,WAAN,CAAkBV,CAAlB,CAAR;;AACA,UAAI,EAAEtC,CAAC,YAAYwQ,cAAf,CAAJ,EAAoC;AAChC;AACH;;AACV,UAAIe,yBAAyB,GAAG,CAAC,CAAjC;;AACA,UAAI7O,GAAG,CAAC0L,gBAAJ,CAAqBpO,CAAC,CAAC0P,MAAF,CAAS5M,SAA9B,EAAyCkC,gBAA7C,EAA+D;AAC9D,YAAIhF,CAAC,CAACsR,UAAF,KAAiB,CAArB,EAAwB;AACvBC,mCAAyB,GAAGvR,CAAC,CAAC0P,MAAF,CAAS5M,SAArC;AACA;AACD;;AAEDmB,WAAK,GAAG,IAAIqM,iBAAJ,CAAsBtQ,CAAC,CAAC2L,WAAxB,EAAqC4F,yBAArC,CAAR;AACS7O,SAAG,CAAC2L,eAAJ,CAAoBrO,CAAC,CAAC0P,MAAF,CAAS5M,SAA7B,EAAwCkB,aAAxC,CAAsDC,KAAtD;AACH;AACJ;;AAED,OAAKrK,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAAvB,EAA+BH,CAAC,EAAhC,EAAoC;AAChCkP,SAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAR;;AACA,QAAIkP,KAAK,YAAYtE,eAArB,EAAsC;AAClC;AACA,UAAIsE,KAAK,CAACrE,QAAN,KAAmB,IAAvB,EAA6B;AACzB,cAAO,cAAP;AACH,OAJiC,CAKlC;AACT;;;AACS,UAAKqE,KAAK,CAACrE,QAAN,CAAeG,UAAf,KAA8B,IAAnC,EAAyC;AACrC,cAAO,cAAP;AACH;;AACDkE,WAAK,CAACrE,QAAN,CAAeG,UAAf,GAA4BkE,KAA5B;AACH;;AACD,QAAIA,KAAK,YAAY7D,iBAArB,EAAwC;AACpC,WAAK3C,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACwG,KAAK,CAAC9F,WAAN,CAAkBjJ,MAA9B,EAAsCuI,CAAC,EAAvC,EAA2C;AACvCoN,cAAM,GAAG5G,KAAK,CAAC9F,WAAN,CAAkBV,CAAlB,EAAqBoN,MAA9B;;AACA,YAAIA,MAAM,YAAYxK,mBAAtB,EAA2C;AACvCwK,gBAAM,CAACvK,aAAP,GAAuB2D,KAAvB;AACH;AACJ;AACJ,KAPD,MAOO,IAAIA,KAAK,YAAYzD,iBAArB,EAAwC;AAC3C,WAAK/C,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACwG,KAAK,CAAC9F,WAAN,CAAkBjJ,MAA9B,EAAsCuI,CAAC,EAAvC,EAA2C;AACvCoN,cAAM,GAAG5G,KAAK,CAAC9F,WAAN,CAAkBV,CAAlB,EAAqBoN,MAA9B;;AACA,YAAIA,MAAM,YAAYpK,kBAAtB,EAA0C;AACtCoK,gBAAM,CAACvK,aAAP,GAAuB2D,KAAvB;AACH;AACJ;AACJ;AACJ;AACJ,CAhED;;AAkEA2X,eAAe,CAAC7nB,SAAhB,CAA0BspB,aAA1B,GAA0C,UAASxf,GAAT,EAAc;AACpD,MAAI8hB,UAAU,GAAG,KAAK3C,OAAL,EAAjB;;AACA,OAAK,IAAIjoB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC4qB,UAAhB,EAA4B5qB,CAAC,EAA7B,EAAiC;AAC7B,QAAI+D,CAAC,GAAG,KAAKkkB,OAAL,EAAR;AACA,QAAI4C,QAAQ,GAAG/hB,GAAG,CAACmH,MAAJ,CAAWlM,CAAX,CAAf;AACA+E,OAAG,CAACyL,eAAJ,CAAoBjT,IAApB,CAAyBupB,QAAzB;AACAA,YAAQ,CAACngB,QAAT,GAAoB1K,CAApB;AACH;AACJ,CARD;;AAUA6mB,eAAe,CAAC7nB,SAAhB,CAA0BupB,gBAA1B,GAA6C,UAASzf,GAAT,EAAc;AACvD,MAAIA,GAAG,CAACuL,WAAJ,KAAoBmR,OAAO,CAACoE,KAAhC,EAAuC;AACnC,QAAIvmB,KAAK,GAAG,KAAK4kB,OAAL,EAAZ;AACAnf,OAAG,CAAC8L,YAAJ,GAAmB+R,SAAS,CAACtjB,KAAD,EAAQ,IAAR,CAA5B;;AACA,SAAK,IAAIrD,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACqD,KAAhB,EAAuBrD,CAAC,EAAxB,EAA4B;AACxB,UAAI8qB,UAAU,GAAG,KAAK7C,OAAL,EAAjB;AACA,UAAI8C,KAAK,GAAG,KAAK9C,OAAL,EAAZ;;AACA,UAAI8C,KAAK,KAAK,MAAd,EAAsB;AAClBA,aAAK,GAAG,CAAC,CAAT;AACH;;AACD,UAAIC,KAAK,GAAG,KAAK/C,OAAL,EAAZ;;AACA,UAAI+C,KAAK,KAAK,MAAd,EAAsB;AAClBA,aAAK,GAAG,CAAC,CAAT;AACH;;AACD,UAAIC,WAAW,GAAG,KAAKC,kBAAL,CAAwBJ,UAAxB,EAAoCC,KAApC,EAA2CC,KAA3C,CAAlB;AACAliB,SAAG,CAAC8L,YAAJ,CAAiB5U,CAAjB,IAAsBirB,WAAtB;AACH;AACJ;AACJ,CAlBD;;AAoBApE,eAAe,CAAC7nB,SAAhB,CAA0B0pB,6BAA1B,GAA0D,UAAS5f,GAAT,EAAc;AACvE,MAAI9I,CAAJ;AACG,MAAIqD,KAAK,GAAGyF,GAAG,CAAC0L,gBAAJ,CAAqBrU,MAAjC;;AACA,OAAIH,CAAC,GAAC,CAAN,EAASA,CAAC,GAACqD,KAAX,EAAkBrD,CAAC,EAAnB,EAAuB;AACnB8I,OAAG,CAAC6L,eAAJ,CAAoB3U,CAApB,IAAyB8I,GAAG,CAACwL,YAAJ,GAAmBtU,CAAnB,GAAuB,CAAhD;AACH;;AACD,OAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAACqD,KAAX,EAAkBrD,CAAC,EAAnB,EAAuB;AACnB,SAAKmrB,4BAAL,CAAkCriB,GAAlC,EAAuC9I,CAAvC;AACH;AACJ,CATD;;AAWA6mB,eAAe,CAAC7nB,SAAhB,CAA0BmsB,4BAA1B,GAAyD,UAASriB,GAAT,EAAcsiB,GAAd,EAAmB;AAC3E,MAAIprB,CAAJ,EAAOkP,KAAP;AACG,MAAImc,WAAW,GAAG,IAAIvgB,oBAAJ,EAAlB;AACAugB,aAAW,CAACniB,SAAZ,GAAwBkiB,GAAxB;AACAtiB,KAAG,CAACqM,QAAJ,CAAakW,WAAb;AAEA,MAAIC,UAAU,GAAG,IAAIvgB,aAAJ,EAAjB;AACAugB,YAAU,CAACpiB,SAAX,GAAuBkiB,GAAvB;AACAtiB,KAAG,CAACqM,QAAJ,CAAamW,UAAb;AAEAD,aAAW,CAACxgB,QAAZ,GAAuBygB,UAAvB;AACAxiB,KAAG,CAACuM,mBAAJ,CAAwBgW,WAAxB;AAEAC,YAAU,CAACtgB,UAAX,GAAwBqgB,WAAxB;AAEA,MAAIE,iBAAiB,GAAG,IAAxB;AACA,MAAI1gB,QAAQ,GAAG,IAAf;;AAEA,MAAI/B,GAAG,CAAC0L,gBAAJ,CAAqB4W,GAArB,EAA0BhgB,gBAA9B,EAAgD;AAC5C;AACAP,YAAQ,GAAG,IAAX;;AACA,SAAI7K,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAAtB,EAA8BH,CAAC,EAA/B,EAAmC;AAC/BkP,WAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAR;;AACA,UAAI,KAAKwrB,kBAAL,CAAwBtc,KAAxB,EAA+Bkc,GAA/B,CAAJ,EAAyC;AACrCvgB,gBAAQ,GAAGqE,KAAX;AACAqc,yBAAiB,GAAGrc,KAAK,CAAC3D,aAAN,CAAoBnC,WAApB,CAAgC,CAAhC,CAApB;AACA;AACH;AACJ;;AACD,QAAImiB,iBAAiB,KAAK,IAA1B,EAAgC;AAC5B,YAAO,sEAAP;AACH;AACJ,GAdD,MAcO;AACH1gB,YAAQ,GAAG/B,GAAG,CAAC2L,eAAJ,CAAoB2W,GAApB,CAAX;AACH,GAlCuE,CAoCxE;AACH;;;AACG,OAAIprB,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAAtB,EAA8BH,CAAC,EAA/B,EAAmC;AAC/BkP,SAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAR;;AACA,SAAI,IAAI0I,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwG,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAjC,EAAyCuI,CAAC,EAA1C,EAA8C;AAC1C,UAAIoJ,UAAU,GAAG5C,KAAK,CAAC9F,WAAN,CAAkBV,CAAlB,CAAjB;;AACA,UAAIoJ,UAAU,KAAKyZ,iBAAnB,EAAsC;AAClC;AACH;;AACD,UAAIzZ,UAAU,CAACgE,MAAX,KAAsBjL,QAA1B,EAAoC;AAChCiH,kBAAU,CAACgE,MAAX,GAAoBwV,UAApB;AACH;AACJ;AACJ,GAjDuE,CAmDxE;AACH;;;AACG,MAAI9W,gBAAgB,GAAG1L,GAAG,CAAC0L,gBAAJ,CAAqB4W,GAArB,CAAvB;AACA,MAAI/nB,KAAK,GAAGmR,gBAAgB,CAACpL,WAAjB,CAA6BjJ,MAAzC;;AACA,SAAQkD,KAAK,GAAG,CAAhB,EAAmB;AACfgoB,eAAW,CAACjhB,aAAZ,CAA0BoK,gBAAgB,CAACpL,WAAjB,CAA6B/F,KAAK,GAAC,CAAnC,CAA1B;AACAmR,oBAAgB,CAACpL,WAAjB,GAA+BoL,gBAAgB,CAACpL,WAAjB,CAA6BkK,KAA7B,CAAmC,CAAC,CAApC,CAA/B;AACH,GA1DuE,CA2DxE;;;AACAxK,KAAG,CAAC0L,gBAAJ,CAAqB4W,GAArB,EAA0BhhB,aAA1B,CAAwC,IAAIsM,iBAAJ,CAAsB2U,WAAtB,CAAxC;AACAC,YAAU,CAAClhB,aAAX,CAAyB,IAAIsM,iBAAJ,CAAsB7L,QAAtB,CAAzB;AAEA,MAAI4gB,UAAU,GAAG,IAAIjhB,UAAJ,EAAjB;AACA1B,KAAG,CAACqM,QAAJ,CAAasW,UAAb;AACAA,YAAU,CAACrhB,aAAX,CAAyB,IAAIyM,cAAJ,CAAmByU,UAAnB,EAA+BxiB,GAAG,CAAC6L,eAAJ,CAAoByW,GAApB,CAA/B,CAAzB;AACAC,aAAW,CAACjhB,aAAZ,CAA0B,IAAIsM,iBAAJ,CAAsB+U,UAAtB,CAA1B;AACH,CAnED;;AAqEA5E,eAAe,CAAC7nB,SAAhB,CAA0BwsB,kBAA1B,GAA+C,UAAStc,KAAT,EAAgBkc,GAAhB,EAAqB;AAChE,MAAKlc,KAAK,CAAChG,SAAN,KAAoBkiB,GAAzB,EAA8B;AAC1B,WAAO,IAAP;AACH;;AACD,MAAI,EAAGlc,KAAK,YAAYxD,kBAApB,CAAJ,EAA6C;AACzC,WAAO,IAAP;AACH;;AACD,MAAIggB,iBAAiB,GAAGxc,KAAK,CAAC9F,WAAN,CAAkB8F,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,GAA2B,CAA7C,EAAgD2V,MAAxE;;AACA,MAAI,EAAG4V,iBAAiB,YAAY9f,YAAhC,CAAJ,EAAmD;AAC/C,WAAO,IAAP;AACH;;AACD,MAAI8f,iBAAiB,CAACviB,sBAAlB,IACCuiB,iBAAiB,CAACtiB,WAAlB,CAA8B,CAA9B,EAAiC0M,MAAjC,YAAmD7K,aADxD,EACwE;AACpE,WAAOiE,KAAP;AACH,GAHD,MAGO;AACH,WAAO,IAAP;AACH;AACJ,CAjBD,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA2X,eAAe,CAAC7nB,SAAhB,CAA0BwpB,uBAA1B,GAAoD,UAAS1f,GAAT,EAAc;AACjE,OAAI,IAAI9I,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAA1B,EAAkCH,CAAC,EAAnC,EAAuC;AACtC,QAAIkP,KAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAZ;;AACA,QAAI,EAAGkP,KAAK,YAAYxD,kBAApB,CAAJ,EAA6C;AACnC;AACH,KAJ+B,CAKhC;AACA;AACA;AACA;;;AACA,QAAK5C,GAAG,CAAC0L,gBAAJ,CAAqBtF,KAAK,CAAChG,SAA3B,EAAsCkC,gBAA3C,EAA6D;AACzD,UAAIsgB,iBAAiB,GAAGxc,KAAK,CAAC9F,WAAN,CAAkB8F,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,GAA2B,CAA7C,EAAgD2V,MAAxE;;AACA,UAAI4V,iBAAiB,YAAY9f,YAAjC,EAA+C;AAC3C,YAAK8f,iBAAiB,CAACviB,sBAAlB,IACIuiB,iBAAiB,CAACtiB,WAAlB,CAA8B,CAA9B,EAAiC0M,MAAjC,YAAmD7K,aAD5D,EAC4E;AACxEiE,eAAK,CAACvD,oBAAN,GAA6B,IAA7B;AACH;AACJ;AACJ;AACP;AACD,CApBD;;AAsBAkb,eAAe,CAAC7nB,SAAhB,CAA0BypB,SAA1B,GAAsC,UAAS3f,GAAT,EAAc;AAChD,MAAI,CAAC,KAAKke,sBAAL,CAA4ByB,SAAjC,EAA4C;AACxC;AACH,GAH+C,CAIhD;;;AACH,OAAI,IAAIzoB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC8I,GAAG,CAACmH,MAAJ,CAAW9P,MAA1B,EAAkCH,CAAC,EAAnC,EAAuC;AAChC,QAAIkP,KAAK,GAAGpG,GAAG,CAACmH,MAAJ,CAAWjQ,CAAX,CAAZ;;AACA,QAAIkP,KAAK,KAAK,IAAd,EAAoB;AAChB;AACH;;AACD,SAAKyc,cAAL,CAAoBzc,KAAK,CAAC/F,sBAAN,IAAgC+F,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,IAA4B,CAAhF;;AACA,QAAI+O,KAAK,YAAY5D,mBAArB,EAA0C;AACtC,WAAKqgB,cAAL,CAAoBzc,KAAK,CAAC3D,aAAN,KAAwB,IAA5C;AACH,KAFD,MAEQ,IAAI2D,KAAK,YAAYxD,kBAArB,EAAyC;AAC7C,WAAKigB,cAAL,CAAoBzc,KAAK,CAAC3D,aAAN,KAAwB,IAA5C;AACA,WAAKogB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,KAA6B,CAAjD;;AACA,UAAI+O,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,EAAqB0M,MAArB,YAAuCtK,mBAA3C,EAAgE;AAC5D,aAAKmgB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,EAAqB0M,MAArB,YAAuClK,YAA3D;AACA,aAAK+f,cAAL,CAAoB,CAACzc,KAAK,CAACvE,SAA3B;AACH,OAHD,MAGO,IAAIuE,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,EAAqB0M,MAArB,YAAuClK,YAA3C,EAAyD;AAC5D,aAAK+f,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,EAAqB0M,MAArB,YAAuCtK,mBAA3D;AACA,aAAKmgB,cAAL,CAAoBzc,KAAK,CAACvE,SAA1B;AACH,OAHM,MAGA;AACH,cAAM,cAAN;AACH;AACJ,KAZO,MAYD,IAAIuE,KAAK,YAAYzD,iBAArB,EAAwC;AAC3C,WAAKkgB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,KAA6B,CAAjD;AACA,WAAKwrB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkB,CAAlB,EAAqB0M,MAArB,YAAuCpK,kBAA3D;AACH,KAHM,MAGA,IAAIwD,KAAK,YAAYtD,YAArB,EAAmC;AACtC,WAAK+f,cAAL,CAAoBzc,KAAK,CAAC3D,aAAN,KAAwB,IAA5C;AACH,KAFM,MAEA,IAAI2D,KAAK,YAAYhE,cAArB,EAAqC;AACxC,WAAKygB,cAAL,CAAoBzc,KAAK,CAAC/D,SAAN,KAAoB,IAAxC;AACH,KAFM,MAEA,IAAI+D,KAAK,YAAYtE,eAArB,EAAsC;AACzC,WAAK+gB,cAAL,CAAoBzc,KAAK,CAACrE,QAAN,KAAmB,IAAvC;AACH,KAFM,MAEA,IAAIqE,KAAK,YAAYnE,aAArB,EAAoC;AACvC,WAAK4gB,cAAL,CAAoBzc,KAAK,CAAClE,UAAN,KAAqB,IAAzC;AACH,KAFM,MAEA,IAAIkE,KAAK,YAAYzE,aAArB,EAAoC;AACvC,WAAKkhB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,IAA4B,CAA5B,IAAiC+O,KAAK,CAACxE,QAAN,IAAkB,CAAvE;AACH,KAFM,MAEA;AACH,WAAKihB,cAAL,CAAoBzc,KAAK,CAAC9F,WAAN,CAAkBjJ,MAAlB,IAA4B,CAA5B,IAAkC+O,KAAK,YAAYjE,aAAvE;AACH;AACP;AACD,CA1CD;;AA4CA4b,eAAe,CAAC7nB,SAAhB,CAA0B2sB,cAA1B,GAA2C,UAASC,SAAT,EAAoB9c,OAApB,EAA6B;AACpE,MAAI,CAAC8c,SAAL,EAAgB;AACZ,QAAI9c,OAAO,KAAK/I,SAAZ,IAAyB+I,OAAO,KAAG,IAAvC,EAA6C;AACzCA,aAAO,GAAG,cAAV;AACH;;AACD,UAAOA,OAAP;AACH;AACJ,CAPD;;AASA+X,eAAe,CAAC7nB,SAAhB,CAA0BipB,OAA1B,GAAoC,YAAW;AAC3C,SAAO,KAAKrnB,IAAL,CAAU,KAAK4jB,GAAL,EAAV,CAAP;AACH,CAFD;;AAIAqC,eAAe,CAAC7nB,SAAhB,CAA0BopB,SAA1B,GAAsC,YAAW;AAC7C,MAAIyD,GAAG,GAAG,KAAK5D,OAAL,EAAV;AACA,MAAI6D,IAAI,GAAG,KAAK7D,OAAL,EAAX;AACA,SAAO4D,GAAG,GAAIC,IAAI,IAAI,EAAtB;AACH,CAJD;;AAMAjF,eAAe,CAAC7nB,SAAhB,CAA0B+sB,QAA1B,GAAqC,YAAW;AAC5C,MAAIF,GAAG,GAAG,KAAKzD,SAAL,EAAV;AACA,MAAI0D,IAAI,GAAG,KAAK1D,SAAL,EAAX;AACA,SAAQyD,GAAG,GAAG,kBAAP,GAA8BC,IAAI,IAAI,EAA7C;AACH,CAJD;;AAMA,SAASE,eAAT,GAA2B;AAC1B,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIjsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC7BisB,OAAG,CAACjsB,CAAD,CAAH,GAAS,CAACA,CAAC,GAAG,KAAL,EAAYE,QAAZ,CAAqB,EAArB,EAAyBqE,MAAzB,CAAgC,CAAhC,EAAmCD,WAAnC,EAAT;AACA;;AACD,SAAO2nB,GAAP;AACA;;AAED,IAAIC,SAAS,GAAGF,eAAe,EAA/B;;AAEAnF,eAAe,CAAC7nB,SAAhB,CAA0BgqB,QAA1B,GAAqC,YAAW;AAC/C,MAAImD,EAAE,GAAG,EAAT;;AACA,OAAI,IAAInsB,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EAAsB;AACrB,QAAIosB,IAAG,GAAG,KAAKnE,OAAL,EAAV;AACA;;;AACAkE,MAAE,CAAE,IAAEnsB,CAAH,GAAM,CAAP,CAAF,GAAcosB,IAAG,GAAG,IAApB;AACAD,MAAE,CAAC,IAAEnsB,CAAH,CAAF,GAAWosB,IAAG,IAAI,CAAR,GAAa,IAAvB;AACA;;AACE,SAAOF,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAAT,GAAmBD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAA5B,GACPD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CADF,GACYD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CADrB,GAC+B,GAD/B,GAEPD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAFF,GAEYD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAFrB,GAE+B,GAF/B,GAGPD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAHF,GAGYD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAHrB,GAG+B,GAH/B,GAIPD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAJF,GAIYD,SAAS,CAACC,EAAE,CAAC,CAAD,CAAH,CAJrB,GAI+B,GAJ/B,GAKPD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CALF,GAKaD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CALtB,GAMPD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CANF,GAMaD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CANtB,GAOPD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CAPF,GAOaD,SAAS,CAACC,EAAE,CAAC,EAAD,CAAH,CAP7B;AAQH,CAhBD;;AAkBAtF,eAAe,CAAC7nB,SAAhB,CAA0B0rB,WAA1B,GAAwC,UAAS5hB,GAAT,EAAclE,IAAd,EAAoBylB,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgD1C,IAAhD,EAAsD;AAC1F,MAAIjS,MAAM,GAAGhN,GAAG,CAACmH,MAAJ,CAAWqa,GAAX,CAAb;;AACA,UAAO1lB,IAAP;AACA,SAAKiR,UAAU,CAACxQ,OAAhB;AACI,aAAO,IAAIqR,iBAAJ,CAAsBZ,MAAtB,CAAP;;AACJ,SAAKD,UAAU,CAACG,KAAhB;AACI,aAAOyU,IAAI,KAAK,CAAT,GAAa,IAAI9T,eAAJ,CAAoBb,MAApB,EAA4BpR,KAAK,CAACa,GAAlC,EAAuCilB,IAAvC,CAAb,GAA4D,IAAI7T,eAAJ,CAAoBb,MAApB,EAA4ByU,IAA5B,EAAkCC,IAAlC,CAAnE;;AACJ,SAAK3U,UAAU,CAACI,IAAhB;AACI,aAAO,IAAIW,cAAJ,CAAmB9N,GAAG,CAACmH,MAAJ,CAAWsa,IAAX,CAAnB,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiD3U,MAAjD,CAAP;;AACJ,SAAKD,UAAU,CAACK,SAAhB;AACI,aAAO,IAAI1H,mBAAJ,CAAwBsH,MAAxB,EAAgCyU,IAAhC,EAAsCC,IAAtC,EAA4CC,IAAI,KAAK,CAArD,CAAP;;AACJ,SAAK5U,UAAU,CAACW,UAAhB;AACI,aAAO,IAAIU,6BAAJ,CAAkCpB,MAAlC,EAA0CyU,IAA1C,CAAP;;AACJ,SAAK1U,UAAU,CAACM,IAAhB;AACI,aAAOsU,IAAI,KAAK,CAAT,GAAa,IAAI5T,cAAJ,CAAmBf,MAAnB,EAA2BpR,KAAK,CAACa,GAAjC,CAAb,GAAqD,IAAIsR,cAAJ,CAAmBf,MAAnB,EAA2ByU,IAA3B,CAA5D;;AACJ,SAAK1U,UAAU,CAACO,MAAhB;AACI,aAAO,IAAIU,gBAAJ,CAAqBhB,MAArB,EAA6ByU,IAA7B,EAAmCC,IAAnC,EAAyCC,IAAI,KAAK,CAAlD,CAAP;;AACJ,SAAK5U,UAAU,CAACQ,GAAhB;AACI,aAAO,IAAIU,aAAJ,CAAkBjB,MAAlB,EAA0BiS,IAAI,CAACwC,IAAD,CAA9B,CAAP;;AACJ,SAAK1U,UAAU,CAACS,OAAhB;AACI,aAAO,IAAIU,gBAAJ,CAAqBlB,MAArB,EAA6BiS,IAAI,CAACwC,IAAD,CAAjC,CAAP;;AACJ,SAAK1U,UAAU,CAACU,QAAhB;AACI,aAAO,IAAIU,kBAAJ,CAAuBnB,MAAvB,CAAP;;AACJ;AACI,YAAM,oCAAoClR,IAApC,GAA2C,gBAAjD;AAtBJ;AAwBH,CA1BD;;AA4BAiiB,eAAe,CAAC7nB,SAAhB,CAA0BsqB,YAA1B,GAAyC,UAAS1kB,IAAT,EAAesE,SAAf,EAA0B;AAC/D,MAAI,KAAK+d,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,QAAIoF,EAAE,GAAG,EAAT;AACAA,MAAE,CAACxjB,QAAQ,CAACzD,YAAV,CAAF,GAA4B,IAA5B;;AACAinB,MAAE,CAACxjB,QAAQ,CAACS,KAAV,CAAF,GAAqB,YAAW;AAAE,aAAO,IAAIkB,UAAJ,EAAP;AAA0B,KAA5D;;AACA6hB,MAAE,CAACxjB,QAAQ,CAACU,UAAV,CAAF,GAA0B,YAAW;AAAE,aAAO,IAAI2B,cAAJ,EAAP;AAA8B,KAArE;;AACAmhB,MAAE,CAACxjB,QAAQ,CAACW,WAAV,CAAF,GAA2B,YAAW;AAAE,aAAO,IAAIsB,oBAAJ,EAAP;AAAoC,KAA5E;;AACAuhB,MAAE,CAACxjB,QAAQ,CAACY,gBAAV,CAAF,GAAgC,YAAW;AAAE,aAAO,IAAI6B,mBAAJ,EAAP;AAAmC,KAAhF;;AACA+gB,MAAE,CAACxjB,QAAQ,CAACa,gBAAV,CAAF,GAAgC,YAAW;AAAE,aAAO,IAAI8B,mBAAJ,EAAP;AAAmC,KAAhF;;AACA6gB,MAAE,CAACxjB,QAAQ,CAACc,WAAV,CAAF,GAA2B,YAAW;AAAE,aAAO,IAAIkC,gBAAJ,EAAP;AAAgC,KAAxE;;AACAwgB,MAAE,CAACxjB,QAAQ,CAACe,SAAV,CAAF,GAAyB,YAAW;AAAE,aAAO,IAAIqB,aAAJ,EAAP;AAA6B,KAAnE;;AACAohB,MAAE,CAACxjB,QAAQ,CAACgB,SAAV,CAAF,GAAyB,YAAW;AAAE,aAAO,IAAIkB,aAAJ,EAAP;AAA6B,KAAnE;;AACAshB,MAAE,CAACxjB,QAAQ,CAACiB,cAAV,CAAF,GAA8B,YAAW;AAAE,aAAO,IAAI2B,iBAAJ,EAAP;AAAiC,KAA5E;;AACA4gB,MAAE,CAACxjB,QAAQ,CAACkB,eAAV,CAAF,GAA+B,YAAW;AAAE,aAAO,IAAI2B,kBAAJ,EAAP;AAAkC,KAA9E;;AACA2gB,MAAE,CAACxjB,QAAQ,CAACmB,cAAV,CAAF,GAA8B,YAAW;AAAE,aAAO,IAAIqB,iBAAJ,EAAP;AAAiC,KAA5E;;AACAghB,MAAE,CAACxjB,QAAQ,CAACoB,QAAV,CAAF,GAAwB,YAAW;AAAE,aAAO,IAAI2B,YAAJ,EAAP;AAA4B,KAAjE;;AACA,SAAKqb,cAAL,GAAsBoF,EAAtB;AACH;;AACD,MAAIznB,IAAI,GAAC,KAAKqiB,cAAL,CAAoB9mB,MAAzB,IAAmC,KAAK8mB,cAAL,CAAoBriB,IAApB,MAA8B,IAArE,EAA2E;AACvE,UAAM,8BAA8BA,IAA9B,GAAqC,gBAA3C;AACH,GAFD,MAEO;AACH,QAAIb,CAAC,GAAG,KAAKkjB,cAAL,CAAoBriB,IAApB,GAAR;;AACA,QAAIb,CAAC,KAAG,IAAR,EAAc;AACVA,OAAC,CAACmF,SAAF,GAAcA,SAAd;AACA,aAAOnF,CAAP;AACH;AACJ;AACJ,CA3BD;;AA6BA8iB,eAAe,CAAC7nB,SAAhB,CAA0BksB,kBAA1B,GAA+C,UAAStmB,IAAT,EAAemmB,KAAf,EAAsBC,KAAtB,EAA6B;AACxE,MAAI,KAAK9D,eAAL,KAAyB,IAA7B,EAAmC;AAC/B,QAAIoF,EAAE,GAAG,EAAT;;AACAA,MAAE,CAACzG,eAAe,CAAC0G,OAAjB,CAAF,GAA8B,UAASxB,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO,IAAIjF,kBAAJ,CAAuBgF,KAAvB,CAAP;AAAuC,KAA9F;;AACAuB,MAAE,CAACzG,eAAe,CAAC2G,MAAjB,CAAF,GAA6B,UAASzB,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO,IAAIhF,iBAAJ,CAAsB+E,KAAtB,EAA6BC,KAA7B,CAAP;AAA6C,KAAnG;;AACAsB,MAAE,CAACzG,eAAe,CAAC4G,IAAjB,CAAF,GAA2B,UAAS1B,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO,IAAI3E,eAAJ,CAAoB0E,KAApB,CAAP;AAAoC,KAAxF;;AACAuB,MAAE,CAACzG,eAAe,CAAChH,IAAjB,CAAF,GAA2B,UAASkM,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO/E,eAAe,CAAC9D,QAAvB;AAAkC,KAAtF;;AACAmK,MAAE,CAACzG,eAAe,CAAC6G,QAAjB,CAAF,GAA+B,UAAS3B,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO5E,kBAAkB,CAACjE,QAA1B;AAAqC,KAA7F;;AACAmK,MAAE,CAACzG,eAAe,CAAC8G,SAAjB,CAAF,GAAgC,UAAS5B,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO,IAAI7E,mBAAJ,CAAwB4E,KAAxB,CAAP;AAAwC,KAAjG;;AACAuB,MAAE,CAACzG,eAAe,CAAC/G,IAAjB,CAAF,GAA2B,UAASiM,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAOlF,eAAe,CAAC3D,QAAvB;AAAkC,KAAtF;;AACAmK,MAAE,CAACzG,eAAe,CAAC+G,IAAjB,CAAF,GAA2B,UAAS7B,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,aAAO,IAAI9E,eAAJ,CAAoB6E,KAApB,CAAP;AAAoC,KAAxF;;AACA,SAAK7D,eAAL,GAAuBoF,EAAvB;AACH;;AACD,MAAI1nB,IAAI,GAAC,KAAKsiB,eAAL,CAAqB/mB,MAA1B,IAAoC,KAAK+mB,eAAL,CAAqBtiB,IAArB,MAA+B,IAAvE,EAA6E;AACzE,UAAM,qCAAqCA,IAArC,GAA4C,gBAAlD;AACH,GAFD,MAEO;AACH,WAAO,KAAKsiB,eAAL,CAAqBtiB,IAArB,EAA2BmmB,KAA3B,EAAkCC,KAAlC,CAAP;AACH;AACJ,CAlBD;;AAqBAvmB,OAAO,CAACoiB,eAAR,GAA0BA,eAA1B,C;;;;;;ACrqBA;;;;AAKA,SAASlB,yBAAT,CAAmC3C,QAAnC,EAA6C;AAC5C,MAAGA,QAAQ,KAAGjd,SAAd,EAAyB;AACxBid,YAAQ,GAAG,IAAX;AACA;;AACD,OAAKlc,QAAL,GAAgB,KAAhB;AACG,OAAK2hB,SAAL,GAAiBzF,QAAQ,KAAG,IAAX,GAAkB,IAAlB,GAAyBA,QAAQ,CAACyF,SAAnD;AACA,OAAKC,6BAAL,GAAqC1F,QAAQ,KAAG,IAAX,GAAkB,KAAlB,GAA0BA,QAAQ,CAAC0F,6BAAxE;AAEA,SAAO,IAAP;AACH;;AAED/C,yBAAyB,CAACoB,cAA1B,GAA2C,IAAIpB,yBAAJ,EAA3C;AACAA,yBAAyB,CAACoB,cAA1B,CAAyCjgB,QAAzC,GAAoD,IAApD,C,CAEA;AACA;AACA;AACA;;AAEArC,OAAO,CAACkhB,yBAAR,GAAoCA,yBAApC,C;;;;;;ACxBA;;AACA;;;;AAIC;AAED,SAASE,eAAT,GAA2B,CAC1B;;AAEDA,eAAe,CAAC0G,OAAhB,GAA0B,CAA1B,C,CAAiC;;AACjC1G,eAAe,CAAC2G,MAAhB,GAAyB,CAAzB,C,CAAiC;;AACjC3G,eAAe,CAAC4G,IAAhB,GAAuB,CAAvB,C,CAAiC;;AACjC5G,eAAe,CAAChH,IAAhB,GAAuB,CAAvB,C,CAAiC;;AACjCgH,eAAe,CAAC6G,QAAhB,GAA2B,CAA3B,C,CAAiC;;AACjC7G,eAAe,CAAC8G,SAAhB,GAA4B,CAA5B,C,CAAiC;;AACjC9G,eAAe,CAAC/G,IAAhB,GAAuB,CAAvB,C,CAAiC;;AACjC+G,eAAe,CAAC+G,IAAhB,GAAuB,CAAvB,C,CAAiC;;AAEjC,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AACzB,OAAKhC,UAAL,GAAkBgC,MAAlB;AACA,OAAKC,mBAAL,GAA2B,KAA3B;AACA,SAAO,IAAP;AACH;;AAEDF,WAAW,CAAC7tB,SAAZ,CAAsBM,QAAtB,GAAiC,YAAW;AACxC,MAAI8B,IAAI,GAAG,IAAIgB,IAAJ,EAAX;AACA,OAAKsB,cAAL,CAAoBtC,IAApB;AACA,SAAOA,IAAI,CAACkB,MAAL,EAAP;AACH,CAJD;;AAMAuqB,WAAW,CAAC7tB,SAAZ,CAAsB0E,cAAtB,GAAuC,UAAStC,IAAT,EAAe;AAClDA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB;AACH,CAFD;;AAIA+B,WAAW,CAAC7tB,SAAZ,CAAsBuB,MAAtB,GAA+B,UAASgC,KAAT,EAAgB;AAC3C,SAAO,SAASA,KAAhB;AACH,CAFD,C,CAMA;AACA;AACA;AACA;AACA;;;AACA,SAASujB,eAAT,GAA2B;AAC1B+G,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC/G,IAAvC;AACA,SAAO,IAAP;AACA;;AAEDgH,eAAe,CAAC9mB,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA5B;AACA8mB,eAAe,CAAC9mB,SAAhB,CAA0BkH,WAA1B,GAAwC4f,eAAxC,C,CAEA;;AACAA,eAAe,CAAC3D,QAAhB,GAA2B,IAAI2D,eAAJ,EAA3B;;AAEAA,eAAe,CAAC9mB,SAAhB,CAA0BguB,OAA1B,GAAoC,UAAS3d,KAAT,EAAgB;AAChDA,OAAK,CAAC8Q,IAAN;AACH,CAFD;;AAIA2F,eAAe,CAAC9mB,SAAhB,CAA0BkB,QAA1B,GAAqC,YAAW;AAC/C,SAAO,MAAP;AACA,CAFD,C,CAIA;AACA;;;AACA,SAASgmB,eAAT,CAAyBthB,IAAzB,EAA+B;AAC9BioB,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC+G,IAAvC;AACA,OAAKhoB,IAAL,GAAYA,IAAZ;AACA,SAAO,IAAP;AACA;;AAEDshB,eAAe,CAAClnB,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA5B;AACAknB,eAAe,CAAClnB,SAAhB,CAA0BkH,WAA1B,GAAwCggB,eAAxC;;AAEAA,eAAe,CAAClnB,SAAhB,CAA0BguB,OAA1B,GAAoC,UAAS3d,KAAT,EAAgB;AAChDA,OAAK,CAACzK,IAAN,GAAa,KAAKA,IAAlB;AACH,CAFD;;AAIAshB,eAAe,CAAClnB,SAAhB,CAA0B0E,cAA1B,GAA2C,UAAStC,IAAT,EAAe;AACtDA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAKlmB,IAAlC;AACH,CAFD;;AAKAshB,eAAe,CAAClnB,SAAhB,CAA0BuB,MAA1B,GAAmC,UAASgC,KAAT,EAAgB;AAC/C,MAAG,SAASA,KAAZ,EAAmB;AACf,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAY2jB,eAApB,CAAJ,EAA0C;AAC7C,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAKthB,IAAL,KAAcrC,KAAK,CAACqC,IAA3B;AACH;AACJ,CARD;;AAUAshB,eAAe,CAAClnB,SAAhB,CAA0BkB,QAA1B,GAAqC,YAAW;AAC5C,SAAO,UAAU,KAAK0E,IAAf,GAAsB,GAA7B;AACH,CAFD,C,CAIA;AACA;;;AACA,SAASuhB,mBAAT,CAA6B9F,IAA7B,EAAmC;AAClCwM,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC8G,SAAvC;AACG,OAAKtM,IAAL,GAAYA,IAAZ;AACA,SAAO,IAAP;AACH;;AAED8F,mBAAmB,CAACnnB,SAApB,GAAgC6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAAhC;AACAmnB,mBAAmB,CAACnnB,SAApB,CAA8BkH,WAA9B,GAA4CigB,mBAA5C,C,CAEA;AACA;;AACAA,mBAAmB,CAACnnB,SAApB,CAA8BguB,OAA9B,GAAwC,UAAS3d,KAAT,EAAgB;AACpDA,OAAK,CAACkR,QAAN,CAAe,KAAKF,IAApB;AACH,CAFD;;AAIA8F,mBAAmB,CAACnnB,SAApB,CAA8B0E,cAA9B,GAA+C,UAAStC,IAAT,EAAe;AAC1DA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAKzK,IAAlC;AACH,CAFD;;AAIA8F,mBAAmB,CAACnnB,SAApB,CAA8BuB,MAA9B,GAAuC,UAASgC,KAAT,EAAgB;AACnD,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAY4jB,mBAApB,CAAJ,EAA8C;AACjD,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAK9F,IAAL,KAAc9d,KAAK,CAAC8d,IAA3B;AACH;AACJ,CARD;;AAUA8F,mBAAmB,CAACnnB,SAApB,CAA8BkB,QAA9B,GAAyC,YAAW;AACnD,SAAO,cAAc,KAAKmgB,IAAnB,GAA0B,GAAjC;AACA,CAFD,C,CAKA;AACA;AACA;AACA;;;AACA,SAAS+F,kBAAT,GAA8B;AAC7ByG,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAsB+f,eAAe,CAAC6G,QAAtC;AACA,SAAO,IAAP;AACA;;AAEDtG,kBAAkB,CAACpnB,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA/B;AACAonB,kBAAkB,CAACpnB,SAAnB,CAA6BkH,WAA7B,GAA2CkgB,kBAA3C;AAEAA,kBAAkB,CAACjE,QAAnB,GAA8B,IAAIiE,kBAAJ,EAA9B,C,CAEA;;AACAA,kBAAkB,CAACpnB,SAAnB,CAA6BguB,OAA7B,GAAuC,UAAS3d,KAAT,EAAgB;AACnDA,OAAK,CAACoR,OAAN;AACH,CAFD;;AAIA2F,kBAAkB,CAACpnB,SAAnB,CAA6BkB,QAA7B,GAAwC,YAAW;AAClD,SAAO,SAAP;AACA,CAFD,C,CAIA;AACA;AACA;AACA;;;AACA,SAAS+lB,eAAT,GAA2B;AAC1B4G,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAChH,IAAvC;AACA,SAAO,IAAP;AACA;;AAEDoH,eAAe,CAACjnB,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA5B;AACAinB,eAAe,CAACjnB,SAAhB,CAA0BkH,WAA1B,GAAwC+f,eAAxC;AAEAA,eAAe,CAAC9D,QAAhB,GAA2B,IAAI8D,eAAJ,EAA3B,C,CAEA;;AACAA,eAAe,CAACjnB,SAAhB,CAA0BguB,OAA1B,GAAoC,UAAS3d,KAAT,EAAgB;AAChDA,OAAK,CAAC+Q,IAAN;AACH,CAFD;;AAIA6F,eAAe,CAACjnB,SAAhB,CAA0BkB,QAA1B,GAAqC,YAAW;AAC5C,SAAO,MAAP;AACH,CAFD,C,CAKA;AACA;;;AACA,SAASmmB,eAAT,CAAyBhG,IAAzB,EAA+B;AAC9BwM,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC4G,IAAvC;AACG,OAAKpM,IAAL,GAAYA,IAAZ;AACA,SAAO,IAAP;AACH;;AAEDgG,eAAe,CAACrnB,SAAhB,GAA4B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA5B;AACAqnB,eAAe,CAACrnB,SAAhB,CAA0BkH,WAA1B,GAAwCmgB,eAAxC,C,CAEA;AACA;;AACAA,eAAe,CAACrnB,SAAhB,CAA0BguB,OAA1B,GAAoC,UAAS3d,KAAT,EAAgB;AAChDA,OAAK,CAACgR,IAAN,CAAW,KAAKA,IAAhB;AACH,CAFD;;AAIAgG,eAAe,CAACrnB,SAAhB,CAA0B0E,cAA1B,GAA2C,UAAStC,IAAT,EAAe;AACtDA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAKzK,IAAlC;AACH,CAFD;;AAIAgG,eAAe,CAACrnB,SAAhB,CAA0BuB,MAA1B,GAAmC,UAASgC,KAAT,EAAgB;AAC/C,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAY8jB,eAApB,CAAJ,EAA0C;AAC7C,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAKhG,IAAL,KAAc9d,KAAK,CAAC8d,IAA3B;AACH;AACJ,CARD;;AAUAgG,eAAe,CAACrnB,SAAhB,CAA0BkB,QAA1B,GAAqC,YAAW;AAC5C,SAAO,UAAU,KAAKmgB,IAAf,GAAsB,GAA7B;AACH,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEJ,SAAS2F,iBAAT,CAA2B9c,SAA3B,EAAsC6O,WAAtC,EAAmD;AAClD8U,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC2G,MAAvC;AACG,OAAKtjB,SAAL,GAAiBA,SAAjB;AACA,OAAK6O,WAAL,GAAmBA,WAAnB;AACA,OAAKgV,mBAAL,GAA2B,IAA3B;AACA,SAAO,IAAP;AACH;;AAED/G,iBAAiB,CAAChnB,SAAlB,GAA8B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA9B;AACAgnB,iBAAiB,CAAChnB,SAAlB,CAA4BkH,WAA5B,GAA0C8f,iBAA1C,C,CAEA;AACA;;AACAA,iBAAiB,CAAChnB,SAAlB,CAA4BguB,OAA5B,GAAsC,UAAS3d,KAAT,EAAgB;AAClDA,OAAK,CAACyd,MAAN,CAAa,IAAb,EAAmB,KAAK5jB,SAAxB,EAAmC,KAAK6O,WAAxC;AACH,CAFD;;AAIAiO,iBAAiB,CAAChnB,SAAlB,CAA4B0E,cAA5B,GAA6C,UAAStC,IAAT,EAAe;AACxDA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAK5hB,SAAlC,EAA6C,KAAK6O,WAAlD;AACH,CAFD;;AAIAiO,iBAAiB,CAAChnB,SAAlB,CAA4BuB,MAA5B,GAAqC,UAASgC,KAAT,EAAgB;AACjD,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAYyjB,iBAApB,CAAJ,EAA4C;AAC/C,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAK9c,SAAL,KAAmB3G,KAAK,CAAC2G,SAAzB,IAAsC,KAAK6O,WAAL,KAAqBxV,KAAK,CAACwV,WAAxE;AACH;AACJ,CARD,C,CAUA;AACA;AACA;AACA;;;AACA,SAASgO,kBAAT,CAA4BlhB,OAA5B,EAAqC;AACpCgoB,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuB+f,eAAe,CAAC0G,OAAvC;AACG,OAAK1nB,OAAL,GAAeA,OAAf;AACA,SAAO,IAAP;AACH;;AAEDkhB,kBAAkB,CAAC/mB,SAAnB,GAA+B6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAA/B;AACA+mB,kBAAkB,CAAC/mB,SAAnB,CAA6BkH,WAA7B,GAA2C6f,kBAA3C,C,CAEA;AACA;;AACAA,kBAAkB,CAAC/mB,SAAnB,CAA6BguB,OAA7B,GAAuC,UAAS3d,KAAT,EAAgB;AACnDA,OAAK,CAACmP,QAAN,GAAiB,KAAK3Z,OAAtB;AACH,CAFD;;AAIAkhB,kBAAkB,CAAC/mB,SAAnB,CAA6B0E,cAA7B,GAA8C,UAAStC,IAAT,EAAe;AACzDA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAKjmB,OAAlC;AACH,CAFD;;AAIAkhB,kBAAkB,CAAC/mB,SAAnB,CAA6BuB,MAA7B,GAAsC,UAASgC,KAAT,EAAgB;AAClD,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAYwjB,kBAApB,CAAJ,EAA6C;AAChD,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAKlhB,OAAL,KAAiBtC,KAAK,CAACsC,OAA9B;AACH;AACJ,CARD;;AAUAkhB,kBAAkB,CAAC/mB,SAAnB,CAA6BkB,QAA7B,GAAwC,YAAW;AAC/C,SAAO,aAAa,KAAK2E,OAAlB,GAA4B,GAAnC;AACH,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASooB,wBAAT,CAAkC1I,MAAlC,EAA0CuI,MAA1C,EAAkD;AACjDD,aAAW,CAAC/mB,IAAZ,CAAiB,IAAjB,EAAuBgnB,MAAM,CAAChC,UAA9B;AACG,OAAKvG,MAAL,GAAcA,MAAd;AACA,OAAKuI,MAAL,GAAcA,MAAd;AACA,OAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAO,IAAP;AACH;;AAEDE,wBAAwB,CAACjuB,SAAzB,GAAqC6B,MAAM,CAACoF,MAAP,CAAc4mB,WAAW,CAAC7tB,SAA1B,CAArC;AACAiuB,wBAAwB,CAACjuB,SAAzB,CAAmCkH,WAAnC,GAAiD+mB,wBAAjD,C,CAEA;AACA;;AACAA,wBAAwB,CAACjuB,SAAzB,CAAmCguB,OAAnC,GAA6C,UAAS3d,KAAT,EAAgB;AACzD;AACA,OAAKyd,MAAL,CAAYE,OAAZ,CAAoB3d,KAApB;AACH,CAHD;;AAKA4d,wBAAwB,CAACjuB,SAAzB,CAAmC0E,cAAnC,GAAoD,UAAStC,IAAT,EAAe;AAC/DA,MAAI,CAACiB,MAAL,CAAY,KAAKyoB,UAAjB,EAA6B,KAAKvG,MAAlC,EAA0C,KAAKuI,MAA/C;AACH,CAFD;;AAIAG,wBAAwB,CAACjuB,SAAzB,CAAmCuB,MAAnC,GAA4C,UAASgC,KAAT,EAAgB;AACxD,MAAI,SAASA,KAAb,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,EAAGA,KAAK,YAAY0qB,wBAApB,CAAJ,EAAmD;AACtD,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAK1I,MAAL,KAAgBhiB,KAAK,CAACgiB,MAAtB,IAAgC,KAAKuI,MAAL,KAAgBvqB,KAAK,CAACuqB,MAA7D;AACH;AACJ,CARD;;AAWAroB,OAAO,CAACohB,eAAR,GAA0BA,eAA1B;AACAphB,OAAO,CAACqhB,eAAR,GAA0BA,eAA1B;AACArhB,OAAO,CAACshB,kBAAR,GAA6BA,kBAA7B;AACAthB,OAAO,CAACuhB,iBAAR,GAA4BA,iBAA5B;AACAvhB,OAAO,CAACwoB,wBAAR,GAAmCA,wBAAnC;AACAxoB,OAAO,CAACwhB,eAAR,GAA0BA,eAA1B;AACAxhB,OAAO,CAACyhB,eAAR,GAA0BA,eAA1B;AACAzhB,OAAO,CAAC0hB,mBAAR,GAA8BA,mBAA9B;AACA1hB,OAAO,CAAC2hB,kBAAR,GAA6BA,kBAA7B;AACA3hB,OAAO,CAAC4hB,eAAR,GAA0BA,eAA1B,C;;;;;;AC7WA;;AACA;;;;AAIA;AAEA,IAAI3hB,KAAK,GAAG+B,mBAAO,CAAC,CAAD,CAAP,CAAmB/B,KAA/B;;AACA,IAAIwd,oBAAoB,GAAGzb,mBAAO,CAAC,EAAD,CAAP,CAAiCyb,oBAA5D;;AACA,IAAIE,kBAAkB,GAAG3b,mBAAO,CAAC,EAAD,CAAP,CAAiC2b,kBAA1D;;AAEA,SAASvE,UAAT,GAAsB;AAClB,OAAKqP,UAAL,GAAkB,CAAEhL,oBAAoB,CAACC,QAAvB,CAAlB;AACA,OAAKnS,OAAL,GAAe,IAAf;AACA,OAAKmd,YAAL,GAAoB,CAAC,CAArB;AACA,SAAO,IAAP;AACH;;AAEDtP,UAAU,CAACuP,iBAAX,GAA+B,EAA/B;AACAvP,UAAU,CAACwP,iBAAX,GAA+B,EAA/B;;AAGAxP,UAAU,CAAC7e,SAAX,CAAqByoB,YAArB,GAAoC,UAAS6F,WAAT,EAAsB;AACtD,MAAIC,cAAc,GAAG,KAArB;;AACA,MAAIA,cAAc,KAAGD,WAArB,EAAkC;AAC9BxN,WAAO,CAACC,GAAR,CAAY,yDAAuDwN,cAAvD,GAAsE,IAAtE,GAA2ED,WAAvF;AACH;AACJ,CALD;;AAOAzP,UAAU,CAAC7e,SAAX,CAAqBwuB,gBAArB,GAAwC,UAAStf,QAAT,EAAmB;AACvD,OAAKgf,UAAL,CAAgB5rB,IAAhB,CAAqB4M,QAArB;AACH,CAFD;;AAIA2P,UAAU,CAAC7e,SAAX,CAAqByuB,oBAArB,GAA4C,YAAW;AACnD,OAAKP,UAAL,GAAkB,EAAlB;AACH,CAFD;;AAIArP,UAAU,CAAC7e,SAAX,CAAqB0uB,eAArB,GAAuC,YAAW;AAC9C,MAAIC,UAAU,GAAG,KAAKC,aAAL,EAAjB;;AACA,MAAID,UAAU,KAAG,IAAjB,EAAuB;AACnB,UAAM,gEAAN;AACH;;AACD,MAAI9lB,MAAM,GAAG,KAAKulB,iBAAL,CAAuBO,UAAvB,CAAb;;AACA,MAAG9lB,MAAM,KAAG9B,SAAZ,EAAuB;AACnB8B,UAAM,GAAG8lB,UAAU,CAACpmB,MAAX,CAAkB,UAAS1D,CAAT,EAAYJ,CAAZ,EAAezD,CAAf,EAAkB;AAAE6D,OAAC,CAACJ,CAAD,CAAD,GAAOzD,CAAP;AAAW,KAAjD,CAAT;AACA6H,UAAM,CAACtC,GAAP,GAAab,KAAK,CAACa,GAAnB;AACA,SAAK6nB,iBAAL,CAAuBO,UAAvB,IAAqC9lB,MAArC;AACH;;AACD,SAAOA,MAAP;AACH,CAZD,C,CAcA;AACA;AACA;AACA;;;AACAgW,UAAU,CAAC7e,SAAX,CAAqB6uB,eAArB,GAAuC,YAAW;AAC9C,MAAIpQ,SAAS,GAAG,KAAKA,SAArB;;AACA,MAAIA,SAAS,KAAG,IAAhB,EAAsB;AAClB,UAAM,+DAAN;AACH;;AACD,MAAI5V,MAAM,GAAG,KAAKwlB,iBAAL,CAAuB5P,SAAvB,CAAb;;AACA,MAAG5V,MAAM,KAAG9B,SAAZ,EAAuB;AACnB8B,UAAM,GAAG4V,SAAS,CAAClW,MAAV,CAAiB,UAAS1D,CAAT,EAAYJ,CAAZ,EAAezD,CAAf,EAAkB;AAAE6D,OAAC,CAACJ,CAAD,CAAD,GAAOzD,CAAP;AAAW,KAAhD,CAAT;AACA,SAAKqtB,iBAAL,CAAuB5P,SAAvB,IAAoC5V,MAApC;AACH;;AACD,SAAOA,MAAP;AACH,CAXD;;AAaAgW,UAAU,CAAC7e,SAAX,CAAqB8uB,YAArB,GAAoC,UAASC,SAAT,EAAoB;AACpD,MAAIrO,KAAK,GAAG,KAAKgO,eAAL,GAAuBK,SAAvB,CAAZ;;AACA,MAAIrO,KAAK,KAAI3Z,SAAb,EAAwB;AACpB,WAAO2Z,KAAP;AACH,GAFD,MAEO;AACH,WAAOhb,KAAK,CAACU,YAAb;AACH;AACJ,CAPD,C,CAUA;;;AACAyY,UAAU,CAAC7e,SAAX,CAAqBgvB,cAArB,GAAsC,UAAShrB,CAAT,EAAY;AAC9C,MAAIiC,IAAI,GAAGjC,CAAC,CAACirB,iBAAF,GAAsBhpB,IAAjC;AACA,MAAIC,MAAM,GAAGlC,CAAC,CAACirB,iBAAF,GAAsB/oB,MAAnC;AACA,SAAO,UAAUD,IAAV,GAAiB,GAAjB,GAAuBC,MAA9B;AACH,CAJD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA2Y,UAAU,CAAC7e,SAAX,CAAqBkvB,oBAArB,GAA4C,UAAS9nB,CAAT,EAAY;AACpD,MAAIA,CAAC,KAAG,IAAR,EAAc;AACV,WAAO,YAAP;AACH;;AACD,MAAIrC,CAAC,GAAGqC,CAAC,CAACV,IAAV;;AACA,MAAI3B,CAAC,KAAG,IAAR,EAAc;AACV,QAAIqC,CAAC,CAACxB,IAAF,KAASF,KAAK,CAACa,GAAnB,EAAwB;AACpBxB,OAAC,GAAG,OAAJ;AACH,KAFD,MAEO;AACHA,OAAC,GAAG,MAAMqC,CAAC,CAACxB,IAAR,GAAe,GAAnB;AACH;AACJ;;AACDb,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,IAAV,EAAe,KAAf,EAAsBA,OAAtB,CAA8B,IAA9B,EAAmC,KAAnC,EAA0CA,OAA1C,CAAkD,IAAlD,EAAuD,KAAvD,CAAJ;AACA,SAAO,MAAMF,CAAN,GAAU,GAAjB;AACH,CAdD;;AAgBA8Z,UAAU,CAAC7e,SAAX,CAAqBoiB,wBAArB,GAAgD,YAAW;AACvD,SAAO,IAAIgB,kBAAJ,CAAuB,KAAK8K,UAA5B,CAAP;AACH,CAFD,C,CAIA;AACA;;;AACArP,UAAU,CAAC7e,SAAX,CAAqBsc,OAArB,GAA+B,UAASD,QAAT,EAAmBnS,SAAnB,EAA8B6O,WAA9B,EAA2C;AACtE,SAAO,IAAP;AACH,CAFD;;AAIA8F,UAAU,CAAC7e,SAAX,CAAqBuc,QAArB,GAAgC,UAASF,QAAT,EAAoB3D,UAApB,EAAgC;AAC5D,SAAO,IAAP;AACH,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA7W,MAAM,CAACC,cAAP,CAAsB+c,UAAU,CAAC7e,SAAjC,EAA4C,OAA5C,EAAqD;AACpD+B,KAAG,EAAG,eAAW;AAChB,WAAO,KAAKosB,YAAZ;AACA,GAHmD;AAIpDxrB,KAAG,EAAG,aAASuN,KAAT,EAAgB;AACrB,SAAKie,YAAL,GAAoBje,KAApB;AACA;AANmD,CAArD;AAUAzK,OAAO,CAACoZ,UAAR,GAAqBA,UAArB,C;;;;;;AClJA;;AACA;;;;AAIA;AAEA,IAAI3B,QAAQ,GAAGzV,mBAAO,CAAC,EAAD,CAAP,CAA6ByV,QAA5C;;AACA,IAAI5D,YAAY,GAAG7R,mBAAO,CAAC,CAAD,CAAP,CAA0B6R,YAA7C;;AACA,IAAI3E,0BAA0B,GAAGlN,mBAAO,CAAC,CAAD,CAAP,CAAkCkN,0BAAnE;;AAEA,SAASwa,YAAT,CAAsBrlB,GAAtB,EAA2BslB,kBAA3B,EAA+C;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAKtlB,GAAL,GAAWA,GAAX;AACA,OAAKslB,kBAAL,GAA0BA,kBAA1B;AACA,SAAO,IAAP;AACH,C,CAED;;;AACAD,YAAY,CAACE,KAAb,GAAqB,IAAInS,QAAJ,CAAa,UAAb,EAAyB,IAAI5D,YAAJ,EAAzB,CAArB;;AAGA6V,YAAY,CAACnvB,SAAb,CAAuBya,gBAAvB,GAA0C,UAAS7F,OAAT,EAAkB;AACxD,MAAI,KAAKwa,kBAAL,KAA2B,IAA/B,EAAqC;AACjC,WAAOxa,OAAP;AACH;;AACD,MAAIE,OAAO,GAAG,EAAd;AACA,SAAOH,0BAA0B,CAACC,OAAD,EAAU,KAAKwa,kBAAf,EAAmCta,OAAnC,CAAjC;AACH,CAND;;AAQArP,OAAO,CAAC0pB,YAAR,GAAuBA,YAAvB,C;;;;;;AClDA;;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAEA,IAAI1tB,GAAG,GAAGgG,mBAAO,CAAC,CAAD,CAAP,CAAsBhG,GAAhC;;AACA,IAAI+B,GAAG,GAAGiE,mBAAO,CAAC,CAAD,CAAP,CAAsBjE,GAAhC;;AACA,IAAIf,MAAM,GAAGgF,mBAAO,CAAC,CAAD,CAAP,CAAsBhF,MAAnC;;AACA,IAAI0B,OAAO,GAAGsD,mBAAO,CAAC,CAAD,CAAP,CAAsBtD,OAApC;;AACA,IAAIiR,GAAG,GAAG3N,mBAAO,CAAC,CAAD,CAAP,CAAiB2N,GAA3B;;AACA,IAAInJ,aAAa,GAAGxE,mBAAO,CAAC,CAAD,CAAP,CAAsBwE,aAA1C;;AACA,IAAIqN,YAAY,GAAG7R,mBAAO,CAAC,CAAD,CAAP,CAA0B6R,YAA7C;;AACA,IAAIwE,SAAS,GAAGrW,mBAAO,CAAC,EAAD,CAAP,CAAuBqW,SAAvC;;AACA,IAAI9E,eAAe,GAAGvR,mBAAO,CAAC,EAAD,CAAP,CAA6BuR,eAAnD;;AACA,IAAI5V,IAAI,GAAGqE,mBAAO,CAAC,CAAD,CAAP,CAAoBrE,IAA/B;;AACA,IAAIuB,SAAS,GAAG8C,mBAAO,CAAC,CAAD,CAAP,CAAsB9C,SAAtC;;AACA,IAAIa,WAAW,GAAGiC,mBAAO,CAAC,CAAD,CAAP,CAAsBjC,WAAxC;;AAEA,SAAS8pB,cAAT,GAA0B;AACzB,SAAO,IAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA,cAAc,CAACC,GAAf,GAAqB,CAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,cAAc,CAACE,EAAf,GAAoB,CAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,cAAc,CAACG,wBAAf,GAA0C,CAA1C,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,cAAc,CAACI,mCAAf,GAAqD,UAAUrO,IAAV,EAAgB5H,OAAhB,EAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA,MAAI6V,cAAc,CAACK,0BAAf,CAA0ClW,OAA1C,CAAJ,EAAwD;AACpD,WAAO,IAAP;AACH,GARyE,CAS1E;;;AACA,MAAI4H,IAAI,KAAKiO,cAAc,CAACC,GAA5B,EAAiC;AAC7B;AACA;AACA;AACA,QAAI9V,OAAO,CAACG,kBAAZ,EAAgC;AAC5B;AACA,UAAIgW,GAAG,GAAG,IAAItW,YAAJ,EAAV;;AACA,WAAI,IAAItY,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACyY,OAAO,CAACoW,KAAR,CAAc1uB,MAA5B,EAAmCH,CAAC,EAApC,EAAwC;AACvC,YAAIkY,CAAC,GAAGO,OAAO,CAACoW,KAAR,CAAc7uB,CAAd,CAAR;AACGkY,SAAC,GAAG,IAAI4E,SAAJ,CAAc;AAAC/D,yBAAe,EAACf,eAAe,CAACgB;AAAjC,SAAd,EAAsDd,CAAtD,CAAJ;AACA0W,WAAG,CAAC1tB,GAAJ,CAAQgX,CAAR;AACH;;AACDO,aAAO,GAAGmW,GAAV;AACH,KAb4B,CAc7B;;AACH,GAzByE,CA0B1E;;;AACA,MAAIE,OAAO,GAAGR,cAAc,CAACS,wBAAf,CAAwCtW,OAAxC,CAAd;AACA,SAAO6V,cAAc,CAACU,oBAAf,CAAoCF,OAApC,KAAgD,CAACR,cAAc,CAACW,4BAAf,CAA4CxW,OAA5C,CAAxD;AACH,CA7BD,C,CA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA6V,cAAc,CAACY,wBAAf,GAA0C,UAASzW,OAAT,EAAkB;AAC3D,OAAI,IAAIzY,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACyY,OAAO,CAACoW,KAAR,CAAc1uB,MAA5B,EAAmCH,CAAC,EAApC,EAAwC;AACvC,QAAIkY,CAAC,GAAGO,OAAO,CAACoW,KAAR,CAAc7uB,CAAd,CAAR;;AACM,QAAIkY,CAAC,CAAChJ,KAAF,YAAmBjE,aAAvB,EAAsC;AAClC,aAAO,IAAP;AACH;AACP;;AACE,SAAO,KAAP;AACH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAqjB,cAAc,CAACK,0BAAf,GAA4C,UAASlW,OAAT,EAAkB;AAC7D,OAAI,IAAIzY,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACyY,OAAO,CAACoW,KAAR,CAAc1uB,MAA5B,EAAmCH,CAAC,EAApC,EAAwC;AACvC,QAAIkY,CAAC,GAAGO,OAAO,CAACoW,KAAR,CAAc7uB,CAAd,CAAR;;AACM,QAAI,EAAEkY,CAAC,CAAChJ,KAAF,YAAmBjE,aAArB,CAAJ,EAAyC;AACrC,aAAO,KAAP;AACH;AACP;;AACE,SAAO,IAAP;AACH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAqjB,cAAc,CAACa,0BAAf,GAA4C,UAASL,OAAT,EAAkB;AAC1D,SAAOR,cAAc,CAACc,kBAAf,CAAkCN,OAAlC,CAAP;AACH,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,cAAc,CAACe,kBAAf,GAAoC,UAASP,OAAT,EAAkB;AAClD,SAAO,CAAER,cAAc,CAACgB,uBAAf,CAAuCR,OAAvC,CAAT;AACH,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,cAAc,CAACgB,uBAAf,GAAyC,UAASR,OAAT,EAAkB;AAC1D,OAAI,IAAI9uB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC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,IAAR,GAAe,GAAnB;AACH;AACJ;;AACD,SAAO,KAAK8tB,gBAAL,CAAsB3uB,CAAtB,CAAP;AACH,CAbD;;AAeAstB,oBAAoB,CAACryB,SAArB,CAA+B0zB,gBAA/B,GAAkD,UAAS3uB,CAAT,EAAY;AAC1DA,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,KAAV,EAAgB,KAAhB,CAAJ;AACAF,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,KAAV,EAAgB,KAAhB,CAAJ;AACAF,GAAC,GAAGA,CAAC,CAACE,OAAF,CAAU,KAAV,EAAgB,KAAhB,CAAJ;AACA,SAAO,MAAMF,CAAN,GAAU,GAAjB;AACH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAstB,oBAAoB,CAACryB,SAArB,CAA+BkzB,mBAA/B,GAAqD,UAASnjB,UAAT,EAAqB;AACtE,MAAIjG,GAAG,GAAGiG,UAAU,CAACiB,OAAX,CAAmBlH,GAA7B;AACA,MAAI0D,GAAG,GAAGuC,UAAU,CAACW,IAArB;AACA,MAAIgkB,UAAU,GAAG,IAAI9sB,WAAJ,EAAjB;;AACA,SAAO4F,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACqF,aAAJ,IAAmB,CAA1C,EAA6C;AACzC;AACA,QAAIA,aAAa,GAAG/I,GAAG,CAACmH,MAAJ,CAAWzD,GAAG,CAACqF,aAAf,CAApB;AACA,Q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","file":"solidity-parser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SolidityParser\"] = factory();\n\telse\n\t\troot[\"SolidityParser\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction arrayToString(a) {\n    return \"[\" + a.join(\", \") + \"]\";\n}\n\nString.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));\n\nString.prototype.hashCode = function () {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i,\n        key = this.toString();\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = String.prototype.seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n\nfunction standardEqualsFunction(a, b) {\n    return a.equals(b);\n}\n\nfunction standardHashCodeFunction(a) {\n    return a.hashCode();\n}\n\nfunction Set(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Set.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var key in this.data) {\n            if (key.indexOf(\"hash_\") === 0) {\n                l = l + this.data[key].length;\n            }\n        }\n        return l;\n    }\n});\n\nSet.prototype.add = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n        values.push(value);\n        return value;\n    } else {\n        this.data[key] = [value];\n        return value;\n    }\n};\n\nSet.prototype.contains = function (value) {\n    return this.get(value) != null;\n};\n\nSet.prototype.get = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n    }\n    return null;\n};\n\nSet.prototype.values = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\nSet.prototype.toString = function () {\n    return arrayToString(this.values());\n};\n\nfunction BitSet() {\n    this.data = [];\n    return this;\n}\n\nBitSet.prototype.add = function (value) {\n    this.data[value] = true;\n};\n\nBitSet.prototype.or = function (set) {\n    var bits = this;\n    Object.keys(set.data).map(function (alt) {\n        bits.add(alt);\n    });\n};\n\nBitSet.prototype.remove = function (value) {\n    delete this.data[value];\n};\n\nBitSet.prototype.contains = function (value) {\n    return this.data[value] === true;\n};\n\nBitSet.prototype.values = function () {\n    return Object.keys(this.data);\n};\n\nBitSet.prototype.minValue = function () {\n    return Math.min.apply(null, this.values());\n};\n\nBitSet.prototype.hashCode = function () {\n    var hash = new Hash();\n    hash.update(this.values());\n    return hash.finish();\n};\n\nBitSet.prototype.equals = function (other) {\n    if (!(other instanceof BitSet)) {\n        return false;\n    }\n    return this.hashCode() === other.hashCode();\n};\n\nObject.defineProperty(BitSet.prototype, \"length\", {\n    get: function () {\n        return this.values().length;\n    }\n});\n\nBitSet.prototype.toString = function () {\n    return \"{\" + this.values().join(\", \") + \"}\";\n};\n\nfunction Map(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Map.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var hashKey in this.data) {\n            if (hashKey.indexOf(\"hash_\") === 0) {\n                l = l + this.data[hashKey].length;\n            }\n        }\n        return l;\n    }\n});\n\nMap.prototype.put = function (key, value) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if (hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key)) {\n                var oldValue = entry.value;\n                entry.value = value;\n                return oldValue;\n            }\n        }\n        entries.push({key:key, value:value});\n        return value;\n    } else {\n        this.data[hashKey] = [{key:key, value:value}];\n        return value;\n    }\n};\n\nMap.prototype.containsKey = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return true;\n        }\n    }\n    return false;\n};\n\nMap.prototype.get = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return entry.value;\n        }\n    }\n    return null;\n};\n\nMap.prototype.entries = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\n\nMap.prototype.getKeys = function () {\n    return this.entries().map(function(e) {\n        return e.key;\n    });\n};\n\n\nMap.prototype.getValues = function () {\n    return this.entries().map(function(e) {\n            return e.value;\n    });\n};\n\n\nMap.prototype.toString = function () {\n    var ss = this.entries().map(function(entry) {\n        return '{' + entry.key + ':' + entry.value + '}';\n    });\n    return '[' + ss.join(\", \") + ']';\n};\n\n\nfunction AltDict() {\n    this.data = {};\n    return this;\n}\n\n\nAltDict.prototype.get = function (key) {\n    key = \"k-\" + key;\n    if (key in this.data) {\n        return this.data[key];\n    } else {\n        return null;\n    }\n};\n\nAltDict.prototype.put = function (key, value) {\n    key = \"k-\" + key;\n    this.data[key] = value;\n};\n\nAltDict.prototype.values = function () {\n    var data = this.data;\n    var keys = Object.keys(this.data);\n    return keys.map(function (key) {\n        return data[key];\n    });\n};\n\nfunction DoubleDict() {\n    return this;\n}\n\nfunction Hash() {\n    this.count = 0;\n    this.hash = 0;\n    return this;\n}\n\nHash.prototype.update = function () {\n    for(var i=0;i<arguments.length;i++) {\n        var value = arguments[i];\n        if (value == null)\n            continue;\n        if(Array.isArray(value))\n            this.update.apply(value);\n        else {\n            var k = 0;\n            switch (typeof(value)) {\n                case 'undefined':\n                case 'function':\n                    continue;\n                case 'number':\n                case 'boolean':\n                    k = value;\n                    break;\n                case 'string':\n                    k = value.hashCode();\n                    break;\n                default:\n                    value.updateHashCode(this);\n                    continue;\n            }\n            k = k * 0xCC9E2D51;\n            k = (k << 15) | (k >>> (32 - 15));\n            k = k * 0x1B873593;\n            this.count = this.count + 1;\n            var hash = this.hash ^ k;\n            hash = (hash << 13) | (hash >>> (32 - 13));\n            hash = hash * 5 + 0xE6546B64;\n            this.hash = hash;\n        }\n    }\n}\n\nHash.prototype.finish = function () {\n    var hash = this.hash ^ (this.count * 4);\n    hash = hash ^ (hash >>> 16);\n    hash = hash * 0x85EBCA6B;\n    hash = hash ^ (hash >>> 13);\n    hash = hash * 0xC2B2AE35;\n    hash = hash ^ (hash >>> 16);\n    return hash;\n}\n\nfunction hashStuff() {\n    var hash = new Hash();\n    hash.update.apply(arguments);\n    return hash.finish();\n}\n\nDoubleDict.prototype.get = function (a, b) {\n    var d = this[a] || null;\n    return d === null ? null : (d[b] || null);\n};\n\nDoubleDict.prototype.set = function (a, b, o) {\n    var d = this[a] || null;\n    if (d === null) {\n        d = {};\n        this[a] = d;\n    }\n    d[b] = o;\n};\n\n\nfunction escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(\"\\t\", \"\\\\t\");\n    s = s.replace(\"\\n\", \"\\\\n\");\n    s = s.replace(\"\\r\", \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(\" \", \"\\u00B7\");\n    }\n    return s;\n}\n\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1);\n    });\n};\n\nfunction equalArrays(a, b)\n{\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a == b)\n        return true;\n    if (a.length != b.length)\n        return false;\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i])\n            continue;\n        if (!a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n};\n\nexports.Hash = Hash;\nexports.Set = Set;\nexports.Map = Map;\nexports.BitSet = BitSet;\nexports.AltDict = AltDict;\nexports.DoubleDict = DoubleDict;\nexports.hashStuff = hashStuff;\nexports.escapeWhitespace = escapeWhitespace;\nexports.arrayToString = arrayToString;\nexports.titleCase = titleCase;\nexports.equalArrays = equalArrays;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A token has properties: text, type, line, character position in the line\n// (so we can ignore tabs), token channel, index, and source from which\n// we obtained this token.\n\nfunction Token() {\n\tthis.source = null;\n\tthis.type = null; // token type of the token\n\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\tthis.start = null; // optional; return -1 if not implemented.\n\tthis.stop = null; // optional; return -1 if not implemented.\n\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\tthis.line = null; // line=1..n of the 1st character\n\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\tthis._text = null; // text of the token.\n\treturn this;\n}\n\nToken.INVALID_TYPE = 0;\n\n// During lookahead operations, this \"token\" signifies we hit rule end ATN state\n// and did not follow it despite needing to.\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n// All tokens go to the parser (unless skip() is called in that rule)\n// on a particular \"channel\". The parser tunes to a particular channel\n// so that whitespace etc... can go to the parser on a \"hidden\" channel.\n\nToken.DEFAULT_CHANNEL = 0;\n\n// Anything on different channel than DEFAULT_CHANNEL is not parsed\n// by parser.\n\nToken.HIDDEN_CHANNEL = 1;\n\n// Explicitly set the text for this token. If {code text} is not\n// {@code null}, then {@link //getText} will return this value rather than\n// extracting the text from the input.\n//\n// @param text The explicit text of the token, or {@code null} if the text\n// should be obtained from the input along with the start and stop indexes\n// of the token.\n\nObject.defineProperty(Token.prototype, \"text\", {\n\tget : function() {\n\t\treturn this._text;\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nToken.prototype.getTokenSource = function() {\n\treturn this.source[0];\n};\n\nToken.prototype.getInputStream = function() {\n\treturn this.source[1];\n};\n\nfunction CommonToken(source, type, channel, start, stop) {\n\tToken.call(this);\n\tthis.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n\tthis.type = type !== undefined ? type : null;\n\tthis.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n\tthis.start = start !== undefined ? start : -1;\n\tthis.stop = stop !== undefined ? stop : -1;\n\tthis.tokenIndex = -1;\n\tif (this.source[0] !== null) {\n\t\tthis.line = source[0].line;\n\t\tthis.column = source[0].column;\n\t} else {\n\t\tthis.column = -1;\n\t}\n\treturn this;\n}\n\nCommonToken.prototype = Object.create(Token.prototype);\nCommonToken.prototype.constructor = CommonToken;\n\n// An empty {@link Pair} which is used as the default value of\n// {@link //source} for tokens that do not have a source.\nCommonToken.EMPTY_SOURCE = [ null, null ];\n\n// Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n//\n// <p>\n// If {@code oldToken} is also a {@link CommonToken} instance, the newly\n// constructed token will share a reference to the {@link //text} field and\n// the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n// be assigned the result of calling {@link //getText}, and {@link //source}\n// will be constructed from the result of {@link Token//getTokenSource} and\n// {@link Token//getInputStream}.</p>\n//\n// @param oldToken The token to copy.\n//\nCommonToken.prototype.clone = function() {\n\tvar t = new CommonToken(this.source, this.type, this.channel, this.start,\n\t\t\tthis.stop);\n\tt.tokenIndex = this.tokenIndex;\n\tt.line = this.line;\n\tt.column = this.column;\n\tt.text = this.text;\n\treturn t;\n};\n\nObject.defineProperty(CommonToken.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t}\n\t\tvar input = this.getInputStream();\n\t\tif (input === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar n = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(this.start, this.stop);\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nCommonToken.prototype.toString = function() {\n\tvar txt = this.text;\n\tif (txt !== null) {\n\t\ttxt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n\t} else {\n\t\ttxt = \"<no text>\";\n\t}\n\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n\t\t\ttxt + \"',<\" + this.type + \">\" +\n\t\t\t(this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n\t\t\tthis.line + \":\" + this.column + \"]\";\n};\n\nexports.Token = Token;\nexports.CommonToken = CommonToken;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/*jslint smarttabs:true */\n\nvar Token = require('./Token').Token;\n\n/* stop is not included! */\nfunction Interval(start, stop) {\n\tthis.start = start;\n\tthis.stop = stop;\n\treturn this;\n}\n\nInterval.prototype.contains = function(item) {\n\treturn item >= this.start && item < this.stop;\n};\n\nInterval.prototype.toString = function() {\n\tif(this.start===this.stop-1) {\n\t\treturn this.start.toString();\n\t} else {\n\t\treturn this.start.toString() + \"..\" + (this.stop-1).toString();\n\t}\n};\n\n\nObject.defineProperty(Interval.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.stop - this.start;\n\t}\n});\n\nfunction IntervalSet() {\n\tthis.intervals = null;\n\tthis.readOnly = false;\n}\n\nIntervalSet.prototype.first = function(v) {\n\tif (this.intervals === null || this.intervals.length===0) {\n\t\treturn Token.INVALID_TYPE;\n\t} else {\n\t\treturn this.intervals[0].start;\n\t}\n};\n\nIntervalSet.prototype.addOne = function(v) {\n\tthis.addInterval(new Interval(v, v + 1));\n};\n\nIntervalSet.prototype.addRange = function(l, h) {\n\tthis.addInterval(new Interval(l, h + 1));\n};\n\nIntervalSet.prototype.addInterval = function(v) {\n\tif (this.intervals === null) {\n\t\tthis.intervals = [];\n\t\tthis.intervals.push(v);\n\t} else {\n\t\t// find insert pos\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// distinct range -> insert\n\t\t\tif (v.stop < i.start) {\n\t\t\t\tthis.intervals.splice(k, 0, v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// contiguous range -> adjust\n\t\t\telse if (v.stop === i.start) {\n\t\t\t\tthis.intervals[k].start = v.start;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// overlapping range -> adjust and reduce\n\t\t\telse if (v.start <= i.stop) {\n\t\t\t\tthis.intervals[k] = new Interval(Math.min(i.start, v.start), Math.max(i.stop, v.stop));\n\t\t\t\tthis.reduce(k);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// greater than any existing\n\t\tthis.intervals.push(v);\n\t}\n};\n\nIntervalSet.prototype.addSet = function(other) {\n\tif (other.intervals !== null) {\n\t\tfor (var k = 0; k < other.intervals.length; k++) {\n\t\t\tvar i = other.intervals[k];\n\t\t\tthis.addInterval(new Interval(i.start, i.stop));\n\t\t}\n\t}\n\treturn this;\n};\n\nIntervalSet.prototype.reduce = function(k) {\n\t// only need to reduce if k is not the last\n\tif (k < this.intervalslength - 1) {\n\t\tvar l = this.intervals[k];\n\t\tvar r = this.intervals[k + 1];\n\t\t// if r contained in l\n\t\tif (l.stop >= r.stop) {\n\t\t\tthis.intervals.pop(k + 1);\n\t\t\tthis.reduce(k);\n\t\t} else if (l.stop >= r.start) {\n\t\t\tthis.intervals[k] = new Interval(l.start, r.stop);\n\t\t\tthis.intervals.pop(k + 1);\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.complement = function(start, stop) {\n    var result = new IntervalSet();\n    result.addInterval(new Interval(start,stop+1));\n    for(var i=0; i<this.intervals.length; i++) {\n        result.removeRange(this.intervals[i]);\n    }\n    return result;\n};\n\nIntervalSet.prototype.contains = function(item) {\n\tif (this.intervals === null) {\n\t\treturn false;\n\t} else {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nObject.defineProperty(IntervalSet.prototype, \"length\", {\n\tget : function() {\n\t\tvar len = 0;\n\t\tthis.intervals.map(function(i) {len += i.length;});\n\t\treturn len;\n\t}\n});\n\nIntervalSet.prototype.removeRange = function(v) {\n    if(v.start===v.stop-1) {\n        this.removeOne(v.start);\n    } else if (this.intervals!==null) {\n        var k = 0;\n        for(var n=0; n<this.intervals.length; n++) {\n            var i = this.intervals[k];\n            // intervals are ordered\n            if (v.stop<=i.start) {\n                return;\n            }\n            // check for including range, split it\n            else if(v.start>i.start && v.stop<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n                var x = new Interval(v.stop, i.stop);\n                this.intervals.splice(k, 0, x);\n                return;\n            }\n            // check for included range, remove it\n            else if(v.start<=i.start && v.stop>=i.stop) {\n                this.intervals.splice(k, 1);\n                k = k - 1; // need another pass\n            }\n            // check for lower boundary\n            else if(v.start<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n            }\n            // check for upper boundary\n            else if(v.stop<i.stop) {\n                this.intervals[k] = new Interval(v.stop, i.stop);\n            }\n            k += 1;\n        }\n    }\n};\n\nIntervalSet.prototype.removeOne = function(v) {\n\tif (this.intervals !== null) {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// intervals is ordered\n\t\t\tif (v < i.start) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for single value range\n\t\t\telse if (v === i.start && v === i.stop - 1) {\n\t\t\t\tthis.intervals.splice(k, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for lower boundary\n\t\t\telse if (v === i.start) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start + 1, i.stop);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for upper boundary\n\t\t\telse if (v === i.stop - 1) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start, i.stop - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// split existing range\n\t\t\telse if (v < i.stop - 1) {\n\t\t\t\tvar x = new Interval(i.start, v);\n\t\t\t\ti.start = v + 1;\n\t\t\t\tthis.intervals.splice(k, 0, x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.toString = function(literalNames, symbolicNames, elemsAreChar) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\telemsAreChar = elemsAreChar || false;\n\tif (this.intervals === null) {\n\t\treturn \"{}\";\n\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t} else if(elemsAreChar) {\n\t\treturn this.toCharString();\n\t} else {\n\t\treturn this.toIndexString();\n\t}\n};\n\nIntervalSet.prototype.toCharString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'\");\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'..'\" + String.fromCharCode(v.stop-1) + \"'\");\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toIndexString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(v.start.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(v.start.toString() + \"..\" + (v.stop-1).toString());\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toTokenString = function(literalNames, symbolicNames) {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tfor (var j = v.start; j < v.stop; j++) {\n\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\nIntervalSet.prototype.elementName = function(literalNames, symbolicNames, a) {\n\tif (a === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (a === Token.EPSILON) {\n\t\treturn \"<EPSILON>\";\n\t} else {\n\t\treturn literalNames[a] || symbolicNames[a];\n\t}\n};\n\nexports.Interval = Interval;\nexports.IntervalSet = IntervalSet;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// The following images show the relation of states and\n// {@link ATNState//transitions} for various grammar constructs.\n//\n// <ul>\n//\n// <li>Solid edges marked with an &//0949; indicate a required\n// {@link EpsilonTransition}.</li>\n//\n// <li>Dashed edges indicate locations where any transition derived from\n// {@link Transition} might appear.</li>\n//\n// <li>Dashed nodes are place holders for either a sequence of linked\n// {@link BasicState} states or the inclusion of a block representing a nested\n// construct in one of the forms below.</li>\n//\n// <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n// any number of alternatives (one or more). Nodes without the {@code ...} only\n// support the exact number of alternatives shown in the diagram.</li>\n//\n// </ul>\n//\n// <h2>Basic Blocks</h2>\n//\n// <h3>Rule</h3>\n//\n// <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Block of 1 or more alternatives</h3>\n//\n// <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Greedy Loops</h2>\n//\n// <h3>Greedy Closure: {@code (...)*}</h3>\n//\n// <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Positive Closure: {@code (...)+}</h3>\n//\n// <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Optional: {@code (...)?}</h3>\n//\n// <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Non-Greedy Loops</h2>\n//\n// <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n//\n// <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n//\n// <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Optional: {@code (...)??}</h3>\n//\n// <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n\nvar INITIAL_NUM_TRANSITIONS = 4;\n\nfunction ATNState() {\n    // Which ATN are we in?\n    this.atn = null;\n    this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n    this.stateType = null;\n    this.ruleIndex = 0; // at runtime, we don't have Rule objects\n    this.epsilonOnlyTransitions = false;\n    // Track the transitions emanating from this ATN state.\n    this.transitions = [];\n    // Used to cache lookahead during parsing, not used during construction\n    this.nextTokenWithinRule = null;\n    return this;\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\nATNState.prototype.toString = function() {\n\treturn this.stateNumber;\n};\n\nATNState.prototype.equals = function(other) {\n    if (other instanceof ATNState) {\n        return this.stateNumber===other.stateNumber;\n    } else {\n        return false;\n    }\n};\n\nATNState.prototype.isNonGreedyExitState = function() {\n    return false;\n};\n\n\nATNState.prototype.addTransition = function(trans, index) {\n\tif(index===undefined) {\n\t\tindex = -1;\n\t}\n    if (this.transitions.length===0) {\n        this.epsilonOnlyTransitions = trans.isEpsilon;\n    } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n        this.epsilonOnlyTransitions = false;\n    }\n    if (index===-1) {\n        this.transitions.push(trans);\n    } else {\n        this.transitions.splice(index, 1, trans);\n    }\n};\n\nfunction BasicState() {\n\tATNState.call(this);\n    this.stateType = ATNState.BASIC;\n    return this;\n}\n\nBasicState.prototype = Object.create(ATNState.prototype);\nBasicState.prototype.constructor = BasicState;\n\n\nfunction DecisionState() {\n\tATNState.call(this);\n    this.decision = -1;\n    this.nonGreedy = false;\n    return this;\n}\n\nDecisionState.prototype = Object.create(ATNState.prototype);\nDecisionState.prototype.constructor = DecisionState;\n\n\n//  The start of a regular {@code (...)} block.\nfunction BlockStartState() {\n\tDecisionState.call(this);\n\tthis.endState = null;\n\treturn this;\n}\n\nBlockStartState.prototype = Object.create(DecisionState.prototype);\nBlockStartState.prototype.constructor = BlockStartState;\n\n\nfunction BasicBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.BLOCK_START;\n\treturn this;\n}\n\nBasicBlockStartState.prototype = Object.create(BlockStartState.prototype);\nBasicBlockStartState.prototype.constructor = BasicBlockStartState;\n\n\n// Terminal node of a simple {@code (a|b|c)} block.\nfunction BlockEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.BLOCK_END;\n    this.startState = null;\n    return this;\n}\n\nBlockEndState.prototype = Object.create(ATNState.prototype);\nBlockEndState.prototype.constructor = BlockEndState;\n\n\n// The last node in the ATN for a rule, unless that rule is the start symbol.\n//  In that case, there is one transition to EOF. Later, we might encode\n//  references to all calls to this rule to compute FOLLOW sets for\n//  error handling.\n//\nfunction RuleStopState() {\n\tATNState.call(this);\n    this.stateType = ATNState.RULE_STOP;\n    return this;\n}\n\nRuleStopState.prototype = Object.create(ATNState.prototype);\nRuleStopState.prototype.constructor = RuleStopState;\n\nfunction RuleStartState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.RULE_START;\n\tthis.stopState = null;\n\tthis.isPrecedenceRule = false;\n\treturn this;\n}\n\nRuleStartState.prototype = Object.create(ATNState.prototype);\nRuleStartState.prototype.constructor = RuleStartState;\n\n// Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n//  one to the loop back to start of the block and one to exit.\n//\nfunction PlusLoopbackState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.PLUS_LOOP_BACK;\n\treturn this;\n}\n\nPlusLoopbackState.prototype = Object.create(DecisionState.prototype);\nPlusLoopbackState.prototype.constructor = PlusLoopbackState;\n\n\n// Start of {@code (A|B|...)+} loop. Technically a decision state, but\n//  we don't use for code generation; somebody might need it, so I'm defining\n//  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n//  real decision-making note for {@code A+}.\n//\nfunction PlusBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.PLUS_BLOCK_START;\n    this.loopBackState = null;\n    return this;\n}\n\nPlusBlockStartState.prototype = Object.create(BlockStartState.prototype);\nPlusBlockStartState.prototype.constructor = PlusBlockStartState;\n\n// The block that begins a closure loop.\nfunction StarBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.STAR_BLOCK_START;\n\treturn this;\n}\n\nStarBlockStartState.prototype = Object.create(BlockStartState.prototype);\nStarBlockStartState.prototype.constructor = StarBlockStartState;\n\n\nfunction StarLoopbackState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_BACK;\n\treturn this;\n}\n\nStarLoopbackState.prototype = Object.create(ATNState.prototype);\nStarLoopbackState.prototype.constructor = StarLoopbackState;\n\n\nfunction StarLoopEntryState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_ENTRY;\n    this.loopBackState = null;\n    // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n    this.isPrecedenceDecision = null;\n    return this;\n}\n\nStarLoopEntryState.prototype = Object.create(DecisionState.prototype);\nStarLoopEntryState.prototype.constructor = StarLoopEntryState;\n\n\n// Mark the end of a * or + loop.\nfunction LoopEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.LOOP_END;\n\tthis.loopBackState = null;\n\treturn this;\n}\n\nLoopEndState.prototype = Object.create(ATNState.prototype);\nLoopEndState.prototype.constructor = LoopEndState;\n\n\n// The Tokens rule start state linking to each lexer rule start state */\nfunction TokensStartState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.TOKEN_START;\n\treturn this;\n}\n\nTokensStartState.prototype = Object.create(DecisionState.prototype);\nTokensStartState.prototype.constructor = TokensStartState;\n\nexports.ATNState = ATNState;\nexports.BasicState = BasicState;\nexports.DecisionState = DecisionState;\nexports.BlockStartState = BlockStartState;\nexports.BlockEndState = BlockEndState;\nexports.LoopEndState = LoopEndState;\nexports.RuleStartState = RuleStartState;\nexports.RuleStopState = RuleStopState;\nexports.TokensStartState = TokensStartState;\nexports.PlusLoopbackState = PlusLoopbackState;\nexports.StarLoopbackState = StarLoopbackState;\nexports.StarLoopEntryState = StarLoopEntryState;\nexports.PlusBlockStartState = PlusBlockStartState;\nexports.StarBlockStartState = StarBlockStartState;\nexports.BasicBlockStartState = BasicBlockStartState;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// The basic notion of a tree has a parent, a payload, and a list of children.\n//  It is the most abstract interface for all the trees used by ANTLR.\n///\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar INVALID_INTERVAL = new Interval(-1, -2);\nvar Utils = require('../Utils.js');\n\n\nfunction Tree() {\n\treturn this;\n}\n\nfunction SyntaxTree() {\n\tTree.call(this);\n\treturn this;\n}\n\nSyntaxTree.prototype = Object.create(Tree.prototype);\nSyntaxTree.prototype.constructor = SyntaxTree;\n\nfunction ParseTree() {\n\tSyntaxTree.call(this);\n\treturn this;\n}\n\nParseTree.prototype = Object.create(SyntaxTree.prototype);\nParseTree.prototype.constructor = ParseTree;\n\nfunction RuleNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nRuleNode.prototype = Object.create(ParseTree.prototype);\nRuleNode.prototype.constructor = RuleNode;\n\nfunction TerminalNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nTerminalNode.prototype = Object.create(ParseTree.prototype);\nTerminalNode.prototype.constructor = TerminalNode;\n\nfunction ErrorNode() {\n\tTerminalNode.call(this);\n\treturn this;\n}\n\nErrorNode.prototype = Object.create(TerminalNode.prototype);\nErrorNode.prototype.constructor = ErrorNode;\n\nfunction ParseTreeVisitor() {\n\treturn this;\n}\n\nParseTreeVisitor.prototype.visit = function(ctx) {\n \tif (Array.isArray(ctx)) {\n\t\treturn ctx.map(function(child) {\n            return child.accept(this);\n        }, this);\n\t} else {\n\t\treturn ctx.accept(this);\n\t}\n};\n\nParseTreeVisitor.prototype.visitChildren = function(ctx) {\n  return this.visit(ctx.children);\n}\n\nParseTreeVisitor.prototype.visitTerminal = function(node) {\n};\n\nParseTreeVisitor.prototype.visitErrorNode = function(node) {\n};\n\n\nfunction ParseTreeListener() {\n\treturn this;\n}\n\nParseTreeListener.prototype.visitTerminal = function(node) {\n};\n\nParseTreeListener.prototype.visitErrorNode = function(node) {\n};\n\nParseTreeListener.prototype.enterEveryRule = function(node) {\n};\n\nParseTreeListener.prototype.exitEveryRule = function(node) {\n};\n\nfunction TerminalNodeImpl(symbol) {\n\tTerminalNode.call(this);\n\tthis.parentCtx = null;\n\tthis.symbol = symbol;\n\treturn this;\n}\n\nTerminalNodeImpl.prototype = Object.create(TerminalNode.prototype);\nTerminalNodeImpl.prototype.constructor = TerminalNodeImpl;\n\nTerminalNodeImpl.prototype.getChild = function(i) {\n\treturn null;\n};\n\nTerminalNodeImpl.prototype.getSymbol = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getParent = function() {\n\treturn this.parentCtx;\n};\n\nTerminalNodeImpl.prototype.getPayload = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getSourceInterval = function() {\n\tif (this.symbol === null) {\n\t\treturn INVALID_INTERVAL;\n\t}\n\tvar tokenIndex = this.symbol.tokenIndex;\n\treturn new Interval(tokenIndex, tokenIndex);\n};\n\nTerminalNodeImpl.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nTerminalNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitTerminal(this);\n};\n\nTerminalNodeImpl.prototype.getText = function() {\n\treturn this.symbol.text;\n};\n\nTerminalNodeImpl.prototype.toString = function() {\n\tif (this.symbol.type === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else {\n\t\treturn this.symbol.text;\n\t}\n};\n\n// Represents a token that was consumed during resynchronization\n// rather than during a valid match operation. For example,\n// we will create this kind of a node during single token insertion\n// and deletion as well as during \"consume until error recovery set\"\n// upon no viable alternative exceptions.\n\nfunction ErrorNodeImpl(token) {\n\tTerminalNodeImpl.call(this, token);\n\treturn this;\n}\n\nErrorNodeImpl.prototype = Object.create(TerminalNodeImpl.prototype);\nErrorNodeImpl.prototype.constructor = ErrorNodeImpl;\n\nErrorNodeImpl.prototype.isErrorNode = function() {\n\treturn true;\n};\n\nErrorNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitErrorNode(this);\n};\n\nfunction ParseTreeWalker() {\n\treturn this;\n}\n\nParseTreeWalker.prototype.walk = function(listener, t) {\n\tvar errorNode = t instanceof ErrorNode ||\n\t\t\t(t.isErrorNode !== undefined && t.isErrorNode());\n\tif (errorNode) {\n\t\tlistener.visitErrorNode(t);\n\t} else if (t instanceof TerminalNode) {\n\t\tlistener.visitTerminal(t);\n\t} else {\n\t\tthis.enterRule(listener, t);\n\t\tfor (var i = 0; i < t.getChildCount(); i++) {\n\t\t\tvar child = t.getChild(i);\n\t\t\tthis.walk(listener, child);\n\t\t}\n\t\tthis.exitRule(listener, t);\n\t}\n};\n//\n// The discovery of a rule node, involves sending two events: the generic\n// {@link ParseTreeListener//enterEveryRule} and a\n// {@link RuleContext}-specific event. First we trigger the generic and then\n// the rule specific. We to them in reverse order upon finishing the node.\n//\nParseTreeWalker.prototype.enterRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tlistener.enterEveryRule(ctx);\n\tctx.enterRule(listener);\n};\n\nParseTreeWalker.prototype.exitRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tctx.exitRule(listener);\n\tlistener.exitEveryRule(ctx);\n};\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n\nexports.RuleNode = RuleNode;\nexports.ErrorNode = ErrorNode;\nexports.TerminalNode = TerminalNode;\nexports.ErrorNodeImpl = ErrorNodeImpl;\nexports.TerminalNodeImpl = TerminalNodeImpl;\nexports.ParseTreeListener = ParseTreeListener;\nexports.ParseTreeVisitor = ParseTreeVisitor;\nexports.ParseTreeWalker = ParseTreeWalker;\nexports.INVALID_INTERVAL = INVALID_INTERVAL;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n//  3 kinds of errors: prediction errors, failed predicate errors, and\n//  mismatched input errors. In each case, the parser knows where it is\n//  in the input, where it is in the ATN, the rule invocation stack,\n//  and what kind of problem occurred.\n\nvar PredicateTransition = require('./../atn/Transition').PredicateTransition;\n\nfunction RecognitionException(params) {\n\tError.call(this);\n\tif (!!Error.captureStackTrace) {\n        Error.captureStackTrace(this, RecognitionException);\n\t} else {\n\t\tvar stack = new Error().stack;\n\t}\n\tthis.message = params.message;\n    this.recognizer = params.recognizer;\n    this.input = params.input;\n    this.ctx = params.ctx;\n    // The current {@link Token} when an error occurred. Since not all streams\n    // support accessing symbols by index, we have to track the {@link Token}\n    // instance itself.\n    this.offendingToken = null;\n    // Get the ATN state number the parser was in at the time the error\n    // occurred. For {@link NoViableAltException} and\n    // {@link LexerNoViableAltException} exceptions, this is the\n    // {@link DecisionState} number. For others, it is the state whose outgoing\n    // edge we couldn't match.\n    this.offendingState = -1;\n    if (this.recognizer!==null) {\n        this.offendingState = this.recognizer.state;\n    }\n    return this;\n}\n\nRecognitionException.prototype = Object.create(Error.prototype);\nRecognitionException.prototype.constructor = RecognitionException;\n\n// <p>If the state number is not known, this method returns -1.</p>\n\n//\n// Gets the set of input symbols which could potentially follow the\n// previously matched symbol at the time this exception was thrown.\n//\n// <p>If the set of expected tokens is not known and could not be computed,\n// this method returns {@code null}.</p>\n//\n// @return The set of token types that could potentially follow the current\n// state in the ATN, or {@code null} if the information is not available.\n// /\nRecognitionException.prototype.getExpectedTokens = function() {\n    if (this.recognizer!==null) {\n        return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n    } else {\n        return null;\n    }\n};\n\nRecognitionException.prototype.toString = function() {\n    return this.message;\n};\n\nfunction LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {\n\tRecognitionException.call(this, {message:\"\", recognizer:lexer, input:input, ctx:null});\n    this.startIndex = startIndex;\n    this.deadEndConfigs = deadEndConfigs;\n    return this;\n}\n\nLexerNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nLexerNoViableAltException.prototype.constructor = LexerNoViableAltException;\n\nLexerNoViableAltException.prototype.toString = function() {\n    var symbol = \"\";\n    if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n        symbol = this.input.getText((this.startIndex,this.startIndex));\n    }\n    return \"LexerNoViableAltException\" + symbol;\n};\n\n// Indicates that the parser could not decide which of two or more paths\n// to take based upon the remaining input. It tracks the starting token\n// of the offending input and also knows where the parser was\n// in the various paths when the error. Reported by reportNoViableAlternative()\n//\nfunction NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n\tctx = ctx || recognizer._ctx;\n\toffendingToken = offendingToken || recognizer.getCurrentToken();\n\tstartToken = startToken || recognizer.getCurrentToken();\n\tinput = input || recognizer.getInputStream();\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:input, ctx:ctx});\n    // Which configurations did we try at input.index() that couldn't match\n\t// input.LT(1)?//\n    this.deadEndConfigs = deadEndConfigs;\n    // The token object at the start index; the input stream might\n    // not be buffering tokens so get a reference to it. (At the\n    // time the error occurred, of course the stream needs to keep a\n    // buffer all of the tokens but later we might not have access to those.)\n    this.startToken = startToken;\n    this.offendingToken = offendingToken;\n}\n\nNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nNoViableAltException.prototype.constructor = NoViableAltException;\n\n// This signifies any kind of mismatched input exceptions such as\n// when the current input does not match the expected token.\n//\nfunction InputMismatchException(recognizer) {\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    this.offendingToken = recognizer.getCurrentToken();\n}\n\nInputMismatchException.prototype = Object.create(RecognitionException.prototype);\nInputMismatchException.prototype.constructor = InputMismatchException;\n\n// A semantic predicate failed during validation. Validation of predicates\n// occurs when normally parsing the alternative just like matching a token.\n// Disambiguating predicate evaluation occurs when we test a predicate during\n// prediction.\n\nfunction FailedPredicateException(recognizer, predicate, message) {\n\tRecognitionException.call(this, {message:this.formatMessage(predicate,message || null), recognizer:recognizer,\n                         input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var trans = s.transitions[0];\n    if (trans instanceof PredicateTransition) {\n        this.ruleIndex = trans.ruleIndex;\n        this.predicateIndex = trans.predIndex;\n    } else {\n        this.ruleIndex = 0;\n        this.predicateIndex = 0;\n    }\n    this.predicate = predicate;\n    this.offendingToken = recognizer.getCurrentToken();\n    return this;\n}\n\nFailedPredicateException.prototype = Object.create(RecognitionException.prototype);\nFailedPredicateException.prototype.constructor = FailedPredicateException;\n\nFailedPredicateException.prototype.formatMessage = function(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n};\n\nfunction ParseCancellationException() {\n\tError.call(this);\n\tError.captureStackTrace(this, ParseCancellationException);\n\treturn this;\n}\n\nParseCancellationException.prototype = Object.create(Error.prototype);\nParseCancellationException.prototype.constructor = ParseCancellationException;\n\nexports.RecognitionException = RecognitionException;\nexports.NoViableAltException = NoViableAltException;\nexports.LexerNoViableAltException = LexerNoViableAltException;\nexports.InputMismatchException = InputMismatchException;\nexports.FailedPredicateException = FailedPredicateException;\nexports.ParseCancellationException = ParseCancellationException;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Hash = require('./Utils').Hash;\n\nfunction PredictionContext(cachedHashCode) {\n\tthis.cachedHashCode = cachedHashCode;\n}\n\n// Represents {@code $} in local context prediction, which means wildcard.\n// {@code//+x =//}.\n// /\nPredictionContext.EMPTY = null;\n\n// Represents {@code $} in an array in full context mode, when {@code $}\n// doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n// {@code $} = {@link //EMPTY_RETURN_STATE}.\n// /\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\n\n// Stores the computed hash code of this {@link PredictionContext}. The hash\n// code is computed in parts to match the following reference algorithm.\n//\n// <pre>\n// private int referenceHashCode() {\n// int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n// //INITIAL_HASH});\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n// getParent}(i));\n// }\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n// //getReturnState getReturnState}(i));\n// }\n//\n// hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n// //size()});\n// return hash;\n// }\n// </pre>\n// /\n\n// This means only the {@link //EMPTY} context is in set.\nPredictionContext.prototype.isEmpty = function() {\n\treturn this === PredictionContext.EMPTY;\n};\n\nPredictionContext.prototype.hasEmptyPath = function() {\n\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nPredictionContext.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\n\nPredictionContext.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n/*\nfunction calculateHashString(parent, returnState) {\n\treturn \"\" + parent + returnState;\n}\n*/\n\n// Used to cache {@link PredictionContext} objects. Its used for the shared\n// context cash associated with contexts in DFA states. This cache\n// can be used for both lexers and parsers.\n\nfunction PredictionContextCache() {\n\tthis.cache = {};\n\treturn this;\n}\n\n// Add a context to the cache and return it. If the context already exists,\n// return that one instead and do not add a new context to the cache.\n// Protect shared cache from unsafe thread access.\n//\nPredictionContextCache.prototype.add = function(ctx) {\n\tif (ctx === PredictionContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\tvar existing = this.cache[ctx] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\tthis.cache[ctx] = ctx;\n\treturn ctx;\n};\n\nPredictionContextCache.prototype.get = function(ctx) {\n\treturn this.cache[ctx] || null;\n};\n\nObject.defineProperty(PredictionContextCache.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.cache.length;\n\t}\n});\n\nfunction SingletonPredictionContext(parent, returnState) {\n\tvar hashCode = 0;\n\tif(parent !== null) {\n\t\tvar hash = new Hash();\n\t\thash.update(parent, returnState);\n        hashCode = hash.finish();\n\t}\n\tPredictionContext.call(this, hashCode);\n\tthis.parentCtx = parent;\n\tthis.returnState = returnState;\n}\n\nSingletonPredictionContext.prototype = Object.create(PredictionContext.prototype);\nSingletonPredictionContext.prototype.contructor = SingletonPredictionContext;\n\nSingletonPredictionContext.create = function(parent, returnState) {\n\tif (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n\t\t// someone can pass in the bits of an array ctx that mean $\n\t\treturn PredictionContext.EMPTY;\n\t} else {\n\t\treturn new SingletonPredictionContext(parent, returnState);\n\t}\n};\n\nObject.defineProperty(SingletonPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn 1;\n\t}\n});\n\nSingletonPredictionContext.prototype.getParent = function(index) {\n\treturn this.parentCtx;\n};\n\nSingletonPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nSingletonPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof SingletonPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\tif(this.returnState !== other.returnState)\n            return false;\n        else if(this.parentCtx==null)\n            return other.parentCtx==null\n\t\telse\n            return this.parentCtx.equals(other.parentCtx);\n\t}\n};\n\nSingletonPredictionContext.prototype.toString = function() {\n\tvar up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n\tif (up.length === 0) {\n\t\tif (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\treturn \"$\";\n\t\t} else {\n\t\t\treturn \"\" + this.returnState;\n\t\t}\n\t} else {\n\t\treturn \"\" + this.returnState + \" \" + up;\n\t}\n};\n\nfunction EmptyPredictionContext() {\n\tSingletonPredictionContext.call(this, null, PredictionContext.EMPTY_RETURN_STATE);\n\treturn this;\n}\n\nEmptyPredictionContext.prototype = Object.create(SingletonPredictionContext.prototype);\nEmptyPredictionContext.prototype.constructor = EmptyPredictionContext;\n\nEmptyPredictionContext.prototype.isEmpty = function() {\n\treturn true;\n};\n\nEmptyPredictionContext.prototype.getParent = function(index) {\n\treturn null;\n};\n\nEmptyPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nEmptyPredictionContext.prototype.equals = function(other) {\n\treturn this === other;\n};\n\nEmptyPredictionContext.prototype.toString = function() {\n\treturn \"$\";\n};\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n\nfunction ArrayPredictionContext(parents, returnStates) {\n\t// Parent can be null only if full ctx mode and we make an array\n\t// from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n\t// null parent and\n\t// returnState == {@link //EMPTY_RETURN_STATE}.\n\tvar h = new Hash();\n\th.update(parents, returnStates);\n\tvar hashCode = h.finish();\n\tPredictionContext.call(this, hashCode);\n\tthis.parents = parents;\n\tthis.returnStates = returnStates;\n\treturn this;\n}\n\nArrayPredictionContext.prototype = Object.create(PredictionContext.prototype);\nArrayPredictionContext.prototype.constructor = ArrayPredictionContext;\n\nArrayPredictionContext.prototype.isEmpty = function() {\n\t// since EMPTY_RETURN_STATE can only appear in the last position, we\n\t// don't need to verify that size==1\n\treturn this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nObject.defineProperty(ArrayPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.returnStates.length;\n\t}\n});\n\nArrayPredictionContext.prototype.getParent = function(index) {\n\treturn this.parents[index];\n};\n\nArrayPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnStates[index];\n};\n\nArrayPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof ArrayPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\treturn this.returnStates === other.returnStates &&\n\t\t\t\tthis.parents === other.parents;\n\t}\n};\n\nArrayPredictionContext.prototype.toString = function() {\n\tif (this.isEmpty()) {\n\t\treturn \"[]\";\n\t} else {\n\t\tvar s = \"[\";\n\t\tfor (var i = 0; i < this.returnStates.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\ts = s + \", \";\n\t\t\t}\n\t\t\tif (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\ts = s + \"$\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts = s + this.returnStates[i];\n\t\t\tif (this.parents[i] !== null) {\n\t\t\t\ts = s + \" \" + this.parents[i];\n\t\t\t} else {\n\t\t\t\ts = s + \"null\";\n\t\t\t}\n\t\t}\n\t\treturn s + \"]\";\n\t}\n};\n\n// Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n// Return {@link //EMPTY} if {@code outerContext} is empty or null.\n// /\nfunction predictionContextFromRuleContext(atn, outerContext) {\n\tif (outerContext === undefined || outerContext === null) {\n\t\touterContext = RuleContext.EMPTY;\n\t}\n\t// if we are in RuleContext of start rule, s, then PredictionContext\n\t// is EMPTY. Nobody called us. (if we are empty, return empty)\n\tif (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\t// If we have a parent, convert it to a PredictionContext graph\n\tvar parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n\tvar state = atn.states[outerContext.invokingState];\n\tvar transition = state.transitions[0];\n\treturn SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n/*\nfunction calculateListsHashString(parents, returnStates) {\n\tvar s = \"\";\n\tparents.map(function(p) {\n\t\ts = s + p;\n\t});\n\treturnStates.map(function(r) {\n\t\ts = s + r;\n\t});\n\treturn s;\n}\n*/\nfunction merge(a, b, rootIsWildcard, mergeCache) {\n\t// share same graph if both same\n\tif (a === b) {\n\t\treturn a;\n\t}\n\tif (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n\t\treturn mergeSingletons(a, b, rootIsWildcard, mergeCache);\n\t}\n\t// At least one of a or b is array\n\t// If one is $ and rootIsWildcard, return $ as// wildcard\n\tif (rootIsWildcard) {\n\t\tif (a instanceof EmptyPredictionContext) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b instanceof EmptyPredictionContext) {\n\t\t\treturn b;\n\t\t}\n\t}\n\t// convert singleton so both are arrays to normalize\n\tif (a instanceof SingletonPredictionContext) {\n\t\ta = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n\t}\n\tif (b instanceof SingletonPredictionContext) {\n\t\tb = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n\t}\n\treturn mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n//\n// Merge two {@link SingletonPredictionContext} instances.\n//\n// <p>Stack tops equal, parents merge is same; return left graph.<br>\n// <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Same stack top, parents differ; merge parents giving array node, then\n// remainders of those graphs. A new root node is created to point to the\n// merged parents.<br>\n// <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to same parent. Make array node for the\n// root where both element in the root point to the same (original)\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to different parents. Make array node for\n// the root where each element points to the corresponding original\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// @param mergeCache\n// /\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\n\tvar rootMerge = mergeRoot(a, b, rootIsWildcard);\n\tif (rootMerge !== null) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, rootMerge);\n\t\t}\n\t\treturn rootMerge;\n\t}\n\tif (a.returnState === b.returnState) {\n\t\tvar parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n\t\t// if parent is same as existing a or b parent or reduced to a parent,\n\t\t// return it\n\t\tif (parent === a.parentCtx) {\n\t\t\treturn a; // ax + bx = ax, if a=b\n\t\t}\n\t\tif (parent === b.parentCtx) {\n\t\t\treturn b; // ax + bx = bx, if a=b\n\t\t}\n\t\t// else: ax + ay = a'[x,y]\n\t\t// merge parents x and y, giving array node with x,y then remainders\n\t\t// of those graphs. dup a, a' points at merged array\n\t\t// new joined parent so create new singleton pointing to it, a'\n\t\tvar spc = SingletonPredictionContext.create(parent, a.returnState);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, spc);\n\t\t}\n\t\treturn spc;\n\t} else { // a != b payloads differ\n\t\t// see if we can collapse parents due to $+x parents if local ctx\n\t\tvar singleParent = null;\n\t\tif (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// bx =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [a,b]x\n\t\t\tsingleParent = a.parentCtx;\n\t\t}\n\t\tif (singleParent !== null) { // parents are same\n\t\t\t// sort payloads and use same parent\n\t\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\t\tif (a.returnState > b.returnState) {\n\t\t\t\tpayloads[0] = b.returnState;\n\t\t\t\tpayloads[1] = a.returnState;\n\t\t\t}\n\t\t\tvar parents = [ singleParent, singleParent ];\n\t\t\tvar apc = new ArrayPredictionContext(parents, payloads);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, apc);\n\t\t\t}\n\t\t\treturn apc;\n\t\t}\n\t\t// parents differ and can't merge them. Just pack together\n\t\t// into array; can't merge.\n\t\t// ax + by = [ax,by]\n\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\tvar parents = [ a.parentCtx, b.parentCtx ];\n\t\tif (a.returnState > b.returnState) { // sort by payload\n\t\t\tpayloads[0] = b.returnState;\n\t\t\tpayloads[1] = a.returnState;\n\t\t\tparents = [ b.parentCtx, a.parentCtx ];\n\t\t}\n\t\tvar a_ = new ArrayPredictionContext(parents, payloads);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a_);\n\t\t}\n\t\treturn a_;\n\t}\n}\n\n//\n// Handle case where at least one of {@code a} or {@code b} is\n// {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n// to represent {@link //EMPTY}.\n//\n// <h2>Local-Context Merges</h2>\n//\n// <p>These local-context merge operations are used when {@code rootIsWildcard}\n// is true.</p>\n//\n// <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n// <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n// {@code //EMPTY}; return left graph.<br>\n// <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Special case of last merge if local context.<br>\n// <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <h2>Full-Context Merges</h2>\n//\n// <p>These full-context merge operations are used when {@code rootIsWildcard}\n// is false.</p>\n//\n// <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n// null parent).<br>\n// <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// /\nfunction mergeRoot(a, b, rootIsWildcard) {\n\tif (rootIsWildcard) {\n\t\tif (a === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // // + b =//\n\t\t}\n\t\tif (b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // a +// =//\n\t\t}\n\t} else {\n\t\tif (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // $ + $ = $\n\t\t} else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n\t\t\tvar payloads = [ b.returnState,\n\t\t\t\t\tPredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ b.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t} else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n\t\t\tvar payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ a.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t}\n\t}\n\treturn null;\n}\n\n//\n// Merge two {@link ArrayPredictionContext} instances.\n//\n// <p>Different tops, different parents.<br>\n// <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, same parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, different parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, all shared parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Equal tops, merge parents and reduce top to\n// {@link SingletonPredictionContext}.<br>\n// <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n// /\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\t// merge sorted payloads a + b => M\n\tvar i = 0; // walks a\n\tvar j = 0; // walks b\n\tvar k = 0; // walks target M array\n\n\tvar mergedReturnStates = [];\n\tvar mergedParents = [];\n\t// walk and merge to yield mergedParents, mergedReturnStates\n\twhile (i < a.returnStates.length && j < b.returnStates.length) {\n\t\tvar a_parent = a.parents[i];\n\t\tvar b_parent = b.parents[j];\n\t\tif (a.returnStates[i] === b.returnStates[j]) {\n\t\t\t// same payload (stack tops are equal), must yield merged singleton\n\t\t\tvar payload = a.returnStates[i];\n\t\t\t// $+$ = $\n\t\t\tvar bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n\t\t\t\t\ta_parent === null && b_parent === null;\n\t\t\tvar ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ax\n\t\t\tif (bothDollars || ax_ax) {\n\t\t\t\tmergedParents[k] = a_parent; // choose left\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t} else { // ax+ay -> a'[x,y]\n\t\t\t\tvar mergedParent = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n\t\t\t\tmergedParents[k] = mergedParent;\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t}\n\t\t\ti += 1; // hop over left one as usual\n\t\t\tj += 1; // but also skip one in right side since we merge\n\t\t} else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n\t\t\tmergedParents[k] = a_parent;\n\t\t\tmergedReturnStates[k] = a.returnStates[i];\n\t\t\ti += 1;\n\t\t} else { // b > a, copy b[j] to M\n\t\t\tmergedParents[k] = b_parent;\n\t\t\tmergedReturnStates[k] = b.returnStates[j];\n\t\t\tj += 1;\n\t\t}\n\t\tk += 1;\n\t}\n\t// copy over any payloads remaining in either array\n\tif (i < a.returnStates.length) {\n\t\tfor (var p = i; p < a.returnStates.length; p++) {\n\t\t\tmergedParents[k] = a.parents[p];\n\t\t\tmergedReturnStates[k] = a.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t} else {\n\t\tfor (var p = j; p < b.returnStates.length; p++) {\n\t\t\tmergedParents[k] = b.parents[p];\n\t\t\tmergedReturnStates[k] = b.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t}\n\t// trim merged if we combined a few that had same stack tops\n\tif (k < mergedParents.length) { // write index < last position; trim\n\t\tif (k === 1) { // for just one merged element, return singleton top\n\t\t\tvar a_ = SingletonPredictionContext.create(mergedParents[0],\n\t\t\t\t\tmergedReturnStates[0]);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, a_);\n\t\t\t}\n\t\t\treturn a_;\n\t\t}\n\t\tmergedParents = mergedParents.slice(0, k);\n\t\tmergedReturnStates = mergedReturnStates.slice(0, k);\n\t}\n\n\tvar M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n\t// if we created same array as a or b, return that instead\n\t// TODO: track whether this is possible above during merge sort for speed\n\tif (M === a) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a);\n\t\t}\n\t\treturn a;\n\t}\n\tif (M === b) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, b);\n\t\t}\n\t\treturn b;\n\t}\n\tcombineCommonParents(mergedParents);\n\n\tif (mergeCache !== null) {\n\t\tmergeCache.set(a, b, M);\n\t}\n\treturn M;\n}\n\n//\n// Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n// ones.\n// /\nfunction combineCommonParents(parents) {\n\tvar uniqueParents = {};\n\n\tfor (var p = 0; p < parents.length; p++) {\n\t\tvar parent = parents[p];\n\t\tif (!(parent in uniqueParents)) {\n\t\t\tuniqueParents[parent] = parent;\n\t\t}\n\t}\n\tfor (var q = 0; q < parents.length; q++) {\n\t\tparents[q] = uniqueParents[parents[q]];\n\t}\n}\n\nfunction getCachedPredictionContext(context, contextCache, visited) {\n\tif (context.isEmpty()) {\n\t\treturn context;\n\t}\n\tvar existing = visited[context] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\texisting = contextCache.get(context);\n\tif (existing !== null) {\n\t\tvisited[context] = existing;\n\t\treturn existing;\n\t}\n\tvar changed = false;\n\tvar parents = [];\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tvar parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n\t\tif (changed || parent !== context.getParent(i)) {\n\t\t\tif (!changed) {\n\t\t\t\tparents = [];\n\t\t\t\tfor (var j = 0; j < context.length; j++) {\n\t\t\t\t\tparents[j] = context.getParent(j);\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tparents[i] = parent;\n\t\t}\n\t}\n\tif (!changed) {\n\t\tcontextCache.add(context);\n\t\tvisited[context] = context;\n\t\treturn context;\n\t}\n\tvar updated = null;\n\tif (parents.length === 0) {\n\t\tupdated = PredictionContext.EMPTY;\n\t} else if (parents.length === 1) {\n\t\tupdated = SingletonPredictionContext.create(parents[0], context\n\t\t\t\t.getReturnState(0));\n\t} else {\n\t\tupdated = new ArrayPredictionContext(parents, context.returnStates);\n\t}\n\tcontextCache.add(updated);\n\tvisited[updated] = updated;\n\tvisited[context] = updated;\n\n\treturn updated;\n}\n\n// ter's recursive version of Sam's getAllNodes()\nfunction getAllContextNodes(context, nodes, visited) {\n\tif (nodes === null) {\n\t\tnodes = [];\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else if (visited === null) {\n\t\tvisited = {};\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else {\n\t\tif (context === null || visited[context] !== null) {\n\t\t\treturn nodes;\n\t\t}\n\t\tvisited[context] = context;\n\t\tnodes.push(context);\n\t\tfor (var i = 0; i < context.length; i++) {\n\t\t\tgetAllContextNodes(context.getParent(i), nodes, visited);\n\t\t}\n\t\treturn nodes;\n\t}\n}\n\nexports.merge = merge;\nexports.PredictionContext = PredictionContext;\nexports.PredictionContextCache = PredictionContextCache;\nexports.SingletonPredictionContext = SingletonPredictionContext;\nexports.predictionContextFromRuleContext = predictionContextFromRuleContext;\nexports.getCachedPredictionContext = getCachedPredictionContext;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar LL1Analyzer = require('./../LL1Analyzer').LL1Analyzer;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ATN(grammarType , maxTokenType) {\n\n    // Used for runtime deserialization of ATNs from strings///\n    // The type of the ATN.\n    this.grammarType = grammarType;\n    // The maximum value for any symbol recognized by a transition in the ATN.\n    this.maxTokenType = maxTokenType;\n    this.states = [];\n    // Each subrule/rule is a decision point and we must track them so we\n    //  can go back later and build DFA predictors for them.  This includes\n    //  all the rules, subrules, optional blocks, ()+, ()* etc...\n    this.decisionToState = [];\n    // Maps from rule index to starting state number.\n    this.ruleToStartState = [];\n    // Maps from rule index to stop state number.\n    this.ruleToStopState = null;\n    this.modeNameToStartState = {};\n    // For lexer ATNs, this maps the rule index to the resulting token type.\n    // For parser ATNs, this maps the rule index to the generated bypass token\n    // type if the\n    // {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n    // deserialization option was specified; otherwise, this is {@code null}.\n    this.ruleToTokenType = null;\n    // For lexer ATNs, this is an array of {@link LexerAction} objects which may\n    // be referenced by action transitions in the ATN.\n    this.lexerActions = null;\n    this.modeToStartState = [];\n\n    return this;\n}\n\n// Compute the set of valid tokens that can occur starting in state {@code s}.\n//  If {@code ctx} is null, the set of tokens will not include what can follow\n//  the rule surrounding {@code s}. In other words, the set will be\n//  restricted to tokens reachable staying within {@code s}'s rule.\nATN.prototype.nextTokensInContext = function(s, ctx) {\n    var anal = new LL1Analyzer(this);\n    return anal.LOOK(s, null, ctx);\n};\n\n// Compute the set of valid tokens that can occur starting in {@code s} and\n// staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n// rule.\nATN.prototype.nextTokensNoContext = function(s) {\n    if (s.nextTokenWithinRule !== null ) {\n        return s.nextTokenWithinRule;\n    }\n    s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n    s.nextTokenWithinRule.readOnly = true;\n    return s.nextTokenWithinRule;\n};\n\nATN.prototype.nextTokens = function(s, ctx) {\n    if ( ctx===undefined ) {\n        return this.nextTokensNoContext(s);\n    } else {\n        return this.nextTokensInContext(s, ctx);\n    }\n};\n\nATN.prototype.addState = function( state) {\n    if ( state !== null ) {\n        state.atn = this;\n        state.stateNumber = this.states.length;\n    }\n    this.states.push(state);\n};\n\nATN.prototype.removeState = function( state) {\n    this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n};\n\nATN.prototype.defineDecisionState = function( s) {\n    this.decisionToState.push(s);\n    s.decision = this.decisionToState.length-1;\n    return s.decision;\n};\n\nATN.prototype.getDecisionState = function( decision) {\n    if (this.decisionToState.length===0) {\n        return null;\n    } else {\n        return this.decisionToState[decision];\n    }\n};\n\n// Computes the set of input symbols which could follow ATN state number\n// {@code stateNumber} in the specified full {@code context}. This method\n// considers the complete parser context, but does not evaluate semantic\n// predicates (i.e. all predicates encountered during the calculation are\n// assumed true). If a path in the ATN exists from the starting state to the\n// {@link RuleStopState} of the outermost context without matching any\n// symbols, {@link Token//EOF} is added to the returned set.\n//\n// <p>If {@code context} is {@code null}, it is treated as\n// {@link ParserRuleContext//EMPTY}.</p>\n//\n// @param stateNumber the ATN state number\n// @param context the full parse context\n// @return The set of potentially valid input symbols which could follow the\n// specified state in the specified context.\n// @throws IllegalArgumentException if the ATN does not contain a state with\n// number {@code stateNumber}\nvar Token = require('./../Token').Token;\n\nATN.prototype.getExpectedTokens = function( stateNumber, ctx ) {\n    if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n        throw(\"Invalid state number.\");\n    }\n    var s = this.states[stateNumber];\n    var following = this.nextTokens(s);\n    if (!following.contains(Token.EPSILON)) {\n        return following;\n    }\n    var expected = new IntervalSet();\n    expected.addSet(following);\n    expected.removeOne(Token.EPSILON);\n    while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n        var invokingState = this.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        following = this.nextTokens(rt.followState);\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        ctx = ctx.parentCtx;\n    }\n    if (following.contains(Token.EPSILON)) {\n        expected.addOne(Token.EOF);\n    }\n    return expected;\n};\n\nATN.INVALID_ALT_NUMBER = 0;\n\nexports.ATN = ATN;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//  An ATN transition between any two ATN states.  Subclasses define\n//  atom, set, epsilon, action, predicate, rule transitions.\n//\n//  <p>This is a one way link.  It emanates from a state (usually via a list of\n//  transitions) and has a target state.</p>\n//\n//  <p>Since we never have to change the ATN transitions once we construct it,\n//  we can fix these transitions as specific classes. The DFA transitions\n//  on the other hand need to update the labels as it adds transitions to\n//  the states. We'll use the term Edge for the DFA to distinguish them from\n//  ATN transitions.</p>\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Predicate = require('./SemanticContext').Predicate;\nvar PrecedencePredicate = require('./SemanticContext').PrecedencePredicate;\n\nfunction Transition (target) {\n    // The target of this transition.\n    if (target===undefined || target===null) {\n        throw \"target cannot be null.\";\n    }\n    this.target = target;\n    // Are we epsilon, action, sempred?\n    this.isEpsilon = false;\n    this.label = null;\n    return this;\n}\n    // constants for serialization\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\nTransition.PREDICATE = 4; // e.g., {isType(input.LT(1))}?\nTransition.ATOM = 5;\nTransition.ACTION = 6;\nTransition.SET = 7; // ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n\n// TODO: make all transitions sets? no, should remove set edges\nfunction AtomTransition(target, label) {\n\tTransition.call(this, target);\n\tthis.label_ = label; // The token type or character value; or, signifies special label.\n    this.label = this.makeLabel();\n    this.serializationType = Transition.ATOM;\n    return this;\n}\n\nAtomTransition.prototype = Object.create(Transition.prototype);\nAtomTransition.prototype.constructor = AtomTransition;\n\nAtomTransition.prototype.makeLabel = function() {\n\tvar s = new IntervalSet();\n    s.addOne(this.label_);\n    return s;\n};\n\nAtomTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n    return this.label_ === symbol;\n};\n\nAtomTransition.prototype.toString = function() {\n\treturn this.label_;\n};\n\nfunction RuleTransition(ruleStart, ruleIndex, precedence, followState) {\n\tTransition.call(this, ruleStart);\n    this.ruleIndex = ruleIndex; // ptr to the rule definition object for this rule ref\n    this.precedence = precedence;\n    this.followState = followState; // what node to begin computations following ref to rule\n    this.serializationType = Transition.RULE;\n    this.isEpsilon = true;\n    return this;\n}\n\nRuleTransition.prototype = Object.create(Transition.prototype);\nRuleTransition.prototype.constructor = RuleTransition;\n\nRuleTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\n\nfunction EpsilonTransition(target, outermostPrecedenceReturn) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.EPSILON;\n    this.isEpsilon = true;\n    this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    return this;\n}\n\nEpsilonTransition.prototype = Object.create(Transition.prototype);\nEpsilonTransition.prototype.constructor = EpsilonTransition;\n\nEpsilonTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nEpsilonTransition.prototype.toString = function() {\n\treturn \"epsilon\";\n};\n\nfunction RangeTransition(target, start, stop) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.RANGE;\n    this.start = start;\n    this.stop = stop;\n    this.label = this.makeLabel();\n    return this;\n}\n\nRangeTransition.prototype = Object.create(Transition.prototype);\nRangeTransition.prototype.constructor = RangeTransition;\n\nRangeTransition.prototype.makeLabel = function() {\n    var s = new IntervalSet();\n    s.addRange(this.start, this.stop);\n    return s;\n};\n\nRangeTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= this.start && symbol <= this.stop;\n};\n\nRangeTransition.prototype.toString = function() {\n\treturn \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n};\n\nfunction AbstractPredicateTransition(target) {\n\tTransition.call(this, target);\n\treturn this;\n}\n\nAbstractPredicateTransition.prototype = Object.create(Transition.prototype);\nAbstractPredicateTransition.prototype.constructor = AbstractPredicateTransition;\n\nfunction PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PREDICATE;\n    this.ruleIndex = ruleIndex;\n    this.predIndex = predIndex;\n    this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nPredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPredicateTransition.prototype.constructor = PredicateTransition;\n\nPredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPredicateTransition.prototype.getPredicate = function() {\n\treturn new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicateTransition.prototype.toString = function() {\n\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n};\n\nfunction ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.ACTION;\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n    this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nActionTransition.prototype = Object.create(Transition.prototype);\nActionTransition.prototype.constructor = ActionTransition;\n\n\nActionTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nActionTransition.prototype.toString = function() {\n\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n};\n\n\n// A transition containing a set of values.\nfunction SetTransition(target, set) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.SET;\n    if (set !==undefined && set !==null) {\n        this.label = set;\n    } else {\n        this.label = new IntervalSet();\n        this.label.addOne(Token.INVALID_TYPE);\n    }\n    return this;\n}\n\nSetTransition.prototype = Object.create(Transition.prototype);\nSetTransition.prototype.constructor = SetTransition;\n\nSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn this.label.contains(symbol);\n};\n\n\nSetTransition.prototype.toString = function() {\n\treturn this.label.toString();\n};\n\nfunction NotSetTransition(target, set) {\n\tSetTransition.call(this, target, set);\n\tthis.serializationType = Transition.NOT_SET;\n\treturn this;\n}\n\nNotSetTransition.prototype = Object.create(SetTransition.prototype);\nNotSetTransition.prototype.constructor = NotSetTransition;\n\nNotSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n\t\t\t!SetTransition.prototype.matches.call(this, symbol, minVocabSymbol, maxVocabSymbol);\n};\n\nNotSetTransition.prototype.toString = function() {\n\treturn '~' + SetTransition.prototype.toString.call(this);\n};\n\nfunction WildcardTransition(target) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.WILDCARD;\n\treturn this;\n}\n\nWildcardTransition.prototype = Object.create(Transition.prototype);\nWildcardTransition.prototype.constructor = WildcardTransition;\n\n\nWildcardTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n};\n\nWildcardTransition.prototype.toString = function() {\n\treturn \".\";\n};\n\nfunction PrecedencePredicateTransition(target, precedence) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PRECEDENCE;\n    this.precedence = precedence;\n    this.isEpsilon = true;\n    return this;\n}\n\nPrecedencePredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPrecedencePredicateTransition.prototype.constructor = PrecedencePredicateTransition;\n\nPrecedencePredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPrecedencePredicateTransition.prototype.getPredicate = function() {\n\treturn new PrecedencePredicate(this.precedence);\n};\n\nPrecedencePredicateTransition.prototype.toString = function() {\n\treturn this.precedence + \" >= _p\";\n};\n\nexports.Transition = Transition;\nexports.AtomTransition = AtomTransition;\nexports.SetTransition = SetTransition;\nexports.NotSetTransition = NotSetTransition;\nexports.RuleTransition = RuleTransition;\nexports.ActionTransition = ActionTransition;\nexports.EpsilonTransition = EpsilonTransition;\nexports.RangeTransition = RangeTransition;\nexports.WildcardTransition = WildcardTransition;\nexports.PredicateTransition = PredicateTransition;\nexports.PrecedencePredicateTransition = PrecedencePredicateTransition;\nexports.AbstractPredicateTransition = AbstractPredicateTransition;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//\n// Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n// info about the set, with support for combining similar configurations using a\n// graph-structured stack.\n///\n\nvar ATN = require('./ATN').ATN;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar merge = require('./../PredictionContext').merge;\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n\nfunction ATNConfigSet(fullCtx) {\n\t//\n\t// The reason that we need this is because we don't want the hash map to use\n\t// the standard hash code and equals. We need all configurations with the\n\t// same\n\t// {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t// doubles\n\t// the number of objects associated with ATNConfigs. The other solution is\n\t// to\n\t// use a hash table that lets us specify the equals/hashcode operation.\n\t// All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t// when we go readonly as this set becomes a DFA state.\n\tthis.configLookup = new Set(hashATNConfig, equalATNConfigs);\n\t// Indicates that this configuration set is part of a full context\n\t// LL prediction. It will be used to determine how to merge $. With SLL\n\t// it's a wildcard whereas it is not for LL context merge.\n\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t// Indicates that the set of configurations is read-only. Do not\n\t// allow any code to manipulate the set; DFA states will point at\n\t// the sets and they must not change. This does not protect the other\n\t// fields; in particular, conflictingAlts is set after\n\t// we've made this readonly.\n\tthis.readOnly = false;\n\t// Track the elements as they are added to the set; supports get(i)///\n\tthis.configs = [];\n\n\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t// together, saves recomputation\n\t// TODO: can we track conflicts as they are added to save scanning configs\n\t// later?\n\tthis.uniqueAlt = 0;\n\tthis.conflictingAlts = null;\n\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\n\t// while computing a closure operation. Don't make a DFA state from this.\n\tthis.hasSemanticContext = false;\n\tthis.dipsIntoOuterContext = false;\n\n\tthis.cachedHashCode = -1;\n\n\treturn this;\n}\n\n// Adding a new config means merging contexts with existing configs for\n// {@code (s, i, pi, _)}, where {@code s} is the\n// {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n// {@code pi} is the {@link ATNConfig//semanticContext}. We use\n// {@code (s,i,pi)} as key.\n//\n// <p>This method updates {@link //dipsIntoOuterContext} and\n// {@link //hasSemanticContext} when necessary.</p>\n// /\nATNConfigSet.prototype.add = function(config, mergeCache) {\n\tif (mergeCache === undefined) {\n\t\tmergeCache = null;\n\t}\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\tthis.hasSemanticContext = true;\n\t}\n\tif (config.reachesIntoOuterContext > 0) {\n\t\tthis.dipsIntoOuterContext = true;\n\t}\n\tvar existing = this.configLookup.add(config);\n\tif (existing === config) {\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configs.push(config); // track order here\n\t\treturn true;\n\t}\n\t// a previous (s,i,pi,_), merge with it and save result\n\tvar rootIsWildcard = !this.fullCtx;\n\tvar merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t// no need to check for existing.context, config.context in cache\n\t// since only way to create new graphs is \"call rule\" and here. We\n\t// cache at both places.\n\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t// make sure to preserve the precedence filter suppression during the merge\n\tif (config.precedenceFilterSuppressed) {\n\t\texisting.precedenceFilterSuppressed = true;\n\t}\n\texisting.context = merged; // replace context; no need to alt mapping\n\treturn true;\n};\n\nATNConfigSet.prototype.getStates = function() {\n\tvar states = new Set();\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tstates.add(this.configs[i].state);\n\t}\n\treturn states;\n};\n\nATNConfigSet.prototype.getPredicates = function() {\n\tvar preds = [];\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar c = this.configs[i].semanticContext;\n\t\tif (c !== SemanticContext.NONE) {\n\t\t\tpreds.push(c.semanticContext);\n\t\t}\n\t}\n\treturn preds;\n};\n\nObject.defineProperty(ATNConfigSet.prototype, \"items\", {\n\tget : function() {\n\t\treturn this.configs;\n\t}\n});\n\nATNConfigSet.prototype.optimizeConfigs = function(interpreter) {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (this.configLookup.length === 0) {\n\t\treturn;\n\t}\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar config = this.configs[i];\n\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t}\n};\n\nATNConfigSet.prototype.addAll = function(coll) {\n\tfor (var i = 0; i < coll.length; i++) {\n\t\tthis.add(coll[i]);\n\t}\n\treturn false;\n};\n\nATNConfigSet.prototype.equals = function(other) {\n\treturn this === other ||\n\t\t(other instanceof ATNConfigSet &&\n\t\tUtils.equalArrays(this.configs, other.configs) &&\n\t\tthis.fullCtx === other.fullCtx &&\n\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n};\n\nATNConfigSet.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfigSet.prototype.updateHashCode = function(hash) {\n\tif (this.readOnly) {\n\t\tif (this.cachedHashCode === -1) {\n            var hash = new Hash();\n            hash.update(this.configs);\n\t\t\tthis.cachedHashCode = hash.finish();\n\t\t}\n        hash.update(this.cachedHashCode);\n\t} else {\n        hash.update(this.configs);\n\t}\n};\n\n\nObject.defineProperty(ATNConfigSet.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.configs.length;\n\t}\n});\n\nATNConfigSet.prototype.isEmpty = function() {\n\treturn this.configs.length === 0;\n};\n\nATNConfigSet.prototype.contains = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.contains(item);\n};\n\nATNConfigSet.prototype.containsFast = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.containsFast(item);\n};\n\nATNConfigSet.prototype.clear = function() {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tthis.configs = [];\n\tthis.cachedHashCode = -1;\n\tthis.configLookup = new Set();\n};\n\nATNConfigSet.prototype.setReadonly = function(readOnly) {\n\tthis.readOnly = readOnly;\n\tif (readOnly) {\n\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t}\n};\n\nATNConfigSet.prototype.toString = function() {\n\treturn Utils.arrayToString(this.configs) +\n\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n};\n\nfunction OrderedATNConfigSet() {\n\tATNConfigSet.call(this);\n\tthis.configLookup = new Set();\n\treturn this;\n}\n\nOrderedATNConfigSet.prototype = Object.create(ATNConfigSet.prototype);\nOrderedATNConfigSet.prototype.constructor = OrderedATNConfigSet;\n\nexports.ATNConfigSet = ATNConfigSet;\nexports.OrderedATNConfigSet = OrderedATNConfigSet;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexports.atn = require('./atn/index');\nexports.codepointat = require('./polyfills/codepointat');\nexports.dfa = require('./dfa/index');\nexports.fromcodepoint = require('./polyfills/fromcodepoint');\nexports.tree = require('./tree/index');\nexports.error = require('./error/index');\nexports.Token = require('./Token').Token;\nexports.CharStreams = require('./CharStreams').CharStreams;\nexports.CommonToken = require('./Token').CommonToken;\nexports.InputStream = require('./InputStream').InputStream;\nexports.FileStream = require('./FileStream').FileStream;\nexports.CommonTokenStream = require('./CommonTokenStream').CommonTokenStream;\nexports.Lexer = require('./Lexer').Lexer;\nexports.Parser = require('./Parser').Parser;\nvar pc = require('./PredictionContext');\nexports.PredictionContextCache = pc.PredictionContextCache;\nexports.ParserRuleContext = require('./ParserRuleContext').ParserRuleContext;\nexports.Interval = require('./IntervalSet').Interval;\nexports.Utils = require('./Utils');\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A tree structure used to record the semantic context in which\n//  an ATN configuration is valid.  It's either a single predicate,\n//  a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n//\n//  <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n//  {@link SemanticContext} within the scope of this outer class.</p>\n//\n\nvar Set = require('./../Utils').Set;\nvar Hash = require('./../Utils').Hash;\n\nfunction SemanticContext() {\n\treturn this;\n}\n\nSemanticContext.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n// For context independent predicates, we evaluate them without a local\n// context (i.e., null context). That way, we can evaluate them without\n// having to create proper rule-specific context during prediction (as\n// opposed to the parser, which creates them naturally). In a practical\n// sense, this avoids a cast exception from RuleContext to myruleContext.\n//\n// <p>For context dependent predicates, we must pass in a local context so that\n// references such as $arg evaluate properly as _localctx.arg. We only\n// capture context dependent predicates in the context in which we begin\n// prediction, so we passed in the outer context here in case of context\n// dependent predicate evaluation.</p>\n//\nSemanticContext.prototype.evaluate = function(parser, outerContext) {\n};\n\n//\n// Evaluate the precedence predicates for the context and reduce the result.\n//\n// @param parser The parser instance.\n// @param outerContext The current parser context object.\n// @return The simplified semantic context after precedence predicates are\n// evaluated, which will be one of the following values.\n// <ul>\n// <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n// precedence predicates are evaluated.</li>\n// <li>{@code null}: if the predicate simplifies to {@code false} after\n// precedence predicates are evaluated.</li>\n// <li>{@code this}: if the semantic context is not changed as a result of\n// precedence predicate evaluation.</li>\n// <li>A non-{@code null} {@link SemanticContext}: the new simplified\n// semantic context after precedence predicates are evaluated.</li>\n// </ul>\n//\nSemanticContext.prototype.evalPrecedence = function(parser, outerContext) {\n\treturn this;\n};\n\nSemanticContext.andContext = function(a, b) {\n\tif (a === null || a === SemanticContext.NONE) {\n\t\treturn b;\n\t}\n\tif (b === null || b === SemanticContext.NONE) {\n\t\treturn a;\n\t}\n\tvar result = new AND(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nSemanticContext.orContext = function(a, b) {\n\tif (a === null) {\n\t\treturn b;\n\t}\n\tif (b === null) {\n\t\treturn a;\n\t}\n\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = new OR(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nfunction Predicate(ruleIndex, predIndex, isCtxDependent) {\n\tSemanticContext.call(this);\n\tthis.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n\tthis.predIndex = predIndex === undefined ? -1 : predIndex;\n\tthis.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n\treturn this;\n}\n\nPredicate.prototype = Object.create(SemanticContext.prototype);\nPredicate.prototype.constructor = Predicate;\n\n//The default {@link SemanticContext}, which is semantically equivalent to\n//a predicate of the form {@code {true}?}.\n//\nSemanticContext.NONE = new Predicate();\n\n\nPredicate.prototype.evaluate = function(parser, outerContext) {\n\tvar localctx = this.isCtxDependent ? outerContext : null;\n\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\n};\n\nPredicate.prototype.updateHashCode = function(hash) {\n\thash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof Predicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.ruleIndex === other.ruleIndex &&\n\t\t\t\tthis.predIndex === other.predIndex &&\n\t\t\t\tthis.isCtxDependent === other.isCtxDependent;\n\t}\n};\n\nPredicate.prototype.toString = function() {\n\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n};\n\nfunction PrecedencePredicate(precedence) {\n\tSemanticContext.call(this);\n\tthis.precedence = precedence === undefined ? 0 : precedence;\n}\n\nPrecedencePredicate.prototype = Object.create(SemanticContext.prototype);\nPrecedencePredicate.prototype.constructor = PrecedencePredicate;\n\nPrecedencePredicate.prototype.evaluate = function(parser, outerContext) {\n\treturn parser.precpred(outerContext, this.precedence);\n};\n\nPrecedencePredicate.prototype.evalPrecedence = function(parser, outerContext) {\n\tif (parser.precpred(outerContext, this.precedence)) {\n\t\treturn SemanticContext.NONE;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nPrecedencePredicate.prototype.compareTo = function(other) {\n\treturn this.precedence - other.precedence;\n};\n\nPrecedencePredicate.prototype.updateHashCode = function(hash) {\n    hash.update(31);\n};\n\nPrecedencePredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof PrecedencePredicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.precedence === other.precedence;\n\t}\n};\n\nPrecedencePredicate.prototype.toString = function() {\n\treturn \"{\"+this.precedence+\">=prec}?\";\n};\n\n\n\nPrecedencePredicate.filterPrecedencePredicates = function(set) {\n\tvar result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n};\n\n\n// A semantic context which is true whenever none of the contained contexts\n// is false.\n//\nfunction AND(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof AND) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof AND) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the lowest precedence\n\t\tvar reduced = null;\n\t\tprecedencePredicates.map( function(p) {\n\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\treduced = p;\n\t\t\t}\n\t\t});\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nAND.prototype = Object.create(SemanticContext.prototype);\nAND.prototype.constructor = AND;\n\nAND.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof AND)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nAND.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"AND\");\n};\n//\n// {@inheritDoc}\n//\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nAND.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nAND.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === null) {\n\t\t\t// The AND context is false if any element is false\n\t\t\treturn null;\n\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t// Reduce the result by skipping true elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were true, so the AND context is true\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t});\n\treturn result;\n};\n\nAND.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"&& \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\n//\n// A semantic context which is true whenever at least one of the contained\n// contexts is true.\n//\nfunction OR(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof OR) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof OR) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the highest precedence\n\t\tvar s = precedencePredicates.sort(function(a, b) {\n\t\t\treturn a.compareTo(b);\n\t\t});\n\t\tvar reduced = s[s.length-1];\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nOR.prototype = Object.create(SemanticContext.prototype);\nOR.prototype.constructor = OR;\n\nOR.prototype.constructor = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof OR)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nOR.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"OR\");\n};\n\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nOR.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nOR.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t// The OR context is true if any element is true\n\t\t\treturn SemanticContext.NONE;\n\t\t} else if (evaluated !== null) {\n\t\t\t// Reduce the result by skipping false elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were false, so the OR context is false\n\t\treturn null;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t});\n\treturn result;\n};\n\nOR.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"|| \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\nexports.SemanticContext = SemanticContext;\nexports.PrecedencePredicate = PrecedencePredicate;\nexports.Predicate = Predicate;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\n\n// Map a predicate to a predicted alternative.///\n\nfunction PredPrediction(pred, alt) {\n\tthis.alt = alt;\n\tthis.pred = pred;\n\treturn this;\n}\n\nPredPrediction.prototype.toString = function() {\n\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\n};\n\n// A DFA state represents a set of possible ATN configurations.\n// As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n// to keep track of all possible states the ATN can be in after\n// reading each input symbol. That is to say, after reading\n// input a1a2..an, the DFA is in a state that represents the\n// subset T of the states of the ATN that are reachable from the\n// ATN's start state along some path labeled a1a2..an.\"\n// In conventional NFA&rarr;DFA conversion, therefore, the subset T\n// would be a bitset representing the set of states the\n// ATN could be in. We need to track the alt predicted by each\n// state as well, however. More importantly, we need to maintain\n// a stack of states, tracking the closure operations as they\n// jump from rule to rule, emulating rule invocations (method calls).\n// I have to add a stack to simulate the proper lookahead sequences for\n// the underlying LL grammar from which the ATN was derived.\n//\n// <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n// is both a state (ala normal conversion) and a RuleContext describing\n// the chain of rules (if any) followed to arrive at that state.</p>\n//\n// <p>A DFA state may have multiple references to a particular state,\n// but with different ATN contexts (with same or different alts)\n// meaning that state was reached via a different set of rule invocations.</p>\n// /\n\nfunction DFAState(stateNumber, configs) {\n\tif (stateNumber === null) {\n\t\tstateNumber = -1;\n\t}\n\tif (configs === null) {\n\t\tconfigs = new ATNConfigSet();\n\t}\n\tthis.stateNumber = stateNumber;\n\tthis.configs = configs;\n\t// {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t// {@link Token//EOF} maps to {@code edges[0]}.\n\tthis.edges = null;\n\tthis.isAcceptState = false;\n\t// if accept state, what ttype do we match or alt do we predict?\n\t// This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link\n\t// //predicates}{@code !=null} or\n\t// {@link //requiresFullContext}.\n\tthis.prediction = 0;\n\tthis.lexerActionExecutor = null;\n\t// Indicates that this state was created during SLL prediction that\n\t// discovered a conflict between the configurations in the state. Future\n\t// {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t// full context prediction if this field is true.\n\tthis.requiresFullContext = false;\n\t// During SLL parsing, this is a list of predicates associated with the\n\t// ATN configurations of the DFA state. When we have predicates,\n\t// {@link //requiresFullContext} is {@code false} since full context\n\t// prediction evaluates predicates\n\t// on-the-fly. If this is not null, then {@link //prediction} is\n\t// {@link ATN//INVALID_ALT_NUMBER}.\n\t//\n\t// <p>We only use these for non-{@link //requiresFullContext} but\n\t// conflicting states. That\n\t// means we know from the context (it's $ or we don't dip into outer\n\t// context) that it's an ambiguity not a conflict.</p>\n\t//\n\t// <p>This list is computed by {@link\n\t// ParserATNSimulator//predicateDFAState}.</p>\n\tthis.predicates = null;\n\treturn this;\n}\n\n// Get the set of all alts mentioned by all ATN configurations in this\n// DFA state.\nDFAState.prototype.getAltSet = function() {\n\tvar alts = new Set();\n\tif (this.configs !== null) {\n\t\tfor (var i = 0; i < this.configs.length; i++) {\n\t\t\tvar c = this.configs[i];\n\t\t\talts.add(c.alt);\n\t\t}\n\t}\n\tif (alts.length === 0) {\n\t\treturn null;\n\t} else {\n\t\treturn alts;\n\t}\n};\n\n// Two {@link DFAState} instances are equal if their ATN configuration sets\n// are the same. This method is used to see if a state already exists.\n//\n// <p>Because the number of alternatives and number of ATN configurations are\n// finite, there is a finite number of DFA states that can be processed.\n// This is necessary to show that the algorithm terminates.</p>\n//\n// <p>Cannot test the DFA state numbers here because in\n// {@link ParserATNSimulator//addDFAState} we need to know if any other state\n// exists that has this exact set of ATN configurations. The\n// {@link //stateNumber} is irrelevant.</p>\nDFAState.prototype.equals = function(other) {\n\t// compare set of ATN configurations in this set with other\n\treturn this === other ||\n\t\t\t(other instanceof DFAState &&\n\t\t\t\tthis.configs.equals(other.configs));\n};\n\nDFAState.prototype.toString = function() {\n\tvar s = \"\" + this.stateNumber + \":\" + this.configs;\n\tif(this.isAcceptState) {\n        s = s + \"=>\";\n        if (this.predicates !== null)\n            s = s + this.predicates;\n        else\n            s = s + this.prediction;\n    }\n\treturn s;\n};\n\nDFAState.prototype.hashCode = function() {\n\tvar hash = new Hash();\n\thash.update(this.configs);\n\tif(this.isAcceptState) {\n        if (this.predicates !== null)\n            hash.update(this.predicates);\n        else\n            hash.update(this.prediction);\n    }\n    return hash.finish();\n};\n\nexports.DFAState = DFAState;\nexports.PredPrediction = PredPrediction;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A tuple: (ATN state, predicted alt, syntactic, semantic context).\n//  The syntactic context is a graph-structured stack node whose\n//  path(s) to the root is the rule invocation(s)\n//  chain used to arrive at the state.  The semantic context is\n//  the tree of semantic predicates encountered before reaching\n//  an ATN state.\n///\n\nvar DecisionState = require('./ATNState').DecisionState;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\n\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tvar result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tvar props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nfunction ATNConfig(params, config) {\n\tthis.checkContext(params, config);\n\tparams = checkParams(params);\n\tconfig = checkParams(config, true);\n    // The ATN state associated with this configuration///\n    this.state = params.state!==null ? params.state : config.state;\n    // What alt (or lexer rule) is predicted by this configuration///\n    this.alt = params.alt!==null ? params.alt : config.alt;\n    // The stack of invoking states leading to the rule/states associated\n    //  with this config.  We track only those contexts pushed during\n    //  execution of the ATN simulator.\n    this.context = params.context!==null ? params.context : config.context;\n    this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n        (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n    // We cannot execute predicates dependent upon local context unless\n    // we know for sure we are in the correct context. Because there is\n    // no way to do this efficiently, we simply cannot evaluate\n    // dependent predicates unless we are in the rule that initially\n    // invokes the ATN simulator.\n    //\n    // closure() tracks the depth of how far we dip into the\n    // outer context: depth &gt; 0.  Note that it may not be totally\n    // accurate depth since I don't ever decrement. TODO: make it a boolean then\n    this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n    this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    return this;\n}\n\nATNConfig.prototype.checkContext = function(params, config) {\n\tif((params.context===null || params.context===undefined) &&\n\t\t\t(config===null || config.context===null || config.context===undefined)) {\n\t\tthis.context = null;\n\t}\n};\n\n\nATNConfig.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n};\n\n// An ATN configuration is equal to another if both have\n//  the same state, they predict the same alternative, and\n//  syntactic/semantic contexts are the same.\n\nATNConfig.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n            this.semanticContext.equals(other.semanticContext) &&\n            this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n    }\n};\n\n\nATNConfig.prototype.hashCodeForConfigSet = function() {\n    var hash = new Hash();\n    hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.equalsForConfigSet = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            this.semanticContext.equals(other.semanticContext);\n    }\n};\n\n\nATNConfig.prototype.toString = function() {\n    return \"(\" + this.state + \",\" + this.alt +\n        (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n        (this.semanticContext !== SemanticContext.NONE ?\n                (\",\" + this.semanticContext.toString())\n                : \"\") +\n        (this.reachesIntoOuterContext>0 ?\n                (\",up=\" + this.reachesIntoOuterContext)\n                : \"\") + \")\";\n};\n\n\nfunction LexerATNConfig(params, config) {\n\tATNConfig.call(this, params, config);\n\n    // This is the backing field for {@link //getLexerActionExecutor}.\n\tvar lexerActionExecutor = params.lexerActionExecutor || null;\n    this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n    this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n    return this;\n}\n\nLexerATNConfig.prototype = Object.create(ATNConfig.prototype);\nLexerATNConfig.prototype.constructor = LexerATNConfig;\n\nLexerATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n};\n\nLexerATNConfig.prototype.equals = function(other) {\n    return this === other ||\n            (other instanceof LexerATNConfig &&\n            this.passedThroughNonGreedyDecision == other.passedThroughNonGreedyDecision &&\n            (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n            ATNConfig.prototype.equals.call(this, other));\n};\n\nLexerATNConfig.prototype.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n\nLexerATNConfig.prototype.equalsForConfigSet = LexerATNConfig.prototype.equals;\n\n\nLexerATNConfig.prototype.checkNonGreedyDecision = function(source, target) {\n    return source.passedThroughNonGreedyDecision ||\n        (target instanceof DecisionState) && target.nonGreedy;\n};\n\nexports.ATNConfig = ATNConfig;\nexports.LexerATNConfig = LexerATNConfig;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//  A rule context is a record of a single rule invocation. It knows\n//  which context invoked it, if any. If there is no parent context, then\n//  naturally the invoking state is not valid.  The parent link\n//  provides a chain upwards from the current rule invocation to the root\n//  of the invocation tree, forming a stack. We actually carry no\n//  information about the rule associated with this context (except\n//  when parsing). We keep only the state number of the invoking state from\n//  the ATN submachine that invoked this. Contrast this with the s\n//  pointer inside ParserRuleContext that tracks the current state\n//  being \"executed\" for the current rule.\n//\n//  The parent contexts are useful for computing lookahead sets and\n//  getting error information.\n//\n//  These objects are used during parsing and prediction.\n//  For the special case of parsers, we use the subclass\n//  ParserRuleContext.\n//\n//  @see ParserRuleContext\n///\n\nvar RuleNode = require('./tree/Tree').RuleNode;\nvar INVALID_INTERVAL = require('./tree/Tree').INVALID_INTERVAL;\nvar INVALID_ALT_NUMBER = require('./atn/ATN').INVALID_ALT_NUMBER;\n\nfunction RuleContext(parent, invokingState) {\n\tRuleNode.call(this);\n\t// What context invoked this rule?\n\tthis.parentCtx = parent || null;\n\t// What state invoked the rule associated with this context?\n\t// The \"return address\" is the followState of invokingState\n\t// If parent is null, this should be -1.\n\tthis.invokingState = invokingState || -1;\n\treturn this;\n}\n\nRuleContext.prototype = Object.create(RuleNode.prototype);\nRuleContext.prototype.constructor = RuleContext;\n\nRuleContext.prototype.depth = function() {\n\tvar n = 0;\n\tvar p = this;\n\twhile (p !== null) {\n\t\tp = p.parentCtx;\n\t\tn += 1;\n\t}\n\treturn n;\n};\n\n// A context is empty if there is no invoking state; meaning nobody call\n// current context.\nRuleContext.prototype.isEmpty = function() {\n\treturn this.invokingState === -1;\n};\n\n// satisfy the ParseTree / SyntaxTree interface\n\nRuleContext.prototype.getSourceInterval = function() {\n\treturn INVALID_INTERVAL;\n};\n\nRuleContext.prototype.getRuleContext = function() {\n\treturn this;\n};\n\nRuleContext.prototype.getPayload = function() {\n\treturn this;\n};\n\n// Return the combined text of all child nodes. This method only considers\n// tokens which have been added to the parse tree.\n// <p>\n// Since tokens on hidden channels (e.g. whitespace or comments) are not\n// added to the parse trees, they will not appear in the output of this\n// method.\n// /\nRuleContext.prototype.getText = function() {\n\tif (this.getChildCount() === 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn this.children.map(function(child) {\n\t\t\treturn child.getText();\n\t\t}).join(\"\");\n\t}\n};\n\n// For rule associated with this parse tree internal node, return\n// the outer alternative number used to match the input. Default\n// implementation does not compute nor store this alt num. Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\n// to set it.\nRuleContext.prototype.getAltNumber = function() { return INVALID_ALT_NUMBER; }\n\n// Set the outer alternative number for this context node. Default\n// implementation does nothing to avoid backing field overhead for\n// trees that don't need it.  Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\nRuleContext.prototype.setAltNumber = function(altNumber) { }\n\nRuleContext.prototype.getChild = function(i) {\n\treturn null;\n};\n\nRuleContext.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nRuleContext.prototype.accept = function(visitor) {\n\treturn visitor.visitChildren(this);\n};\n\n//need to manage circular dependencies, so export now\nexports.RuleContext = RuleContext;\nvar Trees = require('./tree/Trees').Trees;\n\n\n// Print out a whole tree, not just a node, in LISP format\n// (root child1 .. childN). Print just a node if this is a leaf.\n//\n\nRuleContext.prototype.toStringTree = function(ruleNames, recog) {\n\treturn Trees.toStringTree(this, ruleNames, recog);\n};\n\nRuleContext.prototype.toString = function(ruleNames, stop) {\n\truleNames = ruleNames || null;\n\tstop = stop || null;\n\tvar p = this;\n\tvar s = \"[\";\n\twhile (p !== null && p !== stop) {\n\t\tif (ruleNames === null) {\n\t\t\tif (!p.isEmpty()) {\n\t\t\t\ts += p.invokingState;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ri = p.ruleIndex;\n\t\t\tvar ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n\t\t\t\t\t: \"\" + ri;\n\t\t\ts += ruleName;\n\t\t}\n\t\tif (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n\t\t\ts += \" \";\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\ts += \"]\";\n\treturn s;\n};\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A lexer is recognizer that draws input symbols from a character stream.\n//  lexer grammars result in a subclass of this object. A Lexer object\n//  uses simplified match() and error recovery mechanisms in the interest of speed.\n\nvar Token = require('./Token').Token;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar CommonTokenFactory = require('./CommonTokenFactory').CommonTokenFactory;\nvar RecognitionException  = require('./error/Errors').RecognitionException;\nvar LexerNoViableAltException = require('./error/Errors').LexerNoViableAltException;\n\nfunction TokenSource() {\n\treturn this;\n}\n\nfunction Lexer(input) {\n\tRecognizer.call(this);\n\tthis._input = input;\n\tthis._factory = CommonTokenFactory.DEFAULT;\n\tthis._tokenFactorySourcePair = [ this, input ];\n\n\tthis._interp = null; // child classes must populate this\n\n\t// The goal of all lexer rules/methods is to create a token object.\n\t// this is an instance variable as multiple rules may collaborate to\n\t// create a single token. nextToken will return this object after\n\t// matching lexer rule(s). If you subclass to allow multiple token\n\t// emissions, then set this to the last token to be matched or\n\t// something nonnull so that the auto token emit mechanism will not\n\t// emit another token.\n\tthis._token = null;\n\n\t// What character index in the stream did the current token start at?\n\t// Needed, for example, to get the text for current token. Set at\n\t// the start of nextToken.\n\tthis._tokenStartCharIndex = -1;\n\n\t// The line on which the first character of the token resides///\n\tthis._tokenStartLine = -1;\n\n\t// The character position of first character within the line///\n\tthis._tokenStartColumn = -1;\n\n\t// Once we see EOF on char stream, next token will be EOF.\n\t// If you have DONE : EOF ; then you see DONE EOF.\n\tthis._hitEOF = false;\n\n\t// The channel number for the current token///\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t// The token type for the current token///\n\tthis._type = Token.INVALID_TYPE;\n\n\tthis._modeStack = [];\n\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t// You can set the text for the current token to override what is in\n\t// the input char buffer. Use setText() or can set this instance var.\n\t// /\n\tthis._text = null;\n\n\treturn this;\n}\n\nLexer.prototype = Object.create(Recognizer.prototype);\nLexer.prototype.constructor = Lexer;\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\nLexer.prototype.reset = function() {\n\t// wack Lexer state variables\n\tif (this._input !== null) {\n\t\tthis._input.seek(0); // rewind the input\n\t}\n\tthis._token = null;\n\tthis._type = Token.INVALID_TYPE;\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\tthis._tokenStartCharIndex = -1;\n\tthis._tokenStartColumn = -1;\n\tthis._tokenStartLine = -1;\n\tthis._text = null;\n\n\tthis._hitEOF = false;\n\tthis._mode = Lexer.DEFAULT_MODE;\n\tthis._modeStack = [];\n\n\tthis._interp.reset();\n};\n\n// Return a token from this source; i.e., match a token on the char stream.\nLexer.prototype.nextToken = function() {\n\tif (this._input === null) {\n\t\tthrow \"nextToken requires a non-null input stream.\";\n\t}\n\n\t// Mark start location in char stream so unbuffered streams are\n\t// guaranteed at least have text of current token\n\tvar tokenStartMarker = this._input.mark();\n\ttry {\n\t\twhile (true) {\n\t\t\tif (this._hitEOF) {\n\t\t\t\tthis.emitEOF();\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t\tthis._token = null;\n\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\tthis._text = null;\n\t\t\tvar continueOuter = false;\n\t\t\twhile (true) {\n\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\tvar ttype = Lexer.SKIP;\n\t\t\t\ttry {\n\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t} catch (e) {\n\t\t\t\t    if(e instanceof RecognitionException) {\n                        this.notifyListeners(e); // report error\n                        this.recover(e);\n                    } else {\n                        console.log(e.stack);\n                        throw e;\n                    }\n\t\t\t\t}\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t}\n\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\tthis._type = ttype;\n\t\t\t\t}\n\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueOuter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._token === null) {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t\treturn this._token;\n\t\t}\n\t} finally {\n\t\t// make sure we release marker after match or\n\t\t// unbuffered char stream will keep buffering\n\t\tthis._input.release(tokenStartMarker);\n\t}\n};\n\n// Instruct the lexer to skip creating a token for current lexer rule\n// and look for another token. nextToken() knows to keep looking when\n// a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n// if token==null at end of any token rule, it creates one for you\n// and emits it.\n// /\nLexer.prototype.skip = function() {\n\tthis._type = Lexer.SKIP;\n};\n\nLexer.prototype.more = function() {\n\tthis._type = Lexer.MORE;\n};\n\nLexer.prototype.mode = function(m) {\n\tthis._mode = m;\n};\n\nLexer.prototype.pushMode = function(m) {\n\tif (this._interp.debug) {\n\t\tconsole.log(\"pushMode \" + m);\n\t}\n\tthis._modeStack.push(this._mode);\n\tthis.mode(m);\n};\n\nLexer.prototype.popMode = function() {\n\tif (this._modeStack.length === 0) {\n\t\tthrow \"Empty Stack\";\n\t}\n\tif (this._interp.debug) {\n\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t}\n\tthis.mode(this._modeStack.pop());\n\treturn this._mode;\n};\n\n// Set the char stream and reset the lexer\nObject.defineProperty(Lexer.prototype, \"inputStream\", {\n\tget : function() {\n\t\treturn this._input;\n\t},\n\tset : function(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"sourceName\", {\n\tget : function sourceName() {\n\t\treturn this._input.sourceName;\n\t}\n});\n\n// By default does not support multiple emits per nextToken invocation\n// for efficiency reasons. Subclass and override this method, nextToken,\n// and getToken (to push tokens into a list and pull from that list\n// rather than a single variable as this implementation does).\n// /\nLexer.prototype.emitToken = function(token) {\n\tthis._token = token;\n};\n\n// The standard method called to automatically emit a token at the\n// outermost lexical rule. The token object should point into the\n// char buffer start..stop. If there is a text override in 'text',\n// use that to set the token's text. Override this method to emit\n// custom Token objects or provide a new factory.\n// /\nLexer.prototype.emit = function() {\n\tvar t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn);\n\tthis.emitToken(t);\n\treturn t;\n};\n\nLexer.prototype.emitEOF = function() {\n\tvar cpos = this.column;\n\tvar lpos = this.line;\n\tvar eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\tthis._input.index - 1, lpos, cpos);\n\tthis.emitToken(eof);\n\treturn eof;\n};\n\nObject.defineProperty(Lexer.prototype, \"type\", {\n\tget : function() {\n\t\treturn this.type;\n\t},\n\tset : function(type) {\n\t\tthis._type = type;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"line\", {\n\tget : function() {\n\t\treturn this._interp.line;\n\t},\n\tset : function(line) {\n\t\tthis._interp.line = line;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"column\", {\n\tget : function() {\n\t\treturn this._interp.column;\n\t},\n\tset : function(column) {\n\t\tthis._interp.column = column;\n\t}\n});\n\n\n// What is the index of the current character of lookahead?///\nLexer.prototype.getCharIndex = function() {\n\treturn this._input.index;\n};\n\n// Return the text matched so far for the current token or any text override.\n//Set the complete text of this token; it wipes any previous changes to the text.\nObject.defineProperty(Lexer.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n// Return a list of all Token objects in input char stream.\n// Forces load of all tokens. Does not include EOF token.\n// /\nLexer.prototype.getAllTokens = function() {\n\tvar tokens = [];\n\tvar t = this.nextToken();\n\twhile (t.type !== Token.EOF) {\n\t\ttokens.push(t);\n\t\tt = this.nextToken();\n\t}\n\treturn tokens;\n};\n\nLexer.prototype.notifyListeners = function(e) {\n\tvar start = this._tokenStartCharIndex;\n\tvar stop = this._input.index;\n\tvar text = this._input.getText(start, stop);\n\tvar msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn, msg, e);\n};\n\nLexer.prototype.getErrorDisplay = function(s) {\n\tvar d = [];\n\tfor (var i = 0; i < s.length; i++) {\n\t\td.push(s[i]);\n\t}\n\treturn d.join('');\n};\n\nLexer.prototype.getErrorDisplayForChar = function(c) {\n\tif (c.charCodeAt(0) === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (c === '\\n') {\n\t\treturn \"\\\\n\";\n\t} else if (c === '\\t') {\n\t\treturn \"\\\\t\";\n\t} else if (c === '\\r') {\n\t\treturn \"\\\\r\";\n\t} else {\n\t\treturn c;\n\t}\n};\n\nLexer.prototype.getCharErrorDisplay = function(c) {\n\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n};\n\n// Lexers can normally match any char in it's vocabulary after matching\n// a token, so do the easy thing and just kill a character and hope\n// it all works out. You can instead use the rule invocation stack\n// to do sophisticated error recovery if you are in a fragment rule.\n// /\nLexer.prototype.recover = function(re) {\n\tif (this._input.LA(1) !== Token.EOF) {\n\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t// skip a char and try again\n\t\t\tthis._interp.consume(this._input);\n\t\t} else {\n\t\t\t// TODO: Do we lose character or line position information?\n\t\t\tthis._input.consume();\n\t\t}\n\t}\n};\n\nexports.Lexer = Lexer;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// Provides an empty default implementation of {@link ANTLRErrorListener}. The\n// default implementation of each method does nothing, but can be overridden as\n// necessary.\n\nfunction ErrorListener() {\n\treturn this;\n}\n\nErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n};\n\nErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n};\n\nErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n};\n\nErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n};\n\nfunction ConsoleErrorListener() {\n\tErrorListener.call(this);\n\treturn this;\n}\n\nConsoleErrorListener.prototype = Object.create(ErrorListener.prototype);\nConsoleErrorListener.prototype.constructor = ConsoleErrorListener;\n\n//\n// Provides a default instance of {@link ConsoleErrorListener}.\n//\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n\n//\n// {@inheritDoc}\n//\n// <p>\n// This implementation prints messages to {@link System//err} containing the\n// values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n// the following format.</p>\n//\n// <pre>\n// line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n// </pre>\n//\nConsoleErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    console.error(\"line \" + line + \":\" + column + \" \" + msg);\n};\n\nfunction ProxyErrorListener(delegates) {\n\tErrorListener.call(this);\n    if (delegates===null) {\n        throw \"delegates\";\n    }\n    this.delegates = delegates;\n\treturn this;\n}\n\nProxyErrorListener.prototype = Object.create(ErrorListener.prototype);\nProxyErrorListener.prototype.constructor = ProxyErrorListener;\n\nProxyErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.delegates.map(function(d) { d.syntaxError(recognizer, offendingSymbol, line, column, msg, e); });\n};\n\nProxyErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    this.delegates.map(function(d) { d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tthis.delegates.map(function(d) { d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tthis.delegates.map(function(d) { d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs); });\n};\n\nexports.ErrorListener = ErrorListener;\nexports.ConsoleErrorListener = ConsoleErrorListener;\nexports.ProxyErrorListener = ProxyErrorListener;\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// A DFA walker that knows how to dump them to serialized strings.#/\n\n\nfunction DFASerializer(dfa, literalNames, symbolicNames) {\n\tthis.dfa = dfa;\n\tthis.literalNames = literalNames || [];\n\tthis.symbolicNames = symbolicNames || [];\n\treturn this;\n}\n\nDFASerializer.prototype.toString = function() {\n   if(this.dfa.s0 === null) {\n       return null;\n   }\n   var buf = \"\";\n   var states = this.dfa.sortedStates();\n   for(var i=0;i<states.length;i++) {\n       var s = states[i];\n       if(s.edges!==null) {\n            var n = s.edges.length;\n            for(var j=0;j<n;j++) {\n                var t = s.edges[j] || null;\n                if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                    buf = buf.concat(this.getStateString(s));\n                    buf = buf.concat(\"-\");\n                    buf = buf.concat(this.getEdgeLabel(j));\n                    buf = buf.concat(\"->\");\n                    buf = buf.concat(this.getStateString(t));\n                    buf = buf.concat('\\n');\n                }\n            }\n       }\n   }\n   return buf.length===0 ? null : buf;\n};\n\nDFASerializer.prototype.getEdgeLabel = function(i) {\n    if (i===0) {\n        return \"EOF\";\n    } else if(this.literalNames !==null || this.symbolicNames!==null) {\n        return this.literalNames[i-1] || this.symbolicNames[i-1];\n    } else {\n        return String.fromCharCode(i-1);\n    }\n};\n\nDFASerializer.prototype.getStateString = function(s) {\n    var baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n    if(s.isAcceptState) {\n        if (s.predicates !== null) {\n            return baseStateStr + \"=>\" + s.predicates.toString();\n        } else {\n            return baseStateStr + \"=>\" + s.prediction.toString();\n        }\n    } else {\n        return baseStateStr;\n    }\n};\n\nfunction LexerDFASerializer(dfa) {\n\tDFASerializer.call(this, dfa, null);\n\treturn this;\n}\n\nLexerDFASerializer.prototype = Object.create(DFASerializer.prototype);\nLexerDFASerializer.prototype.constructor = LexerDFASerializer;\n\nLexerDFASerializer.prototype.getEdgeLabel = function(i) {\n\treturn \"'\" + String.fromCharCode(i) + \"'\";\n};\n\nexports.DFASerializer = DFASerializer;\nexports.LexerDFASerializer = LexerDFASerializer;\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//* A rule invocation record for parsing.\n//\n//  Contains all of the information about the current rule not stored in the\n//  RuleContext. It handles parse tree children list, Any ATN state\n//  tracing, and the default values available for rule indications:\n//  start, stop, rule index, current alt number, current\n//  ATN state.\n//\n//  Subclasses made for each rule and grammar track the parameters,\n//  return values, locals, and labels specific to that rule. These\n//  are the objects that are returned from rules.\n//\n//  Note text is not an actual field of a rule return value; it is computed\n//  from start and stop using the input stream's toString() method.  I\n//  could add a ctor to this so that we can pass in and store the input\n//  stream, but I'm not sure we want to do that.  It would seem to be undefined\n//  to get the .text property anyway if the rule matches tokens from multiple\n//  input streams.\n//\n//  I do not use getters for fields of objects that are used simply to\n//  group values such as this aggregate.  The getters/setters are there to\n//  satisfy the superclass interface.\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Tree = require('./tree/Tree');\nvar INVALID_INTERVAL = Tree.INVALID_INTERVAL;\nvar TerminalNode = Tree.TerminalNode;\nvar TerminalNodeImpl = Tree.TerminalNodeImpl;\nvar ErrorNodeImpl = Tree.ErrorNodeImpl;\nvar Interval = require(\"./IntervalSet\").Interval;\n\nfunction ParserRuleContext(parent, invokingStateNumber) {\n\tparent = parent || null;\n\tinvokingStateNumber = invokingStateNumber || null;\n\tRuleContext.call(this, parent, invokingStateNumber);\n\tthis.ruleIndex = -1;\n    // * If we are debugging or building a parse tree for a visitor,\n    // we need to track all of the tokens and rule invocations associated\n    // with this rule's context. This is empty for parsing w/o tree constr.\n    // operation because we don't the need to track the details about\n    // how we parse this rule.\n    // /\n    this.children = null;\n    this.start = null;\n    this.stop = null;\n    // The exception that forced this rule to return. If the rule successfully\n    // completed, this is {@code null}.\n    this.exception = null;\n}\n\nParserRuleContext.prototype = Object.create(RuleContext.prototype);\nParserRuleContext.prototype.constructor = ParserRuleContext;\n\n// * COPY a ctx (I'm deliberately not using copy constructor)///\nParserRuleContext.prototype.copyFrom = function(ctx) {\n    // from RuleContext\n    this.parentCtx = ctx.parentCtx;\n    this.invokingState = ctx.invokingState;\n    this.children = null;\n    this.start = ctx.start;\n    this.stop = ctx.stop;\n    // copy any error nodes to alt label node\n    if(ctx.children) {\n        this.children = [];\n        // reset parent pointer for any error nodes\n    \tctx.children.map(function(child) {\n    \t\tif (child instanceof ErrorNodeImpl) {\n                this.children.push(child);\n                child.parentCtx = this;\n            }\n\t\t}, this);\n\t}\n};\n\n// Double dispatch methods for listeners\nParserRuleContext.prototype.enterRule = function(listener) {\n};\n\nParserRuleContext.prototype.exitRule = function(listener) {\n};\n\n// * Does not set parent link; other add methods do that///\nParserRuleContext.prototype.addChild = function(child) {\n    if (this.children === null) {\n        this.children = [];\n    }\n    this.children.push(child);\n    return child;\n};\n\n// * Used by enterOuterAlt to toss out a RuleContext previously added as\n// we entered a rule. If we have // label, we will need to remove\n// generic ruleContext object.\n// /\nParserRuleContext.prototype.removeLastChild = function() {\n    if (this.children !== null) {\n        this.children.pop();\n    }\n};\n\nParserRuleContext.prototype.addTokenNode = function(token) {\n    var node = new TerminalNodeImpl(token);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.addErrorNode = function(badToken) {\n    var node = new ErrorNodeImpl(badToken);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.getChild = function(i, type) {\n\ttype = type || null;\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tif (type === null) {\n\t\treturn this.children[i];\n\t} else {\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif(child instanceof type) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n    }\n};\n\n\nParserRuleContext.prototype.getToken = function(ttype, i) {\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tfor(var j=0; j<this.children.length; j++) {\n\t\tvar child = this.children[j];\n\t\tif (child instanceof TerminalNode) {\n\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n        }\n\t}\n    return null;\n};\n\nParserRuleContext.prototype.getTokens = function(ttype ) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar tokens = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\ttokens.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n    }\n};\n\nParserRuleContext.prototype.getTypedRuleContext = function(ctxType, i) {\n    return this.getChild(i, ctxType);\n};\n\nParserRuleContext.prototype.getTypedRuleContexts = function(ctxType) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar contexts = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof ctxType) {\n\t\t\t\tcontexts.push(child);\n\t\t\t}\n\t\t}\n\t\treturn contexts;\n\t}\n};\n\nParserRuleContext.prototype.getChildCount = function() {\n\tif (this.children=== null) {\n\t\treturn 0;\n\t} else {\n\t\treturn this.children.length;\n\t}\n};\n\nParserRuleContext.prototype.getSourceInterval = function() {\n    if( this.start === null || this.stop === null) {\n        return INVALID_INTERVAL;\n    } else {\n        return new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n    }\n};\n\nRuleContext.EMPTY = new ParserRuleContext();\n\nfunction InterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n\tParserRuleContext.call(parent, invokingStateNumber);\n    this.ruleIndex = ruleIndex;\n    return this;\n}\n\nInterpreterRuleContext.prototype = Object.create(ParserRuleContext.prototype);\nInterpreterRuleContext.prototype.constructor = InterpreterRuleContext;\n\nexports.ParserRuleContext = ParserRuleContext;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nrequire('./polyfills/codepointat');\nrequire('./polyfills/fromcodepoint');\n\n// Vacuum all input from a string and then treat it like a buffer.\n\nfunction _loadString(stream, decodeToUnicodeCodePoints) {\n\tstream._index = 0;\n\tstream.data = [];\n\tif (stream.decodeToUnicodeCodePoints) {\n\t\tfor (var i = 0; i < stream.strdata.length; ) {\n\t\t\tvar codePoint = stream.strdata.codePointAt(i);\n\t\t\tstream.data.push(codePoint);\n\t\t\ti += codePoint <= 0xFFFF ? 1 : 2;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < stream.strdata.length; i++) {\n\t\t\tvar codeUnit = stream.strdata.charCodeAt(i);\n\t\t\tstream.data.push(codeUnit);\n\t\t}\n\t}\n\tstream._size = stream.data.length;\n}\n\n// If decodeToUnicodeCodePoints is true, the input is treated\n// as a series of Unicode code points.\n//\n// Otherwise, the input is treated as a series of 16-bit UTF-16 code\n// units.\nfunction InputStream(data, decodeToUnicodeCodePoints) {\n\tthis.name = \"<empty>\";\n\tthis.strdata = data;\n\tthis.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n\t_loadString(this);\n\treturn this;\n}\n\nObject.defineProperty(InputStream.prototype, \"index\", {\n\tget : function() {\n\t\treturn this._index;\n\t}\n});\n\nObject.defineProperty(InputStream.prototype, \"size\", {\n\tget : function() {\n\t\treturn this._size;\n\t}\n});\n\n// Reset the stream so that it's in the same state it was\n// when the object was created *except* the data array is not\n// touched.\n//\nInputStream.prototype.reset = function() {\n\tthis._index = 0;\n};\n\nInputStream.prototype.consume = function() {\n\tif (this._index >= this._size) {\n\t\t// assert this.LA(1) == Token.EOF\n\t\tthrow (\"cannot consume EOF\");\n\t}\n\tthis._index += 1;\n};\n\nInputStream.prototype.LA = function(offset) {\n\tif (offset === 0) {\n\t\treturn 0; // undefined\n\t}\n\tif (offset < 0) {\n\t\toffset += 1; // e.g., translate LA(-1) to use offset=0\n\t}\n\tvar pos = this._index + offset - 1;\n\tif (pos < 0 || pos >= this._size) { // invalid\n\t\treturn Token.EOF;\n\t}\n\treturn this.data[pos];\n};\n\nInputStream.prototype.LT = function(offset) {\n\treturn this.LA(offset);\n};\n\n// mark/release do nothing; we have entire buffer\nInputStream.prototype.mark = function() {\n\treturn -1;\n};\n\nInputStream.prototype.release = function(marker) {\n};\n\n// consume() ahead until p==_index; can't just set p=_index as we must\n// update line and column. If we seek backwards, just set p\n//\nInputStream.prototype.seek = function(_index) {\n\tif (_index <= this._index) {\n\t\tthis._index = _index; // just jump; don't update stream state (line,\n\t\t\t\t\t\t\t\t// ...)\n\t\treturn;\n\t}\n\t// seek forward\n\tthis._index = Math.min(_index, this._size);\n};\n\nInputStream.prototype.getText = function(start, stop) {\n\tif (stop >= this._size) {\n\t\tstop = this._size - 1;\n\t}\n\tif (start >= this._size) {\n\t\treturn \"\";\n\t} else {\n\t\tif (this.decodeToUnicodeCodePoints) {\n\t\t\tvar result = \"\";\n\t\t\tfor (var i = start; i <= stop; i++) {\n\t\t\t\tresult += String.fromCodePoint(this.data[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.strdata.slice(start, stop + 1);\n\t\t}\n\t}\n};\n\nInputStream.prototype.toString = function() {\n\treturn this.strdata;\n};\n\nexports.InputStream = InputStream;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Utils = require('./../Utils');\nvar Token = require('./../Token').Token;\nvar RuleNode = require('./Tree').RuleNode;\nvar ErrorNode = require('./Tree').ErrorNode;\nvar TerminalNode = require('./Tree').TerminalNode;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar INVALID_ALT_NUMBER = require('./../atn/ATN').INVALID_ALT_NUMBER;\n\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nfunction Trees() {\n}\n\n// Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n//  node payloads to get the text for the nodes.  Detect\n//  parse trees and extract data appropriately.\nTrees.toStringTree = function(tree, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n       ruleNames = recog.ruleNames;\n    }\n    var s = Trees.getNodeText(tree, ruleNames);\n    s = Utils.escapeWhitespace(s, false);\n    var c = tree.getChildCount();\n    if(c===0) {\n        return s;\n    }\n    var res = \"(\" + s + ' ';\n    if(c>0) {\n        s = Trees.toStringTree(tree.getChild(0), ruleNames);\n        res = res.concat(s);\n    }\n    for(var i=1;i<c;i++) {\n        s = Trees.toStringTree(tree.getChild(i), ruleNames);\n        res = res.concat(' ' + s);\n    }\n    res = res.concat(\")\");\n    return res;\n};\n\nTrees.getNodeText = function(t, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n        ruleNames = recog.ruleNames;\n    }\n    if(ruleNames!==null) {\n       if (t instanceof RuleContext) {\n           var altNumber = t.getAltNumber();\n           if ( altNumber!=INVALID_ALT_NUMBER ) {\n               return ruleNames[t.ruleIndex]+\":\"+altNumber;\n           }\n           return ruleNames[t.ruleIndex];\n       } else if ( t instanceof ErrorNode) {\n           return t.toString();\n       } else if(t instanceof TerminalNode) {\n           if(t.symbol!==null) {\n               return t.symbol.text;\n           }\n       }\n    }\n    // no recog for rule names\n    var payload = t.getPayload();\n    if (payload instanceof Token ) {\n       return payload.text;\n    }\n    return t.getPayload().toString();\n};\n\n\n// Return ordered list of all children of this node\nTrees.getChildren = function(t) {\n\tvar list = [];\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tlist.push(t.getChild(i));\n\t}\n\treturn list;\n};\n\n// Return a list of all ancestors of this node.  The first node of\n//  list is the root and the last is the parent of this node.\n//\nTrees.getAncestors = function(t) {\n    var ancestors = [];\n    t = t.getParent();\n    while(t!==null) {\n        ancestors = [t].concat(ancestors);\n        t = t.getParent();\n    }\n    return ancestors;\n};\n\nTrees.findAllTokenNodes = function(t, ttype) {\n    return Trees.findAllNodes(t, ttype, true);\n};\n\nTrees.findAllRuleNodes = function(t, ruleIndex) {\n\treturn Trees.findAllNodes(t, ruleIndex, false);\n};\n\nTrees.findAllNodes = function(t, index, findTokens) {\n\tvar nodes = [];\n\tTrees._findAllNodes(t, index, findTokens, nodes);\n\treturn nodes;\n};\n\nTrees._findAllNodes = function(t, index, findTokens, nodes) {\n\t// check this node (the root) first\n\tif(findTokens && (t instanceof TerminalNode)) {\n\t\tif(t.symbol.type===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t} else if(!findTokens && (t instanceof ParserRuleContext)) {\n\t\tif(t.ruleIndex===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t}\n\t// check children\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n\t}\n};\n\nTrees.descendants = function(t) {\n\tvar nodes = [t];\n    for(var i=0;i<t.getChildCount();i++) {\n        nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n    }\n    return nodes;\n};\n\n\nexports.Trees = Trees;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./../Token').Token;\nvar ATN = require('./ATN').ATN;\nvar ATNType = require('./ATNType').ATNType;\nvar ATNStates = require('./ATNState');\nvar ATNState = ATNStates.ATNState;\nvar BasicState = ATNStates.BasicState;\nvar DecisionState = ATNStates.DecisionState;\nvar BlockStartState = ATNStates.BlockStartState;\nvar BlockEndState = ATNStates.BlockEndState;\nvar LoopEndState = ATNStates.LoopEndState;\nvar RuleStartState = ATNStates.RuleStartState;\nvar RuleStopState = ATNStates.RuleStopState;\nvar TokensStartState = ATNStates.TokensStartState;\nvar PlusLoopbackState = ATNStates.PlusLoopbackState;\nvar StarLoopbackState = ATNStates.StarLoopbackState;\nvar StarLoopEntryState = ATNStates.StarLoopEntryState;\nvar PlusBlockStartState = ATNStates.PlusBlockStartState;\nvar StarBlockStartState = ATNStates.StarBlockStartState;\nvar BasicBlockStartState = ATNStates.BasicBlockStartState;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar AtomTransition = Transitions.AtomTransition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar RangeTransition = Transitions.RangeTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar EpsilonTransition = Transitions.EpsilonTransition;\nvar WildcardTransition = Transitions.WildcardTransition;\nvar PredicateTransition = Transitions.PredicateTransition;\nvar PrecedencePredicateTransition = Transitions.PrecedencePredicateTransition;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Interval = require('./../IntervalSet').Interval;\nvar ATNDeserializationOptions = require('./ATNDeserializationOptions').ATNDeserializationOptions;\nvar LexerActions = require('./LexerAction');\nvar LexerActionType = LexerActions.LexerActionType;\nvar LexerSkipAction = LexerActions.LexerSkipAction;\nvar LexerChannelAction = LexerActions.LexerChannelAction;\nvar LexerCustomAction = LexerActions.LexerCustomAction;\nvar LexerMoreAction = LexerActions.LexerMoreAction;\nvar LexerTypeAction = LexerActions.LexerTypeAction;\nvar LexerPushModeAction = LexerActions.LexerPushModeAction;\nvar LexerPopModeAction = LexerActions.LexerPopModeAction;\nvar LexerModeAction = LexerActions.LexerModeAction;\n// This is the earliest supported serialized UUID.\n// stick to serialized version for now, we don't need a UUID instance\nvar BASE_SERIALIZED_UUID = \"AADB8D7E-AEEF-4415-AD2B-8204D6CF042E\";\n\n//\n// This UUID indicates the serialized ATN contains two sets of\n// IntervalSets, where the second set's values are encoded as\n// 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\n//\nvar ADDED_UNICODE_SMP = \"59627784-3BE5-417A-B9EB-8131A7286089\";\n\n// This list contains all of the currently supported UUIDs, ordered by when\n// the feature first appeared in this branch.\nvar SUPPORTED_UUIDS = [ BASE_SERIALIZED_UUID, ADDED_UNICODE_SMP ];\n\nvar SERIALIZED_VERSION = 3;\n\n// This is the current serialized UUID.\nvar SERIALIZED_UUID = ADDED_UNICODE_SMP;\n\nfunction initArray( length, value) {\n\tvar tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nfunction ATNDeserializer (options) {\n\n    if ( options=== undefined || options === null ) {\n        options = ATNDeserializationOptions.defaultOptions;\n    }\n    this.deserializationOptions = options;\n    this.stateFactories = null;\n    this.actionFactories = null;\n\n    return this;\n}\n\n// Determines if a particular serialized representation of an ATN supports\n// a particular feature, identified by the {@link UUID} used for serializing\n// the ATN at the time the feature was first introduced.\n//\n// @param feature The {@link UUID} marking the first time the feature was\n// supported in the serialized ATN.\n// @param actualUuid The {@link UUID} of the actual serialized ATN which is\n// currently being deserialized.\n// @return {@code true} if the {@code actualUuid} value represents a\n// serialized ATN at or after the feature identified by {@code feature} was\n// introduced; otherwise, {@code false}.\n\nATNDeserializer.prototype.isFeatureSupported = function(feature, actualUuid) {\n    var idx1 = SUPPORTED_UUIDS.indexOf(feature);\n    if (idx1<0) {\n        return false;\n    }\n    var idx2 = SUPPORTED_UUIDS.indexOf(actualUuid);\n    return idx2 >= idx1;\n};\n\nATNDeserializer.prototype.deserialize = function(data) {\n    this.reset(data);\n    this.checkVersion();\n    this.checkUUID();\n    var atn = this.readATN();\n    this.readStates(atn);\n    this.readRules(atn);\n    this.readModes(atn);\n    var sets = [];\n    // First, deserialize sets with 16-bit arguments <= U+FFFF.\n    this.readSets(atn, sets, this.readInt.bind(this));\n    // Next, if the ATN was serialized with the Unicode SMP feature,\n    // deserialize sets with 32-bit arguments <= U+10FFFF.\n    if (this.isFeatureSupported(ADDED_UNICODE_SMP, this.uuid)) {\n        this.readSets(atn, sets, this.readInt32.bind(this));\n    }\n    this.readEdges(atn, sets);\n    this.readDecisions(atn);\n    this.readLexerActions(atn);\n    this.markPrecedenceDecisions(atn);\n    this.verifyATN(atn);\n    if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n        this.generateRuleBypassTransitions(atn);\n        // re-verify after modification\n        this.verifyATN(atn);\n    }\n    return atn;\n};\n\nATNDeserializer.prototype.reset = function(data) {\n\tvar adjust = function(c) {\n        var v = c.charCodeAt(0);\n        return v>1  ? v-2 : -1;\n\t};\n    var temp = data.split(\"\").map(adjust);\n    // don't adjust the first value since that's the version number\n    temp[0] = data.charCodeAt(0);\n    this.data = temp;\n    this.pos = 0;\n};\n\nATNDeserializer.prototype.checkVersion = function() {\n    var version = this.readInt();\n    if ( version !== SERIALIZED_VERSION ) {\n        throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n    }\n};\n\nATNDeserializer.prototype.checkUUID = function() {\n    var uuid = this.readUUID();\n    if (SUPPORTED_UUIDS.indexOf(uuid)<0) {\n        throw (\"Could not deserialize ATN with UUID: \" + uuid +\n                        \" (expected \" + SERIALIZED_UUID + \" or a legacy UUID).\", uuid, SERIALIZED_UUID);\n    }\n    this.uuid = uuid;\n};\n\nATNDeserializer.prototype.readATN = function() {\n    var grammarType = this.readInt();\n    var maxTokenType = this.readInt();\n    return new ATN(grammarType, maxTokenType);\n};\n\nATNDeserializer.prototype.readStates = function(atn) {\n\tvar j, pair, stateNumber;\n    var loopBackStateNumbers = [];\n    var endStateNumbers = [];\n    var nstates = this.readInt();\n    for(var i=0; i<nstates; i++) {\n        var stype = this.readInt();\n        // ignore bad type of states\n        if (stype===ATNState.INVALID_TYPE) {\n            atn.addState(null);\n            continue;\n        }\n        var ruleIndex = this.readInt();\n        if (ruleIndex === 0xFFFF) {\n            ruleIndex = -1;\n        }\n        var s = this.stateFactory(stype, ruleIndex);\n        if (stype === ATNState.LOOP_END) { // special case\n            var loopBackStateNumber = this.readInt();\n            loopBackStateNumbers.push([s, loopBackStateNumber]);\n        } else if(s instanceof BlockStartState) {\n            var endStateNumber = this.readInt();\n            endStateNumbers.push([s, endStateNumber]);\n        }\n        atn.addState(s);\n    }\n    // delay the assignment of loop back and end states until we know all the\n\t// state instances have been initialized\n    for (j=0; j<loopBackStateNumbers.length; j++) {\n        pair = loopBackStateNumbers[j];\n        pair[0].loopBackState = atn.states[pair[1]];\n    }\n\n    for (j=0; j<endStateNumbers.length; j++) {\n        pair = endStateNumbers[j];\n        pair[0].endState = atn.states[pair[1]];\n    }\n\n    var numNonGreedyStates = this.readInt();\n    for (j=0; j<numNonGreedyStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].nonGreedy = true;\n    }\n\n    var numPrecedenceStates = this.readInt();\n    for (j=0; j<numPrecedenceStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].isPrecedenceRule = true;\n    }\n};\n\nATNDeserializer.prototype.readRules = function(atn) {\n    var i;\n    var nrules = this.readInt();\n    if (atn.grammarType === ATNType.LEXER ) {\n        atn.ruleToTokenType = initArray(nrules, 0);\n    }\n    atn.ruleToStartState = initArray(nrules, 0);\n    for (i=0; i<nrules; i++) {\n        var s = this.readInt();\n        var startState = atn.states[s];\n        atn.ruleToStartState[i] = startState;\n        if ( atn.grammarType === ATNType.LEXER ) {\n            var tokenType = this.readInt();\n            if (tokenType === 0xFFFF) {\n                tokenType = Token.EOF;\n            }\n            atn.ruleToTokenType[i] = tokenType;\n        }\n    }\n    atn.ruleToStopState = initArray(nrules, 0);\n    for (i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (!(state instanceof RuleStopState)) {\n            continue;\n        }\n        atn.ruleToStopState[state.ruleIndex] = state;\n        atn.ruleToStartState[state.ruleIndex].stopState = state;\n    }\n};\n\nATNDeserializer.prototype.readModes = function(atn) {\n    var nmodes = this.readInt();\n    for (var i=0; i<nmodes; i++) {\n        var s = this.readInt();\n        atn.modeToStartState.push(atn.states[s]);\n    }\n};\n\nATNDeserializer.prototype.readSets = function(atn, sets, readUnicode) {\n    var m = this.readInt();\n    for (var i=0; i<m; i++) {\n        var iset = new IntervalSet();\n        sets.push(iset);\n        var n = this.readInt();\n        var containsEof = this.readInt();\n        if (containsEof!==0) {\n            iset.addOne(-1);\n        }\n        for (var j=0; j<n; j++) {\n            var i1 = readUnicode();\n            var i2 = readUnicode();\n            iset.addRange(i1, i2);\n        }\n    }\n};\n\nATNDeserializer.prototype.readEdges = function(atn, sets) {\n\tvar i, j, state, trans, target;\n    var nedges = this.readInt();\n    for (i=0; i<nedges; i++) {\n        var src = this.readInt();\n        var trg = this.readInt();\n        var ttype = this.readInt();\n        var arg1 = this.readInt();\n        var arg2 = this.readInt();\n        var arg3 = this.readInt();\n        trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n        var srcState = atn.states[src];\n        srcState.addTransition(trans);\n    }\n    // edges for rule stop states can be derived, so they aren't serialized\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for (j=0; j<state.transitions.length; j++) {\n            var t = state.transitions[j];\n            if (!(t instanceof RuleTransition)) {\n                continue;\n            }\n\t\t\tvar outermostPrecedenceReturn = -1;\n\t\t\tif (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n\t\t\t\tif (t.precedence === 0) {\n\t\t\t\t\toutermostPrecedenceReturn = t.target.ruleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n            atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n        }\n    }\n\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        if (state instanceof BlockStartState) {\n            // we need to know the end state to set its start state\n            if (state.endState === null) {\n                throw (\"IllegalState\");\n            }\n            // block end states can only be associated to a single block start\n\t\t\t// state\n            if ( state.endState.startState !== null) {\n                throw (\"IllegalState\");\n            }\n            state.endState.startState = state;\n        }\n        if (state instanceof PlusLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof PlusBlockStartState) {\n                    target.loopBackState = state;\n                }\n            }\n        } else if (state instanceof StarLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof StarLoopEntryState) {\n                    target.loopBackState = state;\n                }\n            }\n        }\n    }\n};\n\nATNDeserializer.prototype.readDecisions = function(atn) {\n    var ndecisions = this.readInt();\n    for (var i=0; i<ndecisions; i++) {\n        var s = this.readInt();\n        var decState = atn.states[s];\n        atn.decisionToState.push(decState);\n        decState.decision = i;\n    }\n};\n\nATNDeserializer.prototype.readLexerActions = function(atn) {\n    if (atn.grammarType === ATNType.LEXER) {\n        var count = this.readInt();\n        atn.lexerActions = initArray(count, null);\n        for (var i=0; i<count; i++) {\n            var actionType = this.readInt();\n            var data1 = this.readInt();\n            if (data1 === 0xFFFF) {\n                data1 = -1;\n            }\n            var data2 = this.readInt();\n            if (data2 === 0xFFFF) {\n                data2 = -1;\n            }\n            var lexerAction = this.lexerActionFactory(actionType, data1, data2);\n            atn.lexerActions[i] = lexerAction;\n        }\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransitions = function(atn) {\n\tvar i;\n    var count = atn.ruleToStartState.length;\n    for(i=0; i<count; i++) {\n        atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n    }\n    for(i=0; i<count; i++) {\n        this.generateRuleBypassTransition(atn, i);\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransition = function(atn, idx) {\n\tvar i, state;\n    var bypassStart = new BasicBlockStartState();\n    bypassStart.ruleIndex = idx;\n    atn.addState(bypassStart);\n\n    var bypassStop = new BlockEndState();\n    bypassStop.ruleIndex = idx;\n    atn.addState(bypassStop);\n\n    bypassStart.endState = bypassStop;\n    atn.defineDecisionState(bypassStart);\n\n    bypassStop.startState = bypassStart;\n\n    var excludeTransition = null;\n    var endState = null;\n\n    if (atn.ruleToStartState[idx].isPrecedenceRule) {\n        // wrap from the beginning of the rule to the StarLoopEntryState\n        endState = null;\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (this.stateIsEndStateFor(state, idx)) {\n                endState = state;\n                excludeTransition = state.loopBackState.transitions[0];\n                break;\n            }\n        }\n        if (excludeTransition === null) {\n            throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n        }\n    } else {\n        endState = atn.ruleToStopState[idx];\n    }\n\n    // all non-excluded transitions that currently target end state need to\n\t// target blockEnd instead\n    for(i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for(var j=0; j<state.transitions.length; j++) {\n            var transition = state.transitions[j];\n            if (transition === excludeTransition) {\n                continue;\n            }\n            if (transition.target === endState) {\n                transition.target = bypassStop;\n            }\n        }\n    }\n\n    // all transitions leaving the rule start state need to leave blockStart\n\t// instead\n    var ruleToStartState = atn.ruleToStartState[idx];\n    var count = ruleToStartState.transitions.length;\n    while ( count > 0) {\n        bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n        ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n    }\n    // link the new states\n    atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n    bypassStop.addTransition(new EpsilonTransition(endState));\n\n    var matchState = new BasicState();\n    atn.addState(matchState);\n    matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n    bypassStart.addTransition(new EpsilonTransition(matchState));\n};\n\nATNDeserializer.prototype.stateIsEndStateFor = function(state, idx) {\n    if ( state.ruleIndex !== idx) {\n        return null;\n    }\n    if (!( state instanceof StarLoopEntryState)) {\n        return null;\n    }\n    var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n    if (!( maybeLoopEndState instanceof LoopEndState)) {\n        return null;\n    }\n    if (maybeLoopEndState.epsilonOnlyTransitions &&\n        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n        return state;\n    } else {\n        return null;\n    }\n};\n\n//\n// Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n// the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n// correct value.\n//\n// @param atn The ATN.\n//\nATNDeserializer.prototype.markPrecedenceDecisions = function(atn) {\n\tfor(var i=0; i<atn.states.length; i++) {\n\t\tvar state = atn.states[i];\n\t\tif (!( state instanceof StarLoopEntryState)) {\n            continue;\n        }\n        // We analyze the ATN to determine if this ATN decision state is the\n        // decision for the closure block that determines whether a\n        // precedence rule should continue or complete.\n        //\n        if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n            var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n            if (maybeLoopEndState instanceof LoopEndState) {\n                if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                    state.isPrecedenceDecision = true;\n                }\n            }\n        }\n\t}\n};\n\nATNDeserializer.prototype.verifyATN = function(atn) {\n    if (!this.deserializationOptions.verifyATN) {\n        return;\n    }\n    // verify assumptions\n\tfor(var i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (state === null) {\n            continue;\n        }\n        this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n        if (state instanceof PlusBlockStartState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else  if (state instanceof StarLoopEntryState) {\n            this.checkCondition(state.loopBackState !== null);\n            this.checkCondition(state.transitions.length === 2);\n            if (state.transitions[0].target instanceof StarBlockStartState) {\n                this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                this.checkCondition(!state.nonGreedy);\n            } else if (state.transitions[0].target instanceof LoopEndState) {\n                this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                this.checkCondition(state.nonGreedy);\n            } else {\n                throw(\"IllegalState\");\n            }\n        } else if (state instanceof StarLoopbackState) {\n            this.checkCondition(state.transitions.length === 1);\n            this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n        } else if (state instanceof LoopEndState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else if (state instanceof RuleStartState) {\n            this.checkCondition(state.stopState !== null);\n        } else if (state instanceof BlockStartState) {\n            this.checkCondition(state.endState !== null);\n        } else if (state instanceof BlockEndState) {\n            this.checkCondition(state.startState !== null);\n        } else if (state instanceof DecisionState) {\n            this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n        } else {\n            this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n        }\n\t}\n};\n\nATNDeserializer.prototype.checkCondition = function(condition, message) {\n    if (!condition) {\n        if (message === undefined || message===null) {\n            message = \"IllegalState\";\n        }\n        throw (message);\n    }\n};\n\nATNDeserializer.prototype.readInt = function() {\n    return this.data[this.pos++];\n};\n\nATNDeserializer.prototype.readInt32 = function() {\n    var low = this.readInt();\n    var high = this.readInt();\n    return low | (high << 16);\n};\n\nATNDeserializer.prototype.readLong = function() {\n    var low = this.readInt32();\n    var high = this.readInt32();\n    return (low & 0x00000000FFFFFFFF) | (high << 32);\n};\n\nfunction createByteToHex() {\n\tvar bth = [];\n\tfor (var i = 0; i < 256; i++) {\n\t\tbth[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n\t}\n\treturn bth;\n}\n\nvar byteToHex = createByteToHex();\n\nATNDeserializer.prototype.readUUID = function() {\n\tvar bb = [];\n\tfor(var i=7;i>=0;i--) {\n\t\tvar int = this.readInt();\n\t\t/* jshint bitwise: false */\n\t\tbb[(2*i)+1] = int & 0xFF;\n\t\tbb[2*i] = (int >> 8) & 0xFF;\n\t}\n    return byteToHex[bb[0]] + byteToHex[bb[1]] +\n    byteToHex[bb[2]] + byteToHex[bb[3]] + '-' +\n    byteToHex[bb[4]] + byteToHex[bb[5]] + '-' +\n    byteToHex[bb[6]] + byteToHex[bb[7]] + '-' +\n    byteToHex[bb[8]] + byteToHex[bb[9]] + '-' +\n    byteToHex[bb[10]] + byteToHex[bb[11]] +\n    byteToHex[bb[12]] + byteToHex[bb[13]] +\n    byteToHex[bb[14]] + byteToHex[bb[15]];\n};\n\nATNDeserializer.prototype.edgeFactory = function(atn, type, src, trg, arg1, arg2, arg3, sets) {\n    var target = atn.states[trg];\n    switch(type) {\n    case Transition.EPSILON:\n        return new EpsilonTransition(target);\n    case Transition.RANGE:\n        return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n    case Transition.RULE:\n        return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n    case Transition.PREDICATE:\n        return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.PRECEDENCE:\n        return new PrecedencePredicateTransition(target, arg1);\n    case Transition.ATOM:\n        return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n    case Transition.ACTION:\n        return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.SET:\n        return new SetTransition(target, sets[arg1]);\n    case Transition.NOT_SET:\n        return new NotSetTransition(target, sets[arg1]);\n    case Transition.WILDCARD:\n        return new WildcardTransition(target);\n    default:\n        throw \"The specified transition type: \" + type + \" is not valid.\";\n    }\n};\n\nATNDeserializer.prototype.stateFactory = function(type, ruleIndex) {\n    if (this.stateFactories === null) {\n        var sf = [];\n        sf[ATNState.INVALID_TYPE] = null;\n        sf[ATNState.BASIC] = function() { return new BasicState(); };\n        sf[ATNState.RULE_START] = function() { return new RuleStartState(); };\n        sf[ATNState.BLOCK_START] = function() { return new BasicBlockStartState(); };\n        sf[ATNState.PLUS_BLOCK_START] = function() { return new PlusBlockStartState(); };\n        sf[ATNState.STAR_BLOCK_START] = function() { return new StarBlockStartState(); };\n        sf[ATNState.TOKEN_START] = function() { return new TokensStartState(); };\n        sf[ATNState.RULE_STOP] = function() { return new RuleStopState(); };\n        sf[ATNState.BLOCK_END] = function() { return new BlockEndState(); };\n        sf[ATNState.STAR_LOOP_BACK] = function() { return new StarLoopbackState(); };\n        sf[ATNState.STAR_LOOP_ENTRY] = function() { return new StarLoopEntryState(); };\n        sf[ATNState.PLUS_LOOP_BACK] = function() { return new PlusLoopbackState(); };\n        sf[ATNState.LOOP_END] = function() { return new LoopEndState(); };\n        this.stateFactories = sf;\n    }\n    if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n        throw(\"The specified state type \" + type + \" is not valid.\");\n    } else {\n        var s = this.stateFactories[type]();\n        if (s!==null) {\n            s.ruleIndex = ruleIndex;\n            return s;\n        }\n    }\n};\n\nATNDeserializer.prototype.lexerActionFactory = function(type, data1, data2) {\n    if (this.actionFactories === null) {\n        var af = [];\n        af[LexerActionType.CHANNEL] = function(data1, data2) { return new LexerChannelAction(data1); };\n        af[LexerActionType.CUSTOM] = function(data1, data2) { return new LexerCustomAction(data1, data2); };\n        af[LexerActionType.MODE] = function(data1, data2) { return new LexerModeAction(data1); };\n        af[LexerActionType.MORE] = function(data1, data2) { return LexerMoreAction.INSTANCE; };\n        af[LexerActionType.POP_MODE] = function(data1, data2) { return LexerPopModeAction.INSTANCE; };\n        af[LexerActionType.PUSH_MODE] = function(data1, data2) { return new LexerPushModeAction(data1); };\n        af[LexerActionType.SKIP] = function(data1, data2) { return LexerSkipAction.INSTANCE; };\n        af[LexerActionType.TYPE] = function(data1, data2) { return new LexerTypeAction(data1); };\n        this.actionFactories = af;\n    }\n    if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n        throw(\"The specified lexer action type \" + type + \" is not valid.\");\n    } else {\n        return this.actionFactories[type](data1, data2);\n    }\n};\n\n\nexports.ATNDeserializer = ATNDeserializer;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction ATNDeserializationOptions(copyFrom) {\n\tif(copyFrom===undefined) {\n\t\tcopyFrom = null;\n\t}\n\tthis.readOnly = false;\n    this.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n    this.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\n    return this;\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n//    def __setattr__(self, key, value):\n//        if key!=\"readOnly\" and self.readOnly:\n//            raise Exception(\"The object is read only.\")\n//        super(type(self), self).__setattr__(key,value)\n\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n //\n\nfunction LexerActionType() {\n}\n\nLexerActionType.CHANNEL = 0;     //The type of a {@link LexerChannelAction} action.\nLexerActionType.CUSTOM = 1;      //The type of a {@link LexerCustomAction} action.\nLexerActionType.MODE = 2;        //The type of a {@link LexerModeAction} action.\nLexerActionType.MORE = 3;        //The type of a {@link LexerMoreAction} action.\nLexerActionType.POP_MODE = 4;    //The type of a {@link LexerPopModeAction} action.\nLexerActionType.PUSH_MODE = 5;   //The type of a {@link LexerPushModeAction} action.\nLexerActionType.SKIP = 6;        //The type of a {@link LexerSkipAction} action.\nLexerActionType.TYPE = 7;        //The type of a {@link LexerTypeAction} action.\n\nfunction LexerAction(action) {\n    this.actionType = action;\n    this.isPositionDependent = false;\n    return this;\n}\n\nLexerAction.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish()\n};\n\nLexerAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType);\n};\n\nLexerAction.prototype.equals = function(other) {\n    return this === other;\n};\n\n\n\n//\n// Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n//\n// <p>The {@code skip} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerSkipAction() {\n\tLexerAction.call(this, LexerActionType.SKIP);\n\treturn this;\n}\n\nLexerSkipAction.prototype = Object.create(LexerAction.prototype);\nLexerSkipAction.prototype.constructor = LexerSkipAction;\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n\nLexerSkipAction.prototype.execute = function(lexer) {\n    lexer.skip();\n};\n\nLexerSkipAction.prototype.toString = function() {\n\treturn \"skip\";\n};\n\n//  Implements the {@code type} lexer action by calling {@link Lexer//setType}\n// with the assigned type.\nfunction LexerTypeAction(type) {\n\tLexerAction.call(this, LexerActionType.TYPE);\n\tthis.type = type;\n\treturn this;\n}\n\nLexerTypeAction.prototype = Object.create(LexerAction.prototype);\nLexerTypeAction.prototype.constructor = LexerTypeAction;\n\nLexerTypeAction.prototype.execute = function(lexer) {\n    lexer.type = this.type;\n};\n\nLexerTypeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.type);\n};\n\n\nLexerTypeAction.prototype.equals = function(other) {\n    if(this === other) {\n        return true;\n    } else if (! (other instanceof LexerTypeAction)) {\n        return false;\n    } else {\n        return this.type === other.type;\n    }\n};\n\nLexerTypeAction.prototype.toString = function() {\n    return \"type(\" + this.type + \")\";\n};\n\n// Implements the {@code pushMode} lexer action by calling\n// {@link Lexer//pushMode} with the assigned mode.\nfunction LexerPushModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.PUSH_MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerPushModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPushModeAction.prototype.constructor = LexerPushModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//pushMode} with the\n// value provided by {@link //getMode}.</p>\nLexerPushModeAction.prototype.execute = function(lexer) {\n    lexer.pushMode(this.mode);\n};\n\nLexerPushModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerPushModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerPushModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerPushModeAction.prototype.toString = function() {\n\treturn \"pushMode(\" + this.mode + \")\";\n};\n\n\n// Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n//\n// <p>The {@code popMode} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerPopModeAction() {\n\tLexerAction.call(this,LexerActionType.POP_MODE);\n\treturn this;\n}\n\nLexerPopModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPopModeAction.prototype.constructor = LexerPopModeAction;\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerPopModeAction.prototype.execute = function(lexer) {\n    lexer.popMode();\n};\n\nLexerPopModeAction.prototype.toString = function() {\n\treturn \"popMode\";\n};\n\n// Implements the {@code more} lexer action by calling {@link Lexer//more}.\n//\n// <p>The {@code more} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerMoreAction() {\n\tLexerAction.call(this, LexerActionType.MORE);\n\treturn this;\n}\n\nLexerMoreAction.prototype = Object.create(LexerAction.prototype);\nLexerMoreAction.prototype.constructor = LexerMoreAction;\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerMoreAction.prototype.execute = function(lexer) {\n    lexer.more();\n};\n\nLexerMoreAction.prototype.toString = function() {\n    return \"more\";\n};\n\n\n// Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n// the assigned mode.\nfunction LexerModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerModeAction.prototype = Object.create(LexerAction.prototype);\nLexerModeAction.prototype.constructor = LexerModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//mode} with the\n// value provided by {@link //getMode}.</p>\nLexerModeAction.prototype.execute = function(lexer) {\n    lexer.mode(this.mode);\n};\n\nLexerModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerModeAction.prototype.toString = function() {\n    return \"mode(\" + this.mode + \")\";\n};\n\n// Executes a custom lexer action by calling {@link Recognizer//action} with the\n// rule and action indexes assigned to the custom action. The implementation of\n// a custom action is added to the generated code for the lexer in an override\n// of {@link Recognizer//action} when the grammar is compiled.\n//\n// <p>This class may represent embedded actions created with the <code>{...}</code>\n// syntax in ANTLR 4, as well as actions created for lexer commands where the\n// command argument could not be evaluated when the grammar was compiled.</p>\n\n\n    // Constructs a custom lexer action with the specified rule and action\n    // indexes.\n    //\n    // @param ruleIndex The rule index to use for calls to\n    // {@link Recognizer//action}.\n    // @param actionIndex The action index to use for calls to\n    // {@link Recognizer//action}.\n\nfunction LexerCustomAction(ruleIndex, actionIndex) {\n\tLexerAction.call(this, LexerActionType.CUSTOM);\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerCustomAction.prototype.constructor = LexerCustomAction;\n\n// <p>Custom actions are implemented by calling {@link Lexer//action} with the\n// appropriate rule and action indexes.</p>\nLexerCustomAction.prototype.execute = function(lexer) {\n    lexer.action(null, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerCustomAction)) {\n        return false;\n    } else {\n        return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n    }\n};\n\n// Implements the {@code channel} lexer action by calling\n// {@link Lexer//setChannel} with the assigned channel.\n// Constructs a new {@code channel} action with the specified channel value.\n// @param channel The channel value to pass to {@link Lexer//setChannel}.\nfunction LexerChannelAction(channel) {\n\tLexerAction.call(this, LexerActionType.CHANNEL);\n    this.channel = channel;\n    return this;\n}\n\nLexerChannelAction.prototype = Object.create(LexerAction.prototype);\nLexerChannelAction.prototype.constructor = LexerChannelAction;\n\n// <p>This action is implemented by calling {@link Lexer//setChannel} with the\n// value provided by {@link //getChannel}.</p>\nLexerChannelAction.prototype.execute = function(lexer) {\n    lexer._channel = this.channel;\n};\n\nLexerChannelAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.channel);\n};\n\nLexerChannelAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerChannelAction)) {\n        return false;\n    } else {\n        return this.channel === other.channel;\n    }\n};\n\nLexerChannelAction.prototype.toString = function() {\n    return \"channel(\" + this.channel + \")\";\n};\n\n// This implementation of {@link LexerAction} is used for tracking input offsets\n// for position-dependent actions within a {@link LexerActionExecutor}.\n//\n// <p>This action is not serialized as part of the ATN, and is only required for\n// position-dependent lexer actions which appear at a location other than the\n// end of a rule. For more information about DFA optimizations employed for\n// lexer actions, see {@link LexerActionExecutor//append} and\n// {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n\n// Constructs a new indexed custom action by associating a character offset\n// with a {@link LexerAction}.\n//\n// <p>Note: This class is only required for lexer actions for which\n// {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n//\n// @param offset The offset into the input {@link CharStream}, relative to\n// the token start index, at which the specified lexer action should be\n// executed.\n// @param action The lexer action to execute at a particular offset in the\n// input {@link CharStream}.\nfunction LexerIndexedCustomAction(offset, action) {\n\tLexerAction.call(this, action.actionType);\n    this.offset = offset;\n    this.action = action;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerIndexedCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerIndexedCustomAction.prototype.constructor = LexerIndexedCustomAction;\n\n// <p>This method calls {@link //execute} on the result of {@link //getAction}\n// using the provided {@code lexer}.</p>\nLexerIndexedCustomAction.prototype.execute = function(lexer) {\n    // assume the input stream position was properly set by the calling code\n    this.action.execute(lexer);\n};\n\nLexerIndexedCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.offset, this.action);\n};\n\nLexerIndexedCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerIndexedCustomAction)) {\n        return false;\n    } else {\n        return this.offset === other.offset && this.action === other.action;\n    }\n};\n\n\nexports.LexerActionType = LexerActionType;\nexports.LexerSkipAction = LexerSkipAction;\nexports.LexerChannelAction = LexerChannelAction;\nexports.LexerCustomAction = LexerCustomAction;\nexports.LexerIndexedCustomAction = LexerIndexedCustomAction;\nexports.LexerMoreAction = LexerMoreAction;\nexports.LexerTypeAction = LexerTypeAction;\nexports.LexerPushModeAction = LexerPushModeAction;\nexports.LexerPopModeAction = LexerPopModeAction;\nexports.LexerModeAction = LexerModeAction;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nvar ConsoleErrorListener = require('./error/ErrorListener').ConsoleErrorListener;\nvar ProxyErrorListener = require('./error/ErrorListener').ProxyErrorListener;\n\nfunction Recognizer() {\n    this._listeners = [ ConsoleErrorListener.INSTANCE ];\n    this._interp = null;\n    this._stateNumber = -1;\n    return this;\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n\n\nRecognizer.prototype.checkVersion = function(toolVersion) {\n    var runtimeVersion = \"4.7\";\n    if (runtimeVersion!==toolVersion) {\n        console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n    }\n};\n\nRecognizer.prototype.addErrorListener = function(listener) {\n    this._listeners.push(listener);\n};\n\nRecognizer.prototype.removeErrorListeners = function() {\n    this._listeners = [];\n};\n\nRecognizer.prototype.getTokenTypeMap = function() {\n    var tokenNames = this.getTokenNames();\n    if (tokenNames===null) {\n        throw(\"The current recognizer does not provide a list of token names.\");\n    }\n    var result = this.tokenTypeMapCache[tokenNames];\n    if(result===undefined) {\n        result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n        result.EOF = Token.EOF;\n        this.tokenTypeMapCache[tokenNames] = result;\n    }\n    return result;\n};\n\n// Get a map from rule names to rule indexes.\n//\n// <p>Used for XPath and tree pattern compilation.</p>\n//\nRecognizer.prototype.getRuleIndexMap = function() {\n    var ruleNames = this.ruleNames;\n    if (ruleNames===null) {\n        throw(\"The current recognizer does not provide a list of rule names.\");\n    }\n    var result = this.ruleIndexMapCache[ruleNames];\n    if(result===undefined) {\n        result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n        this.ruleIndexMapCache[ruleNames] = result;\n    }\n    return result;\n};\n\nRecognizer.prototype.getTokenType = function(tokenName) {\n    var ttype = this.getTokenTypeMap()[tokenName];\n    if (ttype !==undefined) {\n        return ttype;\n    } else {\n        return Token.INVALID_TYPE;\n    }\n};\n\n\n// What is the error header, normally line/character position information?//\nRecognizer.prototype.getErrorHeader = function(e) {\n    var line = e.getOffendingToken().line;\n    var column = e.getOffendingToken().column;\n    return \"line \" + line + \":\" + column;\n};\n\n\n// How should a token be displayed in an error message? The default\n//  is to display just the text, but during development you might\n//  want to have a lot of information spit out.  Override in that case\n//  to use t.toString() (which, for CommonToken, dumps everything about\n//  the token). This is better than forcing you to override a method in\n//  your token objects because you don't have to go modify your lexer\n//  so that it creates a new Java type.\n//\n// @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n// implementations of {@link ANTLRErrorStrategy} may provide a similar\n// feature when necessary. For example, see\n// {@link DefaultErrorStrategy//getTokenErrorDisplay}.\n//\nRecognizer.prototype.getTokenErrorDisplay = function(t) {\n    if (t===null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s===null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\nRecognizer.prototype.getErrorListenerDispatch = function() {\n    return new ProxyErrorListener(this._listeners);\n};\n\n// subclass needs to override these if there are sempreds or actions\n// that the ATN interp needs to execute\nRecognizer.prototype.sempred = function(localctx, ruleIndex, actionIndex) {\n    return true;\n};\n\nRecognizer.prototype.precpred = function(localctx , precedence) {\n    return true;\n};\n\n//Indicate that the recognizer has changed internal state that is\n//consistent with the ATN state passed in.  This way we always know\n//where we are in the ATN as the parser goes along. The rule\n//context objects form a stack that lets us see the stack of\n//invoking rules. Combine this and we have complete ATN\n//configuration information.\n\nObject.defineProperty(Recognizer.prototype, \"state\", {\n\tget : function() {\n\t\treturn this._stateNumber;\n\t},\n\tset : function(state) {\n\t\tthis._stateNumber = state;\n\t}\n});\n\n\nexports.Recognizer = Recognizer;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar getCachedPredictionContext = require('./../PredictionContext').getCachedPredictionContext;\n\nfunction ATNSimulator(atn, sharedContextCache) {\n\n    // The context cache maps all PredictionContext objects that are ==\n    //  to a single cached copy. This cache is shared across all contexts\n    //  in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n    //  to use only cached nodes/graphs in addDFAState(). We don't want to\n    //  fill this during closure() since there are lots of contexts that\n    //  pop up but are not used ever again. It also greatly slows down closure().\n    //\n    //  <p>This cache makes a huge difference in memory and a little bit in speed.\n    //  For the Java grammar on java.*, it dropped the memory requirements\n    //  at the end from 25M to 16M. We don't store any of the full context\n    //  graphs in the DFA because they are limited to local context only,\n    //  but apparently there's a lot of repetition there as well. We optimize\n    //  the config contexts before storing the config set in the DFA states\n    //  by literally rebuilding them with cached subgraphs only.</p>\n    //\n    //  <p>I tried a cache for use during closure operations, that was\n    //  whacked after each adaptivePredict(). It cost a little bit\n    //  more time I think and doesn't save on the overall footprint\n    //  so it's not worth the complexity.</p>\n    ///\n    this.atn = atn;\n    this.sharedContextCache = sharedContextCache;\n    return this;\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n\nATNSimulator.prototype.getCachedContext = function(context) {\n    if (this.sharedContextCache ===null) {\n        return context;\n    }\n    var visited = {};\n    return getCachedPredictionContext(context, this.sharedContextCache, visited);\n};\n\nexports.ATNSimulator = ATNSimulator;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n//\n// This enumeration defines the prediction modes available in ANTLR 4 along with\n// utility methods for analyzing configuration sets for conflicts and/or\n// ambiguities.\n\nvar Set = require('./../Utils').Set;\nvar Map = require('./../Utils').Map;\nvar BitSet = require('./../Utils').BitSet;\nvar AltDict = require('./../Utils').AltDict;\nvar ATN = require('./ATN').ATN;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\nvar hashStuff = require('./../Utils').hashStuff;\nvar equalArrays = require('./../Utils').equalArrays;\n\nfunction PredictionMode() {\n\treturn this;\n}\n\n//\n// The SLL(*) prediction mode. This prediction mode ignores the current\n// parser context when making predictions. This is the fastest prediction\n// mode, and provides correct results for many grammars. This prediction\n// mode is more powerful than the prediction mode provided by ANTLR 3, but\n// may result in syntax errors for grammar and input combinations which are\n// not SLL.\n//\n// <p>\n// When using this prediction mode, the parser will either return a correct\n// parse tree (i.e. the same parse tree that would be returned with the\n// {@link //LL} prediction mode), or it will report a syntax error. If a\n// syntax error is encountered when using the {@link //SLL} prediction mode,\n// it may be due to either an actual syntax error in the input or indicate\n// that the particular combination of grammar and input requires the more\n// powerful {@link //LL} prediction abilities to complete successfully.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.SLL = 0;\n//\n// The LL(*) prediction mode. This prediction mode allows the current parser\n// context to be used for resolving SLL conflicts that occur during\n// prediction. This is the fastest prediction mode that guarantees correct\n// parse results for all combinations of grammars with syntactically correct\n// inputs.\n//\n// <p>\n// When using this prediction mode, the parser will make correct decisions\n// for all syntactically-correct grammar and input combinations. However, in\n// cases where the grammar is truly ambiguous this prediction mode might not\n// report a precise answer for <em>exactly which</em> alternatives are\n// ambiguous.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL = 1;\n//\n// The LL(*) prediction mode with exact ambiguity detection. In addition to\n// the correctness guarantees provided by the {@link //LL} prediction mode,\n// this prediction mode instructs the prediction algorithm to determine the\n// complete and exact set of ambiguous alternatives for every ambiguous\n// decision encountered while parsing.\n//\n// <p>\n// This prediction mode may be used for diagnosing ambiguities during\n// grammar development. Due to the performance overhead of calculating sets\n// of ambiguous alternatives, this prediction mode should be avoided when\n// the exact results are not necessary.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL_EXACT_AMBIG_DETECTION = 2;\n\n\n//\n// Computes the SLL prediction termination condition.\n//\n// <p>\n// This method computes the SLL prediction termination condition for both of\n// the following cases.</p>\n//\n// <ul>\n// <li>The usual SLL+LL fallback upon SLL conflict</li>\n// <li>Pure SLL without LL fallback</li>\n// </ul>\n//\n// <p><strong>COMBINED SLL+LL PARSING</strong></p>\n//\n// <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n// ensured regardless of how the termination condition is computed by this\n// method. Due to the substantially higher cost of LL prediction, the\n// prediction should only fall back to LL when the additional lookahead\n// cannot lead to a unique SLL prediction.</p>\n//\n// <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n// conflicting subsets should fall back to full LL, even if the\n// configuration sets don't resolve to the same alternative (e.g.\n// {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n// configuration, SLL could continue with the hopes that more lookahead will\n// resolve via one of those non-conflicting configurations.</p>\n//\n// <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n// stops when it sees only conflicting configuration subsets. In contrast,\n// full LL keeps going when there is uncertainty.</p>\n//\n// <p><strong>HEURISTIC</strong></p>\n//\n// <p>As a heuristic, we stop prediction when we see any conflicting subset\n// unless we see a state that only has one alternative associated with it.\n// The single-alt-state thing lets prediction continue upon rules like\n// (otherwise, it would admit defeat too soon):</p>\n//\n// <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n//\n// <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n// DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n// {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n// processing this node because alternative to has another way to continue,\n// via {@code [6|2|[]]}.</p>\n//\n// <p>It also let's us continue for this rule:</p>\n//\n// <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n//\n// <p>After matching input A, we reach the stop state for rule A, state 1.\n// State 8 is the state right before B. Clearly alternatives 1 and 2\n// conflict and no amount of further lookahead will separate the two.\n// However, alternative 3 will be able to continue and so we do not stop\n// working on this state. In the previous example, we're concerned with\n// states associated with the conflicting alternatives. Here alt 3 is not\n// associated with the conflicting configs, but since we can continue\n// looking for input reasonably, don't declare the state done.</p>\n//\n// <p><strong>PURE SLL PARSING</strong></p>\n//\n// <p>To handle pure SLL parsing, all we have to do is make sure that we\n// combine stack contexts for configurations that differ only by semantic\n// predicate. From there, we can do the usual SLL termination heuristic.</p>\n//\n// <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n//\n// <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n// states because they need to create the DFA cache that works in all\n// semantic situations. In contrast, full LL evaluates predicates collected\n// during start state computation so it can ignore predicates thereafter.\n// This means that SLL termination detection can totally ignore semantic\n// predicates.</p>\n//\n// <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n// semantic predicate contexts so we might see two configurations like the\n// following.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n//\n// <p>Before testing these configurations against others, we have to merge\n// {@code x} and {@code x'} (without modifying the existing configurations).\n// For example, we test {@code (x+x')==x''} when looking for conflicts in\n// the following configurations.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n//\n// <p>If the configuration set has predicates (as indicated by\n// {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n// the configurations to strip out all of the predicates so that a standard\n// {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n//\nPredictionMode.hasSLLConflictTerminatingPrediction = function( mode, configs) {\n    // Configs in rule stop states indicate reaching the end of the decision\n    // rule (local context) or end of start rule (full context). If all\n    // configs meet this condition, then none of the configurations is able\n    // to match additional input so we terminate prediction.\n    //\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    // pure SLL mode parsing\n    if (mode === PredictionMode.SLL) {\n        // Don't bother with combining configs from different semantic\n        // contexts if we can fail over to full LL; costs more time\n        // since we'll often fail over anyway.\n        if (configs.hasSemanticContext) {\n            // dup configs, tossing out semantic predicates\n            var dup = new ATNConfigSet();\n            for(var i=0;i<configs.items.length;i++) {\n            \tvar c = configs.items[i];\n                c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                dup.add(c);\n            }\n            configs = dup;\n        }\n        // now we have combined contexts for configs with dissimilar preds\n    }\n    // pure SLL or combined SLL+LL mode parsing\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n};\n\n// Checks if any configuration in {@code configs} is in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if any configuration in {@code configs} is in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.hasConfigInRuleStopState = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (c.state instanceof RuleStopState) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n// Checks if all configurations in {@code configs} are in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if all configurations in {@code configs} are in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.allConfigsInRuleStopStates = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (!(c.state instanceof RuleStopState)) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Full LL prediction termination.\n//\n// <p>Can we stop looking ahead during ATN simulation or is there some\n// uncertainty as to which alternative we will ultimately pick, after\n// consuming more input? Even if there are partial conflicts, we might know\n// that everything is going to resolve to the same minimum alternative. That\n// means we can stop since no more lookahead will change that fact. On the\n// other hand, there might be multiple conflicts that resolve to different\n// minimums. That means we need more look ahead to decide which of those\n// alternatives we should predict.</p>\n//\n// <p>The basic idea is to split the set of configurations {@code C}, into\n// conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n// non-conflicting configurations. Two configurations conflict if they have\n// identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n// but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n// and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n//\n// <p>Reduce these configuration subsets to the set of possible alternatives.\n// You can compute the alternative subsets in one pass as follows:</p>\n//\n// <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n// {@code C} holding {@code s} and {@code ctx} fixed.</p>\n//\n// <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n//\n// <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n//\n// <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n// {@code s} and {@code ctx}.</p>\n//\n// <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n// the union of these alternative subsets is a singleton, then no amount of\n// more lookahead will help us. We will always pick that alternative. If,\n// however, there is more than one alternative, then we are uncertain which\n// alternative to predict and must continue looking for resolution. We may\n// or may not discover an ambiguity in the future, even if there are no\n// conflicting subsets this round.</p>\n//\n// <p>The biggest sin is to terminate early because it means we've made a\n// decision but were uncertain as to the eventual outcome. We haven't used\n// enough lookahead. On the other hand, announcing a conflict too late is no\n// big deal; you will still have the conflict. It's just inefficient. It\n// might even look until the end of file.</p>\n//\n// <p>No special consideration for semantic predicates is required because\n// predicates are evaluated on-the-fly for full LL prediction, ensuring that\n// no configuration contains a semantic context during the termination\n// check.</p>\n//\n// <p><strong>CONFLICTING CONFIGS</strong></p>\n//\n// <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n// when {@code i!=j} but {@code x=x'}. Because we merge all\n// {@code (s, i, _)} configurations together, that means that there are at\n// most {@code n} configurations associated with state {@code s} for\n// {@code n} possible alternatives in the decision. The merged stacks\n// complicate the comparison of configuration contexts {@code x} and\n// {@code x'}. Sam checks to see if one is a subset of the other by calling\n// merge and checking to see if the merged result is either {@code x} or\n// {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n// is the superset, then {@code i} is the only possible prediction since the\n// others resolve to {@code min(i)} as well. However, if {@code x} is\n// associated with {@code j>i} then at least one stack configuration for\n// {@code j} is not in conflict with alternative {@code i}. The algorithm\n// should keep going, looking for more lookahead due to the uncertainty.</p>\n//\n// <p>For simplicity, I'm doing a equality check between {@code x} and\n// {@code x'} that lets the algorithm continue to consume lookahead longer\n// than necessary. The reason I like the equality is of course the\n// simplicity but also because that is the test you need to detect the\n// alternatives that are actually in conflict.</p>\n//\n// <p><strong>CONTINUE/STOP RULE</strong></p>\n//\n// <p>Continue if union of resolved alternative sets from non-conflicting and\n// conflicting alternative subsets has more than one alternative. We are\n// uncertain about which alternative to predict.</p>\n//\n// <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n// alternatives are still in the running for the amount of input we've\n// consumed at this point. The conflicting sets let us to strip away\n// configurations that won't lead to more states because we resolve\n// conflicts to the configuration with a minimum alternate for the\n// conflicting set.</p>\n//\n// <p><strong>CASES</strong></p>\n//\n// <ul>\n//\n// <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n//\n// <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n// {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n// {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1,3}} =&gt; continue\n// </li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n// {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1}} =&gt; stop and predict 1</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n// ambiguity {@code {1,2}}</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n// {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {2}} = {@code {1,2}} =&gt; continue</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n// {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {3}} = {@code {1,3}} =&gt; continue</li>\n//\n// </ul>\n//\n// <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n//\n// <p>If all states report the same conflicting set of alternatives, then we\n// know we have the exact ambiguity set.</p>\n//\n// <p><code>|A_<em>i</em>|&gt;1</code> and\n// <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n//\n// <p>In other words, we continue examining lookahead until all {@code A_i}\n// have more than one alternative and all {@code A_i} are the same. If\n// {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n// because the resolved set is {@code {1}}. To determine what the real\n// ambiguity is, we have to know whether the ambiguity is between one and\n// two or one and three so we keep going. We can only stop prediction when\n// we need exact ambiguity detection when the sets look like\n// {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n//\nPredictionMode.resolvesToJustOneViableAlt = function(altsets) {\n    return PredictionMode.getSingleViableAlt(altsets);\n};\n\n//\n// Determines if every alternative subset in {@code altsets} contains more\n// than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every {@link BitSet} in {@code altsets} has\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.allSubsetsConflict = function(altsets) {\n    return ! PredictionMode.hasNonConflictingAltSet(altsets);\n};\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// exactly one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n//\nPredictionMode.hasNonConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length===1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// more than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.hasConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length>1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if every alternative subset in {@code altsets} is equivalent.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every member of {@code altsets} is equal to the\n// others, otherwise {@code false}\n//\nPredictionMode.allSubsetsEqual = function(altsets) {\n    var first = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (first === null) {\n            first = alts;\n        } else if (alts!==first) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Returns the unique alternative predicted by all alternative subsets in\n// {@code altsets}. If no such alternative exists, this method returns\n// {@link ATN//INVALID_ALT_NUMBER}.\n//\n// @param altsets a collection of alternative subsets\n//\nPredictionMode.getUniqueAlt = function(altsets) {\n    var all = PredictionMode.getAlts(altsets);\n    if (all.length===1) {\n        return all.minValue();\n    } else {\n        return ATN.INVALID_ALT_NUMBER;\n    }\n};\n\n// Gets the complete set of represented alternatives for a collection of\n// alternative subsets. This method returns the union of each {@link BitSet}\n// in {@code altsets}.\n//\n// @param altsets a collection of alternative subsets\n// @return the set of represented alternatives in {@code altsets}\n//\nPredictionMode.getAlts = function(altsets) {\n    var all = new BitSet();\n    altsets.map( function(alts) { all.or(alts); });\n    return all;\n};\n\n//\n// This function gets the conflicting alt subsets from a configuration set.\n// For each configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n\nPredictionMode.getConflictingAltSubsets = function(configs) {\n    var configToAlts = new Map();\n    configToAlts.hashFunction = function(cfg) { hashStuff(cfg.state.stateNumber, cfg.context); };\n    configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber==c2.state.stateNumber && c1.context.equals(c2.context);}\n    configs.items.map(function(cfg) {\n        var alts = configToAlts.get(cfg);\n        if (alts === null) {\n            alts = new BitSet();\n            configToAlts.put(cfg, alts);\n        }\n        alts.add(cfg.alt);\n\t});\n    return configToAlts.getValues();\n};\n\n//\n// Get a map from state to alt subset from a configuration set. For each\n// configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n// </pre>\n//\nPredictionMode.getStateToAltMap = function(configs) {\n    var m = new AltDict();\n    configs.items.map(function(c) {\n        var alts = m.get(c.state);\n        if (alts === null) {\n            alts = new BitSet();\n            m.put(c.state, alts);\n        }\n        alts.add(c.alt);\n    });\n    return m;\n};\n\nPredictionMode.hasStateAssociatedWithOneAlt = function(configs) {\n    var values = PredictionMode.getStateToAltMap(configs).values();\n    for(var i=0;i<values.length;i++) {\n        if (values[i].length===1) {\n            return true;\n        }\n    }\n    return false;\n};\n\nPredictionMode.getSingleViableAlt = function(altsets) {\n    var result = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        var minAlt = alts.minValue();\n        if(result===null) {\n            result = minAlt;\n        } else if(result!==minAlt) { // more than 1 viable alt\n            return ATN.INVALID_ALT_NUMBER;\n        }\n\t}\n    return result;\n};\n\nexports.PredictionMode = PredictionMode;\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (!String.fromCodePoint) {\n\t(function() {\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\tvar floor = Math.floor;\n\t\tvar fromCodePoint = function(_) {\n\t\t\tvar MAX_SIZE = 0x4000;\n\t\t\tvar codeUnits = [];\n\t\t\tvar highSurrogate;\n\t\t\tvar lowSurrogate;\n\t\t\tvar index = -1;\n\t\t\tvar length = arguments.length;\n\t\t\tif (!length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvar codePoint = Number(arguments[index]);\n\t\t\t\tif (\n\t\t\t\t\t!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t\t\t\t\tcodePoint < 0 || // not a valid Unicode code point\n\t\t\t\t\tcodePoint > 0x10FFFF || // not a valid Unicode code point\n\t\t\t\t\tfloor(codePoint) != codePoint // not an integer\n\t\t\t\t) {\n\t\t\t\t\tthrow RangeError('Invalid code point: ' + codePoint);\n\t\t\t\t}\n\t\t\t\tif (codePoint <= 0xFFFF) { // BMP code point\n\t\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t\t} else { // Astral code point; split in surrogate halves\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\t\thighSurrogate = (codePoint >> 10) + 0xD800;\n\t\t\t\t\tlowSurrogate = (codePoint % 0x400) + 0xDC00;\n\t\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t\t}\n\t\t\t\tif (index + 1 == length || codeUnits.length > MAX_SIZE) {\n\t\t\t\t\tresult += stringFromCharCode.apply(null, codeUnits);\n\t\t\t\t\tcodeUnits.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String, 'fromCodePoint', {\n\t\t\t\t'value': fromCodePoint,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.fromCodePoint = fromCodePoint;\n\t\t}\n\t}());\n}\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./../Token').Token;\nvar Errors = require('./Errors');\nvar NoViableAltException = Errors.NoViableAltException;\nvar InputMismatchException = Errors.InputMismatchException;\nvar FailedPredicateException = Errors.FailedPredicateException;\nvar ParseCancellationException = Errors.ParseCancellationException;\nvar ATNState = require('./../atn/ATNState').ATNState;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ErrorStrategy() {\n\n}\n\nErrorStrategy.prototype.reset = function(recognizer){\n};\n\nErrorStrategy.prototype.recoverInline = function(recognizer){\n};\n\nErrorStrategy.prototype.recover = function(recognizer, e){\n};\n\nErrorStrategy.prototype.sync = function(recognizer){\n};\n\nErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer){\n};\n\nErrorStrategy.prototype.reportError = function(recognizer){\n};\n\n\n\n// This is the default implementation of {@link ANTLRErrorStrategy} used for\n// error reporting and recovery in ANTLR parsers.\n//\nfunction DefaultErrorStrategy() {\n\tErrorStrategy.call(this);\n    // Indicates whether the error strategy is currently \"recovering from an\n    // error\". This is used to suppress reporting multiple error messages while\n    // attempting to recover from a detected syntax error.\n    //\n    // @see //inErrorRecoveryMode\n    //\n    this.errorRecoveryMode = false;\n\n    // The index into the input stream where the last error occurred.\n    // This is used to prevent infinite loops where an error is found\n    // but no token is consumed during recovery...another error is found,\n    // ad nauseum. This is a failsafe mechanism to guarantee that at least\n    // one token/tree node is consumed for two errors.\n    //\n    this.lastErrorIndex = -1;\n    this.lastErrorStates = null;\n    return this;\n}\n\nDefaultErrorStrategy.prototype = Object.create(ErrorStrategy.prototype);\nDefaultErrorStrategy.prototype.constructor = DefaultErrorStrategy;\n\n// <p>The default implementation simply calls {@link //endErrorCondition} to\n// ensure that the handler is not in error recovery mode.</p>\nDefaultErrorStrategy.prototype.reset = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// This method is called to enter error recovery mode when a recognition\n// exception is reported.\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.beginErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = true;\n};\n\nDefaultErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer) {\n    return this.errorRecoveryMode;\n};\n\n//\n// This method is called to leave error recovery mode after recovering from\n// a recognition exception.\n//\n// @param recognizer\n//\nDefaultErrorStrategy.prototype.endErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = false;\n    this.lastErrorStates = null;\n    this.lastErrorIndex = -1;\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n//\nDefaultErrorStrategy.prototype.reportMatch = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation returns immediately if the handler is already\n// in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n// and dispatches the reporting task based on the runtime type of {@code e}\n// according to the following table.</p>\n//\n// <ul>\n// <li>{@link NoViableAltException}: Dispatches the call to\n// {@link //reportNoViableAlternative}</li>\n// <li>{@link InputMismatchException}: Dispatches the call to\n// {@link //reportInputMismatch}</li>\n// <li>{@link FailedPredicateException}: Dispatches the call to\n// {@link //reportFailedPredicate}</li>\n// <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n// the exception</li>\n// </ul>\n//\nDefaultErrorStrategy.prototype.reportError = function(recognizer, e) {\n   // if we've already reported an error and have not matched a token\n   // yet successfully, don't report any errors.\n    if(this.inErrorRecoveryMode(recognizer)) {\n        return; // don't report spurious errors\n    }\n    this.beginErrorCondition(recognizer);\n    if ( e instanceof NoViableAltException ) {\n        this.reportNoViableAlternative(recognizer, e);\n    } else if ( e instanceof InputMismatchException ) {\n        this.reportInputMismatch(recognizer, e);\n    } else if ( e instanceof FailedPredicateException ) {\n        this.reportFailedPredicate(recognizer, e);\n    } else {\n        console.log(\"unknown recognition error type: \" + e.constructor.name);\n        console.log(e.stack);\n        recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n    }\n};\n//\n// {@inheritDoc}\n//\n// <p>The default implementation resynchronizes the parser by consuming tokens\n// until we find one in the resynchronization set--loosely the set of tokens\n// that can follow the current rule.</p>\n//\nDefaultErrorStrategy.prototype.recover = function(recognizer, e) {\n    if (this.lastErrorIndex===recognizer.getInputStream().index &&\n        this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n\t\t// uh oh, another error at same token index and previously-visited\n\t\t// state in ATN; must be a case where LT(1) is in the recovery\n\t\t// token set so nothing got consumed. Consume a single token\n\t\t// at least to prevent an infinite loop; this is a failsafe.\n\t\trecognizer.consume();\n    }\n    this.lastErrorIndex = recognizer._input.index;\n    if (this.lastErrorStates === null) {\n        this.lastErrorStates = [];\n    }\n    this.lastErrorStates.push(recognizer.state);\n    var followSet = this.getErrorRecoverySet(recognizer);\n    this.consumeUntil(recognizer, followSet);\n};\n\n// The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n// that the current lookahead symbol is consistent with what were expecting\n// at this point in the ATN. You can call this anytime but ANTLR only\n// generates code to check before subrules/loops and each iteration.\n//\n// <p>Implements Jim Idle's magic sync mechanism in closures and optional\n// subrules. E.g.,</p>\n//\n// <pre>\n// a : sync ( stuff sync )* ;\n// sync : {consume to what can follow sync} ;\n// </pre>\n//\n// At the start of a sub rule upon error, {@link //sync} performs single\n// token deletion, if possible. If it can't do that, it bails on the current\n// rule and uses the default error recovery, which consumes until the\n// resynchronization set of the current rule.\n//\n// <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n// with an empty alternative), then the expected set includes what follows\n// the subrule.</p>\n//\n// <p>During loop iteration, it consumes until it sees a token that can start a\n// sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n// stay in the loop as long as possible.</p>\n//\n// <p><strong>ORIGINS</strong></p>\n//\n// <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n// A single mismatch token or missing token would force the parser to bail\n// out of the entire rules surrounding the loop. So, for rule</p>\n//\n// <pre>\n// classDef : 'class' ID '{' member* '}'\n// </pre>\n//\n// input with an extra token between members would force the parser to\n// consume until it found the next class definition rather than the next\n// member definition of the current class.\n//\n// <p>This functionality cost a little bit of effort because the parser has to\n// compare token set at the start of the loop and at each iteration. If for\n// some reason speed is suffering for you, you can turn off this\n// functionality by simply overriding this method as a blank { }.</p>\n//\nDefaultErrorStrategy.prototype.sync = function(recognizer) {\n    // If already recovering, don't try to sync\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var la = recognizer.getTokenStream().LA(1);\n    // try cheaper subset first; might get lucky. seems to shave a wee bit off\n    var nextTokens = recognizer.atn.nextTokens(s);\n    if (nextTokens.contains(Token.EPSILON) || nextTokens.contains(la)) {\n        return;\n    }\n    switch (s.stateType) {\n    case ATNState.BLOCK_START:\n    case ATNState.STAR_BLOCK_START:\n    case ATNState.PLUS_BLOCK_START:\n    case ATNState.STAR_LOOP_ENTRY:\n       // report error and recover if possible\n        if( this.singleTokenDeletion(recognizer) !== null) {\n            return;\n        } else {\n            throw new InputMismatchException(recognizer);\n        }\n        break;\n    case ATNState.PLUS_LOOP_BACK:\n    case ATNState.STAR_LOOP_BACK:\n        this.reportUnwantedToken(recognizer);\n        var expecting = new IntervalSet();\n        expecting.addSet(recognizer.getExpectedTokens());\n        var whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n        this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n        break;\n    default:\n        // do nothing if we can't identify the exact kind of ATN state\n    }\n};\n\n// This is called by {@link //reportError} when the exception is a\n// {@link NoViableAltException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportNoViableAlternative = function(recognizer, e) {\n    var tokens = recognizer.getTokenStream();\n    var input;\n    if(tokens !== null) {\n        if (e.startToken.type===Token.EOF) {\n            input = \"<EOF>\";\n        } else {\n            input = tokens.getText(new Interval(e.startToken, e.offendingToken));\n        }\n    } else {\n        input = \"<unknown input>\";\n    }\n    var msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is an\n// {@link InputMismatchException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportInputMismatch = function(recognizer, e) {\n    var msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n          \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is a\n// {@link FailedPredicateException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportFailedPredicate = function(recognizer, e) {\n    var ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex];\n    var msg = \"rule \" + ruleName + \" \" + e.message;\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n// This method is called to report a syntax error which requires the removal\n// of a token from the input stream. At the time this method is called, the\n// erroneous symbol is current {@code LT(1)} symbol and has not yet been\n// removed from the input stream. When this method returns,\n// {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenDeletion} identifies\n// single-token deletion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportUnwantedToken = function(recognizer) {\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var tokenName = this.getTokenErrorDisplay(t);\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"extraneous input \" + tokenName + \" expecting \" +\n        expecting.toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n// This method is called to report a syntax error which requires the\n// insertion of a missing token into the input stream. At the time this\n// method is called, the missing token has not yet been inserted. When this\n// method returns, {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenInsertion} identifies\n// single-token insertion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportMissingToken = function(recognizer) {\n    if ( this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n          \" at \" + this.getTokenErrorDisplay(t);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n\n// <p>The default implementation attempts to recover from the mismatched input\n// by using single token insertion and deletion as described below. If the\n// recovery attempt fails, this method throws an\n// {@link InputMismatchException}.</p>\n//\n// <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n//\n// <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n// right token, however, then assume {@code LA(1)} is some extra spurious\n// token and delete it. Then consume and return the next token (which was\n// the {@code LA(2)} token) as the successful result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenDeletion}.</p>\n//\n// <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n//\n// <p>If current token (at {@code LA(1)}) is consistent with what could come\n// after the expected {@code LA(1)} token, then assume the token is missing\n// and use the parser's {@link TokenFactory} to create it on the fly. The\n// \"insertion\" is performed by returning the created token as the successful\n// result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenInsertion}.</p>\n//\n// <p><strong>EXAMPLE</strong></p>\n//\n// <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n// the parser returns from the nested call to {@code expr}, it will have\n// call chain:</p>\n//\n// <pre>\n// stat &rarr; expr &rarr; atom\n// </pre>\n//\n// and it will be trying to match the {@code ')'} at this point in the\n// derivation:\n//\n// <pre>\n// =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n// ^\n// </pre>\n//\n// The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n// call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n// is in the set of tokens that can follow the {@code ')'} token reference\n// in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n//\nDefaultErrorStrategy.prototype.recoverInline = function(recognizer) {\n    // SINGLE TOKEN DELETION\n    var matchedSymbol = this.singleTokenDeletion(recognizer);\n    if (matchedSymbol !== null) {\n        // we have deleted the extra token.\n        // now, move past ttype token as if all were ok\n        recognizer.consume();\n        return matchedSymbol;\n    }\n    // SINGLE TOKEN INSERTION\n    if (this.singleTokenInsertion(recognizer)) {\n        return this.getMissingSymbol(recognizer);\n    }\n    // even that didn't work; must throw the exception\n    throw new InputMismatchException(recognizer);\n};\n\n//\n// This method implements the single-token insertion inline error recovery\n// strategy. It is called by {@link //recoverInline} if the single-token\n// deletion strategy fails to recover from the mismatched input. If this\n// method returns {@code true}, {@code recognizer} will be in error recovery\n// mode.\n//\n// <p>This method determines whether or not single-token insertion is viable by\n// checking if the {@code LA(1)} input symbol could be successfully matched\n// if it were instead the {@code LA(2)} symbol. If this method returns\n// {@code true}, the caller is responsible for creating and inserting a\n// token with the correct type to produce this behavior.</p>\n//\n// @param recognizer the parser instance\n// @return {@code true} if single-token insertion is a viable recovery\n// strategy for the current mismatched input, otherwise {@code false}\n//\nDefaultErrorStrategy.prototype.singleTokenInsertion = function(recognizer) {\n    var currentSymbolType = recognizer.getTokenStream().LA(1);\n    // if current token is consistent with what could come after current\n    // ATN state, then we know we're missing a token; error recovery\n    // is free to conjure up and insert the missing token\n    var atn = recognizer._interp.atn;\n    var currentState = atn.states[recognizer.state];\n    var next = currentState.transitions[0].target;\n    var expectingAtLL2 = atn.nextTokens(next, recognizer._ctx);\n    if (expectingAtLL2.contains(currentSymbolType) ){\n        this.reportMissingToken(recognizer);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// This method implements the single-token deletion inline error recovery\n// strategy. It is called by {@link //recoverInline} to attempt to recover\n// from mismatched input. If this method returns null, the parser and error\n// handler state will not have changed. If this method returns non-null,\n// {@code recognizer} will <em>not</em> be in error recovery mode since the\n// returned token was a successful match.\n//\n// <p>If the single-token deletion is successful, this method calls\n// {@link //reportUnwantedToken} to report the error, followed by\n// {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n// before returning {@link //reportMatch} is called to signal a successful\n// match.</p>\n//\n// @param recognizer the parser instance\n// @return the successfully matched {@link Token} instance if single-token\n// deletion successfully recovers from the mismatched input, otherwise\n// {@code null}\n//\nDefaultErrorStrategy.prototype.singleTokenDeletion = function(recognizer) {\n    var nextTokenType = recognizer.getTokenStream().LA(2);\n    var expecting = this.getExpectedTokens(recognizer);\n    if (expecting.contains(nextTokenType)) {\n        this.reportUnwantedToken(recognizer);\n        // print(\"recoverFromMismatchedToken deleting \" \\\n        // + str(recognizer.getTokenStream().LT(1)) \\\n        // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n        // + \" is what we want\", file=sys.stderr)\n        recognizer.consume(); // simply delete extra token\n        // we want to return the token we're actually matching\n        var matchedSymbol = recognizer.getCurrentToken();\n        this.reportMatch(recognizer); // we know current token is correct\n        return matchedSymbol;\n    } else {\n        return null;\n    }\n};\n\n// Conjure up a missing token during error recovery.\n//\n// The recognizer attempts to recover from single missing\n// symbols. But, actions might refer to that missing symbol.\n// For example, x=ID {f($x);}. The action clearly assumes\n// that there has been an identifier matched previously and that\n// $x points at that token. If that token is missing, but\n// the next token in the stream is what we want we assume that\n// this token is missing and we keep going. Because we\n// have to return some token to replace the missing token,\n// we have to conjure one up. This method gives the user control\n// over the tokens returned for missing tokens. Mostly,\n// you will want to create something special for identifier\n// tokens. For literals such as '{' and ',', the default\n// action in the parser or tree parser works. It simply creates\n// a CommonToken of the appropriate type. The text will be the token.\n// If you change what tokens must be created by the lexer,\n// override this method to create the appropriate tokens.\n//\nDefaultErrorStrategy.prototype.getMissingSymbol = function(recognizer) {\n    var currentSymbol = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var expectedTokenType = expecting.first(); // get any element\n    var tokenText;\n    if (expectedTokenType===Token.EOF) {\n        tokenText = \"<missing EOF>\";\n    } else {\n        tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n    }\n    var current = currentSymbol;\n    var lookback = recognizer.getTokenStream().LT(-1);\n    if (current.type===Token.EOF && lookback !== null) {\n        current = lookback;\n    }\n    return recognizer.getTokenFactory().create(current.source,\n        expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n        -1, -1, current.line, current.column);\n};\n\nDefaultErrorStrategy.prototype.getExpectedTokens = function(recognizer) {\n    return recognizer.getExpectedTokens();\n};\n\n// How should a token be displayed in an error message? The default\n// is to display just the text, but during development you might\n// want to have a lot of information spit out. Override in that case\n// to use t.toString() (which, for CommonToken, dumps everything about\n// the token). This is better than forcing you to override a method in\n// your token objects because you don't have to go modify your lexer\n// so that it creates a new Java type.\n//\nDefaultErrorStrategy.prototype.getTokenErrorDisplay = function(t) {\n    if (t === null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s === null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    return this.escapeWSAndQuote(s);\n};\n\nDefaultErrorStrategy.prototype.escapeWSAndQuote = function(s) {\n    s = s.replace(/\\n/g,\"\\\\n\");\n    s = s.replace(/\\r/g,\"\\\\r\");\n    s = s.replace(/\\t/g,\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\n// Compute the error recovery set for the current rule. During\n// rule invocation, the parser pushes the set of tokens that can\n// follow that rule reference on the stack; this amounts to\n// computing FIRST of what follows the rule reference in the\n// enclosing rule. See LinearApproximator.FIRST().\n// This local follow set only includes tokens\n// from within the rule; i.e., the FIRST computation done by\n// ANTLR stops at the end of a rule.\n//\n// EXAMPLE\n//\n// When you find a \"no viable alt exception\", the input is not\n// consistent with any of the alternatives for rule r. The best\n// thing to do is to consume tokens until you see something that\n// can legally follow a call to r//or* any rule that called r.\n// You don't want the exact set of viable next tokens because the\n// input might just be missing a token--you might consume the\n// rest of the input looking for one of the missing tokens.\n//\n// Consider grammar:\n//\n// a : '[' b ']'\n// | '(' b ')'\n// ;\n// b : c '^' INT ;\n// c : ID\n// | INT\n// ;\n//\n// At each rule invocation, the set of tokens that could follow\n// that rule is pushed on a stack. Here are the various\n// context-sensitive follow sets:\n//\n// FOLLOW(b1_in_a) = FIRST(']') = ']'\n// FOLLOW(b2_in_a) = FIRST(')') = ')'\n// FOLLOW(c_in_b) = FIRST('^') = '^'\n//\n// Upon erroneous input \"[]\", the call chain is\n//\n// a -> b -> c\n//\n// and, hence, the follow context stack is:\n//\n// depth follow set start of rule execution\n// 0 <EOF> a (from main())\n// 1 ']' b\n// 2 '^' c\n//\n// Notice that ')' is not included, because b would have to have\n// been called from a different context in rule a for ')' to be\n// included.\n//\n// For error recovery, we cannot consider FOLLOW(c)\n// (context-sensitive or otherwise). We need the combined set of\n// all context-sensitive FOLLOW sets--the set of all tokens that\n// could follow any reference in the call chain. We need to\n// resync to one of those tokens. Note that FOLLOW(c)='^' and if\n// we resync'd to that token, we'd consume until EOF. We need to\n// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n// In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n// not consume anything. After printing an error, rule c would\n// return normally. Rule b would not find the required '^' though.\n// At this point, it gets a mismatched token error and throws an\n// exception (since LA(1) is not in the viable following token\n// set). The rule exception handler tries to recover, but finds\n// the same recovery set and doesn't consume anything. Rule b\n// exits normally returning to rule a. Now it finds the ']' (and\n// with the successful match exits errorRecovery mode).\n//\n// So, you can see that the parser walks up the call chain looking\n// for the token that was a member of the recovery set.\n//\n// Errors are not generated in errorRecovery mode.\n//\n// ANTLR's error recovery mechanism is based upon original ideas:\n//\n// \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n//\n// and\n//\n// \"A note on error recovery in recursive descent parsers\":\n// http://portal.acm.org/citation.cfm?id=947902.947905\n//\n// Later, Josef Grosch had some good ideas:\n//\n// \"Efficient and Comfortable Error Recovery in Recursive Descent\n// Parsers\":\n// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n//\n// Like Grosch I implement context-sensitive FOLLOW sets that are combined\n// at run-time upon error to avoid overhead during parsing.\n//\nDefaultErrorStrategy.prototype.getErrorRecoverySet = function(recognizer) {\n    var atn = recognizer._interp.atn;\n    var ctx = recognizer._ctx;\n    var recoverSet = new IntervalSet();\n    while (ctx !== null && ctx.invokingState>=0) {\n        // compute what follows who invoked us\n        var invokingState = atn.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        var follow = atn.nextTokens(rt.followState);\n        recoverSet.addSet(follow);\n        ctx = ctx.parentCtx;\n    }\n    recoverSet.removeOne(Token.EPSILON);\n    return recoverSet;\n};\n\n// Consume tokens until one matches the given token set.//\nDefaultErrorStrategy.prototype.consumeUntil = function(recognizer, set) {\n    var ttype = recognizer.getTokenStream().LA(1);\n    while( ttype !== Token.EOF && !set.contains(ttype)) {\n        recognizer.consume();\n        ttype = recognizer.getTokenStream().LA(1);\n    }\n};\n\n//\n// This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n// by immediately canceling the parse operation with a\n// {@link ParseCancellationException}. The implementation ensures that the\n// {@link ParserRuleContext//exception} field is set for all parse tree nodes\n// that were not completed prior to encountering the error.\n//\n// <p>\n// This error strategy is useful in the following scenarios.</p>\n//\n// <ul>\n// <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n// stage of two-stage parsing to immediately terminate if an error is\n// encountered, and immediately fall back to the second stage. In addition to\n// avoiding wasted work by attempting to recover from errors here, the empty\n// implementation of {@link BailErrorStrategy//sync} improves the performance of\n// the first stage.</li>\n// <li><strong>Silent validation:</strong> When syntax errors are not being\n// reported or logged, and the parse result is simply ignored if errors occur,\n// the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n// when the result will be ignored either way.</li>\n// </ul>\n//\n// <p>\n// {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n//\n// @see Parser//setErrorHandler(ANTLRErrorStrategy)\n//\nfunction BailErrorStrategy() {\n\tDefaultErrorStrategy.call(this);\n\treturn this;\n}\n\nBailErrorStrategy.prototype = Object.create(DefaultErrorStrategy.prototype);\nBailErrorStrategy.prototype.constructor = BailErrorStrategy;\n\n// Instead of recovering from exception {@code e}, re-throw it wrapped\n// in a {@link ParseCancellationException} so it is not caught by the\n// rule function catches. Use {@link Exception//getCause()} to get the\n// original {@link RecognitionException}.\n//\nBailErrorStrategy.prototype.recover = function(recognizer, e) {\n    var context = recognizer._ctx;\n    while (context !== null) {\n        context.exception = e;\n        context = context.parentCtx;\n    }\n    throw new ParseCancellationException(e);\n};\n\n// Make sure we don't attempt to recover inline; if the parser\n// successfully recovers, it won't throw an exception.\n//\nBailErrorStrategy.prototype.recoverInline = function(recognizer) {\n    this.recover(recognizer, new InputMismatchException(recognizer));\n};\n\n// Make sure we don't attempt to recover from problems in subrules.//\nBailErrorStrategy.prototype.sync = function(recognizer) {\n    // pass\n};\n\nexports.BailErrorStrategy = BailErrorStrategy;\nexports.DefaultErrorStrategy = DefaultErrorStrategy;","const antlr4 = require('./antlr4/index')\nconst { SolidityLexer } = require('./lib/SolidityLexer')\nconst { SolidityParser } = require('./lib/SolidityParser')\nconst ASTBuilder = require('./ASTBuilder')\nconst ErrorListener = require('./ErrorListener')\nconst { buildTokenList } = require('./tokens')\n\nfunction ParserError(args) {\n  const { message, line, column } = args.errors[0]\n  this.message = `${message} (${line}:${column})`\n  this.errors = args.errors\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor)\n  } else {\n    this.stack = new Error().stack\n  }\n}\n\nParserError.prototype = Object.create(Error.prototype)\nParserError.prototype.constructor = ParserError\nParserError.prototype.name = 'ParserError'\n\nfunction tokenize(input, options) {\n  options = options || {}\n\n  const chars = new antlr4.InputStream(input)\n  const lexer = new SolidityLexer(chars)\n  const tokens = new antlr4.CommonTokenStream(lexer)\n\n  return buildTokenList(tokens.tokenSource.getAllTokens(), options)\n}\n\nfunction parse(input, options) {\n  options = options || {}\n\n  const chars = new antlr4.InputStream(input)\n\n  const listener = new ErrorListener()\n\n  const lexer = new SolidityLexer(chars)\n  lexer.removeErrorListeners()\n  lexer.addErrorListener(listener)\n\n  const tokens = new antlr4.CommonTokenStream(lexer)\n\n  const parser = new SolidityParser(tokens)\n\n  parser.removeErrorListeners()\n  parser.addErrorListener(listener)\n  parser.buildParseTrees = true\n\n  const tree = parser.sourceUnit()\n\n  let tokenList\n  if (options.tokens) {\n    const tokenSource = tokens.tokenSource\n    tokenSource.reset()\n\n    tokenList = buildTokenList(tokenSource.getAllTokens(), options)\n  }\n\n  if (!options.tolerant && listener.hasErrors()) {\n    throw new ParserError({ errors: listener.getErrors() })\n  }\n\n  const visitor = new ASTBuilder(options)\n  const ast = visitor.visit(tree)\n\n  if (options.tolerant && listener.hasErrors()) {\n    ast.errors = listener.getErrors()\n  }\n  if (options.tokens) {\n    ast.tokens = tokenList\n  }\n\n  return ast\n}\n\nfunction _isASTNode(node) {\n  return (\n    !!node && typeof node === 'object'\n    && Object.prototype.hasOwnProperty.call(node, 'type')\n  )\n}\n\nfunction visit(node, visitor) {\n  if (Array.isArray(node)) {\n    node.forEach(child => visit(child, visitor))\n  }\n\n  if (!_isASTNode(node)) return\n\n  let cont = true\n\n  if (visitor[node.type]) {\n    cont = visitor[node.type](node)\n  }\n\n  if (cont === false) return\n\n  for (const prop in node) {\n    if (Object.prototype.hasOwnProperty.call(node, prop)) {\n      visit(node[prop], visitor)\n    }\n  }\n\n  const selector = node.type + ':exit'\n  if (visitor[selector]) {\n    visitor[selector](node)\n  }\n}\n\nexports.tokenize = tokenize\nexports.parse = parse\nexports.visit = visit\nexports.ParserError = ParserError\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.ATN = require('./ATN').ATN;\nexports.ATNDeserializer = require('./ATNDeserializer').ATNDeserializer;\nexports.LexerATNSimulator = require('./LexerATNSimulator').LexerATNSimulator;\nexports.ParserATNSimulator = require('./ParserATNSimulator').ParserATNSimulator;\nexports.PredictionMode = require('./PredictionMode').PredictionMode;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar Set = require('./Utils').Set;\nvar BitSet = require('./Utils').BitSet;\nvar Token = require('./Token').Token;\nvar ATNConfig = require('./atn/ATNConfig').ATNConfig;\nvar Interval = require('./IntervalSet').Interval;\nvar IntervalSet = require('./IntervalSet').IntervalSet;\nvar RuleStopState = require('./atn/ATNState').RuleStopState;\nvar RuleTransition = require('./atn/Transition').RuleTransition;\nvar NotSetTransition = require('./atn/Transition').NotSetTransition;\nvar WildcardTransition = require('./atn/Transition').WildcardTransition;\nvar AbstractPredicateTransition = require('./atn/Transition').AbstractPredicateTransition;\n\nvar pc = require('./PredictionContext');\nvar predictionContextFromRuleContext = pc.predictionContextFromRuleContext;\nvar PredictionContext = pc.PredictionContext;\nvar SingletonPredictionContext = pc.SingletonPredictionContext;\n\nfunction LL1Analyzer (atn) {\n    this.atn = atn;\n}\n\n//* Special value added to the lookahead sets to indicate that we hit\n//  a predicate during analysis if {@code seeThruPreds==false}.\n///\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n\n\n//*\n// Calculates the SLL(1) expected lookahead set for each outgoing transition\n// of an {@link ATNState}. The returned array has one element for each\n// outgoing transition in {@code s}. If the closure from transition\n// <em>i</em> leads to a semantic predicate before matching a symbol, the\n// element at index <em>i</em> of the result will be {@code null}.\n//\n// @param s the ATN state\n// @return the expected symbols for each outgoing transition of {@code s}.\n///\nLL1Analyzer.prototype.getDecisionLookahead = function(s) {\n    if (s === null) {\n        return null;\n    }\n    var count = s.transitions.length;\n    var look = [];\n    for(var alt=0; alt< count; alt++) {\n        look[alt] = new IntervalSet();\n        var lookBusy = new Set();\n        var seeThruPreds = false; // fail to get lookahead upon pred\n        this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n              look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n        // Wipe out lookahead for this alternative if we found nothing\n        // or we had a predicate when we !seeThruPreds\n        if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n            look[alt] = null;\n        }\n    }\n    return look;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and the end of the rule containing\n// {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n// If {@code ctx} is not {@code null} and the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx the complete parser context, or {@code null} if the context\n// should be ignored\n//\n// @return The set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n///\nLL1Analyzer.prototype.LOOK = function(s, stopState, ctx) {\n    var r = new IntervalSet();\n    var seeThruPreds = true; // ignore preds; get all lookahead\n\tctx = ctx || null;\n    var lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n    this._LOOK(s, stopState, lookContext, r, new Set(), new BitSet(), seeThruPreds, true);\n    return r;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n// rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n// the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n// {@code true} and {@code stopState} or the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state.\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx The outer context, or {@code null} if the outer context should\n// not be used.\n// @param look The result lookahead set.\n// @param lookBusy A set used for preventing epsilon closures in the ATN\n// from causing a stack overflow. Outside code should pass\n// {@code new Set<ATNConfig>} for this argument.\n// @param calledRuleStack A set used for preventing left recursion in the\n// ATN from causing a stack overflow. Outside code should pass\n// {@code new BitSet()} for this argument.\n// @param seeThruPreds {@code true} to true semantic predicates as\n// implicitly {@code true} and \"see through them\", otherwise {@code false}\n// to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n// result if one is encountered.\n// @param addEOF Add {@link Token//EOF} to the result if the end of the\n// outermost context is reached. This parameter has no effect if {@code ctx}\n// is {@code null}.\n///\nLL1Analyzer.prototype._LOOK = function(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n    var c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n    if (lookBusy.contains(c)) {\n        return;\n    }\n    lookBusy.add(c);\n    if (s === stopState) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n    }\n    if (s instanceof RuleStopState ) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n        if (ctx !== PredictionContext.EMPTY) {\n            // run thru all possible stack tops in ctx\n            for(var i=0; i<ctx.length; i++) {\n                var returnState = this.atn.states[ctx.getReturnState(i)];\n                var removed = calledRuleStack.contains(returnState.ruleIndex);\n                try {\n                    calledRuleStack.remove(returnState.ruleIndex);\n                    this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    if (removed) {\n                        calledRuleStack.add(returnState.ruleIndex);\n                    }\n                }\n            }\n            return;\n        }\n    }\n    for(var j=0; j<s.transitions.length; j++) {\n        var t = s.transitions[j];\n        if (t.constructor === RuleTransition) {\n            if (calledRuleStack.contains(t.target.ruleIndex)) {\n                continue;\n            }\n            var newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n            try {\n                calledRuleStack.add(t.target.ruleIndex);\n                this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } finally {\n                calledRuleStack.remove(t.target.ruleIndex);\n            }\n        } else if (t instanceof AbstractPredicateTransition ) {\n            if (seeThruPreds) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else {\n                look.addOne(LL1Analyzer.HIT_PRED);\n            }\n        } else if( t.isEpsilon) {\n            this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n        } else if (t.constructor === WildcardTransition) {\n            look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n        } else {\n            var set = t.label;\n            if (set !== null) {\n                if (t instanceof NotSetTransition) {\n                    set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                }\n                look.addSet(set);\n            }\n        }\n    }\n};\n\nexports.LL1Analyzer = LL1Analyzer;\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents the type of recognizer an ATN applies to.\n\nfunction ATNType() {\n\n}\n\nATNType.LEXER = 0;\nATNType.PARSER = 1;\n\nexports.ATNType = ATNType;\n\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// When we hit an accept state in either the DFA or the ATN, we\n//  have to notify the character stream to start buffering characters\n//  via {@link IntStream//mark} and record the current state. The current sim state\n//  includes the current index into the input, the current line,\n//  and current character position in that line. Note that the Lexer is\n//  tracking the starting line and characterization of the token. These\n//  variables track the \"state\" of the simulator when it hits an accept state.\n//\n//  <p>We track these variables separately for the DFA and ATN simulation\n//  because the DFA simulation often has to fail over to the ATN\n//  simulation. If the ATN simulation fails, we need the DFA to fall\n//  back to its previously accepted state, if any. If the ATN succeeds,\n//  then the ATN does the accept and the DFA simulator that invoked it\n//  can simply return the predicted token type.</p>\n///\n\nvar Token = require('./../Token').Token;\nvar Lexer = require('./../Lexer').Lexer;\nvar ATN = require('./ATN').ATN;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar OrderedATNConfigSet = require('./ATNConfigSet').OrderedATNConfigSet;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar LexerATNConfig = require('./ATNConfig').LexerATNConfig;\nvar Transition = require('./Transition').Transition;\nvar LexerActionExecutor = require('./LexerActionExecutor').LexerActionExecutor;\nvar LexerNoViableAltException = require('./../error/Errors').LexerNoViableAltException;\n\nfunction resetSimState(sim) {\n\tsim.index = -1;\n\tsim.line = 0;\n\tsim.column = -1;\n\tsim.dfaState = null;\n}\n\nfunction SimState() {\n\tresetSimState(this);\n\treturn this;\n}\n\nSimState.prototype.reset = function() {\n\tresetSimState(this);\n};\n\nfunction LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n\tthis.decisionToDFA = decisionToDFA;\n\tthis.recog = recog;\n\t// The current token's starting index into the character stream.\n\t// Shared across DFA to ATN simulation in case the ATN fails and the\n\t// DFA did not have a previous accept state. In this case, we use the\n\t// ATN-generated exception object.\n\tthis.startIndex = -1;\n\t// line number 1..n within the input///\n\tthis.line = 1;\n\t// The index of the character relative to the beginning of the line\n\t// 0..n-1///\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n\t// Used during DFA/ATN exec to record the most recent accept configuration\n\t// info\n\tthis.prevAccept = new SimState();\n\t// done\n\treturn this;\n}\n\nLexerATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nLexerATNSimulator.prototype.constructor = LexerATNSimulator;\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n\nLexerATNSimulator.match_calls = 0;\n\nLexerATNSimulator.prototype.copyState = function(simulator) {\n\tthis.column = simulator.column;\n\tthis.line = simulator.line;\n\tthis.mode = simulator.mode;\n\tthis.startIndex = simulator.startIndex;\n};\n\nLexerATNSimulator.prototype.match = function(input, mode) {\n\tthis.match_calls += 1;\n\tthis.mode = mode;\n\tvar mark = input.mark();\n\ttry {\n\t\tthis.startIndex = input.index;\n\t\tthis.prevAccept.reset();\n\t\tvar dfa = this.decisionToDFA[mode];\n\t\tif (dfa.s0 === null) {\n\t\t\treturn this.matchATN(input);\n\t\t} else {\n\t\t\treturn this.execATN(input, dfa.s0);\n\t\t}\n\t} finally {\n\t\tinput.release(mark);\n\t}\n};\n\nLexerATNSimulator.prototype.reset = function() {\n\tthis.prevAccept.reset();\n\tthis.startIndex = -1;\n\tthis.line = 1;\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n};\n\nLexerATNSimulator.prototype.matchATN = function(input) {\n\tvar startState = this.atn.modeToStartState[this.mode];\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n\t}\n\tvar old_mode = this.mode;\n\tvar s0_closure = this.computeStartState(input, startState);\n\tvar suppressEdge = s0_closure.hasSemanticContext;\n\ts0_closure.hasSemanticContext = false;\n\n\tvar next = this.addDFAState(s0_closure);\n\tif (!suppressEdge) {\n\t\tthis.decisionToDFA[this.mode].s0 = next;\n\t}\n\n\tvar predict = this.execATN(input, next);\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n\t}\n\treturn predict;\n};\n\nLexerATNSimulator.prototype.execATN = function(input, ds0) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"start state closure=\" + ds0.configs);\n\t}\n\tif (ds0.isAcceptState) {\n\t\t// allow zero-length tokens\n\t\tthis.captureSimState(this.prevAccept, input, ds0);\n\t}\n\tvar t = input.LA(1);\n\tvar s = ds0; // s is current/from DFA state\n\n\twhile (true) { // while more work\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"execATN loop starting closure: \" + s.configs);\n\t\t}\n\n\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\n\t\t// avoid looking up the DFA state again, which is expensive.\n\t\t// If the previous target was already part of the DFA, we might\n\t\t// be able to avoid doing a reach operation upon t. If s!=null,\n\t\t// it means that semantic predicates didn't prevent us from\n\t\t// creating a DFA state. Once we know s!=null, we check to see if\n\t\t// the DFA state has an edge already for t. If so, we can just reuse\n\t\t// it's configuration set; there's no point in re-computing it.\n\t\t// This is kind of like doing DFA simulation within the ATN\n\t\t// simulation because DFA simulation is really just a way to avoid\n\t\t// computing reach/closure sets. Technically, once we know that\n\t\t// we have a previously added DFA state, we could jump over to\n\t\t// the DFA simulator. But, that would mean popping back and forth\n\t\t// a lot and making things more complicated algorithmically.\n\t\t// This optimization makes a lot of sense for loops within DFA.\n\t\t// A character will take us back to an existing DFA state\n\t\t// that already has lots of edges out of it. e.g., .* in comments.\n\t\t// print(\"Target for:\" + str(s) + \" and:\" + str(t))\n\t\tvar target = this.getExistingTargetState(s, t);\n\t\t// print(\"Existing:\" + str(target))\n\t\tif (target === null) {\n\t\t\ttarget = this.computeTargetState(input, s, t);\n\t\t\t// print(\"Computed:\" + str(target))\n\t\t}\n\t\tif (target === ATNSimulator.ERROR) {\n\t\t\tbreak;\n\t\t}\n\t\t// If this is a consumable input element, make sure to consume before\n\t\t// capturing the accept state so the input index, line, and char\n\t\t// position accurately reflect the state of the interpreter at the\n\t\t// end of the token.\n\t\tif (t !== Token.EOF) {\n\t\t\tthis.consume(input);\n\t\t}\n\t\tif (target.isAcceptState) {\n\t\t\tthis.captureSimState(this.prevAccept, input, target);\n\t\t\tif (t === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt = input.LA(1);\n\t\ts = target; // flip; current DFA target becomes new src/from state\n\t}\n\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\n};\n\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param s The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\nLexerATNSimulator.prototype.getExistingTargetState = function(s, t) {\n\tif (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\treturn null;\n\t}\n\n\tvar target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n\tif(target===undefined) {\n\t\ttarget = null;\n\t}\n\tif (LexerATNSimulator.debug && target !== null) {\n\t\tconsole.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n\t}\n\treturn target;\n};\n\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param input The input stream\n// @param s The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\nLexerATNSimulator.prototype.computeTargetState = function(input, s, t) {\n\tvar reach = new OrderedATNConfigSet();\n\t// if we don't find an existing DFA state\n\t// Fill reach starting from closure, following t transitions\n\tthis.getReachableConfigSet(input, s.configs, reach, t);\n\n\tif (reach.items.length === 0) { // we got nowhere on t from s\n\t\tif (!reach.hasSemanticContext) {\n\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\n\t\t\t// cause a failover from DFA later.\n\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\n\t\t}\n\t\t// stop when we can't match any more char\n\t\treturn ATNSimulator.ERROR;\n\t}\n\t// Add an edge from s to target DFA found/created for reach\n\treturn this.addDFAEdge(s, t, null, reach);\n};\n\nLexerATNSimulator.prototype.failOrAccept = function(prevAccept, input, reach, t) {\n\tif (this.prevAccept.dfaState !== null) {\n\t\tvar lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.column);\n\t\treturn prevAccept.dfaState.prediction;\n\t} else {\n\t\t// if no accept and EOF is first char, return EOF\n\t\tif (t === Token.EOF && input.index === this.startIndex) {\n\t\t\treturn Token.EOF;\n\t\t}\n\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n\t}\n};\n\n// Given a starting configuration set, figure out all ATN configurations\n// we can reach upon input {@code t}. Parameter {@code reach} is a return\n// parameter.\nLexerATNSimulator.prototype.getReachableConfigSet = function(input, closure,\n\t\treach, t) {\n\t// this is used to skip processing for configs which have a lower priority\n\t// than a config that already reached an accept state for the same rule\n\tvar skipAlt = ATN.INVALID_ALT_NUMBER;\n\tfor (var i = 0; i < closure.items.length; i++) {\n\t\tvar cfg = closure.items[i];\n\t\tvar currentAltReachedAcceptState = (cfg.alt === skipAlt);\n\t\tif (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n\t\t\t\t\t.toString(this.recog, true));\n\t\t}\n\t\tfor (var j = 0; j < cfg.state.transitions.length; j++) {\n\t\t\tvar trans = cfg.state.transitions[j]; // for each transition\n\t\t\tvar target = this.getReachableTarget(trans, t);\n\t\t\tif (target !== null) {\n\t\t\t\tvar lexerActionExecutor = cfg.lexerActionExecutor;\n\t\t\t\tif (lexerActionExecutor !== null) {\n\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n\t\t\t\t}\n\t\t\t\tvar treatEofAsEpsilon = (t === Token.EOF);\n\t\t\t\tvar config = new LexerATNConfig({state:target, lexerActionExecutor:lexerActionExecutor}, cfg);\n\t\t\t\tif (this.closure(input, config, reach,\n\t\t\t\t\t\tcurrentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n\t\t\t\t\t// any remaining configs for this alt have a lower priority\n\t\t\t\t\t// than the one that just reached an accept state.\n\t\t\t\t\tskipAlt = cfg.alt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nLexerATNSimulator.prototype.accept = function(input, lexerActionExecutor,\n\t\tstartIndex, index, line, charPos) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"ACTION %s\\n\", lexerActionExecutor);\n\t}\n\t// seek to after last char in token\n\tinput.seek(index);\n\tthis.line = line;\n\tthis.column = charPos;\n\tif (lexerActionExecutor !== null && this.recog !== null) {\n\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\n\t}\n};\n\nLexerATNSimulator.prototype.getReachableTarget = function(trans, t) {\n\tif (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\treturn trans.target;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nLexerATNSimulator.prototype.computeStartState = function(input, p) {\n\tvar initialContext = PredictionContext.EMPTY;\n\tvar configs = new OrderedATNConfigSet();\n\tfor (var i = 0; i < p.transitions.length; i++) {\n\t\tvar target = p.transitions[i].target;\n        var cfg = new LexerATNConfig({state:target, alt:i+1, context:initialContext}, null);\n\t\tthis.closure(input, cfg, configs, false, false, false);\n\t}\n\treturn configs;\n};\n\n// Since the alternatives within any lexer decision are ordered by\n// preference, this method stops pursuing the closure as soon as an accept\n// state is reached. After the first accept state is reached by depth-first\n// search from {@code config}, all other (potentially reachable) states for\n// this rule would have a lower priority.\n//\n// @return {@code true} if an accept state is reached, otherwise\n// {@code false}.\nLexerATNSimulator.prototype.closure = function(input, config, configs,\n\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n\t}\n\tif (config.state instanceof RuleStopState) {\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tif (this.recog !== null) {\n\t\t\t\tconsole.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"closure at rule stop %s\\n\", config);\n\t\t\t}\n\t\t}\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\tif (config.context === null || config.context.isEmpty()) {\n\t\t\t\tconfigs.add(config);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconfigs.add(new LexerATNConfig({ state:config.state, context:PredictionContext.EMPTY}, config));\n\t\t\t\tcurrentAltReachedAcceptState = true;\n\t\t\t}\n\t\t}\n\t\tif (config.context !== null && !config.context.isEmpty()) {\n\t\t\tfor (var i = 0; i < config.context.length; i++) {\n\t\t\t\tif (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\t\tvar newContext = config.context.getParent(i); // \"pop\" return state\n\t\t\t\t\tvar returnState = this.atn.states[config.context.getReturnState(i)];\n\t\t\t\t\tcfg = new LexerATNConfig({ state:returnState, context:newContext }, config);\n\t\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg,\n\t\t\t\t\t\t\tconfigs, currentAltReachedAcceptState, speculative,\n\t\t\t\t\t\t\ttreatEofAsEpsilon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn currentAltReachedAcceptState;\n\t}\n\t// optimization\n\tif (!config.state.epsilonOnlyTransitions) {\n\t\tif (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n\t\t\tconfigs.add(config);\n\t\t}\n\t}\n\tfor (var j = 0; j < config.state.transitions.length; j++) {\n\t\tvar trans = config.state.transitions[j];\n\t\tcfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n\t\tif (cfg !== null) {\n\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg, configs,\n\t\t\t\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n\t\t}\n\t}\n\treturn currentAltReachedAcceptState;\n};\n\n// side-effect: can alter configs.hasSemanticContext\nLexerATNSimulator.prototype.getEpsilonTarget = function(input, config, trans,\n\t\tconfigs, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (trans.serializationType === Transition.RULE) {\n\t\tvar newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n\t\tcfg = new LexerATNConfig( { state:trans.target, context:newContext}, config);\n\t} else if (trans.serializationType === Transition.PRECEDENCE) {\n\t\tthrow \"Precedence predicates are not supported in lexers.\";\n\t} else if (trans.serializationType === Transition.PREDICATE) {\n\t\t// Track traversing semantic predicates. If we traverse,\n\t\t// we cannot add a DFA state for this \"reach\" computation\n\t\t// because the DFA would not test the predicate again in the\n\t\t// future. Rather than creating collections of semantic predicates\n\t\t// like v3 and testing them on prediction, v4 will test them on the\n\t\t// fly all the time using the ATN not the DFA. This is slower but\n\t\t// semantically it's not used that often. One of the key elements to\n\t\t// this predicate mechanism is not adding DFA states that see\n\t\t// predicates immediately afterwards in the ATN. For example,\n\n\t\t// a : ID {p1}? | ID {p2}? ;\n\n\t\t// should create the start state for rule 'a' (to save start state\n\t\t// competition), but should not create target of ID state. The\n\t\t// collection of ATN states the following ID references includes\n\t\t// states reached by traversing predicates. Since this is when we\n\t\t// test them, we cannot cash the DFA state target of ID.\n\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n\t\t}\n\t\tconfigs.hasSemanticContext = true;\n\t\tif (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n\t\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.ACTION) {\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\t// execute actions anywhere in the start rule for a token.\n\t\t\t//\n\t\t\t// TODO: if the entry rule is invoked recursively, some\n\t\t\t// actions may be executed during the recursive call. The\n\t\t\t// problem can appear when hasEmptyPath() is true but\n\t\t\t// isEmpty() is false. In this case, the config needs to be\n\t\t\t// split into two contexts - one with just the empty path\n\t\t\t// and another with everything but the empty path.\n\t\t\t// Unfortunately, the current algorithm does not allow\n\t\t\t// getEpsilonTarget to return two configurations, so\n\t\t\t// additional modifications are needed before we can support\n\t\t\t// the split operation.\n\t\t\tvar lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n\t\t\t\t\tthis.atn.lexerActions[trans.actionIndex]);\n\t\t\tcfg = new LexerATNConfig({ state:trans.target, lexerActionExecutor:lexerActionExecutor }, config);\n\t\t} else {\n\t\t\t// ignore actions in referenced rules\n\t\t\tcfg = new LexerATNConfig( { state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.EPSILON) {\n\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t} else if (trans.serializationType === Transition.ATOM ||\n\t\t\t\ttrans.serializationType === Transition.RANGE ||\n\t\t\t\ttrans.serializationType === Transition.SET) {\n\t\tif (treatEofAsEpsilon) {\n\t\t\tif (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\t\t\tcfg = new LexerATNConfig( { state:trans.target }, config);\n\t\t\t}\n\t\t}\n\t}\n\treturn cfg;\n};\n\n// Evaluate a predicate specified in the lexer.\n//\n// <p>If {@code speculative} is {@code true}, this method was called before\n// {@link //consume} for the matched character. This method should call\n// {@link //consume} before evaluating the predicate to ensure position\n// sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n// and {@link Lexer//getcolumn}, properly reflect the current\n// lexer state. This method should restore {@code input} and the simulator\n// to the original state before returning (i.e. undo the actions made by the\n// call to {@link //consume}.</p>\n//\n// @param input The input stream.\n// @param ruleIndex The rule containing the predicate.\n// @param predIndex The index of the predicate within the rule.\n// @param speculative {@code true} if the current index in {@code input} is\n// one character before the predicate's location.\n//\n// @return {@code true} if the specified predicate evaluates to\n// {@code true}.\n// /\nLexerATNSimulator.prototype.evaluatePredicate = function(input, ruleIndex,\n\t\tpredIndex, speculative) {\n\t// assume true if no recognizer was provided\n\tif (this.recog === null) {\n\t\treturn true;\n\t}\n\tif (!speculative) {\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t}\n\tvar savedcolumn = this.column;\n\tvar savedLine = this.line;\n\tvar index = input.index;\n\tvar marker = input.mark();\n\ttry {\n\t\tthis.consume(input);\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t} finally {\n\t\tthis.column = savedcolumn;\n\t\tthis.line = savedLine;\n\t\tinput.seek(index);\n\t\tinput.release(marker);\n\t}\n};\n\nLexerATNSimulator.prototype.captureSimState = function(settings, input, dfaState) {\n\tsettings.index = input.index;\n\tsettings.line = this.line;\n\tsettings.column = this.column;\n\tsettings.dfaState = dfaState;\n};\n\nLexerATNSimulator.prototype.addDFAEdge = function(from_, tk, to, cfgs) {\n\tif (to === undefined) {\n\t\tto = null;\n\t}\n\tif (cfgs === undefined) {\n\t\tcfgs = null;\n\t}\n\tif (to === null && cfgs !== null) {\n\t\t// leading to this call, ATNConfigSet.hasSemanticContext is used as a\n\t\t// marker indicating dynamic predicate evaluation makes this edge\n\t\t// dependent on the specific input sequence, so the static edge in the\n\t\t// DFA should be omitted. The target DFAState is still created since\n\t\t// execATN has the ability to resynchronize with the DFA state cache\n\t\t// following the predicate evaluation step.\n\t\t//\n\t\t// TJP notes: next time through the DFA, we see a pred again and eval.\n\t\t// If that gets us to a previously created (but dangling) DFA\n\t\t// state, we can continue in pure DFA mode from there.\n\t\t// /\n\t\tvar suppressEdge = cfgs.hasSemanticContext;\n\t\tcfgs.hasSemanticContext = false;\n\n\t\tto = this.addDFAState(cfgs);\n\n\t\tif (suppressEdge) {\n\t\t\treturn to;\n\t\t}\n\t}\n\t// add the edge\n\tif (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\t// Only track edges within the DFA bounds\n\t\treturn to;\n\t}\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n\t}\n\tif (from_.edges === null) {\n\t\t// make room for tokens 1..n and -1 masquerading as index 0\n\t\tfrom_.edges = [];\n\t}\n\tfrom_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n\treturn to;\n};\n\n// Add a new DFA state if there isn't one with this set of\n// configurations already. This method also detects the first\n// configuration containing an ATN rule stop state. Later, when\n// traversing the DFA, we will know which rule to accept.\nLexerATNSimulator.prototype.addDFAState = function(configs) {\n\tvar proposed = new DFAState(null, configs);\n\tvar firstConfigWithRuleStopState = null;\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tvar cfg = configs.items[i];\n\t\tif (cfg.state instanceof RuleStopState) {\n\t\t\tfirstConfigWithRuleStopState = cfg;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (firstConfigWithRuleStopState !== null) {\n\t\tproposed.isAcceptState = true;\n\t\tproposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n\t\tproposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n\t}\n\tvar dfa = this.decisionToDFA[this.mode];\n\tvar existing = dfa.states.get(proposed);\n\tif (existing!==null) {\n\t\treturn existing;\n\t}\n\tvar newState = proposed;\n\tnewState.stateNumber = dfa.states.length;\n\tconfigs.setReadonly(true);\n\tnewState.configs = configs;\n\tdfa.states.add(newState);\n\treturn newState;\n};\n\nLexerATNSimulator.prototype.getDFA = function(mode) {\n\treturn this.decisionToDFA[mode];\n};\n\n// Get the text matched so far for the current token.\nLexerATNSimulator.prototype.getText = function(input) {\n\t// index is first lookahead char, don't include.\n\treturn input.getText(this.startIndex, input.index - 1);\n};\n\nLexerATNSimulator.prototype.consume = function(input) {\n\tvar curChar = input.LA(1);\n\tif (curChar === \"\\n\".charCodeAt(0)) {\n\t\tthis.line += 1;\n\t\tthis.column = 0;\n\t} else {\n\t\tthis.column += 1;\n\t}\n\tinput.consume();\n};\n\nLexerATNSimulator.prototype.getTokenName = function(tt) {\n\tif (tt === -1) {\n\t\treturn \"EOF\";\n\t} else {\n\t\treturn \"'\" + String.fromCharCode(tt) + \"'\";\n\t}\n};\n\nexports.LexerATNSimulator = LexerATNSimulator;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This default implementation of {@link TokenFactory} creates\n// {@link CommonToken} objects.\n//\n\nvar CommonToken = require('./Token').CommonToken;\n\nfunction TokenFactory() {\n\treturn this;\n}\n\nfunction CommonTokenFactory(copyText) {\n\tTokenFactory.call(this);\n    // Indicates whether {@link CommonToken//setText} should be called after\n    // constructing tokens to explicitly set the text. This is useful for cases\n    // where the input stream might not be able to provide arbitrary substrings\n    // of text from the input after the lexer creates a token (e.g. the\n    // implementation of {@link CharStream//getText} in\n    // {@link UnbufferedCharStream} throws an\n    // {@link UnsupportedOperationException}). Explicitly setting the token text\n    // allows {@link Token//getText} to be called at any time regardless of the\n    // input stream implementation.\n    //\n    // <p>\n    // The default value is {@code false} to avoid the performance and memory\n    // overhead of copying text for every token unless explicitly requested.</p>\n    //\n    this.copyText = copyText===undefined ? false : copyText;\n\treturn this;\n}\n\nCommonTokenFactory.prototype = Object.create(TokenFactory.prototype);\nCommonTokenFactory.prototype.constructor = CommonTokenFactory;\n\n//\n// The default {@link CommonTokenFactory} instance.\n//\n// <p>\n// This token factory does not explicitly copy token text when constructing\n// tokens.</p>\n//\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n\nCommonTokenFactory.prototype.create = function(source, type, text, channel, start, stop, line, column) {\n    var t = new CommonToken(source, type, channel, start, stop);\n    t.line = line;\n    t.column = column;\n    if (text !==null) {\n        t.text = text;\n    } else if (this.copyText && source[1] !==null) {\n        t.text = source[1].getText(start,stop);\n    }\n    return t;\n};\n\nCommonTokenFactory.prototype.createThin = function(type, text) {\n    var t = new CommonToken(null, type);\n    t.text = text;\n    return t;\n};\n\nexports.CommonTokenFactory = CommonTokenFactory;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents an executor for a sequence of lexer actions which traversed during\n// the matching operation of a lexer rule (token).\n//\n// <p>The executor tracks position information for position-dependent lexer actions\n// efficiently, ensuring that actions appearing only at the end of the rule do\n// not cause bloating of the {@link DFA} created for the lexer.</p>\n\nvar hashStuff = require(\"../Utils\").hashStuff;\nvar LexerIndexedCustomAction = require('./LexerAction').LexerIndexedCustomAction;\n\nfunction LexerActionExecutor(lexerActions) {\n\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t// Caches the result of {@link //hashCode} since the hash code is an element\n\t// of the performance-critical {@link LexerATNConfig//hashCode} operation.\n\tthis.cachedHashCode = hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t// lexerActions]))\n\treturn this;\n}\n\n// Creates a {@link LexerActionExecutor} which executes the actions for\n// the input {@code lexerActionExecutor} followed by a specified\n// {@code lexerAction}.\n//\n// @param lexerActionExecutor The executor for actions already traversed by\n// the lexer while matching a token within a particular\n// {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n// though it were an empty executor.\n// @param lexerAction The lexer action to execute after the actions\n// specified in {@code lexerActionExecutor}.\n//\n// @return A {@link LexerActionExecutor} for executing the combine actions\n// of {@code lexerActionExecutor} and {@code lexerAction}.\nLexerActionExecutor.append = function(lexerActionExecutor, lexerAction) {\n\tif (lexerActionExecutor === null) {\n\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t}\n\tvar lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\treturn new LexerActionExecutor(lexerActions);\n};\n\n// Creates a {@link LexerActionExecutor} which encodes the current offset\n// for position-dependent lexer actions.\n//\n// <p>Normally, when the executor encounters lexer actions where\n// {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n// {@link IntStream//seek} on the input {@link CharStream} to set the input\n// position to the <em>end</em> of the current token. This behavior provides\n// for efficient DFA representation of lexer actions which appear at the end\n// of a lexer rule, even when the lexer rule matches a variable number of\n// characters.</p>\n//\n// <p>Prior to traversing a match transition in the ATN, the current offset\n// from the token start index is assigned to all position-dependent lexer\n// actions which have not already been assigned a fixed offset. By storing\n// the offsets relative to the token start index, the DFA representation of\n// lexer actions which appear in the middle of tokens remains efficient due\n// to sharing among tokens of the same length, regardless of their absolute\n// position in the input stream.</p>\n//\n// <p>If the current executor already has offsets assigned to all\n// position-dependent lexer actions, the method returns {@code this}.</p>\n//\n// @param offset The current offset to assign to all position-dependent\n// lexer actions which do not already have offsets assigned.\n//\n// @return A {@link LexerActionExecutor} which stores input stream offsets\n// for all position-dependent lexer actions.\n// /\nLexerActionExecutor.prototype.fixOffsetBeforeMatch = function(offset) {\n\tvar updatedLexerActions = null;\n\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\tif (updatedLexerActions === null) {\n\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t}\n\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\tthis.lexerActions[i]);\n\t\t}\n\t}\n\tif (updatedLexerActions === null) {\n\t\treturn this;\n\t} else {\n\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t}\n};\n\n// Execute the actions encapsulated by this executor within the context of a\n// particular {@link Lexer}.\n//\n// <p>This method calls {@link IntStream//seek} to set the position of the\n// {@code input} {@link CharStream} prior to calling\n// {@link LexerAction//execute} on a position-dependent action. Before the\n// method returns, the input position will be restored to the same position\n// it was in when the method was invoked.</p>\n//\n// @param lexer The lexer instance.\n// @param input The input stream which is the source for the current token.\n// When this method is called, the current {@link IntStream//index} for\n// {@code input} should be the start of the following token, i.e. 1\n// character past the end of the current token.\n// @param startIndex The token start index. This value may be passed to\n// {@link IntStream//seek} to set the {@code input} position to the beginning\n// of the token.\n// /\nLexerActionExecutor.prototype.execute = function(lexer, input, startIndex) {\n\tvar requiresSeek = false;\n\tvar stopIndex = input.index;\n\ttry {\n\t\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\t\tvar lexerAction = this.lexerActions[i];\n\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\tvar offset = lexerAction.offset;\n\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t\trequiresSeek = false;\n\t\t\t}\n\t\t\tlexerAction.execute(lexer);\n\t\t}\n\t} finally {\n\t\tif (requiresSeek) {\n\t\t\tinput.seek(stopIndex);\n\t\t}\n\t}\n};\n\nLexerActionExecutor.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\nLexerActionExecutor.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n\n\nLexerActionExecutor.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\treturn false;\n\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\treturn false;\n\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\treturn false;\n\t} else {\n\t\tvar numActions = this.lexerActions.length\n\t\tfor (var idx = 0; idx < numActions; ++idx) {\n\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexports.LexerActionExecutor = LexerActionExecutor;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n//\n// <p>\n// The basic complexity of the adaptive strategy makes it harder to understand.\n// We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n// requests go through the DFA first. If they reach a state without an edge for\n// the current symbol, the algorithm fails over to the ATN simulation to\n// complete the DFA path for the current input (until it finds a conflict state\n// or uniquely predicting state).</p>\n//\n// <p>\n// All of that is done without using the outer context because we want to create\n// a DFA that is not dependent upon the rule invocation stack when we do a\n// prediction. One DFA works in all contexts. We avoid using context not\n// necessarily because it's slower, although it can be, but because of the DFA\n// caching problem. The closure routine only considers the rule invocation stack\n// created during prediction beginning in the decision rule. For example, if\n// prediction occurs without invoking another rule's ATN, there are no context\n// stacks in the configurations. When lack of context leads to a conflict, we\n// don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n// strategy (versus full LL(*)).</p>\n//\n// <p>\n// When SLL yields a configuration set with conflict, we rewind the input and\n// retry the ATN simulation, this time using full outer context without adding\n// to the DFA. Configuration context stacks will be the full invocation stacks\n// from the start rule. If we get a conflict using full context, then we can\n// definitively say we have a true ambiguity for that input sequence. If we\n// don't get a conflict, it implies that the decision is sensitive to the outer\n// context. (It is not context-sensitive in the sense of context-sensitive\n// grammars.)</p>\n//\n// <p>\n// The next time we reach this DFA state with an SLL conflict, through DFA\n// simulation, we will again retry the ATN simulation using full context mode.\n// This is slow because we can't save the results and have to \"interpret\" the\n// ATN each time we get that input.</p>\n//\n// <p>\n// <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n//\n// <p>\n// We could cache results from full context to predicted alternative easily and\n// that saves a lot of time but doesn't work in presence of predicates. The set\n// of visible predicates from the ATN start state changes depending on the\n// context, because closure can fall off the end of a rule. I tried to cache\n// tuples (stack context, semantic context, predicted alt) but it was slower\n// than interpreting and much more complicated. Also required a huge amount of\n// memory. The goal is not to create the world's fastest parser anyway. I'd like\n// to keep this algorithm simple. By launching multiple threads, we can improve\n// the speed of parsing across a large number of files.</p>\n//\n// <p>\n// There is no strict ordering between the amount of input used by SLL vs LL,\n// which makes it really hard to build a cache for full context. Let's say that\n// we have input A B C that leads to an SLL conflict with full context X. That\n// implies that using X we might only use A B but we could also use A B C D to\n// resolve conflict. Input A B C D could predict alternative 1 in one position\n// in the input and A B C E could predict alternative 2 in another position in\n// input. The conflicting SLL configurations could still be non-unique in the\n// full context prediction, which would lead us to requiring more input than the\n// original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n// input\tused during the previous prediction. That amounts to a cache that maps\n// X to a specific DFA for that context.</p>\n//\n// <p>\n// Something should be done for left-recursive expression predictions. They are\n// likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n// with full LL thing Sam does.</p>\n//\n// <p>\n// <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n//\n// <p>\n// We avoid doing full context retry when the outer context is empty, we did not\n// dip into the outer context by falling off the end of the decision state rule,\n// or when we force SLL mode.</p>\n//\n// <p>\n// As an example of the not dip into outer context case, consider as super\n// constructor calls versus function calls. One grammar might look like\n// this:</p>\n//\n// <pre>\n// ctorBody\n//   : '{' superCall? stat* '}'\n//   ;\n// </pre>\n//\n// <p>\n// Or, you might see something like</p>\n//\n// <pre>\n// stat\n//   : superCall ';'\n//   | expression ';'\n//   | ...\n//   ;\n// </pre>\n//\n// <p>\n// In both cases I believe that no closure operations will dip into the outer\n// context. In the first case ctorBody in the worst case will stop at the '}'.\n// In the 2nd case it should stop at the ';'. Both cases should stay within the\n// entry rule and not dip into the outer context.</p>\n//\n// <p>\n// <strong>PREDICATES</strong></p>\n//\n// <p>\n// Predicates are always evaluated if present in either SLL or LL both. SLL and\n// LL simulation deals with predicates differently. SLL collects predicates as\n// it performs closure operations like ANTLR v3 did. It delays predicate\n// evaluation until it reaches and accept state. This allows us to cache the SLL\n// ATN simulation whereas, if we had evaluated predicates on-the-fly during\n// closure, the DFA state configuration sets would be different and we couldn't\n// build up a suitable DFA.</p>\n//\n// <p>\n// When building a DFA accept state during ATN simulation, we evaluate any\n// predicates and return the sole semantically valid alternative. If there is\n// more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n// we throw an exception. Alternatives without predicates act like they have\n// true predicates. The simple way to think about it is to strip away all\n// alternatives with false predicates and choose the minimum alternative that\n// remains.</p>\n//\n// <p>\n// When we start in the DFA and reach an accept state that's predicated, we test\n// those and return the minimum semantically viable alternative. If no\n// alternatives are viable, we throw an exception.</p>\n//\n// <p>\n// During full LL ATN simulation, closure always evaluates predicates and\n// on-the-fly. This is crucial to reducing the configuration set size during\n// closure. It hits a landmine when parsing with the Java grammar, for example,\n// without this on-the-fly evaluation.</p>\n//\n// <p>\n// <strong>SHARING DFA</strong></p>\n//\n// <p>\n// All instances of the same parser share the same decision DFAs through a\n// static field. Each instance gets its own ATN simulator but they share the\n// same {@link //decisionToDFA} field. They also share a\n// {@link PredictionContextCache} object that makes sure that all\n// {@link PredictionContext} objects are shared among the DFA states. This makes\n// a big size difference.</p>\n//\n// <p>\n// <strong>THREAD SAFETY</strong></p>\n//\n// <p>\n// The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n// it adds a new DFA object to that array. {@link //addDFAEdge}\n// locks on the DFA for the current decision when setting the\n// {@link DFAState//edges} field. {@link //addDFAState} locks on\n// the DFA for the current decision when looking up a DFA state to see if it\n// already exists. We must make sure that all requests to add DFA states that\n// are equivalent result in the same shared DFA object. This is because lots of\n// threads will be trying to update the DFA at once. The\n// {@link //addDFAState} method also locks inside the DFA lock\n// but this time on the shared context cache when it rebuilds the\n// configurations' {@link PredictionContext} objects using cached\n// subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n// safe as long as we can guarantee that all threads referencing\n// {@code s.edge[t]} get the same physical target {@link DFAState}, or\n// {@code null}. Once into the DFA, the DFA simulation does not reference the\n// {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n// targets. The DFA simulator will either find {@link DFAState//edges} to be\n// {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n// {@code dfa.edges[t]} to be non-null. The\n// {@link //addDFAEdge} method could be racing to set the field\n// but in either case the DFA simulator works; if {@code null}, and requests ATN\n// simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n// way it will work because it's not doing a test and set operation.</p>\n//\n// <p>\n// <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n// Parsing)</strong></p>\n//\n// <p>\n// Sam pointed out that if SLL does not give a syntax error, then there is no\n// point in doing full LL, which is slower. We only have to try LL if we get a\n// syntax error. For maximum speed, Sam starts the parser set to pure SLL\n// mode with the {@link BailErrorStrategy}:</p>\n//\n// <pre>\n// parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n// parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n// </pre>\n//\n// <p>\n// If it does not get a syntax error, then we're done. If it does get a syntax\n// error, we need to retry with the combined SLL/LL strategy.</p>\n//\n// <p>\n// The reason this works is as follows. If there are no SLL conflicts, then the\n// grammar is SLL (at least for that input set). If there is an SLL conflict,\n// the full LL analysis must yield a set of viable alternatives which is a\n// subset of the alternatives reported by SLL. If the LL set is a singleton,\n// then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n// set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n// is truly ambiguous on the current input. If the LL set is smaller, then the\n// SLL conflict resolution might choose an alternative that the full LL would\n// rule out as a possibility based upon better context information. If that's\n// the case, then the SLL parse will definitely get an error because the full LL\n// analysis says it's not viable. If SLL conflict resolution chooses an\n// alternative within the LL set, them both SLL and LL would choose the same\n// alternative because they both choose the minimum of multiple conflicting\n// alternatives.</p>\n//\n// <p>\n// Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n// a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n// parsing will get an error because SLL will pursue alternative 1. If\n// <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n// choose the same alternative because alternative one is the minimum of either\n// set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n// error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n//\n// <p>\n// Of course, if the input is invalid, then we will get an error for sure in\n// both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n// the input.</p>\n//\n\nvar Utils = require('./../Utils');\nvar Set = Utils.Set;\nvar BitSet = Utils.BitSet;\nvar DoubleDict = Utils.DoubleDict;\nvar ATN = require('./ATN').ATN;\nvar ATNState = require('./ATNState').ATNState;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar Token = require('./../Token').Token;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar PredPrediction = require('./../dfa/DFAState').PredPrediction;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar PredictionMode = require('./PredictionMode').PredictionMode;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar StarLoopEntryState = require('./ATNState').StarLoopEntryState;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar Interval = require('./../IntervalSet').Interval;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar NoViableAltException = require('./../error/Errors').NoViableAltException;\n\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar predictionContextFromRuleContext = require('./../PredictionContext').predictionContextFromRuleContext;\n\nfunction ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n    this.parser = parser;\n    this.decisionToDFA = decisionToDFA;\n    // SLL, LL, or LL + exact ambig detection?//\n    this.predictionMode = PredictionMode.LL;\n    // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n    this._input = null;\n    this._startIndex = 0;\n    this._outerContext = null;\n    this._dfa = null;\n    // Each prediction operation uses a cache for merge of prediction contexts.\n    //  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n    //  isn't synchronized but we're ok since two threads shouldn't reuse same\n    //  parser/atnsim object because it can only handle one input at a time.\n    //  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n    //  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n    //  also be examined during cache lookup.\n    //\n    this.mergeCache = null;\n    return this;\n}\n\nParserATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nParserATNSimulator.prototype.constructor = ParserATNSimulator;\n\nParserATNSimulator.prototype.debug = false;\nParserATNSimulator.prototype.debug_closure = false;\nParserATNSimulator.prototype.debug_add = false;\nParserATNSimulator.prototype.debug_list_atn_decisions = false;\nParserATNSimulator.prototype.dfa_debug = false;\nParserATNSimulator.prototype.retry_debug = false;\n\n\nParserATNSimulator.prototype.reset = function() {\n};\n\nParserATNSimulator.prototype.adaptivePredict = function(input, decision, outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"adaptivePredict decision \" + decision +\n                               \" exec LA(1)==\" + this.getLookaheadName(input) +\n                               \" line \" + input.LT(1).line + \":\" +\n                               input.LT(1).column);\n    }\n    this._input = input;\n    this._startIndex = input.index;\n    this._outerContext = outerContext;\n\n    var dfa = this.decisionToDFA[decision];\n    this._dfa = dfa;\n    var m = input.mark();\n    var index = input.index;\n\n    // Now we are certain to have a specific decision's DFA\n    // But, do we still need an initial state?\n    try {\n        var s0;\n        if (dfa.precedenceDfa) {\n            // the start state for a precedence DFA depends on the current\n            // parser precedence, and is provided by a DFA method.\n            s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n        } else {\n            // the start state for a \"regular\" DFA is just s0\n            s0 = dfa.s0;\n        }\n        if (s0===null) {\n            if (outerContext===null) {\n                outerContext = RuleContext.EMPTY;\n            }\n            if (this.debug || this.debug_list_atn_decisions) {\n                console.log(\"predictATN decision \" + dfa.decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n            }\n\n            var fullCtx = false;\n            var s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n            if( dfa.precedenceDfa) {\n                // If this is a precedence DFA, we use applyPrecedenceFilter\n                // to convert the computed start state to a precedence start\n                // state. We then use DFA.setPrecedenceStartState to set the\n                // appropriate start state for the precedence level rather\n                // than simply setting DFA.s0.\n                //\n                dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                s0_closure = this.applyPrecedenceFilter(s0_closure);\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n            } else {\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.s0 = s0;\n            }\n        }\n        var alt = this.execATN(dfa, s0, input, index, outerContext);\n        if (this.debug) {\n            console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames));\n        }\n        return alt;\n    } finally {\n        this._dfa = null;\n        this.mergeCache = null; // wack cache after each prediction\n        input.seek(index);\n        input.release(m);\n    }\n};\n// Performs ATN simulation to compute a predicted alternative based\n//  upon the remaining input, but also updates the DFA cache to avoid\n//  having to traverse the ATN again for the same input sequence.\n\n// There are some key conditions we're looking for after computing a new\n// set of ATN configs (proposed DFA state):\n      // if the set is empty, there is no viable alternative for current symbol\n      // does the state uniquely predict an alternative?\n      // does the state have a conflict that would prevent us from\n      //   putting it on the work list?\n\n// We also have some key operations to do:\n      // add an edge from previous DFA state to potentially new DFA state, D,\n      //   upon current symbol but only if adding to work list, which means in all\n      //   cases except no viable alternative (and possibly non-greedy decisions?)\n      // collecting predicates and adding semantic context to DFA accept states\n      // adding rule context to context-sensitive DFA accept states\n      // consuming an input symbol\n      // reporting a conflict\n      // reporting an ambiguity\n      // reporting a context sensitivity\n      // reporting insufficient predicates\n\n// cover these cases:\n//    dead end\n//    single alt\n//    single alt + preds\n//    conflict\n//    conflict + preds\n//\nParserATNSimulator.prototype.execATN = function(dfa, s0, input, startIndex, outerContext ) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATN decision \" + dfa.decision +\n                \" exec LA(1)==\" + this.getLookaheadName(input) +\n                \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n    }\n    var alt;\n    var previousD = s0;\n\n    if (this.debug) {\n        console.log(\"s0 = \" + s0);\n    }\n    var t = input.LA(1);\n    while(true) { // while more work\n        var D = this.getExistingTargetState(previousD, t);\n        if(D===null) {\n            D = this.computeTargetState(dfa, previousD, t);\n        }\n        if(D===ATNSimulator.ERROR) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for SLL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n            input.seek(startIndex);\n            alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n            // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n            var conflictingAlts = null;\n            if (D.predicates!==null) {\n                if (this.debug) {\n                    console.log(\"DFA state has preds in DFA sim LL failover\");\n                }\n                var conflictIndex = input.index;\n                if(conflictIndex !== startIndex) {\n                    input.seek(startIndex);\n                }\n                conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (conflictingAlts.length===1) {\n                    if(this.debug) {\n                        console.log(\"Full LL avoided\");\n                    }\n                    return conflictingAlts.minValue();\n                }\n                if (conflictIndex !== startIndex) {\n                    // restore the index so reporting the fallback to full\n                    // context occurs with the index at the correct spot\n                    input.seek(conflictIndex);\n                }\n            }\n            if (this.dfa_debug) {\n                console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n            }\n            var fullCtx = true;\n            var s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n            this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n            alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n            return alt;\n        }\n        if (D.isAcceptState) {\n            if (D.predicates===null) {\n                return D.prediction;\n            }\n            var stopIndex = input.index;\n            input.seek(startIndex);\n            var alts = this.evalSemanticContext(D.predicates, outerContext, true);\n            if (alts.length===0) {\n                throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n            } else if (alts.length===1) {\n                return alts.minValue();\n            } else {\n                // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                return alts.minValue();\n            }\n        }\n        previousD = D;\n\n        if (t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n};\n//\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param previousD The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\n//\nParserATNSimulator.prototype.getExistingTargetState = function(previousD, t) {\n    var edges = previousD.edges;\n    if (edges===null) {\n        return null;\n    } else {\n        return edges[t + 1] || null;\n    }\n};\n//\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param dfa The DFA\n// @param previousD The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\n//\nParserATNSimulator.prototype.computeTargetState = function(dfa, previousD, t) {\n   var reach = this.computeReachSet(previousD.configs, t, false);\n    if(reach===null) {\n        this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n        return ATNSimulator.ERROR;\n    }\n    // create new target state; we'll add to DFA after it's complete\n    var D = new DFAState(null, reach);\n\n    var predictedAlt = this.getUniqueAlt(reach);\n\n    if (this.debug) {\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        console.log(\"SLL altSubSets=\" + Utils.arrayToString(altSubSets) +\n                    \", previous=\" + previousD.configs +\n                    \", configs=\" + reach +\n                    \", predict=\" + predictedAlt +\n                    \", allSubsetsConflict=\" +\n                    PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                    this.getConflictingAlts(reach));\n    }\n    if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n        // NO CONFLICT, UNIQUELY PREDICTED ALT\n        D.isAcceptState = true;\n        D.configs.uniqueAlt = predictedAlt;\n        D.prediction = predictedAlt;\n    } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n        // MORE THAN ONE VIABLE ALTERNATIVE\n        D.configs.conflictingAlts = this.getConflictingAlts(reach);\n        D.requiresFullContext = true;\n        // in SLL-only mode, we will stop at this state and return the minimum alt\n        D.isAcceptState = true;\n        D.prediction = D.configs.conflictingAlts.minValue();\n    }\n    if (D.isAcceptState && D.configs.hasSemanticContext) {\n        this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n        if( D.predicates!==null) {\n            D.prediction = ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    // all adds to dfa are done after we've created full D state\n    D = this.addDFAEdge(dfa, previousD, t, D);\n    return D;\n};\n\nParserATNSimulator.prototype.predicateDFAState = function(dfaState, decisionState) {\n    // We need to test all predicates, even in DFA states that\n    // uniquely predict alternative.\n    var nalts = decisionState.transitions.length;\n    // Update DFA so reach becomes accept state with (predicate,alt)\n    // pairs if preds found for conflicting alts\n    var altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n    var altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n    if (altToPred!==null) {\n        dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n        dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n    } else {\n        // There are preds in configs but they might go away\n        // when OR'd together like {p}? || NONE == NONE. If neither\n        // alt has preds, resolve to min alt\n        dfaState.prediction = altsToCollectPredsFrom.minValue();\n    }\n};\n\n// comes back with reach.uniqueAlt set to a valid alt\nParserATNSimulator.prototype.execATNWithFullContext = function(dfa, D, // how far we got before failing over\n                                     s0,\n                                     input,\n                                     startIndex,\n                                     outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATNWithFullContext \"+s0);\n    }\n    var fullCtx = true;\n    var foundExactAmbig = false;\n    var reach = null;\n    var previous = s0;\n    input.seek(startIndex);\n    var t = input.LA(1);\n    var predictedAlt = -1;\n    while (true) { // while more work\n        reach = this.computeReachSet(previous, t, fullCtx);\n        if (reach===null) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for LL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previous, startIndex);\n            input.seek(startIndex);\n            var alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        if(this.debug) {\n            console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                  PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                  PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n        }\n        reach.uniqueAlt = this.getUniqueAlt(reach);\n        // unique prediction?\n        if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n            predictedAlt = reach.uniqueAlt;\n            break;\n        } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n            predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n            if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                break;\n            }\n        } else {\n            // In exact ambiguity mode, we never try to terminate early.\n            // Just keeps scarfing until we know what the conflict is\n            if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                foundExactAmbig = true;\n                predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                break;\n            }\n            // else there are multiple non-conflicting subsets or\n            // we're not sure what the ambiguity is yet.\n            // So, keep going.\n        }\n        previous = reach;\n        if( t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n    // If the configuration set uniquely predicts an alternative,\n    // without conflict, then we know that it's a full LL decision\n    // not SLL.\n    if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n        this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n        return predictedAlt;\n    }\n    // We do not check predicates here because we have checked them\n    // on-the-fly when doing full context prediction.\n\n    //\n    // In non-exact ambiguity detection mode, we might\tactually be able to\n    // detect an exact ambiguity, but I'm not going to spend the cycles\n    // needed to check. We only emit ambiguity warnings in exact ambiguity\n    // mode.\n    //\n    // For example, we might know that we have conflicting configurations.\n    // But, that does not mean that there is no way forward without a\n    // conflict. It's possible to have nonconflicting alt subsets as in:\n\n    // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n    // from\n    //\n    //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n    //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n    //\n    // In this case, (17,1,[5 $]) indicates there is some next sequence that\n    // would resolve this without conflict to alternative 1. Any other viable\n    // next sequence, however, is associated with a conflict.  We stop\n    // looking for input because no amount of further lookahead will alter\n    // the fact that we should predict alternative 1.  We just can't say for\n    // sure that there is an ambiguity without looking further.\n\n    this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n    return predictedAlt;\n};\n\nParserATNSimulator.prototype.computeReachSet = function(closure, t, fullCtx) {\n    if (this.debug) {\n        console.log(\"in computeReachSet, starting closure: \" + closure);\n    }\n    if( this.mergeCache===null) {\n        this.mergeCache = new DoubleDict();\n    }\n    var intermediate = new ATNConfigSet(fullCtx);\n\n    // Configurations already in a rule stop state indicate reaching the end\n    // of the decision rule (local context) or end of the start rule (full\n    // context). Once reached, these configurations are never updated by a\n    // closure operation, so they are handled separately for the performance\n    // advantage of having a smaller intermediate set when calling closure.\n    //\n    // For full-context reach operations, separate handling is required to\n    // ensure that the alternative matching the longest overall sequence is\n    // chosen when multiple such configurations can match the input.\n\n    var skippedStopStates = null;\n\n    // First figure out where we can reach on input t\n    for (var i=0; i<closure.items.length;i++) {\n        var c = closure.items[i];\n        if(this.debug_add) {\n            console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n        }\n        if (c.state instanceof RuleStopState) {\n            if (fullCtx || t === Token.EOF) {\n                if (skippedStopStates===null) {\n                    skippedStopStates = [];\n                }\n                skippedStopStates.push(c);\n                if(this.debug_add) {\n                    console.log(\"added \" + c + \" to skippedStopStates\");\n                }\n            }\n            continue;\n        }\n        for(var j=0;j<c.state.transitions.length;j++) {\n            var trans = c.state.transitions[j];\n            var target = this.getReachableTarget(trans, t);\n            if (target!==null) {\n                var cfg = new ATNConfig({state:target}, c);\n                intermediate.add(cfg, this.mergeCache);\n                if(this.debug_add) {\n                    console.log(\"added \" + cfg + \" to intermediate\");\n                }\n            }\n        }\n    }\n    // Now figure out where the reach operation can take us...\n    var reach = null;\n\n    // This block optimizes the reach operation for intermediate sets which\n    // trivially indicate a termination state for the overall\n    // adaptivePredict operation.\n    //\n    // The conditions assume that intermediate\n    // contains all configurations relevant to the reach set, but this\n    // condition is not true when one or more configurations have been\n    // withheld in skippedStopStates, or when the current symbol is EOF.\n    //\n    if (skippedStopStates===null && t!==Token.EOF) {\n        if (intermediate.items.length===1) {\n            // Don't pursue the closure if there is just one state.\n            // It can only have one alternative; just add to result\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        }\n    }\n    // If the reach set could not be trivially determined, perform a closure\n    // operation on the intermediate set to compute its initial value.\n    //\n    if (reach===null) {\n        reach = new ATNConfigSet(fullCtx);\n        var closureBusy = new Set();\n        var treatEofAsEpsilon = t === Token.EOF;\n        for (var k=0; k<intermediate.items.length;k++) {\n            this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n        }\n    }\n    if (t === Token.EOF) {\n        // After consuming EOF no additional input is possible, so we are\n        // only interested in configurations which reached the end of the\n        // decision rule (local context) or end of the start rule (full\n        // context). Update reach to contain only these configurations. This\n        // handles both explicit EOF transitions in the grammar and implicit\n        // EOF transitions following the end of the decision or start rule.\n        //\n        // When reach==intermediate, no closure operation was performed. In\n        // this case, removeAllConfigsNotInRuleStopState needs to check for\n        // reachable rule stop states as well as configurations already in\n        // a rule stop state.\n        //\n        // This is handled before the configurations in skippedStopStates,\n        // because any configurations potentially added from that list are\n        // already guaranteed to meet this condition whether or not it's\n        // required.\n        //\n        reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n    }\n    // If skippedStopStates!==null, then it contains at least one\n    // configuration. For full-context reach operations, these\n    // configurations reached the end of the start rule, in which case we\n    // only add them back to reach if no configuration during the current\n    // closure operation reached such a state. This ensures adaptivePredict\n    // chooses an alternative matching the longest overall sequence when\n    // multiple alternatives are viable.\n    //\n    if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n        for (var l=0; l<skippedStopStates.length;l++) {\n            reach.add(skippedStopStates[l], this.mergeCache);\n        }\n    }\n    if (reach.items.length===0) {\n        return null;\n    } else {\n        return reach;\n    }\n};\n//\n// Return a configuration set containing only the configurations from\n// {@code configs} which are in a {@link RuleStopState}. If all\n// configurations in {@code configs} are already in a rule stop state, this\n// method simply returns {@code configs}.\n//\n// <p>When {@code lookToEndOfRule} is true, this method uses\n// {@link ATN//nextTokens} for each configuration in {@code configs} which is\n// not already in a rule stop state to see if a rule stop state is reachable\n// from the configuration via epsilon-only transitions.</p>\n//\n// @param configs the configuration set to update\n// @param lookToEndOfRule when true, this method checks for rule stop states\n// reachable by epsilon-only transitions from each configuration in\n// {@code configs}.\n//\n// @return {@code configs} if all configurations in {@code configs} are in a\n// rule stop state, otherwise return a new configuration set containing only\n// the configurations from {@code configs} which are in a rule stop state\n//\nParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState = function(configs, lookToEndOfRule) {\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return configs;\n    }\n    var result = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length;i++) {\n        var config = configs.items[i];\n        if (config.state instanceof RuleStopState) {\n            result.add(config, this.mergeCache);\n            continue;\n        }\n        if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n            var nextTokens = this.atn.nextTokens(config.state);\n            if (nextTokens.contains(Token.EPSILON)) {\n                var endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n            }\n        }\n    }\n    return result;\n};\n\nParserATNSimulator.prototype.computeStartState = function(p, ctx, fullCtx) {\n    // always at least the implicit call to start rule\n    var initialContext = predictionContextFromRuleContext(this.atn, ctx);\n    var configs = new ATNConfigSet(fullCtx);\n    for(var i=0;i<p.transitions.length;i++) {\n        var target = p.transitions[i].target;\n        var c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n        var closureBusy = new Set();\n        this.closure(c, configs, closureBusy, true, fullCtx, false);\n    }\n    return configs;\n};\n\n//\n// This method transforms the start state computed by\n// {@link //computeStartState} to the special start state used by a\n// precedence DFA for a particular precedence value. The transformation\n// process applies the following changes to the start state's configuration\n// set.\n//\n// <ol>\n// <li>Evaluate the precedence predicates for each configuration using\n// {@link SemanticContext//evalPrecedence}.</li>\n// <li>Remove all configurations which predict an alternative greater than\n// 1, for which another configuration that predicts alternative 1 is in the\n// same ATN state with the same prediction context. This transformation is\n// valid for the following reasons:\n// <ul>\n// <li>The closure block cannot contain any epsilon transitions which bypass\n// the body of the closure, so all states reachable via alternative 1 are\n// part of the precedence alternatives of the transformed left-recursive\n// rule.</li>\n// <li>The \"primary\" portion of a left recursive rule cannot contain an\n// epsilon transition, so the only way an alternative other than 1 can exist\n// in a state that is also reachable via alternative 1 is by nesting calls\n// to the left-recursive rule, with the outer calls not being at the\n// preferred precedence level.</li>\n// </ul>\n// </li>\n// </ol>\n//\n// <p>\n// The prediction context must be considered by this filter to address\n// situations like the following.\n// </p>\n// <code>\n// <pre>\n// grammar TA;\n// prog: statement* EOF;\n// statement: letterA | statement letterA 'b' ;\n// letterA: 'a';\n// </pre>\n// </code>\n// <p>\n// If the above grammar, the ATN state immediately before the token\n// reference {@code 'a'} in {@code letterA} is reachable from the left edge\n// of both the primary and closure blocks of the left-recursive rule\n// {@code statement}. The prediction context associated with each of these\n// configurations distinguishes between them, and prevents the alternative\n// which stepped out to {@code prog} (and then back in to {@code statement}\n// from being eliminated by the filter.\n// </p>\n//\n// @param configs The configuration set computed by\n// {@link //computeStartState} as the start state for the DFA.\n// @return The transformed configuration set representing the start state\n// for a precedence DFA at a particular precedence level (determined by\n// calling {@link Parser//getPrecedence}).\n//\nParserATNSimulator.prototype.applyPrecedenceFilter = function(configs) {\n\tvar config;\n\tvar statesFromAlt1 = [];\n    var configSet = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        // handle alt 1 first\n        if (config.alt !== 1) {\n            continue;\n        }\n        var updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n        if (updatedContext===null) {\n            // the configuration was eliminated\n            continue;\n        }\n        statesFromAlt1[config.state.stateNumber] = config.context;\n        if (updatedContext !== config.semanticContext) {\n            configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n        } else {\n            configSet.add(config, this.mergeCache);\n        }\n    }\n    for(i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        if (config.alt === 1) {\n            // already handled\n            continue;\n        }\n        // In the future, this elimination step could be updated to also\n        // filter the prediction context for alternatives predicting alt>1\n        // (basically a graph subtraction algorithm).\n\t\tif (!config.precedenceFilterSuppressed) {\n            var context = statesFromAlt1[config.state.stateNumber] || null;\n            if (context!==null && context.equals(config.context)) {\n                // eliminated\n                continue;\n            }\n\t\t}\n        configSet.add(config, this.mergeCache);\n    }\n    return configSet;\n};\n\nParserATNSimulator.prototype.getReachableTarget = function(trans, ttype) {\n    if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n        return trans.target;\n    } else {\n        return null;\n    }\n};\n\nParserATNSimulator.prototype.getPredsForAmbigAlts = function(ambigAlts, configs, nalts) {\n    // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n    // altToPred starts as an array of all null contexts. The entry at index i\n    // corresponds to alternative i. altToPred[i] may have one of three values:\n    //   1. null: no ATNConfig c is found such that c.alt==i\n    //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n    //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n    //      alt i has at least one unpredicated config.\n    //   3. Non-NONE Semantic Context: There exists at least one, and for all\n    //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n    //\n    // From this, it is clear that NONE||anything==NONE.\n    //\n    var altToPred = [];\n    for(var i=0;i<configs.items.length;i++) {\n        var c = configs.items[i];\n        if(ambigAlts.contains( c.alt )) {\n            altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n        }\n    }\n    var nPredAlts = 0;\n    for (i =1;i< nalts+1;i++) {\n        var pred = altToPred[i] || null;\n        if (pred===null) {\n            altToPred[i] = SemanticContext.NONE;\n        } else if (pred !== SemanticContext.NONE) {\n            nPredAlts += 1;\n        }\n    }\n    // nonambig alts are null in altToPred\n    if (nPredAlts===0) {\n        altToPred = null;\n    }\n    if (this.debug) {\n        console.log(\"getPredsForAmbigAlts result \" + Utils.arrayToString(altToPred));\n    }\n    return altToPred;\n};\n\nParserATNSimulator.prototype.getPredicatePredictions = function(ambigAlts, altToPred) {\n    var pairs = [];\n    var containsPredicate = false;\n    for (var i=1; i<altToPred.length;i++) {\n        var pred = altToPred[i];\n        // unpredicated is indicated by SemanticContext.NONE\n        if( ambigAlts!==null && ambigAlts.contains( i )) {\n            pairs.push(new PredPrediction(pred, i));\n        }\n        if (pred !== SemanticContext.NONE) {\n            containsPredicate = true;\n        }\n    }\n    if (! containsPredicate) {\n        return null;\n    }\n    return pairs;\n};\n\n//\n// This method is used to improve the localization of error messages by\n// choosing an alternative rather than throwing a\n// {@link NoViableAltException} in particular prediction scenarios where the\n// {@link //ERROR} state was reached during ATN simulation.\n//\n// <p>\n// The default implementation of this method uses the following\n// algorithm to identify an ATN configuration which successfully parsed the\n// decision entry rule. Choosing such an alternative ensures that the\n// {@link ParserRuleContext} returned by the calling rule will be complete\n// and valid, and the syntax error will be reported later at a more\n// localized location.</p>\n//\n// <ul>\n// <li>If a syntactically valid path or paths reach the end of the decision rule and\n// they are semantically valid if predicated, return the min associated alt.</li>\n// <li>Else, if a semantically invalid but syntactically valid path exist\n// or paths exist, return the minimum associated alt.\n// </li>\n// <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n// </ul>\n//\n// <p>\n// In some scenarios, the algorithm described above could predict an\n// alternative which will result in a {@link FailedPredicateException} in\n// the parser. Specifically, this could occur if the <em>only</em> configuration\n// capable of successfully parsing to the end of the decision rule is\n// blocked by a semantic predicate. By choosing this alternative within\n// {@link //adaptivePredict} instead of throwing a\n// {@link NoViableAltException}, the resulting\n// {@link FailedPredicateException} in the parser will identify the specific\n// predicate which is preventing the parser from successfully parsing the\n// decision rule, which helps developers identify and correct logic errors\n// in semantic predicates.\n// </p>\n//\n// @param configs The ATN configurations which were valid immediately before\n// the {@link //ERROR} state was reached\n// @param outerContext The is the \\gamma_0 initial parser context from the paper\n// or the parser stack at the instant before prediction commences.\n//\n// @return The value to return from {@link //adaptivePredict}, or\n// {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n// identified and {@link //adaptivePredict} should report an error instead.\n//\nParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule = function(configs, outerContext) {\n    var cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n    var semValidConfigs = cfgs[0];\n    var semInvalidConfigs = cfgs[1];\n    var alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n    if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n        return alt;\n    }\n    // Is there a syntactically valid path with a failed pred?\n    if (semInvalidConfigs.items.length>0) {\n        alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n            return alt;\n        }\n    }\n    return ATN.INVALID_ALT_NUMBER;\n};\n\nParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule = function(configs) {\n    var alts = [];\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n            if(alts.indexOf(c.alt)<0) {\n                alts.push(c.alt);\n            }\n        }\n    }\n    if (alts.length===0) {\n        return ATN.INVALID_ALT_NUMBER;\n    } else {\n        return Math.min.apply(null, alts);\n    }\n};\n// Walk the list of configurations and split them according to\n//  those that have preds evaluating to true/false.  If no pred, assume\n//  true pred and include in succeeded set.  Returns Pair of sets.\n//\n//  Create a new set so as not to alter the incoming parameter.\n//\n//  Assumption: the input stream has been restored to the starting point\n//  prediction, which is where predicates need to evaluate.\n//\nParserATNSimulator.prototype.splitAccordingToSemanticValidity = function( configs, outerContext) {\n    var succeeded = new ATNConfigSet(configs.fullCtx);\n    var failed = new ATNConfigSet(configs.fullCtx);\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.semanticContext !== SemanticContext.NONE) {\n            var predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n            if (predicateEvaluationResult) {\n                succeeded.add(c);\n            } else {\n                failed.add(c);\n            }\n        } else {\n            succeeded.add(c);\n        }\n    }\n    return [succeeded, failed];\n};\n\n// Look through a list of predicate/alt pairs, returning alts for the\n//  pairs that win. A {@code NONE} predicate indicates an alt containing an\n//  unpredicated config which behaves as \"always true.\" If !complete\n//  then we stop at the first predicate that evaluates to true. This\n//  includes pairs with null predicates.\n//\nParserATNSimulator.prototype.evalSemanticContext = function(predPredictions, outerContext, complete) {\n    var predictions = new BitSet();\n    for(var i=0;i<predPredictions.length;i++) {\n    \tvar pair = predPredictions[i];\n        if (pair.pred === SemanticContext.NONE) {\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n            continue;\n        }\n        var predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n        if (this.debug || this.dfa_debug) {\n            console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n        }\n        if (predicateEvaluationResult) {\n            if (this.debug || this.dfa_debug) {\n                console.log(\"PREDICT \" + pair.alt);\n            }\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n        }\n    }\n    return predictions;\n};\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n\nParserATNSimulator.prototype.closure = function(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n    var initialDepth = 0;\n    this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                             fullCtx, initialDepth, treatEofAsEpsilon);\n};\n\n\nParserATNSimulator.prototype.closureCheckingStopState = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    if (this.debug || this.debug_closure) {\n        console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        // console.log(\"configs(\" + configs.toString() + \")\");\n        if(config.reachesIntoOuterContext>50) {\n            throw \"problem\";\n        }\n    }\n    if (config.state instanceof RuleStopState) {\n        // We hit rule end. If we have context info, use it\n        // run thru all possible stack tops in ctx\n        if (! config.context.isEmpty()) {\n            for ( var i =0; i<config.context.length; i++) {\n                if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                    if (fullCtx) {\n                        configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                        continue;\n                    } else {\n                        // we have no context info, just chase follow links (if greedy)\n                        if (this.debug) {\n                            console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                        }\n                        this.closure_(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, depth, treatEofAsEpsilon);\n                    }\n                    continue;\n                }\n                var returnState = this.atn.states[config.context.getReturnState(i)];\n                var newContext = config.context.getParent(i); // \"pop\" return state\n                var parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                var c = new ATNConfig(parms, null);\n                // While we have context to pop back from, we may have\n                // gotten that context AFTER having falling off a rule.\n                // Make sure we track that we are now out of context.\n                c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n            }\n            return;\n        } else if( fullCtx) {\n            // reached end of start rule\n            configs.add(config, this.mergeCache);\n            return;\n        } else {\n            // else if we have no context info, just chase follow links (if greedy)\n            if (this.debug) {\n                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n            }\n        }\n    }\n    this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n};\n\n\n// Do the actual work of walking epsilon edges//\nParserATNSimulator.prototype.closure_ = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    var p = config.state;\n    // optimization\n    if (! p.epsilonOnlyTransitions) {\n        configs.add(config, this.mergeCache);\n        // make sure to not return here, because EOF transitions can act as\n        // both epsilon transitions and non-epsilon transitions.\n    }\n    for(var i = 0;i<p.transitions.length; i++) {\n        if(i==0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n            continue;\n\n        var t = p.transitions[i];\n        var continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n        var c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n        if (c!==null) {\n\t\t\tif (!t.isEpsilon && closureBusy.add(c)!==c){\n\t\t\t\t// avoid infinite recursion for EOF* and EOF+\n\t\t\t\tcontinue;\n\t\t\t}\n            var newDepth = depth;\n            if ( config.state instanceof RuleStopState) {\n                // target fell off end of rule; mark resulting c as having dipped into outer context\n                // We can't get here if incoming config was rule stop and we had context\n                // track how far we dip into outer context.  Might\n                // come in handy and we avoid evaluating context dependent\n                // preds if this is > 0.\n\n                if (closureBusy.add(c)!==c) {\n                    // avoid infinite recursion for right-recursive rules\n                    continue;\n                }\n\n\t\t\t\tif (this._dfa !== null && this._dfa.precedenceDfa) {\n\t\t\t\t\tif (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n\t\t\t\t\t\tc.precedenceFilterSuppressed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                c.reachesIntoOuterContext += 1;\n                configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                newDepth -= 1;\n                if (this.debug) {\n                    console.log(\"dips into outer ctx: \" + c);\n                }\n            } else if (t instanceof RuleTransition) {\n                // latch when newDepth goes negative - once we step out of the entry context we can't return\n                if (newDepth >= 0) {\n                    newDepth += 1;\n                }\n            }\n            this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n        }\n    }\n};\n\n\nParserATNSimulator.prototype.canDropLoopEntryEdgeInLeftRecursiveRule = function(config) {\n    // return False\n    var p = config.state;\n    // First check to see if we are in StarLoopEntryState generated during\n    // left-recursion elimination. For efficiency, also check if\n    // the context has an empty stack case. If so, it would mean\n    // global FOLLOW so we can't perform optimization\n    // Are we the special loop entry/exit state? or SLL wildcard\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY)\n        return false;\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n           config.context.isEmpty() || config.context.hasEmptyPath())\n        return false;\n\n    // Require all return states to return back to the same rule that p is in.\n    var numCtxs = config.context.length;\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnState = this.atn.states[config.context.getReturnState(i)];\n        if (returnState.ruleIndex != p.ruleIndex)\n            return false;\n    }\n\n    var decisionStartState = p.transitions[0].target;\n    var blockEndStateNum = decisionStartState.endState.stateNumber;\n    var blockEndState = this.atn.states[blockEndStateNum];\n\n    // Verify that the top of each stack context leads to loop entry/exit\n    // state through epsilon edges and w/o leaving rule.\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnStateNumber = config.context.getReturnState(i);\n        var returnState = this.atn.states[returnStateNumber];\n        // all states must have single outgoing epsilon edge\n        if (returnState.transitions.length != 1 || !returnState.transitions[0].isEpsilon)\n            return false;\n\n        // Look for prefix op case like 'not expr', (' type ')' expr\n        var returnStateTarget = returnState.transitions[0].target;\n        if ( returnState.stateType == ATNState.BLOCK_END && returnStateTarget == p )\n            continue;\n\n        // Look for 'expr op expr' or case where expr's return state is block end\n        // of (...)* internal block; the block end points to loop back\n        // which points to p but we don't need to check that\n        if ( returnState == blockEndState )\n            continue;\n\n        // Look for ternary expr ? expr : expr. The return state points at block end,\n        // which points at loop entry state\n        if ( returnStateTarget == blockEndState )\n            continue;\n\n        // Look for complex prefix 'between expr and expr' case where 2nd expr's\n        // return state points at block end state of (...)* internal block\n        if (returnStateTarget.stateType == ATNState.BLOCK_END && returnStateTarget.transitions.length == 1\n                && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target == p)\n            continue;\n\n        // anything else ain't conforming\n        return false;\n    }\n    return true;\n};\n\n\nParserATNSimulator.prototype.getRuleName = function( index) {\n    if (this.parser!==null && index>=0) {\n        return this.parser.ruleNames[index];\n    } else {\n        return \"<rule \" + index + \">\";\n    }\n};\n\nParserATNSimulator.prototype.getEpsilonTarget = function(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n    switch(t.serializationType) {\n    case Transition.RULE:\n        return this.ruleTransition(config, t);\n    case Transition.PRECEDENCE:\n        return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.PREDICATE:\n        return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.ACTION:\n        return this.actionTransition(config, t);\n    case Transition.EPSILON:\n        return new ATNConfig({state:t.target}, config);\n    case Transition.ATOM:\n    case Transition.RANGE:\n    case Transition.SET:\n        // EOF transitions act like epsilon transitions after the first EOF\n        // transition is traversed\n        if (treatEofAsEpsilon) {\n            if (t.matches(Token.EOF, 0, 1)) {\n                return new ATNConfig({state: t.target}, config);\n            }\n        }\n        return null;\n    default:\n    \treturn null;\n    }\n};\n\nParserATNSimulator.prototype.actionTransition = function(config, t) {\n    if (this.debug) {\n        var index = t.actionIndex==-1 ? 65535 : t.actionIndex;\n        console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n    }\n    return new ATNConfig({state:t.target}, config);\n};\n\nParserATNSimulator.prototype.precedenceTransition = function(config, pt,  collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                pt.precedence + \">=_p, ctx dependent=true\");\n        if (this.parser!==null) {\n        \tconsole.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && inContext) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.predTransition = function(config, pt, collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n        if (this.parser!==null) {\n            console.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.ruleTransition = function(config, t) {\n    if (this.debug) {\n        console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n    }\n    var returnState = t.followState;\n    var newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n    return new ATNConfig({state:t.target, context:newContext}, config );\n};\n\nParserATNSimulator.prototype.getConflictingAlts = function(configs) {\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.getAlts(altsets);\n};\n\n // Sam pointed out a problem with the previous definition, v3, of\n // ambiguous states. If we have another state associated with conflicting\n // alternatives, we should keep going. For example, the following grammar\n //\n // s : (ID | ID ID?) ';' ;\n //\n // When the ATN simulation reaches the state before ';', it has a DFA\n // state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n // 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n // because alternative to has another way to continue, via [6|2|[]].\n // The key is that we have a single state that has config's only associated\n // with a single alternative, 2, and crucially the state transitions\n // among the configurations are all non-epsilon transitions. That means\n // we don't consider any conflicts that include alternative 2. So, we\n // ignore the conflict between alts 1 and 2. We ignore a set of\n // conflicting alts when there is an intersection with an alternative\n // associated with a single alt state in the state&rarr;config-list map.\n //\n // It's also the case that we might have two conflicting configurations but\n // also a 3rd nonconflicting configuration for a different alternative:\n // [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n //\n // a : A | A | A B ;\n //\n // After matching input A, we reach the stop state for rule A, state 1.\n // State 8 is the state right before B. Clearly alternatives 1 and 2\n // conflict and no amount of further lookahead will separate the two.\n // However, alternative 3 will be able to continue and so we do not\n // stop working on this state. In the previous example, we're concerned\n // with states associated with the conflicting alternatives. Here alt\n // 3 is not associated with the conflicting configs, but since we can continue\n // looking for input reasonably, I don't declare the state done. We\n // ignore a set of conflicting alts when we have an alternative\n // that we still need to pursue.\n//\n\nParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt = function(configs) {\n    var conflictingAlts = null;\n    if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n        conflictingAlts = new BitSet();\n        conflictingAlts.add(configs.uniqueAlt);\n    } else {\n        conflictingAlts = configs.conflictingAlts;\n    }\n    return conflictingAlts;\n};\n\nParserATNSimulator.prototype.getTokenName = function( t) {\n    if (t===Token.EOF) {\n        return \"EOF\";\n    }\n    if( this.parser!==null && this.parser.literalNames!==null) {\n        if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n            console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n            console.log(\"\" + this.parser.getInputStream().getTokens());\n        } else {\n            var name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n            return name + \"<\" + t + \">\";\n        }\n    }\n    return \"\" + t;\n};\n\nParserATNSimulator.prototype.getLookaheadName = function(input) {\n    return this.getTokenName(input.LA(1));\n};\n\n// Used for debugging in adaptivePredict around execATN but I cut\n//  it out for clarity now that alg. works well. We can leave this\n//  \"dead\" code for a bit.\n//\nParserATNSimulator.prototype.dumpDeadEndConfigs = function(nvae) {\n    console.log(\"dead end configs: \");\n    var decs = nvae.getDeadEndConfigs();\n    for(var i=0; i<decs.length; i++) {\n    \tvar c = decs[i];\n        var trans = \"no edges\";\n        if (c.state.transitions.length>0) {\n            var t = c.state.transitions[0];\n            if (t instanceof AtomTransition) {\n                trans = \"Atom \"+ this.getTokenName(t.label);\n            } else if (t instanceof SetTransition) {\n                var neg = (t instanceof NotSetTransition);\n                trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n            }\n        }\n        console.error(c.toString(this.parser, true) + \":\" + trans);\n    }\n};\n\nParserATNSimulator.prototype.noViableAlt = function(input, outerContext, configs, startIndex) {\n    return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n};\n\nParserATNSimulator.prototype.getUniqueAlt = function(configs) {\n    var alt = ATN.INVALID_ALT_NUMBER;\n    for(var i=0;i<configs.items.length;i++) {\n    \tvar c = configs.items[i];\n        if (alt === ATN.INVALID_ALT_NUMBER) {\n            alt = c.alt // found first alt\n        } else if( c.alt!==alt) {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    return alt;\n};\n\n//\n// Add an edge to the DFA, if possible. This method calls\n// {@link //addDFAState} to ensure the {@code to} state is present in the\n// DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n// range of edges that can be represented in the DFA tables, this method\n// returns without adding the edge to the DFA.\n//\n// <p>If {@code to} is {@code null}, this method returns {@code null}.\n// Otherwise, this method returns the {@link DFAState} returned by calling\n// {@link //addDFAState} for the {@code to} state.</p>\n//\n// @param dfa The DFA\n// @param from The source state for the edge\n// @param t The input symbol\n// @param to The target state for the edge\n//\n// @return If {@code to} is {@code null}, this method returns {@code null};\n// otherwise this method returns the result of calling {@link //addDFAState}\n// on {@code to}\n//\nParserATNSimulator.prototype.addDFAEdge = function(dfa, from_, t, to) {\n    if( this.debug) {\n        console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n    }\n    if (to===null) {\n        return null;\n    }\n    to = this.addDFAState(dfa, to); // used existing if possible not incoming\n    if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n        return to;\n    }\n    if (from_.edges===null) {\n        from_.edges = [];\n    }\n    from_.edges[t+1] = to; // connect\n\n    if (this.debug) {\n        var literalNames = this.parser===null ? null : this.parser.literalNames;\n        var symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n        console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n    }\n    return to;\n};\n//\n// Add state {@code D} to the DFA if it is not already present, and return\n// the actual instance stored in the DFA. If a state equivalent to {@code D}\n// is already in the DFA, the existing state is returned. Otherwise this\n// method returns {@code D} after adding it to the DFA.\n//\n// <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n// does not change the DFA.</p>\n//\n// @param dfa The dfa\n// @param D The DFA state to add\n// @return The state stored in the DFA. This will be either the existing\n// state if {@code D} is already in the DFA, or {@code D} itself if the\n// state was not already present.\n//\nParserATNSimulator.prototype.addDFAState = function(dfa, D) {\n    if (D == ATNSimulator.ERROR) {\n        return D;\n    }\n    var existing = dfa.states.get(D);\n    if(existing!==null) {\n        return existing;\n    }\n    D.stateNumber = dfa.states.length;\n    if (! D.configs.readOnly) {\n        D.configs.optimizeConfigs(this);\n        D.configs.setReadonly(true);\n    }\n    dfa.states.add(D);\n    if (this.debug) {\n        console.log(\"adding new DFA state: \" + D);\n    }\n    return D;\n};\n\nParserATNSimulator.prototype.reportAttemptingFullContext = function(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n    }\n};\n\nParserATNSimulator.prototype.reportContextSensitivity = function(dfa, prediction, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n    }\n};\n\n// If context sensitive parsing, we know it's ambiguity not conflict//\nParserATNSimulator.prototype.reportAmbiguity = function(dfa, D, startIndex, stopIndex,\n                               exact, ambigAlts, configs ) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n    }\n};\n\nexports.ParserATNSimulator = ParserATNSimulator;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.DFA = require('./DFA').DFA;\nexports.DFASerializer = require('./DFASerializer').DFASerializer;\nexports.LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\nexports.PredPrediction = require('./DFAState').PredPrediction;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Set = require(\"../Utils\").Set;\nvar DFAState = require('./DFAState').DFAState;\nvar StarLoopEntryState = require('../atn/ATNState').StarLoopEntryState;\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar DFASerializer = require('./DFASerializer').DFASerializer;\nvar LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\n\n\n\nfunction DFA(atnStartState, decision) {\n\tif (decision === undefined) {\n\t\tdecision = 0;\n\t}\n\t// From which ATN state did we create this DFA?\n\tthis.atnStartState = atnStartState;\n\tthis.decision = decision;\n\t// A set of all DFA states. Use {@link Map} so we can get old state back\n\t// ({@link Set} only allows you to see if it's there).\n\tthis._states = new Set();\n\tthis.s0 = null;\n\t// {@code true} if this DFA is for a precedence decision; otherwise,\n\t// {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t// {@link //setPrecedenceDfa}.\n\tthis.precedenceDfa = false;\n    if (atnStartState instanceof StarLoopEntryState)\n    {\n        if (atnStartState.isPrecedenceDecision) {\n            this.precedenceDfa = true;\n            var precedenceState = new DFAState(null, new ATNConfigSet());\n            precedenceState.edges = [];\n            precedenceState.isAcceptState = false;\n            precedenceState.requiresFullContext = false;\n            this.s0 = precedenceState;\n        }\n    }\n\treturn this;\n}\n\n// Get the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @return The start state corresponding to the specified precedence, or\n// {@code null} if no start state exists for the specified precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n\nDFA.prototype.getPrecedenceStartState = function(precedence) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\t// s0.edges is never null for a precedence DFA\n\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\treturn null;\n\t}\n\treturn this.s0.edges[precedence] || null;\n};\n\n// Set the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @param startState The start state corresponding to the specified\n// precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n//\nDFA.prototype.setPrecedenceStartState = function(precedence, startState) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\tif (precedence < 0) {\n\t\treturn;\n\t}\n\n\t// synchronization on s0 here is ok. when the DFA is turned into a\n\t// precedence DFA, s0 will be initialized once and not updated again\n\t// s0.edges is never null for a precedence DFA\n\tthis.s0.edges[precedence] = startState;\n};\n\n//\n// Sets whether this is a precedence DFA. If the specified value differs\n// from the current DFA configuration, the following actions are taken;\n// otherwise no changes are made to the current DFA.\n//\n// <ul>\n// <li>The {@link //states} map is cleared</li>\n// <li>If {@code precedenceDfa} is {@code false}, the initial state\n// {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n// {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n// store the start states for individual precedence values.</li>\n// <li>The {@link //precedenceDfa} field is updated</li>\n// </ul>\n//\n// @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n// {@code false}\n\nDFA.prototype.setPrecedenceDfa = function(precedenceDfa) {\n\tif (this.precedenceDfa!==precedenceDfa) {\n\t\tthis._states = new DFAStatesSet();\n\t\tif (precedenceDfa) {\n\t\t\tvar precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\tprecedenceState.edges = [];\n\t\t\tprecedenceState.isAcceptState = false;\n\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\tthis.s0 = precedenceState;\n\t\t} else {\n\t\t\tthis.s0 = null;\n\t\t}\n\t\tthis.precedenceDfa = precedenceDfa;\n\t}\n};\n\nObject.defineProperty(DFA.prototype, \"states\", {\n\tget : function() {\n\t\treturn this._states;\n\t}\n});\n\n// Return a list of all states in this DFA, ordered by state number.\nDFA.prototype.sortedStates = function() {\n\tvar list = this._states.values();\n\treturn list.sort(function(a, b) {\n\t\treturn a.stateNumber - b.stateNumber;\n\t});\n};\n\nDFA.prototype.toString = function(literalNames, symbolicNames) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new DFASerializer(this, literalNames, symbolicNames);\n\treturn serializer.toString();\n};\n\nDFA.prototype.toLexerString = function() {\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new LexerDFASerializer(this);\n\treturn serializer.toString();\n};\n\nexports.DFA = DFA;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Tree = require('./Tree');\nexports.Trees = require('./Trees').Trees;\nexports.RuleNode = Tree.RuleNode;\nexports.ParseTreeListener = Tree.ParseTreeListener;\nexports.ParseTreeVisitor = Tree.ParseTreeVisitor;\nexports.ParseTreeWalker = Tree.ParseTreeWalker;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.RecognitionException = require('./Errors').RecognitionException;\nexports.NoViableAltException = require('./Errors').NoViableAltException;\nexports.LexerNoViableAltException = require('./Errors').LexerNoViableAltException;\nexports.InputMismatchException = require('./Errors').InputMismatchException;\nexports.FailedPredicateException = require('./Errors').FailedPredicateException;\nexports.DiagnosticErrorListener = require('./DiagnosticErrorListener').DiagnosticErrorListener;\nexports.BailErrorStrategy = require('./ErrorStrategy').BailErrorStrategy;\nexports.ErrorListener = require('./ErrorListener').ErrorListener;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This implementation of {@link ANTLRErrorListener} can be used to identify\n// certain potential correctness and performance problems in grammars. \"Reports\"\n// are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n// message.\n//\n// <ul>\n// <li><b>Ambiguities</b>: These are cases where more than one path through the\n// grammar can match the input.</li>\n// <li><b>Weak context sensitivity</b>: These are cases where full-context\n// prediction resolved an SLL conflict to a unique alternative which equaled the\n// minimum alternative of the SLL conflict.</li>\n// <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n// full-context prediction resolved an SLL conflict to a unique alternative,\n// <em>and</em> the minimum alternative of the SLL conflict was found to not be\n// a truly viable alternative. Two-stage parsing cannot be used for inputs where\n// this situation occurs.</li>\n// </ul>\n\nvar BitSet = require('./../Utils').BitSet;\nvar ErrorListener = require('./ErrorListener').ErrorListener;\nvar Interval = require('./../IntervalSet').Interval;\n\nfunction DiagnosticErrorListener(exactOnly) {\n\tErrorListener.call(this);\n\texactOnly = exactOnly || true;\n\t// whether all ambiguities or only exact ambiguities are reported.\n\tthis.exactOnly = exactOnly;\n\treturn this;\n}\n\nDiagnosticErrorListener.prototype = Object.create(ErrorListener.prototype);\nDiagnosticErrorListener.prototype.constructor = DiagnosticErrorListener;\n\nDiagnosticErrorListener.prototype.reportAmbiguity = function(recognizer, dfa,\n\t\tstartIndex, stopIndex, exact, ambigAlts, configs) {\n\tif (this.exactOnly && !exact) {\n\t\treturn;\n\t}\n\tvar msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportAttemptingFullContext = function(\n\t\trecognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tvar msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportContextSensitivity = function(\n\t\trecognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tvar msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.getDecisionDescription = function(recognizer, dfa) {\n\tvar decision = dfa.decision;\n\tvar ruleIndex = dfa.atnStartState.ruleIndex;\n\n\tvar ruleNames = recognizer.ruleNames;\n\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\treturn \"\" + decision;\n\t}\n\tvar ruleName = ruleNames[ruleIndex] || null;\n\tif (ruleName === null || ruleName.length === 0) {\n\t\treturn \"\" + decision;\n\t}\n\treturn \"\" + decision + \" (\" + ruleName + \")\";\n};\n\n//\n// Computes the set of conflicting or ambiguous alternatives from a\n// configuration set, if that information was not already provided by the\n// parser.\n//\n// @param reportedAlts The set of conflicting or ambiguous alternatives, as\n// reported by the parser.\n// @param configs The conflicting or ambiguous configuration set.\n// @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n// returns the set of alternatives represented in {@code configs}.\n//\nDiagnosticErrorListener.prototype.getConflictingAlts = function(reportedAlts, configs) {\n\tif (reportedAlts !== null) {\n\t\treturn reportedAlts;\n\t}\n\tvar result = new BitSet();\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tresult.add(configs.items[i].alt);\n\t}\n\treturn \"{\" + result.values().join(\", \") + \"}\";\n};\n\nexports.DiagnosticErrorListener = DiagnosticErrorListener;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar InputStream = require('./InputStream').InputStream;\n\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\n// Utility functions to create InputStreams from various sources.\n//\n// All returned InputStreams support the full range of Unicode\n// up to U+10FFFF (the default behavior of InputStream only supports\n// code points up to U+FFFF).\nvar CharStreams = {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new InputStream(str, true);\n  },\n\n  // Asynchronously creates an InputStream from a blob given the\n  // encoding of the bytes in that blob (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes onLoad(result) on success, onError(error) on\n  // failure.\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    var reader = FileReader();\n    reader.onload = function(e) {\n      var is = new InputStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  // Creates an InputStream from a Buffer given the\n  // encoding of the bytes in that buffer (defaults to 'utf8' if\n  // encoding is null).\n  fromBuffer: function(buffer, encoding) {\n    return new InputStream(buffer.toString(encoding), true);\n  },\n\n  // Asynchronously creates an InputStream from a file on disk given\n  // the encoding of the bytes in that file (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes callback(error, result) on completion.\n  fromPath: function(path, encoding, callback) {\n    fs.readFile(path, encoding, function(err, data) {\n      var is = null;\n      if (data !== null) {\n        is = new InputStream(data, true);\n      }\n      callback(err, is);\n    });\n  },\n\n  // Synchronously creates an InputStream given a path to a file\n  // on disk and the encoding of the bytes in that file (defaults to\n  // 'utf8' if encoding is null).\n  fromPathSync: function(path, encoding) {\n    var data = fs.readFileSync(path, encoding);\n    return new InputStream(data, true);\n  }\n};\n\nexports.CharStreams = CharStreams;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n//  This is an InputStream that is loaded from a file all at once\n//  when you construct the object.\n//\nvar InputStream = require('./InputStream').InputStream;\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\nfunction FileStream(fileName, decodeToUnicodeCodePoints) {\n\tvar data = fs.readFileSync(fileName, \"utf8\");\n\tInputStream.call(this, data, decodeToUnicodeCodePoints);\n\tthis.fileName = fileName;\n\treturn this;\n}\n\nFileStream.prototype = Object.create(InputStream.prototype);\nFileStream.prototype.constructor = FileStream;\n\nexports.FileStream = FileStream;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//\n// This class extends {@link BufferedTokenStream} with functionality to filter\n// token streams to tokens on a particular channel (tokens where\n// {@link Token//getChannel} returns a particular value).\n//\n// <p>\n// This token stream provides access to all tokens by index or when calling\n// methods like {@link //getText}. The channel filtering is only used for code\n// accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n// {@link //LB}.</p>\n//\n// <p>\n// By default, tokens are placed on the default channel\n// ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n// {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n// call {@link Lexer//setChannel}.\n// </p>\n//\n// <p>\n// Note: lexer rules which use the {@code ->skip} lexer command or call\n// {@link Lexer//skip} do not produce tokens at all, so input text matched by\n// such a rule will not be available as part of the token stream, regardless of\n// channel.</p>\n///\n\nvar Token = require('./Token').Token;\nvar BufferedTokenStream = require('./BufferedTokenStream').BufferedTokenStream;\n\nfunction CommonTokenStream(lexer, channel) {\n\tBufferedTokenStream.call(this, lexer);\n    this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    return this;\n}\n\nCommonTokenStream.prototype = Object.create(BufferedTokenStream.prototype);\nCommonTokenStream.prototype.constructor = CommonTokenStream;\n\nCommonTokenStream.prototype.adjustSeekIndex = function(i) {\n    return this.nextTokenOnChannel(i, this.channel);\n};\n\nCommonTokenStream.prototype.LB = function(k) {\n    if (k===0 || this.index-k<0) {\n        return null;\n    }\n    var i = this.index;\n    var n = 1;\n    // find k good tokens looking backwards\n    while (n <= k) {\n        // skip off-channel tokens\n        i = this.previousTokenOnChannel(i - 1, this.channel);\n        n += 1;\n    }\n    if (i < 0) {\n        return null;\n    }\n    return this.tokens[i];\n};\n\nCommonTokenStream.prototype.LT = function(k) {\n    this.lazyInit();\n    if (k === 0) {\n        return null;\n    }\n    if (k < 0) {\n        return this.LB(-k);\n    }\n    var i = this.index;\n    var n = 1; // we know tokens[pos] is a good one\n    // find k good tokens\n    while (n < k) {\n        // skip off-channel tokens, but make sure to not look past EOF\n        if (this.sync(i + 1)) {\n            i = this.nextTokenOnChannel(i + 1, this.channel);\n        }\n        n += 1;\n    }\n    return this.tokens[i];\n};\n\n// Count EOF just once.///\nCommonTokenStream.prototype.getNumberOfOnChannelTokens = function() {\n    var n = 0;\n    this.fill();\n    for (var i =0; i< this.tokens.length;i++) {\n        var t = this.tokens[i];\n        if( t.channel===this.channel) {\n            n += 1;\n        }\n        if( t.type===Token.EOF) {\n            break;\n        }\n    }\n    return n;\n};\n\nexports.CommonTokenStream = CommonTokenStream;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// This implementation of {@link TokenStream} loads tokens from a\n// {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n// access to any previous token by index.\n//\n// <p>\n// This token stream ignores the value of {@link Token//getChannel}. If your\n// parser requires the token stream filter tokens to only those on a particular\n// channel, such as {@link Token//DEFAULT_CHANNEL} or\n// {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n// {@link CommonTokenStream}.</p>\n\nvar Token = require('./Token').Token;\nvar Lexer = require('./Lexer').Lexer;\nvar Interval = require('./IntervalSet').Interval;\n\n// this is just to keep meaningful parameter types to Parser\nfunction TokenStream() {\n\treturn this;\n}\n\nfunction BufferedTokenStream(tokenSource) {\n\n\tTokenStream.call(this);\n\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\tthis.tokenSource = tokenSource;\n\n\t// A collection of all tokens fetched from the token source. The list is\n\t// considered a complete view of the input once {@link //fetchedEOF} is set\n\t// to {@code true}.\n\tthis.tokens = [];\n\n\t// The index into {@link //tokens} of the current token (next token to\n\t// {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t// be\n\t// {@link //LT LT(1)}.\n\t//\n\t// <p>This field is set to -1 when the stream is first constructed or when\n\t// {@link //setTokenSource} is called, indicating that the first token has\n\t// not yet been fetched from the token source. For additional information,\n\t// see the documentation of {@link IntStream} for a description of\n\t// Initializing Methods.</p>\n\tthis.index = -1;\n\n\t// Indicates whether the {@link Token//EOF} token has been fetched from\n\t// {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t// performance for the following cases:\n\t//\n\t// <ul>\n\t// <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t// prevent\n\t// consuming the EOF symbol is optimized by checking the values of\n\t// {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t// //LA}.</li>\n\t// <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t// into\n\t// {@link //tokens} is trivial with this field.</li>\n\t// <ul>\n\tthis.fetchedEOF = false;\n\treturn this;\n}\n\nBufferedTokenStream.prototype = Object.create(TokenStream.prototype);\nBufferedTokenStream.prototype.constructor = BufferedTokenStream;\n\nBufferedTokenStream.prototype.mark = function() {\n\treturn 0;\n};\n\nBufferedTokenStream.prototype.release = function(marker) {\n\t// no resources to release\n};\n\nBufferedTokenStream.prototype.reset = function() {\n\tthis.seek(0);\n};\n\nBufferedTokenStream.prototype.seek = function(index) {\n\tthis.lazyInit();\n\tthis.index = this.adjustSeekIndex(index);\n};\n\nBufferedTokenStream.prototype.get = function(index) {\n\tthis.lazyInit();\n\treturn this.tokens[index];\n};\n\nBufferedTokenStream.prototype.consume = function() {\n\tvar skipEofCheck = false;\n\tif (this.index >= 0) {\n\t\tif (this.fetchedEOF) {\n\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t// fetched token except the last.\n\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t} else {\n\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t}\n\t} else {\n\t\t// not yet initialized\n\t\tskipEofCheck = false;\n\t}\n\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\tthrow \"cannot consume EOF\";\n\t}\n\tif (this.sync(this.index + 1)) {\n\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t}\n};\n\n// Make sure index {@code i} in tokens has a token.\n//\n// @return {@code true} if a token is located at index {@code i}, otherwise\n// {@code false}.\n// @see //get(int i)\n// /\nBufferedTokenStream.prototype.sync = function(i) {\n\tvar n = i - this.tokens.length + 1; // how many more elements we need?\n\tif (n > 0) {\n\t\tvar fetched = this.fetch(n);\n\t\treturn fetched >= n;\n\t}\n\treturn true;\n};\n\n// Add {@code n} elements to buffer.\n//\n// @return The actual number of elements added to the buffer.\n// /\nBufferedTokenStream.prototype.fetch = function(n) {\n\tif (this.fetchedEOF) {\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < n; i++) {\n\t\tvar t = this.tokenSource.nextToken();\n\t\tt.tokenIndex = this.tokens.length;\n\t\tthis.tokens.push(t);\n\t\tif (t.type === Token.EOF) {\n\t\t\tthis.fetchedEOF = true;\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\treturn n;\n};\n\n// Get all tokens from start..stop inclusively///\nBufferedTokenStream.prototype.getTokens = function(start, stop, types) {\n\tif (types === undefined) {\n\t\ttypes = null;\n\t}\n\tif (start < 0 || stop < 0) {\n\t\treturn null;\n\t}\n\tthis.lazyInit();\n\tvar subset = [];\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tfor (var i = start; i < stop; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\tif (types === null || types.contains(t.type)) {\n\t\t\tsubset.push(t);\n\t\t}\n\t}\n\treturn subset;\n};\n\nBufferedTokenStream.prototype.LA = function(i) {\n\treturn this.LT(i).type;\n};\n\nBufferedTokenStream.prototype.LB = function(k) {\n\tif (this.index - k < 0) {\n\t\treturn null;\n\t}\n\treturn this.tokens[this.index - k];\n};\n\nBufferedTokenStream.prototype.LT = function(k) {\n\tthis.lazyInit();\n\tif (k === 0) {\n\t\treturn null;\n\t}\n\tif (k < 0) {\n\t\treturn this.LB(-k);\n\t}\n\tvar i = this.index + k - 1;\n\tthis.sync(i);\n\tif (i >= this.tokens.length) { // return EOF token\n\t\t// EOF must be last token\n\t\treturn this.tokens[this.tokens.length - 1];\n\t}\n\treturn this.tokens[i];\n};\n\n// Allowed derived classes to modify the behavior of operations which change\n// the current stream position by adjusting the target token index of a seek\n// operation. The default implementation simply returns {@code i}. If an\n// exception is thrown in this method, the current stream index should not be\n// changed.\n//\n// <p>For example, {@link CommonTokenStream} overrides this method to ensure\n// that\n// the seek target is always an on-channel token.</p>\n//\n// @param i The target token index.\n// @return The adjusted target token index.\n\nBufferedTokenStream.prototype.adjustSeekIndex = function(i) {\n\treturn i;\n};\n\nBufferedTokenStream.prototype.lazyInit = function() {\n\tif (this.index === -1) {\n\t\tthis.setup();\n\t}\n};\n\nBufferedTokenStream.prototype.setup = function() {\n\tthis.sync(0);\n\tthis.index = this.adjustSeekIndex(0);\n};\n\n// Reset this token stream by setting its token source.///\nBufferedTokenStream.prototype.setTokenSource = function(tokenSource) {\n\tthis.tokenSource = tokenSource;\n\tthis.tokens = [];\n\tthis.index = -1;\n\tthis.fetchedEOF = false;\n};\n\n\n// Given a starting index, return the index of the next token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and EOF.\n// /\nBufferedTokenStream.prototype.nextTokenOnChannel = function(i, channel) {\n\tthis.sync(i);\n\tif (i >= this.tokens.length) {\n\t\treturn -1;\n\t}\n\tvar token = this.tokens[i];\n\twhile (token.channel !== this.channel) {\n\t\tif (token.type === Token.EOF) {\n\t\t\treturn -1;\n\t\t}\n\t\ti += 1;\n\t\tthis.sync(i);\n\t\ttoken = this.tokens[i];\n\t}\n\treturn i;\n};\n\n// Given a starting index, return the index of the previous token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and 0.\nBufferedTokenStream.prototype.previousTokenOnChannel = function(i, channel) {\n\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\ti -= 1;\n\t}\n\treturn i;\n};\n\n// Collect all tokens on specified channel to the right of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n// EOF. If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToRight = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tvar from_ = tokenIndex + 1;\n\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\tvar to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\n// Collect all tokens on specified channel to the left of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n// If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToLeft = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tif (prevOnChannel === tokenIndex - 1) {\n\t\treturn null;\n\t}\n\t// if none on channel to left, prevOnChannel=-1 then from=0\n\tvar from_ = prevOnChannel + 1;\n\tvar to = tokenIndex - 1;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\nBufferedTokenStream.prototype.filterForChannel = function(left, right, channel) {\n\tvar hidden = [];\n\tfor (var i = left; i < right + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (channel === -1) {\n\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t} else if (t.channel === channel) {\n\t\t\thidden.push(t);\n\t\t}\n\t}\n\tif (hidden.length === 0) {\n\t\treturn null;\n\t}\n\treturn hidden;\n};\n\nBufferedTokenStream.prototype.getSourceName = function() {\n\treturn this.tokenSource.getSourceName();\n};\n\n// Get the text of all tokens in this buffer.///\nBufferedTokenStream.prototype.getText = function(interval) {\n\tthis.lazyInit();\n\tthis.fill();\n\tif (interval === undefined || interval === null) {\n\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t}\n\tvar start = interval.start;\n\tif (start instanceof Token) {\n\t\tstart = start.tokenIndex;\n\t}\n\tvar stop = interval.stop;\n\tif (stop instanceof Token) {\n\t\tstop = stop.tokenIndex;\n\t}\n\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\treturn \"\";\n\t}\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tvar s = \"\";\n\tfor (var i = start; i < stop + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\ts = s + t.text;\n\t}\n\treturn s;\n};\n\n// Get all tokens from lexer until EOF///\nBufferedTokenStream.prototype.fill = function() {\n\tthis.lazyInit();\n\twhile (this.fetch(1000) === 1000) {\n\t\tcontinue;\n\t}\n};\n\nexports.BufferedTokenStream = BufferedTokenStream;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./Token').Token;\nvar ParseTreeListener = require('./tree/Tree').ParseTreeListener;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar DefaultErrorStrategy = require('./error/ErrorStrategy').DefaultErrorStrategy;\nvar ATNDeserializer = require('./atn/ATNDeserializer').ATNDeserializer;\nvar ATNDeserializationOptions = require('./atn/ATNDeserializationOptions').ATNDeserializationOptions;\nvar TerminalNode = require('./tree/Tree').TerminalNode;\nvar ErrorNode = require('./tree/Tree').ErrorNode;\n\nfunction TraceListener(parser) {\n\tParseTreeListener.call(this);\n    this.parser = parser;\n\treturn this;\n}\n\nTraceListener.prototype = Object.create(ParseTreeListener.prototype);\nTraceListener.prototype.constructor = TraceListener;\n\nTraceListener.prototype.enterEveryRule = function(ctx) {\n\tconsole.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\nTraceListener.prototype.visitTerminal = function( node) {\n\tconsole.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n};\n\nTraceListener.prototype.exitEveryRule = function(ctx) {\n\tconsole.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\n// this is all the parsing support code essentially; most of it is error\n// recovery stuff.//\nfunction Parser(input) {\n\tRecognizer.call(this);\n\t// The input stream.\n\tthis._input = null;\n\t// The error handling strategy for the parser. The default value is a new\n\t// instance of {@link DefaultErrorStrategy}.\n\tthis._errHandler = new DefaultErrorStrategy();\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\t// The {@link ParserRuleContext} object for the currently executing rule.\n\t// this is always non-null during the parsing process.\n\tthis._ctx = null;\n\t// Specifies whether or not the parser should construct a parse tree during\n\t// the parsing process. The default value is {@code true}.\n\tthis.buildParseTrees = true;\n\t// When {@link //setTrace}{@code (true)} is called, a reference to the\n\t// {@link TraceListener} is stored here so it can be easily removed in a\n\t// later call to {@link //setTrace}{@code (false)}. The listener itself is\n\t// implemented as a parser listener so this field is not directly used by\n\t// other parser methods.\n\tthis._tracer = null;\n\t// The list of {@link ParseTreeListener} listeners registered to receive\n\t// events during the parse.\n\tthis._parseListeners = null;\n\t// The number of syntax errors reported during parsing. this value is\n\t// incremented each time {@link //notifyErrorListeners} is called.\n\tthis._syntaxErrors = 0;\n\tthis.setInputStream(input);\n\treturn this;\n}\n\nParser.prototype = Object.create(Recognizer.prototype);\nParser.prototype.contructor = Parser;\n\n// this field maps from the serialized ATN string to the deserialized {@link\n// ATN} with\n// bypass alternatives.\n//\n// @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n//\nParser.bypassAltsAtnCache = {};\n\n// reset the parser's state//\nParser.prototype.reset = function() {\n\tif (this._input !== null) {\n\t\tthis._input.seek(0);\n\t}\n\tthis._errHandler.reset(this);\n\tthis._ctx = null;\n\tthis._syntaxErrors = 0;\n\tthis.setTrace(false);\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\tif (this._interp !== null) {\n\t\tthis._interp.reset();\n\t}\n};\n\n// Match current input symbol against {@code ttype}. If the symbol type\n// matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n// called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @param ttype the token type to match\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// {@code ttype} and the error strategy could not recover from the\n// mismatched symbol\n\nParser.prototype.match = function(ttype) {\n\tvar t = this.getCurrentToken();\n\tif (t.type === ttype) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this.buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n// Match current input symbol as a wildcard. If the symbol type matches\n// (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n// and {@link //consume} are called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// a wildcard and the error strategy could not recover from the mismatched\n// symbol\n\nParser.prototype.matchWildcard = function() {\n\tvar t = this.getCurrentToken();\n\tif (t.type > 0) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n\nParser.prototype.getParseListeners = function() {\n\treturn this._parseListeners || [];\n};\n\n// Registers {@code listener} to receive events during the parsing process.\n//\n// <p>To support output-preserving grammar transformations (including but not\n// limited to left-recursion removal, automated left-factoring, and\n// optimized code generation), calls to listener methods during the parse\n// may differ substantially from calls made by\n// {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n// particular, rule entry and exit events may occur in a different order\n// during the parse than after the parser. In addition, calls to certain\n// rule entry methods may be omitted.</p>\n//\n// <p>With the following specific exceptions, calls to listener events are\n// <em>deterministic</em>, i.e. for identical input the calls to listener\n// methods will be the same.</p>\n//\n// <ul>\n// <li>Alterations to the grammar used to generate code may change the\n// behavior of the listener calls.</li>\n// <li>Alterations to the command line options passed to ANTLR 4 when\n// generating the parser may change the behavior of the listener calls.</li>\n// <li>Changing the version of the ANTLR Tool used to generate the parser\n// may change the behavior of the listener calls.</li>\n// </ul>\n//\n// @param listener the listener to add\n//\n// @throws NullPointerException if {@code} listener is {@code null}\n//\nParser.prototype.addParseListener = function(listener) {\n\tif (listener === null) {\n\t\tthrow \"listener\";\n\t}\n\tif (this._parseListeners === null) {\n\t\tthis._parseListeners = [];\n\t}\n\tthis._parseListeners.push(listener);\n};\n\n//\n// Remove {@code listener} from the list of parse listeners.\n//\n// <p>If {@code listener} is {@code null} or has not been added as a parse\n// listener, this method does nothing.</p>\n// @param listener the listener to remove\n//\nParser.prototype.removeParseListener = function(listener) {\n\tif (this._parseListeners !== null) {\n\t\tvar idx = this._parseListeners.indexOf(listener);\n\t\tif (idx >= 0) {\n\t\t\tthis._parseListeners.splice(idx, 1);\n\t\t}\n\t\tif (this._parseListeners.length === 0) {\n\t\t\tthis._parseListeners = null;\n\t\t}\n\t}\n};\n\n// Remove all parse listeners.\nParser.prototype.removeParseListeners = function() {\n\tthis._parseListeners = null;\n};\n\n// Notify any parse listeners of an enter rule event.\nParser.prototype.triggerEnterRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n        var ctx = this._ctx;\n\t\tthis._parseListeners.map(function(listener) {\n\t\t\tlistener.enterEveryRule(ctx);\n\t\t\tctx.enterRule(listener);\n\t\t});\n\t}\n};\n\n//\n// Notify any parse listeners of an exit rule event.\n//\n// @see //addParseListener\n//\nParser.prototype.triggerExitRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n\t\t// reverse order walk of listeners\n        var ctx = this._ctx;\n\t\tthis._parseListeners.slice(0).reverse().map(function(listener) {\n\t\t\tctx.exitRule(listener);\n\t\t\tlistener.exitEveryRule(ctx);\n\t\t});\n\t}\n};\n\nParser.prototype.getTokenFactory = function() {\n\treturn this._input.tokenSource._factory;\n};\n\n// Tell our token source and error strategy about a new way to create tokens.//\nParser.prototype.setTokenFactory = function(factory) {\n\tthis._input.tokenSource._factory = factory;\n};\n\n// The ATN with bypass alternatives is expensive to create so we create it\n// lazily.\n//\n// @throws UnsupportedOperationException if the current parser does not\n// implement the {@link //getSerializedATN()} method.\n//\nParser.prototype.getATNWithBypassAlts = function() {\n\tvar serializedAtn = this.getSerializedATN();\n\tif (serializedAtn === null) {\n\t\tthrow \"The current parser does not support an ATN with bypass alternatives.\";\n\t}\n\tvar result = this.bypassAltsAtnCache[serializedAtn];\n\tif (result === null) {\n\t\tvar deserializationOptions = new ATNDeserializationOptions();\n\t\tdeserializationOptions.generateRuleBypassTransitions = true;\n\t\tresult = new ATNDeserializer(deserializationOptions)\n\t\t\t\t.deserialize(serializedAtn);\n\t\tthis.bypassAltsAtnCache[serializedAtn] = result;\n\t}\n\treturn result;\n};\n\n// The preferred method of getting a tree pattern. For example, here's a\n// sample use:\n//\n// <pre>\n// ParseTree t = parser.expr();\n// ParseTreePattern p = parser.compileParseTreePattern(\"&lt;ID&gt;+0\",\n// MyParser.RULE_expr);\n// ParseTreeMatch m = p.match(t);\n// String id = m.get(\"ID\");\n// </pre>\n\nvar Lexer = require('./Lexer').Lexer;\n\nParser.prototype.compileParseTreePattern = function(pattern, patternRuleIndex, lexer) {\n\tlexer = lexer || null;\n\tif (lexer === null) {\n\t\tif (this.getTokenStream() !== null) {\n\t\t\tvar tokenSource = this.getTokenStream().tokenSource;\n\t\t\tif (tokenSource instanceof Lexer) {\n\t\t\t\tlexer = tokenSource;\n\t\t\t}\n\t\t}\n\t}\n\tif (lexer === null) {\n\t\tthrow \"Parser can't discover a lexer to use\";\n\t}\n\tvar m = new ParseTreePatternMatcher(lexer, this);\n\treturn m.compile(pattern, patternRuleIndex);\n};\n\nParser.prototype.getInputStream = function() {\n\treturn this.getTokenStream();\n};\n\nParser.prototype.setInputStream = function(input) {\n\tthis.setTokenStream(input);\n};\n\nParser.prototype.getTokenStream = function() {\n\treturn this._input;\n};\n\n// Set the token stream and reset the parser.//\nParser.prototype.setTokenStream = function(input) {\n\tthis._input = null;\n\tthis.reset();\n\tthis._input = input;\n};\n\n// Match needs to return the current input symbol, which gets put\n// into the label for the associated token ref; e.g., x=ID.\n//\nParser.prototype.getCurrentToken = function() {\n\treturn this._input.LT(1);\n};\n\nParser.prototype.notifyErrorListeners = function(msg, offendingToken, err) {\n\toffendingToken = offendingToken || null;\n\terr = err || null;\n\tif (offendingToken === null) {\n\t\toffendingToken = this.getCurrentToken();\n\t}\n\tthis._syntaxErrors += 1;\n\tvar line = offendingToken.line;\n\tvar column = offendingToken.column;\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, offendingToken, line, column, msg, err);\n};\n\n//\n// Consume and return the {@linkplain //getCurrentToken current symbol}.\n//\n// <p>E.g., given the following input with {@code A} being the current\n// lookahead symbol, this function moves the cursor to {@code B} and returns\n// {@code A}.</p>\n//\n// <pre>\n// A B\n// ^\n// </pre>\n//\n// If the parser is not in error recovery mode, the consumed symbol is added\n// to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n// {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n// If the parser <em>is</em> in error recovery mode, the consumed symbol is\n// added to the parse tree using\n// {@link ParserRuleContext//addErrorNode(Token)}, and\n// {@link ParseTreeListener//visitErrorNode} is called on any parse\n// listeners.\n//\nParser.prototype.consume = function() {\n\tvar o = this.getCurrentToken();\n\tif (o.type !== Token.EOF) {\n\t\tthis.getInputStream().consume();\n\t}\n\tvar hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n\tif (this.buildParseTrees || hasListener) {\n\t\tvar node;\n\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\n\t\t\tnode = this._ctx.addErrorNode(o);\n\t\t} else {\n\t\t\tnode = this._ctx.addTokenNode(o);\n\t\t}\n        node.invokingState = this.state;\n\t\tif (hasListener) {\n\t\t\tthis._parseListeners.map(function(listener) {\n\t\t\t\tif (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n\t\t\t\t\tlistener.visitErrorNode(node);\n\t\t\t\t} else if (node instanceof TerminalNode) {\n\t\t\t\t\tlistener.visitTerminal(node);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn o;\n};\n\nParser.prototype.addContextToParseTree = function() {\n\t// add current context to parent if we have a parent\n\tif (this._ctx.parentCtx !== null) {\n\t\tthis._ctx.parentCtx.addChild(this._ctx);\n\t}\n};\n\n// Always called by generated parsers upon entry to a rule. Access field\n// {@link //_ctx} get the current context.\n\nParser.prototype.enterRule = function(localctx, state, ruleIndex) {\n\tthis.state = state;\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this.buildParseTrees) {\n\t\tthis.addContextToParseTree();\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent();\n\t}\n};\n\nParser.prototype.exitRule = function() {\n\tthis._ctx.stop = this._input.LT(-1);\n\t// trigger event on _ctx, before it reverts to parent\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerExitRuleEvent();\n\t}\n\tthis.state = this._ctx.invokingState;\n\tthis._ctx = this._ctx.parentCtx;\n};\n\nParser.prototype.enterOuterAlt = function(localctx, altNum) {\n   \tlocalctx.setAltNumber(altNum);\n\t// if we have new localctx, make sure we replace existing ctx\n\t// that is previous child of parse tree\n\tif (this.buildParseTrees && this._ctx !== localctx) {\n\t\tif (this._ctx.parentCtx !== null) {\n\t\t\tthis._ctx.parentCtx.removeLastChild();\n\t\t\tthis._ctx.parentCtx.addChild(localctx);\n\t\t}\n\t}\n\tthis._ctx = localctx;\n};\n\n// Get the precedence level for the top-most precedence rule.\n//\n// @return The precedence level for the top-most precedence rule, or -1 if\n// the parser context is not nested within a precedence rule.\n\nParser.prototype.getPrecedence = function() {\n\tif (this._precedenceStack.length === 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn this._precedenceStack[this._precedenceStack.length-1];\n\t}\n};\n\nParser.prototype.enterRecursionRule = function(localctx, state, ruleIndex,\n\t\tprecedence) {\n\tthis.state = state;\n\tthis._precedenceStack.push(precedence);\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\n//\n// Like {@link //enterRule} but for recursive rules.\n\nParser.prototype.pushNewRecursionContext = function(localctx, state, ruleIndex) {\n\tvar previous = this._ctx;\n\tprevious.parentCtx = localctx;\n\tprevious.invokingState = state;\n\tprevious.stop = this._input.LT(-1);\n\n\tthis._ctx = localctx;\n\tthis._ctx.start = previous.start;\n\tif (this.buildParseTrees) {\n\t\tthis._ctx.addChild(previous);\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\nParser.prototype.unrollRecursionContexts = function(parentCtx) {\n\tthis._precedenceStack.pop();\n\tthis._ctx.stop = this._input.LT(-1);\n\tvar retCtx = this._ctx; // save current ctx (return value)\n\t// unroll so _ctx is as it was before call to recursive method\n\tif (this._parseListeners !== null) {\n\t\twhile (this._ctx !== parentCtx) {\n\t\t\tthis.triggerExitRuleEvent();\n\t\t\tthis._ctx = this._ctx.parentCtx;\n\t\t}\n\t} else {\n\t\tthis._ctx = parentCtx;\n\t}\n\t// hook into tree\n\tretCtx.parentCtx = parentCtx;\n\tif (this.buildParseTrees && parentCtx !== null) {\n\t\t// add return ctx into invoking rule's tree\n\t\tparentCtx.addChild(retCtx);\n\t}\n};\n\nParser.prototype.getInvokingContext = function(ruleIndex) {\n\tvar ctx = this._ctx;\n\twhile (ctx !== null) {\n\t\tif (ctx.ruleIndex === ruleIndex) {\n\t\t\treturn ctx;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\treturn null;\n};\n\nParser.prototype.precpred = function(localctx, precedence) {\n\treturn precedence >= this._precedenceStack[this._precedenceStack.length-1];\n};\n\nParser.prototype.inContext = function(context) {\n\t// TODO: useful in parser?\n\treturn false;\n};\n\n//\n// Checks whether or not {@code symbol} can follow the current state in the\n// ATN. The behavior of this method is equivalent to the following, but is\n// implemented such that the complete context-sensitive follow set does not\n// need to be explicitly constructed.\n//\n// <pre>\n// return getExpectedTokens().contains(symbol);\n// </pre>\n//\n// @param symbol the symbol type to check\n// @return {@code true} if {@code symbol} can follow the current state in\n// the ATN, otherwise {@code false}.\n\nParser.prototype.isExpectedToken = function(symbol) {\n\tvar atn = this._interp.atn;\n\tvar ctx = this._ctx;\n\tvar s = atn.states[this.state];\n\tvar following = atn.nextTokens(s);\n\tif (following.contains(symbol)) {\n\t\treturn true;\n\t}\n\tif (!following.contains(Token.EPSILON)) {\n\t\treturn false;\n\t}\n\twhile (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n\t\tvar invokingState = atn.states[ctx.invokingState];\n\t\tvar rt = invokingState.transitions[0];\n\t\tfollowing = atn.nextTokens(rt.followState);\n\t\tif (following.contains(symbol)) {\n\t\t\treturn true;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// Computes the set of input symbols which could follow the current parser\n// state and context, as given by {@link //getState} and {@link //getContext},\n// respectively.\n//\n// @see ATN//getExpectedTokens(int, RuleContext)\n//\nParser.prototype.getExpectedTokens = function() {\n\treturn this._interp.atn.getExpectedTokens(this.state, this._ctx);\n};\n\nParser.prototype.getExpectedTokensWithinCurrentRule = function() {\n\tvar atn = this._interp.atn;\n\tvar s = atn.states[this.state];\n\treturn atn.nextTokens(s);\n};\n\n// Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.//\nParser.prototype.getRuleIndex = function(ruleName) {\n\tvar ruleIndex = this.getRuleIndexMap()[ruleName];\n\tif (ruleIndex !== null) {\n\t\treturn ruleIndex;\n\t} else {\n\t\treturn -1;\n\t}\n};\n\n// Return List&lt;String&gt; of the rule names in your parser instance\n// leading up to a call to the current rule. You could override if\n// you want more details such as the file/line info of where\n// in the ATN a rule is invoked.\n//\n// this is very useful for error messages.\n//\nParser.prototype.getRuleInvocationStack = function(p) {\n\tp = p || null;\n\tif (p === null) {\n\t\tp = this._ctx;\n\t}\n\tvar stack = [];\n\twhile (p !== null) {\n\t\t// compute what follows who invoked us\n\t\tvar ruleIndex = p.ruleIndex;\n\t\tif (ruleIndex < 0) {\n\t\t\tstack.push(\"n/a\");\n\t\t} else {\n\t\t\tstack.push(this.ruleNames[ruleIndex]);\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\treturn stack;\n};\n\n// For debugging and other purposes.//\nParser.prototype.getDFAStrings = function() {\n\treturn this._interp.decisionToDFA.toString();\n};\n// For debugging and other purposes.//\nParser.prototype.dumpDFA = function() {\n\tvar seenOne = false;\n\tfor (var i = 0; i < this._interp.decisionToDFA.length; i++) {\n\t\tvar dfa = this._interp.decisionToDFA[i];\n\t\tif (dfa.states.length > 0) {\n\t\t\tif (seenOne) {\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t\tthis.printer.println(\"Decision \" + dfa.decision + \":\");\n\t\t\tthis.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n\t\t\tseenOne = true;\n\t\t}\n\t}\n};\n\n/*\n\"\t\t\tprinter = function() {\\r\\n\" +\n\"\t\t\t\tthis.println = function(s) { document.getElementById('output') += s + '\\\\n'; }\\r\\n\" +\n\"\t\t\t\tthis.print = function(s) { document.getElementById('output') += s; }\\r\\n\" +\n\"\t\t\t};\\r\\n\" +\n*/\n\nParser.prototype.getSourceName = function() {\n\treturn this._input.sourceName;\n};\n\n// During a parse is sometimes useful to listen in on the rule entry and exit\n// events as well as token matches. this is for quick and dirty debugging.\n//\nParser.prototype.setTrace = function(trace) {\n\tif (!trace) {\n\t\tthis.removeParseListener(this._tracer);\n\t\tthis._tracer = null;\n\t} else {\n\t\tif (this._tracer !== null) {\n\t\t\tthis.removeParseListener(this._tracer);\n\t\t}\n\t\tthis._tracer = new TraceListener(this);\n\t\tthis.addParseListener(this._tracer);\n\t}\n};\n\nexports.Parser = Parser;","// Generated from antlr/Solidity.g4 by ANTLR 4.8\n// jshint ignore: start\nvar antlr4 = require('../antlr4/index');\n\n\n\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\n    \"\\u0002\\u0084\\u071b\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u0004\",\n    \"1\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u00047\\t7\\u0004\",\n    \"8\\t8\\u00049\\t9\\u0004:\\t:\\u0004;\\t;\\u0004<\\t<\\u0004=\\t=\\u0004>\\t>\\u0004\",\n    \"?\\t?\\u0004@\\t@\\u0004A\\tA\\u0004B\\tB\\u0004C\\tC\\u0004D\\tD\\u0004E\\tE\\u0004\",\n    \"F\\tF\\u0004G\\tG\\u0004H\\tH\\u0004I\\tI\\u0004J\\tJ\\u0004K\\tK\\u0004L\\tL\\u0004\",\n    \"M\\tM\\u0004N\\tN\\u0004O\\tO\\u0004P\\tP\\u0004Q\\tQ\\u0004R\\tR\\u0004S\\tS\\u0004\",\n    \"T\\tT\\u0004U\\tU\\u0004V\\tV\\u0004W\\tW\\u0004X\\tX\\u0004Y\\tY\\u0004Z\\tZ\\u0004\",\n    \"[\\t[\\u0004\\\\\\t\\\\\\u0004]\\t]\\u0004^\\t^\\u0004_\\t_\\u0004`\\t`\\u0004a\\ta\\u0004\",\n    \"b\\tb\\u0004c\\tc\\u0004d\\td\\u0004e\\te\\u0004f\\tf\\u0004g\\tg\\u0004h\\th\\u0004\",\n    \"i\\ti\\u0004j\\tj\\u0004k\\tk\\u0004l\\tl\\u0004m\\tm\\u0004n\\tn\\u0004o\\to\\u0004\",\n    \"p\\tp\\u0004q\\tq\\u0004r\\tr\\u0004s\\ts\\u0004t\\tt\\u0004u\\tu\\u0004v\\tv\\u0004\",\n    \"w\\tw\\u0004x\\tx\\u0004y\\ty\\u0004z\\tz\\u0004{\\t{\\u0004|\\t|\\u0004}\\t}\\u0004\",\n    \"~\\t~\\u0004\\u007f\\t\\u007f\\u0004\\u0080\\t\\u0080\\u0004\\u0081\\t\\u0081\\u0004\",\n    \"\\u0082\\t\\u0082\\u0004\\u0083\\t\\u0083\\u0004\\u0084\\t\\u0084\\u0004\\u0085\\t\",\n    \"\\u0085\\u0004\\u0086\\t\\u0086\\u0004\\u0087\\t\\u0087\\u0004\\u0088\\t\\u0088\\u0004\",\n    \"\\u0089\\t\\u0089\\u0004\\u008a\\t\\u008a\\u0004\\u008b\\t\\u008b\\u0003\\u0002\\u0003\",\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\n    \"\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\",\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0003\",\n    \"\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\",\n    \"\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\n    \"\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\\u0011\",\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\",\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\n    \"\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0018\",\n    \"\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\n    \"\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\",\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\n    \"\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\",\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003!\\u0003\",\n    \"!\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003\",\n    \"#\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003\",\n    \"%\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\",\n    \"\\'\\u0003\\'\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003\",\n    \")\\u0003)\\u0003)\\u0003)\\u0003)\\u0003)\\u0003)\\u0003)\\u0003)\\u0003*\\u0003\",\n    \"*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003,\\u0003,\\u0003,\\u0003\",\n    \",\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003.\\u0003.\\u0003.\\u0003\",\n    \".\\u0003.\\u0003.\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003\",\n    \"/\\u0003/\\u00030\\u00030\\u00030\\u00031\\u00031\\u00031\\u00031\\u00031\\u0003\",\n    \"1\\u00031\\u00032\\u00032\\u00032\\u00032\\u00032\\u00032\\u00033\\u00033\\u0003\",\n    \"3\\u00033\\u00033\\u00034\\u00034\\u00034\\u00034\\u00035\\u00035\\u00035\\u0003\",\n    \"5\\u00035\\u00036\\u00036\\u00036\\u00036\\u00036\\u00036\\u00036\\u00037\\u0003\",\n    \"7\\u00037\\u00037\\u00037\\u00038\\u00038\\u00038\\u00039\\u00039\\u00039\\u0003\",\n    \":\\u0003:\\u0003:\\u0003:\\u0003;\\u0003;\\u0003<\\u0003<\\u0003=\\u0003=\\u0003\",\n    \">\\u0003>\\u0003>\\u0003>\\u0003>\\u0003>\\u0003?\\u0003?\\u0003?\\u0003?\\u0003\",\n    \"?\\u0003?\\u0003?\\u0003@\\u0003@\\u0003A\\u0003A\\u0003A\\u0003B\\u0003B\\u0003\",\n    \"C\\u0003C\\u0003D\\u0003D\\u0003D\\u0003E\\u0003E\\u0003E\\u0003F\\u0003F\\u0003\",\n    \"G\\u0003G\\u0003H\\u0003H\\u0003H\\u0003I\\u0003I\\u0003I\\u0003J\\u0003J\\u0003\",\n    \"J\\u0003K\\u0003K\\u0003K\\u0003L\\u0003L\\u0003M\\u0003M\\u0003M\\u0003N\\u0003\",\n    \"N\\u0003N\\u0003O\\u0003O\\u0003O\\u0003P\\u0003P\\u0003P\\u0003P\\u0003Q\\u0003\",\n    \"Q\\u0003Q\\u0003Q\\u0003R\\u0003R\\u0003R\\u0003S\\u0003S\\u0003S\\u0003T\\u0003\",\n    \"T\\u0003T\\u0003U\\u0003U\\u0003U\\u0003V\\u0003V\\u0003V\\u0003W\\u0003W\\u0003\",\n    \"W\\u0003W\\u0003X\\u0003X\\u0003X\\u0003Y\\u0003Y\\u0003Y\\u0003Z\\u0003Z\\u0003\",\n    \"Z\\u0003Z\\u0003Z\\u0003Z\\u0003Z\\u0003[\\u0003[\\u0003[\\u0003[\\u0003[\\u0003\",\n    \"\\\\\\u0003\\\\\\u0003\\\\\\u0003\\\\\\u0003\\\\\\u0003\\\\\\u0003\\\\\\u0003\\\\\\u0003]\\u0003\",\n    \"]\\u0003]\\u0003^\\u0003^\\u0003^\\u0003^\\u0003^\\u0003^\\u0003^\\u0003^\\u0003\",\n    \"^\\u0003_\\u0003_\\u0003_\\u0003_\\u0003_\\u0003_\\u0003_\\u0003_\\u0003_\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003`\\u0003\",\n    \"`\\u0003`\\u0005`\\u036c\\n`\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003\",\n    \"a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0003a\\u0005a\\u0445\",\n    \"\\na\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003b\\u0003\",\n    \"b\\u0005b\\u0523\\nb\\u0003c\\u0003c\\u0003c\\u0003c\\u0003c\\u0003c\\u0003c\\u0003\",\n    \"c\\u0003c\\u0003c\\u0003c\\u0003c\\u0006c\\u0531\\nc\\rc\\u000ec\\u0532\\u0003\",\n    \"c\\u0003c\\u0006c\\u0537\\nc\\rc\\u000ec\\u0538\\u0005c\\u053b\\nc\\u0003d\\u0003\",\n    \"d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003d\\u0003\",\n    \"d\\u0003d\\u0003d\\u0006d\\u054b\\nd\\rd\\u000ed\\u054c\\u0003d\\u0003d\\u0006\",\n    \"d\\u0551\\nd\\rd\\u000ed\\u0552\\u0005d\\u0555\\nd\\u0003e\\u0003e\\u0003e\\u0003\",\n    \"e\\u0003e\\u0003e\\u0003e\\u0003e\\u0003e\\u0005e\\u0560\\ne\\u0003f\\u0003f\\u0005\",\n    \"f\\u0564\\nf\\u0003f\\u0003f\\u0005f\\u0568\\nf\\u0003f\\u0003f\\u0005f\\u056c\",\n    \"\\nf\\u0003g\\u0003g\\u0005g\\u0570\\ng\\u0003g\\u0007g\\u0573\\ng\\fg\\u000eg\\u0576\",\n    \"\\u000bg\\u0003h\\u0003h\\u0003h\\u0003h\\u0003i\\u0003i\\u0005i\\u057e\\ni\\u0003\",\n    \"i\\u0007i\\u0581\\ni\\fi\\u000ei\\u0584\\u000bi\\u0003j\\u0003j\\u0003j\\u0003\",\n    \"j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003\",\n    \"j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003\",\n    \"j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003\",\n    \"j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003\",\n    \"j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0003j\\u0005j\\u05ba\",\n    \"\\nj\\u0003k\\u0003k\\u0003k\\u0003k\\u0003k\\u0003k\\u0005k\\u05c2\\nk\\u0003\",\n    \"k\\u0003k\\u0003k\\u0005k\\u05c7\\nk\\u0003k\\u0005k\\u05ca\\nk\\u0003l\\u0003\",\n    \"l\\u0003l\\u0003m\\u0003m\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003n\\u0003\",\n    \"n\\u0003n\\u0005n\\u0629\\nn\\u0003o\\u0003o\\u0003o\\u0003o\\u0003o\\u0003o\\u0003\",\n    \"o\\u0003o\\u0003o\\u0003o\\u0003p\\u0003p\\u0003p\\u0003p\\u0003p\\u0003p\\u0003\",\n    \"q\\u0003q\\u0003q\\u0003q\\u0003q\\u0003q\\u0003q\\u0003q\\u0003q\\u0003r\\u0003\",\n    \"r\\u0003r\\u0003r\\u0003r\\u0003r\\u0003r\\u0003r\\u0003r\\u0003r\\u0003s\\u0003\",\n    \"s\\u0003s\\u0003s\\u0003s\\u0003s\\u0003s\\u0003s\\u0003s\\u0003t\\u0003t\\u0003\",\n    \"t\\u0003t\\u0003t\\u0003t\\u0003u\\u0003u\\u0003u\\u0003u\\u0003u\\u0003u\\u0003\",\n    \"u\\u0003u\\u0003u\\u0003v\\u0003v\\u0003v\\u0003v\\u0003v\\u0003v\\u0003v\\u0003\",\n    \"v\\u0003w\\u0003w\\u0003w\\u0003w\\u0003w\\u0003w\\u0003w\\u0003w\\u0003w\\u0003\",\n    \"x\\u0003x\\u0003x\\u0003x\\u0003x\\u0003x\\u0003x\\u0003x\\u0003y\\u0003y\\u0003\",\n    \"y\\u0003y\\u0003y\\u0003y\\u0003y\\u0003y\\u0003z\\u0003z\\u0003z\\u0003z\\u0003\",\n    \"z\\u0003z\\u0003z\\u0003{\\u0003{\\u0003{\\u0003{\\u0003{\\u0003{\\u0003{\\u0003\",\n    \"{\\u0003|\\u0003|\\u0003|\\u0003|\\u0003|\\u0003}\\u0003}\\u0003}\\u0003}\\u0003\",\n    \"}\\u0003~\\u0003~\\u0003~\\u0003~\\u0003~\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\",\n    \"\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\",\n    \"\\u0003\\u007f\\u0003\\u007f\\u0003\\u007f\\u0003\\u0080\\u0003\\u0080\\u0003\\u0080\",\n    \"\\u0003\\u0080\\u0003\\u0080\\u0003\\u0080\\u0003\\u0080\\u0003\\u0080\\u0003\\u0080\",\n    \"\\u0003\\u0081\\u0003\\u0081\\u0003\\u0081\\u0003\\u0081\\u0003\\u0081\\u0003\\u0081\",\n    \"\\u0003\\u0081\\u0003\\u0081\\u0003\\u0082\\u0003\\u0082\\u0007\\u0082\\u06c4\\n\",\n    \"\\u0082\\f\\u0082\\u000e\\u0082\\u06c7\\u000b\\u0082\\u0003\\u0083\\u0003\\u0083\",\n    \"\\u0003\\u0084\\u0003\\u0084\\u0003\\u0085\\u0003\\u0085\\u0007\\u0085\\u06cf\\n\",\n    \"\\u0085\\f\\u0085\\u000e\\u0085\\u06d2\\u000b\\u0085\\u0003\\u0085\\u0003\\u0085\",\n    \"\\u0003\\u0085\\u0007\\u0085\\u06d7\\n\\u0085\\f\\u0085\\u000e\\u0085\\u06da\\u000b\",\n    \"\\u0085\\u0003\\u0085\\u0005\\u0085\\u06dd\\n\\u0085\\u0003\\u0086\\u0003\\u0086\",\n    \"\\u0003\\u0086\\u0005\\u0086\\u06e2\\n\\u0086\\u0003\\u0087\\u0003\\u0087\\u0003\",\n    \"\\u0087\\u0005\\u0087\\u06e7\\n\\u0087\\u0003\\u0088\\u0006\\u0088\\u06ea\\n\\u0088\",\n    \"\\r\\u0088\\u000e\\u0088\\u06eb\\u0003\\u0088\\u0003\\u0088\\u0006\\u0088\\u06f0\",\n    \"\\n\\u0088\\r\\u0088\\u000e\\u0088\\u06f1\\u0003\\u0088\\u0003\\u0088\\u0006\\u0088\",\n    \"\\u06f6\\n\\u0088\\r\\u0088\\u000e\\u0088\\u06f7\\u0005\\u0088\\u06fa\\n\\u0088\\u0003\",\n    \"\\u0089\\u0006\\u0089\\u06fd\\n\\u0089\\r\\u0089\\u000e\\u0089\\u06fe\\u0003\\u0089\",\n    \"\\u0003\\u0089\\u0003\\u008a\\u0003\\u008a\\u0003\\u008a\\u0003\\u008a\\u0007\\u008a\",\n    \"\\u0707\\n\\u008a\\f\\u008a\\u000e\\u008a\\u070a\\u000b\\u008a\\u0003\\u008a\\u0003\",\n    \"\\u008a\\u0003\\u008a\\u0003\\u008a\\u0003\\u008a\\u0003\\u008b\\u0003\\u008b\\u0003\",\n    \"\\u008b\\u0003\\u008b\\u0007\\u008b\\u0715\\n\\u008b\\f\\u008b\\u000e\\u008b\\u0718\",\n    \"\\u000b\\u008b\\u0003\\u008b\\u0003\\u008b\\u0003\\u0708\\u0002\\u008c\\u0003\\u0003\",\n    \"\\u0005\\u0004\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\\n\\u0013\",\n    \"\\u000b\\u0015\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\\u0011\",\n    \"!\\u0012#\\u0013%\\u0014\\'\\u0015)\\u0016+\\u0017-\\u0018/\\u00191\\u001a3\\u001b\",\n    \"5\\u001c7\\u001d9\\u001e;\\u001f= ?!A\\\"C#E$G%I&K\\'M(O)Q*S+U,W-Y.[/]0_1a\",\n    \"2c3e4g5i6k7m8o9q:s;u<w=y>{?}@\\u007fA\\u0081B\\u0083C\\u0085D\\u0087E\\u0089\",\n    \"F\\u008bG\\u008dH\\u008fI\\u0091J\\u0093K\\u0095L\\u0097M\\u0099N\\u009bO\\u009d\",\n    \"P\\u009fQ\\u00a1R\\u00a3S\\u00a5T\\u00a7U\\u00a9V\\u00abW\\u00adX\\u00afY\\u00b1\",\n    \"Z\\u00b3[\\u00b5\\\\\\u00b7]\\u00b9^\\u00bb_\\u00bd`\\u00bfa\\u00c1b\\u00c3c\\u00c5\",\n    \"d\\u00c7e\\u00c9f\\u00cbg\\u00cd\\u0002\\u00cfh\\u00d1\\u0002\\u00d3i\\u00d5j\",\n    \"\\u00d7\\u0002\\u00d9\\u0002\\u00dbk\\u00ddl\\u00dfm\\u00e1n\\u00e3o\\u00e5p\\u00e7\",\n    \"q\\u00e9r\\u00ebs\\u00edt\\u00efu\\u00f1v\\u00f3w\\u00f5x\\u00f7y\\u00f9z\\u00fb\",\n    \"{\\u00fd|\\u00ff}\\u0101~\\u0103\\u007f\\u0105\\u0002\\u0107\\u0002\\u0109\\u0080\",\n    \"\\u010b\\u0002\\u010d\\u0002\\u010f\\u0081\\u0111\\u0082\\u0113\\u0083\\u0115\\u0084\",\n    \"\\u0003\\u0002\\f\\u0003\\u00022;\\u0004\\u0002GGgg\\u0004\\u0002ZZzz\\u0005\\u0002\",\n    \"2;CHch\\u0006\\u0002&&C\\\\aac|\\u0007\\u0002&&2;C\\\\aac|\\u0006\\u0002\\f\\f\\u000f\",\n    \"\\u000f$$^^\\u0006\\u0002\\f\\f\\u000f\\u000f))^^\\u0005\\u0002\\u000b\\f\\u000e\",\n    \"\\u000f\\\"\\\"\\u0004\\u0002\\f\\f\\u000f\\u000f\\u0002\\u07a9\\u0002\\u0003\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\\u0002\\u0002\\u0002\\u0002\\u0007\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\\u0002\\u0002\\u0002\\u000b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\\u0002\\u0002\\u0002\\u000f\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\\u0002\\u0002\\u0002\\u0013\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\\u0002\\u0002\\u0002\\u0017\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\\u0002\\u0002\\u0002\\u0002\\u001b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\\u0002\\u0002\\u0002\\u0002\\u001f\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002!\\u0003\\u0002\\u0002\\u0002\\u0002#\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002%\\u0003\\u0002\\u0002\\u0002\\u0002\\'\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0002)\\u0003\\u0002\\u0002\\u0002\\u0002+\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0002-\\u0003\\u0002\\u0002\\u0002\\u0002/\\u0003\\u0002\\u0002\\u0002\\u0002\",\n    \"1\\u0003\\u0002\\u0002\\u0002\\u00023\\u0003\\u0002\\u0002\\u0002\\u00025\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00027\\u0003\\u0002\\u0002\\u0002\\u00029\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002;\\u0003\\u0002\\u0002\\u0002\\u0002=\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0002?\\u0003\\u0002\\u0002\\u0002\\u0002A\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0002C\\u0003\\u0002\\u0002\\u0002\\u0002E\\u0003\\u0002\\u0002\\u0002\\u0002\",\n    \"G\\u0003\\u0002\\u0002\\u0002\\u0002I\\u0003\\u0002\\u0002\\u0002\\u0002K\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002M\\u0003\\u0002\\u0002\\u0002\\u0002O\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002Q\\u0003\\u0002\\u0002\\u0002\\u0002S\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0002U\\u0003\\u0002\\u0002\\u0002\\u0002W\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0002Y\\u0003\\u0002\\u0002\\u0002\\u0002[\\u0003\\u0002\\u0002\\u0002\\u0002\",\n    \"]\\u0003\\u0002\\u0002\\u0002\\u0002_\\u0003\\u0002\\u0002\\u0002\\u0002a\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002c\\u0003\\u0002\\u0002\\u0002\\u0002e\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002g\\u0003\\u0002\\u0002\\u0002\\u0002i\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0002k\\u0003\\u0002\\u0002\\u0002\\u0002m\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0002o\\u0003\\u0002\\u0002\\u0002\\u0002q\\u0003\\u0002\\u0002\\u0002\\u0002\",\n    \"s\\u0003\\u0002\\u0002\\u0002\\u0002u\\u0003\\u0002\\u0002\\u0002\\u0002w\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002y\\u0003\\u0002\\u0002\\u0002\\u0002{\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002}\\u0003\\u0002\\u0002\\u0002\\u0002\\u007f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0081\\u0003\\u0002\\u0002\\u0002\\u0002\\u0083\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0085\\u0003\\u0002\\u0002\\u0002\\u0002\\u0087\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0089\\u0003\\u0002\\u0002\\u0002\\u0002\\u008b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u008d\\u0003\\u0002\\u0002\\u0002\\u0002\\u008f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0091\\u0003\\u0002\\u0002\\u0002\\u0002\\u0093\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0095\\u0003\\u0002\\u0002\\u0002\\u0002\\u0097\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0099\\u0003\\u0002\\u0002\\u0002\\u0002\\u009b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u009d\\u0003\\u0002\\u0002\\u0002\\u0002\\u009f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00a1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00a5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00a9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00ab\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00ad\\u0003\\u0002\\u0002\\u0002\\u0002\\u00af\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00b1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00b5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00b9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00bb\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00bd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00bf\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00c1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00c5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00c9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00cb\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00cf\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00d5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00db\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00dd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00df\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00e1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00e3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00e5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00e7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00e9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00eb\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00ed\\u0003\\u0002\\u0002\\u0002\\u0002\\u00ef\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00f1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00f3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00f5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00f7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00f9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00fb\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u00fd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00ff\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0101\\u0003\\u0002\\u0002\\u0002\\u0002\\u0103\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0109\\u0003\\u0002\\u0002\\u0002\\u0002\\u010f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0111\\u0003\\u0002\\u0002\\u0002\\u0002\\u0113\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0115\\u0003\\u0002\\u0002\\u0002\\u0003\\u0117\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0005\\u011e\\u0003\\u0002\\u0002\\u0002\\u0007\\u0120\\u0003\\u0002\",\n    \"\\u0002\\u0002\\t\\u0122\\u0003\\u0002\\u0002\\u0002\\u000b\\u0124\\u0003\\u0002\",\n    \"\\u0002\\u0002\\r\\u0127\\u0003\\u0002\\u0002\\u0002\\u000f\\u0129\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0011\\u012b\\u0003\\u0002\\u0002\\u0002\\u0013\\u012e\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0015\\u0130\\u0003\\u0002\\u0002\\u0002\\u0017\\u0133\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0019\\u013a\\u0003\\u0002\\u0002\\u0002\\u001b\\u013c\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u001d\\u0141\\u0003\\u0002\\u0002\\u0002\\u001f\\u0143\\u0003\\u0002\",\n    \"\\u0002\\u0002!\\u0145\\u0003\\u0002\\u0002\\u0002#\\u0147\\u0003\\u0002\\u0002\",\n    \"\\u0002%\\u0150\\u0003\\u0002\\u0002\\u0002\\'\\u0159\\u0003\\u0002\\u0002\\u0002\",\n    \")\\u0163\\u0003\\u0002\\u0002\\u0002+\\u016b\\u0003\\u0002\\u0002\\u0002-\\u016e\",\n    \"\\u0003\\u0002\\u0002\\u0002/\\u0170\\u0003\\u0002\\u0002\\u00021\\u0172\\u0003\",\n    \"\\u0002\\u0002\\u00023\\u0178\\u0003\\u0002\\u0002\\u00025\\u017c\\u0003\\u0002\",\n    \"\\u0002\\u00027\\u0183\\u0003\\u0002\\u0002\\u00029\\u018c\\u0003\\u0002\\u0002\",\n    \"\\u0002;\\u0195\\u0003\\u0002\\u0002\\u0002=\\u019d\\u0003\\u0002\\u0002\\u0002\",\n    \"?\\u01a3\\u0003\\u0002\\u0002\\u0002A\\u01a8\\u0003\\u0002\\u0002\\u0002C\\u01aa\",\n    \"\\u0003\\u0002\\u0002\\u0002E\\u01ac\\u0003\\u0002\\u0002\\u0002G\\u01b4\\u0003\",\n    \"\\u0002\\u0002\\u0002I\\u01b6\\u0003\\u0002\\u0002\\u0002K\\u01be\\u0003\\u0002\",\n    \"\\u0002\\u0002M\\u01c1\\u0003\\u0002\\u0002\\u0002O\\u01c8\\u0003\\u0002\\u0002\",\n    \"\\u0002Q\\u01d0\\u0003\\u0002\\u0002\\u0002S\\u01d9\\u0003\\u0002\\u0002\\u0002\",\n    \"U\\u01dc\\u0003\\u0002\\u0002\\u0002W\\u01e1\\u0003\\u0002\\u0002\\u0002Y\\u01e5\",\n    \"\\u0003\\u0002\\u0002\\u0002[\\u01eb\\u0003\\u0002\\u0002\\u0002]\\u01f1\\u0003\",\n    \"\\u0002\\u0002\\u0002_\\u01fa\\u0003\\u0002\\u0002\\u0002a\\u01fd\\u0003\\u0002\",\n    \"\\u0002\\u0002c\\u0204\\u0003\\u0002\\u0002\\u0002e\\u020a\\u0003\\u0002\\u0002\",\n    \"\\u0002g\\u020f\\u0003\\u0002\\u0002\\u0002i\\u0213\\u0003\\u0002\\u0002\\u0002\",\n    \"k\\u0218\\u0003\\u0002\\u0002\\u0002m\\u021f\\u0003\\u0002\\u0002\\u0002o\\u0224\",\n    \"\\u0003\\u0002\\u0002\\u0002q\\u0227\\u0003\\u0002\\u0002\\u0002s\\u022a\\u0003\",\n    \"\\u0002\\u0002\\u0002u\\u022e\\u0003\\u0002\\u0002\\u0002w\\u0230\\u0003\\u0002\",\n    \"\\u0002\\u0002y\\u0232\\u0003\\u0002\\u0002\\u0002{\\u0234\\u0003\\u0002\\u0002\",\n    \"\\u0002}\\u023a\\u0003\\u0002\\u0002\\u0002\\u007f\\u0241\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0081\\u0243\\u0003\\u0002\\u0002\\u0002\\u0083\\u0246\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0085\\u0248\\u0003\\u0002\\u0002\\u0002\\u0087\\u024a\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0089\\u024d\\u0003\\u0002\\u0002\\u0002\\u008b\\u0250\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u008d\\u0252\\u0003\\u0002\\u0002\\u0002\\u008f\\u0254\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0091\\u0257\\u0003\\u0002\\u0002\\u0002\\u0093\\u025a\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0095\\u025d\\u0003\\u0002\\u0002\\u0002\\u0097\\u0260\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0099\\u0262\\u0003\\u0002\\u0002\\u0002\\u009b\\u0265\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u009d\\u0268\\u0003\\u0002\\u0002\\u0002\\u009f\\u026b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00a1\\u026f\\u0003\\u0002\\u0002\\u0002\\u00a3\\u0273\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00a5\\u0276\\u0003\\u0002\\u0002\\u0002\\u00a7\\u0279\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00a9\\u027c\\u0003\\u0002\\u0002\\u0002\\u00ab\\u027f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00ad\\u0282\\u0003\\u0002\\u0002\\u0002\\u00af\\u0286\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00b1\\u0289\\u0003\\u0002\\u0002\\u0002\\u00b3\\u028c\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00b5\\u0293\\u0003\\u0002\\u0002\\u0002\\u00b7\\u0298\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00b9\\u02a0\\u0003\\u0002\\u0002\\u0002\\u00bb\\u02a3\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00bd\\u02ac\\u0003\\u0002\\u0002\\u0002\\u00bf\\u036b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00c1\\u0444\\u0003\\u0002\\u0002\\u0002\\u00c3\\u0522\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00c5\\u053a\\u0003\\u0002\\u0002\\u0002\\u00c7\\u0554\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00c9\\u055f\\u0003\\u0002\\u0002\\u0002\\u00cb\\u0567\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00cd\\u056d\\u0003\\u0002\\u0002\\u0002\\u00cf\\u0577\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00d1\\u057b\\u0003\\u0002\\u0002\\u0002\\u00d3\\u05b9\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00d5\\u05bb\\u0003\\u0002\\u0002\\u0002\\u00d7\\u05cb\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00d9\\u05ce\\u0003\\u0002\\u0002\\u0002\\u00db\\u0628\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00dd\\u062a\\u0003\\u0002\\u0002\\u0002\\u00df\\u0634\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00e1\\u063a\\u0003\\u0002\\u0002\\u0002\\u00e3\\u0643\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00e5\\u064d\\u0003\\u0002\\u0002\\u0002\\u00e7\\u0656\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00e9\\u065c\\u0003\\u0002\\u0002\\u0002\\u00eb\\u0665\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00ed\\u066d\\u0003\\u0002\\u0002\\u0002\\u00ef\\u0676\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00f1\\u067e\\u0003\\u0002\\u0002\\u0002\\u00f3\\u0686\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00f5\\u068d\\u0003\\u0002\\u0002\\u0002\\u00f7\\u0695\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00f9\\u069a\\u0003\\u0002\\u0002\\u0002\\u00fb\\u069f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00fd\\u06a4\\u0003\\u0002\\u0002\\u0002\\u00ff\\u06b0\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0101\\u06b9\\u0003\\u0002\\u0002\\u0002\\u0103\\u06c1\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0105\\u06c8\\u0003\\u0002\\u0002\\u0002\\u0107\\u06ca\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0109\\u06dc\\u0003\\u0002\\u0002\\u0002\\u010b\\u06e1\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u010d\\u06e6\\u0003\\u0002\\u0002\\u0002\\u010f\\u06e9\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0111\\u06fc\\u0003\\u0002\\u0002\\u0002\\u0113\\u0702\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0115\\u0710\\u0003\\u0002\\u0002\\u0002\\u0117\\u0118\\u0007r\\u0002\",\n    \"\\u0002\\u0118\\u0119\\u0007t\\u0002\\u0002\\u0119\\u011a\\u0007c\\u0002\\u0002\",\n    \"\\u011a\\u011b\\u0007i\\u0002\\u0002\\u011b\\u011c\\u0007o\\u0002\\u0002\\u011c\",\n    \"\\u011d\\u0007c\\u0002\\u0002\\u011d\\u0004\\u0003\\u0002\\u0002\\u0002\\u011e\",\n    \"\\u011f\\u0007=\\u0002\\u0002\\u011f\\u0006\\u0003\\u0002\\u0002\\u0002\\u0120\",\n    \"\\u0121\\u0007`\\u0002\\u0002\\u0121\\b\\u0003\\u0002\\u0002\\u0002\\u0122\\u0123\",\n    \"\\u0007\\u0080\\u0002\\u0002\\u0123\\n\\u0003\\u0002\\u0002\\u0002\\u0124\\u0125\",\n    \"\\u0007@\\u0002\\u0002\\u0125\\u0126\\u0007?\\u0002\\u0002\\u0126\\f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0127\\u0128\\u0007@\\u0002\\u0002\\u0128\\u000e\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0129\\u012a\\u0007>\\u0002\\u0002\\u012a\\u0010\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u012b\\u012c\\u0007>\\u0002\\u0002\\u012c\\u012d\\u0007?\\u0002\",\n    \"\\u0002\\u012d\\u0012\\u0003\\u0002\\u0002\\u0002\\u012e\\u012f\\u0007?\\u0002\",\n    \"\\u0002\\u012f\\u0014\\u0003\\u0002\\u0002\\u0002\\u0130\\u0131\\u0007c\\u0002\",\n    \"\\u0002\\u0131\\u0132\\u0007u\\u0002\\u0002\\u0132\\u0016\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0133\\u0134\\u0007k\\u0002\\u0002\\u0134\\u0135\\u0007o\\u0002\\u0002\",\n    \"\\u0135\\u0136\\u0007r\\u0002\\u0002\\u0136\\u0137\\u0007q\\u0002\\u0002\\u0137\",\n    \"\\u0138\\u0007t\\u0002\\u0002\\u0138\\u0139\\u0007v\\u0002\\u0002\\u0139\\u0018\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u013a\\u013b\\u0007,\\u0002\\u0002\\u013b\\u001a\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u013c\\u013d\\u0007h\\u0002\\u0002\\u013d\\u013e\",\n    \"\\u0007t\\u0002\\u0002\\u013e\\u013f\\u0007q\\u0002\\u0002\\u013f\\u0140\\u0007\",\n    \"o\\u0002\\u0002\\u0140\\u001c\\u0003\\u0002\\u0002\\u0002\\u0141\\u0142\\u0007\",\n    \"}\\u0002\\u0002\\u0142\\u001e\\u0003\\u0002\\u0002\\u0002\\u0143\\u0144\\u0007\",\n    \".\\u0002\\u0002\\u0144 \\u0003\\u0002\\u0002\\u0002\\u0145\\u0146\\u0007\\u007f\",\n    \"\\u0002\\u0002\\u0146\\\"\\u0003\\u0002\\u0002\\u0002\\u0147\\u0148\\u0007c\\u0002\",\n    \"\\u0002\\u0148\\u0149\\u0007d\\u0002\\u0002\\u0149\\u014a\\u0007u\\u0002\\u0002\",\n    \"\\u014a\\u014b\\u0007v\\u0002\\u0002\\u014b\\u014c\\u0007t\\u0002\\u0002\\u014c\",\n    \"\\u014d\\u0007c\\u0002\\u0002\\u014d\\u014e\\u0007e\\u0002\\u0002\\u014e\\u014f\",\n    \"\\u0007v\\u0002\\u0002\\u014f$\\u0003\\u0002\\u0002\\u0002\\u0150\\u0151\\u0007\",\n    \"e\\u0002\\u0002\\u0151\\u0152\\u0007q\\u0002\\u0002\\u0152\\u0153\\u0007p\\u0002\",\n    \"\\u0002\\u0153\\u0154\\u0007v\\u0002\\u0002\\u0154\\u0155\\u0007t\\u0002\\u0002\",\n    \"\\u0155\\u0156\\u0007c\\u0002\\u0002\\u0156\\u0157\\u0007e\\u0002\\u0002\\u0157\",\n    \"\\u0158\\u0007v\\u0002\\u0002\\u0158&\\u0003\\u0002\\u0002\\u0002\\u0159\\u015a\",\n    \"\\u0007k\\u0002\\u0002\\u015a\\u015b\\u0007p\\u0002\\u0002\\u015b\\u015c\\u0007\",\n    \"v\\u0002\\u0002\\u015c\\u015d\\u0007g\\u0002\\u0002\\u015d\\u015e\\u0007t\\u0002\",\n    \"\\u0002\\u015e\\u015f\\u0007h\\u0002\\u0002\\u015f\\u0160\\u0007c\\u0002\\u0002\",\n    \"\\u0160\\u0161\\u0007e\\u0002\\u0002\\u0161\\u0162\\u0007g\\u0002\\u0002\\u0162\",\n    \"(\\u0003\\u0002\\u0002\\u0002\\u0163\\u0164\\u0007n\\u0002\\u0002\\u0164\\u0165\",\n    \"\\u0007k\\u0002\\u0002\\u0165\\u0166\\u0007d\\u0002\\u0002\\u0166\\u0167\\u0007\",\n    \"t\\u0002\\u0002\\u0167\\u0168\\u0007c\\u0002\\u0002\\u0168\\u0169\\u0007t\\u0002\",\n    \"\\u0002\\u0169\\u016a\\u0007{\\u0002\\u0002\\u016a*\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u016b\\u016c\\u0007k\\u0002\\u0002\\u016c\\u016d\\u0007u\\u0002\\u0002\\u016d\",\n    \",\\u0003\\u0002\\u0002\\u0002\\u016e\\u016f\\u0007*\\u0002\\u0002\\u016f.\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0170\\u0171\\u0007+\\u0002\\u0002\\u01710\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0172\\u0173\\u0007w\\u0002\\u0002\\u0173\\u0174\\u0007u\\u0002\",\n    \"\\u0002\\u0174\\u0175\\u0007k\\u0002\\u0002\\u0175\\u0176\\u0007p\\u0002\\u0002\",\n    \"\\u0176\\u0177\\u0007i\\u0002\\u0002\\u01772\\u0003\\u0002\\u0002\\u0002\\u0178\",\n    \"\\u0179\\u0007h\\u0002\\u0002\\u0179\\u017a\\u0007q\\u0002\\u0002\\u017a\\u017b\",\n    \"\\u0007t\\u0002\\u0002\\u017b4\\u0003\\u0002\\u0002\\u0002\\u017c\\u017d\\u0007\",\n    \"u\\u0002\\u0002\\u017d\\u017e\\u0007v\\u0002\\u0002\\u017e\\u017f\\u0007t\\u0002\",\n    \"\\u0002\\u017f\\u0180\\u0007w\\u0002\\u0002\\u0180\\u0181\\u0007e\\u0002\\u0002\",\n    \"\\u0181\\u0182\\u0007v\\u0002\\u0002\\u01826\\u0003\\u0002\\u0002\\u0002\\u0183\",\n    \"\\u0184\\u0007o\\u0002\\u0002\\u0184\\u0185\\u0007q\\u0002\\u0002\\u0185\\u0186\",\n    \"\\u0007f\\u0002\\u0002\\u0186\\u0187\\u0007k\\u0002\\u0002\\u0187\\u0188\\u0007\",\n    \"h\\u0002\\u0002\\u0188\\u0189\\u0007k\\u0002\\u0002\\u0189\\u018a\\u0007g\\u0002\",\n    \"\\u0002\\u018a\\u018b\\u0007t\\u0002\\u0002\\u018b8\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u018c\\u018d\\u0007h\\u0002\\u0002\\u018d\\u018e\\u0007w\\u0002\\u0002\\u018e\",\n    \"\\u018f\\u0007p\\u0002\\u0002\\u018f\\u0190\\u0007e\\u0002\\u0002\\u0190\\u0191\",\n    \"\\u0007v\\u0002\\u0002\\u0191\\u0192\\u0007k\\u0002\\u0002\\u0192\\u0193\\u0007\",\n    \"q\\u0002\\u0002\\u0193\\u0194\\u0007p\\u0002\\u0002\\u0194:\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0195\\u0196\\u0007t\\u0002\\u0002\\u0196\\u0197\\u0007g\\u0002\\u0002\",\n    \"\\u0197\\u0198\\u0007v\\u0002\\u0002\\u0198\\u0199\\u0007w\\u0002\\u0002\\u0199\",\n    \"\\u019a\\u0007t\\u0002\\u0002\\u019a\\u019b\\u0007p\\u0002\\u0002\\u019b\\u019c\",\n    \"\\u0007u\\u0002\\u0002\\u019c<\\u0003\\u0002\\u0002\\u0002\\u019d\\u019e\\u0007\",\n    \"g\\u0002\\u0002\\u019e\\u019f\\u0007x\\u0002\\u0002\\u019f\\u01a0\\u0007g\\u0002\",\n    \"\\u0002\\u01a0\\u01a1\\u0007p\\u0002\\u0002\\u01a1\\u01a2\\u0007v\\u0002\\u0002\",\n    \"\\u01a2>\\u0003\\u0002\\u0002\\u0002\\u01a3\\u01a4\\u0007g\\u0002\\u0002\\u01a4\",\n    \"\\u01a5\\u0007p\\u0002\\u0002\\u01a5\\u01a6\\u0007w\\u0002\\u0002\\u01a6\\u01a7\",\n    \"\\u0007o\\u0002\\u0002\\u01a7@\\u0003\\u0002\\u0002\\u0002\\u01a8\\u01a9\\u0007\",\n    \"]\\u0002\\u0002\\u01a9B\\u0003\\u0002\\u0002\\u0002\\u01aa\\u01ab\\u0007_\\u0002\",\n    \"\\u0002\\u01abD\\u0003\\u0002\\u0002\\u0002\\u01ac\\u01ad\\u0007c\\u0002\\u0002\",\n    \"\\u01ad\\u01ae\\u0007f\\u0002\\u0002\\u01ae\\u01af\\u0007f\\u0002\\u0002\\u01af\",\n    \"\\u01b0\\u0007t\\u0002\\u0002\\u01b0\\u01b1\\u0007g\\u0002\\u0002\\u01b1\\u01b2\",\n    \"\\u0007u\\u0002\\u0002\\u01b2\\u01b3\\u0007u\\u0002\\u0002\\u01b3F\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01b4\\u01b5\\u00070\\u0002\\u0002\\u01b5H\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u01b6\\u01b7\\u0007o\\u0002\\u0002\\u01b7\\u01b8\\u0007c\\u0002\\u0002\",\n    \"\\u01b8\\u01b9\\u0007r\\u0002\\u0002\\u01b9\\u01ba\\u0007r\\u0002\\u0002\\u01ba\",\n    \"\\u01bb\\u0007k\\u0002\\u0002\\u01bb\\u01bc\\u0007p\\u0002\\u0002\\u01bc\\u01bd\",\n    \"\\u0007i\\u0002\\u0002\\u01bdJ\\u0003\\u0002\\u0002\\u0002\\u01be\\u01bf\\u0007\",\n    \"?\\u0002\\u0002\\u01bf\\u01c0\\u0007@\\u0002\\u0002\\u01c0L\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u01c1\\u01c2\\u0007o\\u0002\\u0002\\u01c2\\u01c3\\u0007g\\u0002\\u0002\",\n    \"\\u01c3\\u01c4\\u0007o\\u0002\\u0002\\u01c4\\u01c5\\u0007q\\u0002\\u0002\\u01c5\",\n    \"\\u01c6\\u0007t\\u0002\\u0002\\u01c6\\u01c7\\u0007{\\u0002\\u0002\\u01c7N\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c8\\u01c9\\u0007u\\u0002\\u0002\\u01c9\\u01ca\\u0007\",\n    \"v\\u0002\\u0002\\u01ca\\u01cb\\u0007q\\u0002\\u0002\\u01cb\\u01cc\\u0007t\\u0002\",\n    \"\\u0002\\u01cc\\u01cd\\u0007c\\u0002\\u0002\\u01cd\\u01ce\\u0007i\\u0002\\u0002\",\n    \"\\u01ce\\u01cf\\u0007g\\u0002\\u0002\\u01cfP\\u0003\\u0002\\u0002\\u0002\\u01d0\",\n    \"\\u01d1\\u0007e\\u0002\\u0002\\u01d1\\u01d2\\u0007c\\u0002\\u0002\\u01d2\\u01d3\",\n    \"\\u0007n\\u0002\\u0002\\u01d3\\u01d4\\u0007n\\u0002\\u0002\\u01d4\\u01d5\\u0007\",\n    \"f\\u0002\\u0002\\u01d5\\u01d6\\u0007c\\u0002\\u0002\\u01d6\\u01d7\\u0007v\\u0002\",\n    \"\\u0002\\u01d7\\u01d8\\u0007c\\u0002\\u0002\\u01d8R\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d9\\u01da\\u0007k\\u0002\\u0002\\u01da\\u01db\\u0007h\\u0002\\u0002\\u01db\",\n    \"T\\u0003\\u0002\\u0002\\u0002\\u01dc\\u01dd\\u0007g\\u0002\\u0002\\u01dd\\u01de\",\n    \"\\u0007n\\u0002\\u0002\\u01de\\u01df\\u0007u\\u0002\\u0002\\u01df\\u01e0\\u0007\",\n    \"g\\u0002\\u0002\\u01e0V\\u0003\\u0002\\u0002\\u0002\\u01e1\\u01e2\\u0007v\\u0002\",\n    \"\\u0002\\u01e2\\u01e3\\u0007t\\u0002\\u0002\\u01e3\\u01e4\\u0007{\\u0002\\u0002\",\n    \"\\u01e4X\\u0003\\u0002\\u0002\\u0002\\u01e5\\u01e6\\u0007e\\u0002\\u0002\\u01e6\",\n    \"\\u01e7\\u0007c\\u0002\\u0002\\u01e7\\u01e8\\u0007v\\u0002\\u0002\\u01e8\\u01e9\",\n    \"\\u0007e\\u0002\\u0002\\u01e9\\u01ea\\u0007j\\u0002\\u0002\\u01eaZ\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01eb\\u01ec\\u0007y\\u0002\\u0002\\u01ec\\u01ed\\u0007j\\u0002\",\n    \"\\u0002\\u01ed\\u01ee\\u0007k\\u0002\\u0002\\u01ee\\u01ef\\u0007n\\u0002\\u0002\",\n    \"\\u01ef\\u01f0\\u0007g\\u0002\\u0002\\u01f0\\\\\\u0003\\u0002\\u0002\\u0002\\u01f1\",\n    \"\\u01f2\\u0007c\\u0002\\u0002\\u01f2\\u01f3\\u0007u\\u0002\\u0002\\u01f3\\u01f4\",\n    \"\\u0007u\\u0002\\u0002\\u01f4\\u01f5\\u0007g\\u0002\\u0002\\u01f5\\u01f6\\u0007\",\n    \"o\\u0002\\u0002\\u01f6\\u01f7\\u0007d\\u0002\\u0002\\u01f7\\u01f8\\u0007n\\u0002\",\n    \"\\u0002\\u01f8\\u01f9\\u0007{\\u0002\\u0002\\u01f9^\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01fa\\u01fb\\u0007f\\u0002\\u0002\\u01fb\\u01fc\\u0007q\\u0002\\u0002\\u01fc\",\n    \"`\\u0003\\u0002\\u0002\\u0002\\u01fd\\u01fe\\u0007t\\u0002\\u0002\\u01fe\\u01ff\",\n    \"\\u0007g\\u0002\\u0002\\u01ff\\u0200\\u0007v\\u0002\\u0002\\u0200\\u0201\\u0007\",\n    \"w\\u0002\\u0002\\u0201\\u0202\\u0007t\\u0002\\u0002\\u0202\\u0203\\u0007p\\u0002\",\n    \"\\u0002\\u0203b\\u0003\\u0002\\u0002\\u0002\\u0204\\u0205\\u0007v\\u0002\\u0002\",\n    \"\\u0205\\u0206\\u0007j\\u0002\\u0002\\u0206\\u0207\\u0007t\\u0002\\u0002\\u0207\",\n    \"\\u0208\\u0007q\\u0002\\u0002\\u0208\\u0209\\u0007y\\u0002\\u0002\\u0209d\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u020a\\u020b\\u0007g\\u0002\\u0002\\u020b\\u020c\\u0007\",\n    \"o\\u0002\\u0002\\u020c\\u020d\\u0007k\\u0002\\u0002\\u020d\\u020e\\u0007v\\u0002\",\n    \"\\u0002\\u020ef\\u0003\\u0002\\u0002\\u0002\\u020f\\u0210\\u0007x\\u0002\\u0002\",\n    \"\\u0210\\u0211\\u0007c\\u0002\\u0002\\u0211\\u0212\\u0007t\\u0002\\u0002\\u0212\",\n    \"h\\u0003\\u0002\\u0002\\u0002\\u0213\\u0214\\u0007d\\u0002\\u0002\\u0214\\u0215\",\n    \"\\u0007q\\u0002\\u0002\\u0215\\u0216\\u0007q\\u0002\\u0002\\u0216\\u0217\\u0007\",\n    \"n\\u0002\\u0002\\u0217j\\u0003\\u0002\\u0002\\u0002\\u0218\\u0219\\u0007u\\u0002\",\n    \"\\u0002\\u0219\\u021a\\u0007v\\u0002\\u0002\\u021a\\u021b\\u0007t\\u0002\\u0002\",\n    \"\\u021b\\u021c\\u0007k\\u0002\\u0002\\u021c\\u021d\\u0007p\\u0002\\u0002\\u021d\",\n    \"\\u021e\\u0007i\\u0002\\u0002\\u021el\\u0003\\u0002\\u0002\\u0002\\u021f\\u0220\",\n    \"\\u0007d\\u0002\\u0002\\u0220\\u0221\\u0007{\\u0002\\u0002\\u0221\\u0222\\u0007\",\n    \"v\\u0002\\u0002\\u0222\\u0223\\u0007g\\u0002\\u0002\\u0223n\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0224\\u0225\\u0007-\\u0002\\u0002\\u0225\\u0226\\u0007-\\u0002\\u0002\",\n    \"\\u0226p\\u0003\\u0002\\u0002\\u0002\\u0227\\u0228\\u0007/\\u0002\\u0002\\u0228\",\n    \"\\u0229\\u0007/\\u0002\\u0002\\u0229r\\u0003\\u0002\\u0002\\u0002\\u022a\\u022b\",\n    \"\\u0007p\\u0002\\u0002\\u022b\\u022c\\u0007g\\u0002\\u0002\\u022c\\u022d\\u0007\",\n    \"y\\u0002\\u0002\\u022dt\\u0003\\u0002\\u0002\\u0002\\u022e\\u022f\\u0007<\\u0002\",\n    \"\\u0002\\u022fv\\u0003\\u0002\\u0002\\u0002\\u0230\\u0231\\u0007-\\u0002\\u0002\",\n    \"\\u0231x\\u0003\\u0002\\u0002\\u0002\\u0232\\u0233\\u0007/\\u0002\\u0002\\u0233\",\n    \"z\\u0003\\u0002\\u0002\\u0002\\u0234\\u0235\\u0007c\\u0002\\u0002\\u0235\\u0236\",\n    \"\\u0007h\\u0002\\u0002\\u0236\\u0237\\u0007v\\u0002\\u0002\\u0237\\u0238\\u0007\",\n    \"g\\u0002\\u0002\\u0238\\u0239\\u0007t\\u0002\\u0002\\u0239|\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u023a\\u023b\\u0007f\\u0002\\u0002\\u023b\\u023c\\u0007g\\u0002\\u0002\",\n    \"\\u023c\\u023d\\u0007n\\u0002\\u0002\\u023d\\u023e\\u0007g\\u0002\\u0002\\u023e\",\n    \"\\u023f\\u0007v\\u0002\\u0002\\u023f\\u0240\\u0007g\\u0002\\u0002\\u0240~\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0241\\u0242\\u0007#\\u0002\\u0002\\u0242\\u0080\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0243\\u0244\\u0007,\\u0002\\u0002\\u0244\\u0245\\u0007\",\n    \",\\u0002\\u0002\\u0245\\u0082\\u0003\\u0002\\u0002\\u0002\\u0246\\u0247\\u0007\",\n    \"1\\u0002\\u0002\\u0247\\u0084\\u0003\\u0002\\u0002\\u0002\\u0248\\u0249\\u0007\",\n    \"\\'\\u0002\\u0002\\u0249\\u0086\\u0003\\u0002\\u0002\\u0002\\u024a\\u024b\\u0007\",\n    \">\\u0002\\u0002\\u024b\\u024c\\u0007>\\u0002\\u0002\\u024c\\u0088\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u024d\\u024e\\u0007@\\u0002\\u0002\\u024e\\u024f\\u0007@\\u0002\",\n    \"\\u0002\\u024f\\u008a\\u0003\\u0002\\u0002\\u0002\\u0250\\u0251\\u0007(\\u0002\",\n    \"\\u0002\\u0251\\u008c\\u0003\\u0002\\u0002\\u0002\\u0252\\u0253\\u0007~\\u0002\",\n    \"\\u0002\\u0253\\u008e\\u0003\\u0002\\u0002\\u0002\\u0254\\u0255\\u0007?\\u0002\",\n    \"\\u0002\\u0255\\u0256\\u0007?\\u0002\\u0002\\u0256\\u0090\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0257\\u0258\\u0007#\\u0002\\u0002\\u0258\\u0259\\u0007?\\u0002\\u0002\",\n    \"\\u0259\\u0092\\u0003\\u0002\\u0002\\u0002\\u025a\\u025b\\u0007(\\u0002\\u0002\",\n    \"\\u025b\\u025c\\u0007(\\u0002\\u0002\\u025c\\u0094\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u025d\\u025e\\u0007~\\u0002\\u0002\\u025e\\u025f\\u0007~\\u0002\\u0002\\u025f\",\n    \"\\u0096\\u0003\\u0002\\u0002\\u0002\\u0260\\u0261\\u0007A\\u0002\\u0002\\u0261\",\n    \"\\u0098\\u0003\\u0002\\u0002\\u0002\\u0262\\u0263\\u0007~\\u0002\\u0002\\u0263\",\n    \"\\u0264\\u0007?\\u0002\\u0002\\u0264\\u009a\\u0003\\u0002\\u0002\\u0002\\u0265\",\n    \"\\u0266\\u0007`\\u0002\\u0002\\u0266\\u0267\\u0007?\\u0002\\u0002\\u0267\\u009c\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0268\\u0269\\u0007(\\u0002\\u0002\\u0269\\u026a\",\n    \"\\u0007?\\u0002\\u0002\\u026a\\u009e\\u0003\\u0002\\u0002\\u0002\\u026b\\u026c\",\n    \"\\u0007>\\u0002\\u0002\\u026c\\u026d\\u0007>\\u0002\\u0002\\u026d\\u026e\\u0007\",\n    \"?\\u0002\\u0002\\u026e\\u00a0\\u0003\\u0002\\u0002\\u0002\\u026f\\u0270\\u0007\",\n    \"@\\u0002\\u0002\\u0270\\u0271\\u0007@\\u0002\\u0002\\u0271\\u0272\\u0007?\\u0002\",\n    \"\\u0002\\u0272\\u00a2\\u0003\\u0002\\u0002\\u0002\\u0273\\u0274\\u0007-\\u0002\",\n    \"\\u0002\\u0274\\u0275\\u0007?\\u0002\\u0002\\u0275\\u00a4\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0276\\u0277\\u0007/\\u0002\\u0002\\u0277\\u0278\\u0007?\\u0002\\u0002\",\n    \"\\u0278\\u00a6\\u0003\\u0002\\u0002\\u0002\\u0279\\u027a\\u0007,\\u0002\\u0002\",\n    \"\\u027a\\u027b\\u0007?\\u0002\\u0002\\u027b\\u00a8\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u027c\\u027d\\u00071\\u0002\\u0002\\u027d\\u027e\\u0007?\\u0002\\u0002\\u027e\",\n    \"\\u00aa\\u0003\\u0002\\u0002\\u0002\\u027f\\u0280\\u0007\\'\\u0002\\u0002\\u0280\",\n    \"\\u0281\\u0007?\\u0002\\u0002\\u0281\\u00ac\\u0003\\u0002\\u0002\\u0002\\u0282\",\n    \"\\u0283\\u0007n\\u0002\\u0002\\u0283\\u0284\\u0007g\\u0002\\u0002\\u0284\\u0285\",\n    \"\\u0007v\\u0002\\u0002\\u0285\\u00ae\\u0003\\u0002\\u0002\\u0002\\u0286\\u0287\",\n    \"\\u0007<\\u0002\\u0002\\u0287\\u0288\\u0007?\\u0002\\u0002\\u0288\\u00b0\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0289\\u028a\\u0007?\\u0002\\u0002\\u028a\\u028b\\u0007\",\n    \"<\\u0002\\u0002\\u028b\\u00b2\\u0003\\u0002\\u0002\\u0002\\u028c\\u028d\\u0007\",\n    \"u\\u0002\\u0002\\u028d\\u028e\\u0007y\\u0002\\u0002\\u028e\\u028f\\u0007k\\u0002\",\n    \"\\u0002\\u028f\\u0290\\u0007v\\u0002\\u0002\\u0290\\u0291\\u0007e\\u0002\\u0002\",\n    \"\\u0291\\u0292\\u0007j\\u0002\\u0002\\u0292\\u00b4\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0293\\u0294\\u0007e\\u0002\\u0002\\u0294\\u0295\\u0007c\\u0002\\u0002\\u0295\",\n    \"\\u0296\\u0007u\\u0002\\u0002\\u0296\\u0297\\u0007g\\u0002\\u0002\\u0297\\u00b6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0298\\u0299\\u0007f\\u0002\\u0002\\u0299\\u029a\",\n    \"\\u0007g\\u0002\\u0002\\u029a\\u029b\\u0007h\\u0002\\u0002\\u029b\\u029c\\u0007\",\n    \"c\\u0002\\u0002\\u029c\\u029d\\u0007w\\u0002\\u0002\\u029d\\u029e\\u0007n\\u0002\",\n    \"\\u0002\\u029e\\u029f\\u0007v\\u0002\\u0002\\u029f\\u00b8\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u02a0\\u02a1\\u0007/\\u0002\\u0002\\u02a1\\u02a2\\u0007@\\u0002\\u0002\",\n    \"\\u02a2\\u00ba\\u0003\\u0002\\u0002\\u0002\\u02a3\\u02a4\\u0007e\\u0002\\u0002\",\n    \"\\u02a4\\u02a5\\u0007c\\u0002\\u0002\\u02a5\\u02a6\\u0007n\\u0002\\u0002\\u02a6\",\n    \"\\u02a7\\u0007n\\u0002\\u0002\\u02a7\\u02a8\\u0007d\\u0002\\u0002\\u02a8\\u02a9\",\n    \"\\u0007c\\u0002\\u0002\\u02a9\\u02aa\\u0007e\\u0002\\u0002\\u02aa\\u02ab\\u0007\",\n    \"m\\u0002\\u0002\\u02ab\\u00bc\\u0003\\u0002\\u0002\\u0002\\u02ac\\u02ad\\u0007\",\n    \"q\\u0002\\u0002\\u02ad\\u02ae\\u0007x\\u0002\\u0002\\u02ae\\u02af\\u0007g\\u0002\",\n    \"\\u0002\\u02af\\u02b0\\u0007t\\u0002\\u0002\\u02b0\\u02b1\\u0007t\\u0002\\u0002\",\n    \"\\u02b1\\u02b2\\u0007k\\u0002\\u0002\\u02b2\\u02b3\\u0007f\\u0002\\u0002\\u02b3\",\n    \"\\u02b4\\u0007g\\u0002\\u0002\\u02b4\\u00be\\u0003\\u0002\\u0002\\u0002\\u02b5\",\n    \"\\u02b6\\u0007k\\u0002\\u0002\\u02b6\\u02b7\\u0007p\\u0002\\u0002\\u02b7\\u036c\",\n    \"\\u0007v\\u0002\\u0002\\u02b8\\u02b9\\u0007k\\u0002\\u0002\\u02b9\\u02ba\\u0007\",\n    \"p\\u0002\\u0002\\u02ba\\u02bb\\u0007v\\u0002\\u0002\\u02bb\\u036c\\u0007:\\u0002\",\n    \"\\u0002\\u02bc\\u02bd\\u0007k\\u0002\\u0002\\u02bd\\u02be\\u0007p\\u0002\\u0002\",\n    \"\\u02be\\u02bf\\u0007v\\u0002\\u0002\\u02bf\\u02c0\\u00073\\u0002\\u0002\\u02c0\",\n    \"\\u036c\\u00078\\u0002\\u0002\\u02c1\\u02c2\\u0007k\\u0002\\u0002\\u02c2\\u02c3\",\n    \"\\u0007p\\u0002\\u0002\\u02c3\\u02c4\\u0007v\\u0002\\u0002\\u02c4\\u02c5\\u0007\",\n    \"4\\u0002\\u0002\\u02c5\\u036c\\u00076\\u0002\\u0002\\u02c6\\u02c7\\u0007k\\u0002\",\n    \"\\u0002\\u02c7\\u02c8\\u0007p\\u0002\\u0002\\u02c8\\u02c9\\u0007v\\u0002\\u0002\",\n    \"\\u02c9\\u02ca\\u00075\\u0002\\u0002\\u02ca\\u036c\\u00074\\u0002\\u0002\\u02cb\",\n    \"\\u02cc\\u0007k\\u0002\\u0002\\u02cc\\u02cd\\u0007p\\u0002\\u0002\\u02cd\\u02ce\",\n    \"\\u0007v\\u0002\\u0002\\u02ce\\u02cf\\u00076\\u0002\\u0002\\u02cf\\u036c\\u0007\",\n    \"2\\u0002\\u0002\\u02d0\\u02d1\\u0007k\\u0002\\u0002\\u02d1\\u02d2\\u0007p\\u0002\",\n    \"\\u0002\\u02d2\\u02d3\\u0007v\\u0002\\u0002\\u02d3\\u02d4\\u00076\\u0002\\u0002\",\n    \"\\u02d4\\u036c\\u0007:\\u0002\\u0002\\u02d5\\u02d6\\u0007k\\u0002\\u0002\\u02d6\",\n    \"\\u02d7\\u0007p\\u0002\\u0002\\u02d7\\u02d8\\u0007v\\u0002\\u0002\\u02d8\\u02d9\",\n    \"\\u00077\\u0002\\u0002\\u02d9\\u036c\\u00078\\u0002\\u0002\\u02da\\u02db\\u0007\",\n    \"k\\u0002\\u0002\\u02db\\u02dc\\u0007p\\u0002\\u0002\\u02dc\\u02dd\\u0007v\\u0002\",\n    \"\\u0002\\u02dd\\u02de\\u00078\\u0002\\u0002\\u02de\\u036c\\u00076\\u0002\\u0002\",\n    \"\\u02df\\u02e0\\u0007k\\u0002\\u0002\\u02e0\\u02e1\\u0007p\\u0002\\u0002\\u02e1\",\n    \"\\u02e2\\u0007v\\u0002\\u0002\\u02e2\\u02e3\\u00079\\u0002\\u0002\\u02e3\\u036c\",\n    \"\\u00074\\u0002\\u0002\\u02e4\\u02e5\\u0007k\\u0002\\u0002\\u02e5\\u02e6\\u0007\",\n    \"p\\u0002\\u0002\\u02e6\\u02e7\\u0007v\\u0002\\u0002\\u02e7\\u02e8\\u0007:\\u0002\",\n    \"\\u0002\\u02e8\\u036c\\u00072\\u0002\\u0002\\u02e9\\u02ea\\u0007k\\u0002\\u0002\",\n    \"\\u02ea\\u02eb\\u0007p\\u0002\\u0002\\u02eb\\u02ec\\u0007v\\u0002\\u0002\\u02ec\",\n    \"\\u02ed\\u0007:\\u0002\\u0002\\u02ed\\u036c\\u0007:\\u0002\\u0002\\u02ee\\u02ef\",\n    \"\\u0007k\\u0002\\u0002\\u02ef\\u02f0\\u0007p\\u0002\\u0002\\u02f0\\u02f1\\u0007\",\n    \"v\\u0002\\u0002\\u02f1\\u02f2\\u0007;\\u0002\\u0002\\u02f2\\u036c\\u00078\\u0002\",\n    \"\\u0002\\u02f3\\u02f4\\u0007k\\u0002\\u0002\\u02f4\\u02f5\\u0007p\\u0002\\u0002\",\n    \"\\u02f5\\u02f6\\u0007v\\u0002\\u0002\\u02f6\\u02f7\\u00073\\u0002\\u0002\\u02f7\",\n    \"\\u02f8\\u00072\\u0002\\u0002\\u02f8\\u036c\\u00076\\u0002\\u0002\\u02f9\\u02fa\",\n    \"\\u0007k\\u0002\\u0002\\u02fa\\u02fb\\u0007p\\u0002\\u0002\\u02fb\\u02fc\\u0007\",\n    \"v\\u0002\\u0002\\u02fc\\u02fd\\u00073\\u0002\\u0002\\u02fd\\u02fe\\u00073\\u0002\",\n    \"\\u0002\\u02fe\\u036c\\u00074\\u0002\\u0002\\u02ff\\u0300\\u0007k\\u0002\\u0002\",\n    \"\\u0300\\u0301\\u0007p\\u0002\\u0002\\u0301\\u0302\\u0007v\\u0002\\u0002\\u0302\",\n    \"\\u0303\\u00073\\u0002\\u0002\\u0303\\u0304\\u00074\\u0002\\u0002\\u0304\\u036c\",\n    \"\\u00072\\u0002\\u0002\\u0305\\u0306\\u0007k\\u0002\\u0002\\u0306\\u0307\\u0007\",\n    \"p\\u0002\\u0002\\u0307\\u0308\\u0007v\\u0002\\u0002\\u0308\\u0309\\u00073\\u0002\",\n    \"\\u0002\\u0309\\u030a\\u00074\\u0002\\u0002\\u030a\\u036c\\u0007:\\u0002\\u0002\",\n    \"\\u030b\\u030c\\u0007k\\u0002\\u0002\\u030c\\u030d\\u0007p\\u0002\\u0002\\u030d\",\n    \"\\u030e\\u0007v\\u0002\\u0002\\u030e\\u030f\\u00073\\u0002\\u0002\\u030f\\u0310\",\n    \"\\u00075\\u0002\\u0002\\u0310\\u036c\\u00078\\u0002\\u0002\\u0311\\u0312\\u0007\",\n    \"k\\u0002\\u0002\\u0312\\u0313\\u0007p\\u0002\\u0002\\u0313\\u0314\\u0007v\\u0002\",\n    \"\\u0002\\u0314\\u0315\\u00073\\u0002\\u0002\\u0315\\u0316\\u00076\\u0002\\u0002\",\n    \"\\u0316\\u036c\\u00076\\u0002\\u0002\\u0317\\u0318\\u0007k\\u0002\\u0002\\u0318\",\n    \"\\u0319\\u0007p\\u0002\\u0002\\u0319\\u031a\\u0007v\\u0002\\u0002\\u031a\\u031b\",\n    \"\\u00073\\u0002\\u0002\\u031b\\u031c\\u00077\\u0002\\u0002\\u031c\\u036c\\u0007\",\n    \"4\\u0002\\u0002\\u031d\\u031e\\u0007k\\u0002\\u0002\\u031e\\u031f\\u0007p\\u0002\",\n    \"\\u0002\\u031f\\u0320\\u0007v\\u0002\\u0002\\u0320\\u0321\\u00073\\u0002\\u0002\",\n    \"\\u0321\\u0322\\u00078\\u0002\\u0002\\u0322\\u036c\\u00072\\u0002\\u0002\\u0323\",\n    \"\\u0324\\u0007k\\u0002\\u0002\\u0324\\u0325\\u0007p\\u0002\\u0002\\u0325\\u0326\",\n    \"\\u0007v\\u0002\\u0002\\u0326\\u0327\\u00073\\u0002\\u0002\\u0327\\u0328\\u0007\",\n    \"8\\u0002\\u0002\\u0328\\u036c\\u0007:\\u0002\\u0002\\u0329\\u032a\\u0007k\\u0002\",\n    \"\\u0002\\u032a\\u032b\\u0007p\\u0002\\u0002\\u032b\\u032c\\u0007v\\u0002\\u0002\",\n    \"\\u032c\\u032d\\u00073\\u0002\\u0002\\u032d\\u032e\\u00079\\u0002\\u0002\\u032e\",\n    \"\\u036c\\u00078\\u0002\\u0002\\u032f\\u0330\\u0007k\\u0002\\u0002\\u0330\\u0331\",\n    \"\\u0007p\\u0002\\u0002\\u0331\\u0332\\u0007v\\u0002\\u0002\\u0332\\u0333\\u0007\",\n    \"3\\u0002\\u0002\\u0333\\u0334\\u0007:\\u0002\\u0002\\u0334\\u036c\\u00076\\u0002\",\n    \"\\u0002\\u0335\\u0336\\u0007k\\u0002\\u0002\\u0336\\u0337\\u0007p\\u0002\\u0002\",\n    \"\\u0337\\u0338\\u0007v\\u0002\\u0002\\u0338\\u0339\\u00073\\u0002\\u0002\\u0339\",\n    \"\\u033a\\u0007;\\u0002\\u0002\\u033a\\u036c\\u00074\\u0002\\u0002\\u033b\\u033c\",\n    \"\\u0007k\\u0002\\u0002\\u033c\\u033d\\u0007p\\u0002\\u0002\\u033d\\u033e\\u0007\",\n    \"v\\u0002\\u0002\\u033e\\u033f\\u00074\\u0002\\u0002\\u033f\\u0340\\u00072\\u0002\",\n    \"\\u0002\\u0340\\u036c\\u00072\\u0002\\u0002\\u0341\\u0342\\u0007k\\u0002\\u0002\",\n    \"\\u0342\\u0343\\u0007p\\u0002\\u0002\\u0343\\u0344\\u0007v\\u0002\\u0002\\u0344\",\n    \"\\u0345\\u00074\\u0002\\u0002\\u0345\\u0346\\u00072\\u0002\\u0002\\u0346\\u036c\",\n    \"\\u0007:\\u0002\\u0002\\u0347\\u0348\\u0007k\\u0002\\u0002\\u0348\\u0349\\u0007\",\n    \"p\\u0002\\u0002\\u0349\\u034a\\u0007v\\u0002\\u0002\\u034a\\u034b\\u00074\\u0002\",\n    \"\\u0002\\u034b\\u034c\\u00073\\u0002\\u0002\\u034c\\u036c\\u00078\\u0002\\u0002\",\n    \"\\u034d\\u034e\\u0007k\\u0002\\u0002\\u034e\\u034f\\u0007p\\u0002\\u0002\\u034f\",\n    \"\\u0350\\u0007v\\u0002\\u0002\\u0350\\u0351\\u00074\\u0002\\u0002\\u0351\\u0352\",\n    \"\\u00074\\u0002\\u0002\\u0352\\u036c\\u00076\\u0002\\u0002\\u0353\\u0354\\u0007\",\n    \"k\\u0002\\u0002\\u0354\\u0355\\u0007p\\u0002\\u0002\\u0355\\u0356\\u0007v\\u0002\",\n    \"\\u0002\\u0356\\u0357\\u00074\\u0002\\u0002\\u0357\\u0358\\u00075\\u0002\\u0002\",\n    \"\\u0358\\u036c\\u00074\\u0002\\u0002\\u0359\\u035a\\u0007k\\u0002\\u0002\\u035a\",\n    \"\\u035b\\u0007p\\u0002\\u0002\\u035b\\u035c\\u0007v\\u0002\\u0002\\u035c\\u035d\",\n    \"\\u00074\\u0002\\u0002\\u035d\\u035e\\u00076\\u0002\\u0002\\u035e\\u036c\\u0007\",\n    \"2\\u0002\\u0002\\u035f\\u0360\\u0007k\\u0002\\u0002\\u0360\\u0361\\u0007p\\u0002\",\n    \"\\u0002\\u0361\\u0362\\u0007v\\u0002\\u0002\\u0362\\u0363\\u00074\\u0002\\u0002\",\n    \"\\u0363\\u0364\\u00076\\u0002\\u0002\\u0364\\u036c\\u0007:\\u0002\\u0002\\u0365\",\n    \"\\u0366\\u0007k\\u0002\\u0002\\u0366\\u0367\\u0007p\\u0002\\u0002\\u0367\\u0368\",\n    \"\\u0007v\\u0002\\u0002\\u0368\\u0369\\u00074\\u0002\\u0002\\u0369\\u036a\\u0007\",\n    \"7\\u0002\\u0002\\u036a\\u036c\\u00078\\u0002\\u0002\\u036b\\u02b5\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02b8\\u0003\\u0002\\u0002\\u0002\\u036b\\u02bc\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02c1\\u0003\\u0002\\u0002\\u0002\\u036b\\u02c6\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02cb\\u0003\\u0002\\u0002\\u0002\\u036b\\u02d0\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02d5\\u0003\\u0002\\u0002\\u0002\\u036b\\u02da\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02df\\u0003\\u0002\\u0002\\u0002\\u036b\\u02e4\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02e9\\u0003\\u0002\\u0002\\u0002\\u036b\\u02ee\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02f3\\u0003\\u0002\\u0002\\u0002\\u036b\\u02f9\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u02ff\\u0003\\u0002\\u0002\\u0002\\u036b\\u0305\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u030b\\u0003\\u0002\\u0002\\u0002\\u036b\\u0311\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u0317\\u0003\\u0002\\u0002\\u0002\\u036b\\u031d\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u0323\\u0003\\u0002\\u0002\\u0002\\u036b\\u0329\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u032f\\u0003\\u0002\\u0002\\u0002\\u036b\\u0335\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u033b\\u0003\\u0002\\u0002\\u0002\\u036b\\u0341\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u0347\\u0003\\u0002\\u0002\\u0002\\u036b\\u034d\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u0353\\u0003\\u0002\\u0002\\u0002\\u036b\\u0359\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036b\\u035f\\u0003\\u0002\\u0002\\u0002\\u036b\\u0365\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u036c\\u00c0\\u0003\\u0002\\u0002\\u0002\\u036d\\u036e\\u0007w\",\n    \"\\u0002\\u0002\\u036e\\u036f\\u0007k\\u0002\\u0002\\u036f\\u0370\\u0007p\\u0002\",\n    \"\\u0002\\u0370\\u0445\\u0007v\\u0002\\u0002\\u0371\\u0372\\u0007w\\u0002\\u0002\",\n    \"\\u0372\\u0373\\u0007k\\u0002\\u0002\\u0373\\u0374\\u0007p\\u0002\\u0002\\u0374\",\n    \"\\u0375\\u0007v\\u0002\\u0002\\u0375\\u0445\\u0007:\\u0002\\u0002\\u0376\\u0377\",\n    \"\\u0007w\\u0002\\u0002\\u0377\\u0378\\u0007k\\u0002\\u0002\\u0378\\u0379\\u0007\",\n    \"p\\u0002\\u0002\\u0379\\u037a\\u0007v\\u0002\\u0002\\u037a\\u037b\\u00073\\u0002\",\n    \"\\u0002\\u037b\\u0445\\u00078\\u0002\\u0002\\u037c\\u037d\\u0007w\\u0002\\u0002\",\n    \"\\u037d\\u037e\\u0007k\\u0002\\u0002\\u037e\\u037f\\u0007p\\u0002\\u0002\\u037f\",\n    \"\\u0380\\u0007v\\u0002\\u0002\\u0380\\u0381\\u00074\\u0002\\u0002\\u0381\\u0445\",\n    \"\\u00076\\u0002\\u0002\\u0382\\u0383\\u0007w\\u0002\\u0002\\u0383\\u0384\\u0007\",\n    \"k\\u0002\\u0002\\u0384\\u0385\\u0007p\\u0002\\u0002\\u0385\\u0386\\u0007v\\u0002\",\n    \"\\u0002\\u0386\\u0387\\u00075\\u0002\\u0002\\u0387\\u0445\\u00074\\u0002\\u0002\",\n    \"\\u0388\\u0389\\u0007w\\u0002\\u0002\\u0389\\u038a\\u0007k\\u0002\\u0002\\u038a\",\n    \"\\u038b\\u0007p\\u0002\\u0002\\u038b\\u038c\\u0007v\\u0002\\u0002\\u038c\\u038d\",\n    \"\\u00076\\u0002\\u0002\\u038d\\u0445\\u00072\\u0002\\u0002\\u038e\\u038f\\u0007\",\n    \"w\\u0002\\u0002\\u038f\\u0390\\u0007k\\u0002\\u0002\\u0390\\u0391\\u0007p\\u0002\",\n    \"\\u0002\\u0391\\u0392\\u0007v\\u0002\\u0002\\u0392\\u0393\\u00076\\u0002\\u0002\",\n    \"\\u0393\\u0445\\u0007:\\u0002\\u0002\\u0394\\u0395\\u0007w\\u0002\\u0002\\u0395\",\n    \"\\u0396\\u0007k\\u0002\\u0002\\u0396\\u0397\\u0007p\\u0002\\u0002\\u0397\\u0398\",\n    \"\\u0007v\\u0002\\u0002\\u0398\\u0399\\u00077\\u0002\\u0002\\u0399\\u0445\\u0007\",\n    \"8\\u0002\\u0002\\u039a\\u039b\\u0007w\\u0002\\u0002\\u039b\\u039c\\u0007k\\u0002\",\n    \"\\u0002\\u039c\\u039d\\u0007p\\u0002\\u0002\\u039d\\u039e\\u0007v\\u0002\\u0002\",\n    \"\\u039e\\u039f\\u00078\\u0002\\u0002\\u039f\\u0445\\u00076\\u0002\\u0002\\u03a0\",\n    \"\\u03a1\\u0007w\\u0002\\u0002\\u03a1\\u03a2\\u0007k\\u0002\\u0002\\u03a2\\u03a3\",\n    \"\\u0007p\\u0002\\u0002\\u03a3\\u03a4\\u0007v\\u0002\\u0002\\u03a4\\u03a5\\u0007\",\n    \"9\\u0002\\u0002\\u03a5\\u0445\\u00074\\u0002\\u0002\\u03a6\\u03a7\\u0007w\\u0002\",\n    \"\\u0002\\u03a7\\u03a8\\u0007k\\u0002\\u0002\\u03a8\\u03a9\\u0007p\\u0002\\u0002\",\n    \"\\u03a9\\u03aa\\u0007v\\u0002\\u0002\\u03aa\\u03ab\\u0007:\\u0002\\u0002\\u03ab\",\n    \"\\u0445\\u00072\\u0002\\u0002\\u03ac\\u03ad\\u0007w\\u0002\\u0002\\u03ad\\u03ae\",\n    \"\\u0007k\\u0002\\u0002\\u03ae\\u03af\\u0007p\\u0002\\u0002\\u03af\\u03b0\\u0007\",\n    \"v\\u0002\\u0002\\u03b0\\u03b1\\u0007:\\u0002\\u0002\\u03b1\\u0445\\u0007:\\u0002\",\n    \"\\u0002\\u03b2\\u03b3\\u0007w\\u0002\\u0002\\u03b3\\u03b4\\u0007k\\u0002\\u0002\",\n    \"\\u03b4\\u03b5\\u0007p\\u0002\\u0002\\u03b5\\u03b6\\u0007v\\u0002\\u0002\\u03b6\",\n    \"\\u03b7\\u0007;\\u0002\\u0002\\u03b7\\u0445\\u00078\\u0002\\u0002\\u03b8\\u03b9\",\n    \"\\u0007w\\u0002\\u0002\\u03b9\\u03ba\\u0007k\\u0002\\u0002\\u03ba\\u03bb\\u0007\",\n    \"p\\u0002\\u0002\\u03bb\\u03bc\\u0007v\\u0002\\u0002\\u03bc\\u03bd\\u00073\\u0002\",\n    \"\\u0002\\u03bd\\u03be\\u00072\\u0002\\u0002\\u03be\\u0445\\u00076\\u0002\\u0002\",\n    \"\\u03bf\\u03c0\\u0007w\\u0002\\u0002\\u03c0\\u03c1\\u0007k\\u0002\\u0002\\u03c1\",\n    \"\\u03c2\\u0007p\\u0002\\u0002\\u03c2\\u03c3\\u0007v\\u0002\\u0002\\u03c3\\u03c4\",\n    \"\\u00073\\u0002\\u0002\\u03c4\\u03c5\\u00073\\u0002\\u0002\\u03c5\\u0445\\u0007\",\n    \"4\\u0002\\u0002\\u03c6\\u03c7\\u0007w\\u0002\\u0002\\u03c7\\u03c8\\u0007k\\u0002\",\n    \"\\u0002\\u03c8\\u03c9\\u0007p\\u0002\\u0002\\u03c9\\u03ca\\u0007v\\u0002\\u0002\",\n    \"\\u03ca\\u03cb\\u00073\\u0002\\u0002\\u03cb\\u03cc\\u00074\\u0002\\u0002\\u03cc\",\n    \"\\u0445\\u00072\\u0002\\u0002\\u03cd\\u03ce\\u0007w\\u0002\\u0002\\u03ce\\u03cf\",\n    \"\\u0007k\\u0002\\u0002\\u03cf\\u03d0\\u0007p\\u0002\\u0002\\u03d0\\u03d1\\u0007\",\n    \"v\\u0002\\u0002\\u03d1\\u03d2\\u00073\\u0002\\u0002\\u03d2\\u03d3\\u00074\\u0002\",\n    \"\\u0002\\u03d3\\u0445\\u0007:\\u0002\\u0002\\u03d4\\u03d5\\u0007w\\u0002\\u0002\",\n    \"\\u03d5\\u03d6\\u0007k\\u0002\\u0002\\u03d6\\u03d7\\u0007p\\u0002\\u0002\\u03d7\",\n    \"\\u03d8\\u0007v\\u0002\\u0002\\u03d8\\u03d9\\u00073\\u0002\\u0002\\u03d9\\u03da\",\n    \"\\u00075\\u0002\\u0002\\u03da\\u0445\\u00078\\u0002\\u0002\\u03db\\u03dc\\u0007\",\n    \"w\\u0002\\u0002\\u03dc\\u03dd\\u0007k\\u0002\\u0002\\u03dd\\u03de\\u0007p\\u0002\",\n    \"\\u0002\\u03de\\u03df\\u0007v\\u0002\\u0002\\u03df\\u03e0\\u00073\\u0002\\u0002\",\n    \"\\u03e0\\u03e1\\u00076\\u0002\\u0002\\u03e1\\u0445\\u00076\\u0002\\u0002\\u03e2\",\n    \"\\u03e3\\u0007w\\u0002\\u0002\\u03e3\\u03e4\\u0007k\\u0002\\u0002\\u03e4\\u03e5\",\n    \"\\u0007p\\u0002\\u0002\\u03e5\\u03e6\\u0007v\\u0002\\u0002\\u03e6\\u03e7\\u0007\",\n    \"3\\u0002\\u0002\\u03e7\\u03e8\\u00077\\u0002\\u0002\\u03e8\\u0445\\u00074\\u0002\",\n    \"\\u0002\\u03e9\\u03ea\\u0007w\\u0002\\u0002\\u03ea\\u03eb\\u0007k\\u0002\\u0002\",\n    \"\\u03eb\\u03ec\\u0007p\\u0002\\u0002\\u03ec\\u03ed\\u0007v\\u0002\\u0002\\u03ed\",\n    \"\\u03ee\\u00073\\u0002\\u0002\\u03ee\\u03ef\\u00078\\u0002\\u0002\\u03ef\\u0445\",\n    \"\\u00072\\u0002\\u0002\\u03f0\\u03f1\\u0007w\\u0002\\u0002\\u03f1\\u03f2\\u0007\",\n    \"k\\u0002\\u0002\\u03f2\\u03f3\\u0007p\\u0002\\u0002\\u03f3\\u03f4\\u0007v\\u0002\",\n    \"\\u0002\\u03f4\\u03f5\\u00073\\u0002\\u0002\\u03f5\\u03f6\\u00078\\u0002\\u0002\",\n    \"\\u03f6\\u0445\\u0007:\\u0002\\u0002\\u03f7\\u03f8\\u0007w\\u0002\\u0002\\u03f8\",\n    \"\\u03f9\\u0007k\\u0002\\u0002\\u03f9\\u03fa\\u0007p\\u0002\\u0002\\u03fa\\u03fb\",\n    \"\\u0007v\\u0002\\u0002\\u03fb\\u03fc\\u00073\\u0002\\u0002\\u03fc\\u03fd\\u0007\",\n    \"9\\u0002\\u0002\\u03fd\\u0445\\u00078\\u0002\\u0002\\u03fe\\u03ff\\u0007w\\u0002\",\n    \"\\u0002\\u03ff\\u0400\\u0007k\\u0002\\u0002\\u0400\\u0401\\u0007p\\u0002\\u0002\",\n    \"\\u0401\\u0402\\u0007v\\u0002\\u0002\\u0402\\u0403\\u00073\\u0002\\u0002\\u0403\",\n    \"\\u0404\\u0007:\\u0002\\u0002\\u0404\\u0445\\u00076\\u0002\\u0002\\u0405\\u0406\",\n    \"\\u0007w\\u0002\\u0002\\u0406\\u0407\\u0007k\\u0002\\u0002\\u0407\\u0408\\u0007\",\n    \"p\\u0002\\u0002\\u0408\\u0409\\u0007v\\u0002\\u0002\\u0409\\u040a\\u00073\\u0002\",\n    \"\\u0002\\u040a\\u040b\\u0007;\\u0002\\u0002\\u040b\\u0445\\u00074\\u0002\\u0002\",\n    \"\\u040c\\u040d\\u0007w\\u0002\\u0002\\u040d\\u040e\\u0007k\\u0002\\u0002\\u040e\",\n    \"\\u040f\\u0007p\\u0002\\u0002\\u040f\\u0410\\u0007v\\u0002\\u0002\\u0410\\u0411\",\n    \"\\u00074\\u0002\\u0002\\u0411\\u0412\\u00072\\u0002\\u0002\\u0412\\u0445\\u0007\",\n    \"2\\u0002\\u0002\\u0413\\u0414\\u0007w\\u0002\\u0002\\u0414\\u0415\\u0007k\\u0002\",\n    \"\\u0002\\u0415\\u0416\\u0007p\\u0002\\u0002\\u0416\\u0417\\u0007v\\u0002\\u0002\",\n    \"\\u0417\\u0418\\u00074\\u0002\\u0002\\u0418\\u0419\\u00072\\u0002\\u0002\\u0419\",\n    \"\\u0445\\u0007:\\u0002\\u0002\\u041a\\u041b\\u0007w\\u0002\\u0002\\u041b\\u041c\",\n    \"\\u0007k\\u0002\\u0002\\u041c\\u041d\\u0007p\\u0002\\u0002\\u041d\\u041e\\u0007\",\n    \"v\\u0002\\u0002\\u041e\\u041f\\u00074\\u0002\\u0002\\u041f\\u0420\\u00073\\u0002\",\n    \"\\u0002\\u0420\\u0445\\u00078\\u0002\\u0002\\u0421\\u0422\\u0007w\\u0002\\u0002\",\n    \"\\u0422\\u0423\\u0007k\\u0002\\u0002\\u0423\\u0424\\u0007p\\u0002\\u0002\\u0424\",\n    \"\\u0425\\u0007v\\u0002\\u0002\\u0425\\u0426\\u00074\\u0002\\u0002\\u0426\\u0427\",\n    \"\\u00074\\u0002\\u0002\\u0427\\u0445\\u00076\\u0002\\u0002\\u0428\\u0429\\u0007\",\n    \"w\\u0002\\u0002\\u0429\\u042a\\u0007k\\u0002\\u0002\\u042a\\u042b\\u0007p\\u0002\",\n    \"\\u0002\\u042b\\u042c\\u0007v\\u0002\\u0002\\u042c\\u042d\\u00074\\u0002\\u0002\",\n    \"\\u042d\\u042e\\u00075\\u0002\\u0002\\u042e\\u0445\\u00074\\u0002\\u0002\\u042f\",\n    \"\\u0430\\u0007w\\u0002\\u0002\\u0430\\u0431\\u0007k\\u0002\\u0002\\u0431\\u0432\",\n    \"\\u0007p\\u0002\\u0002\\u0432\\u0433\\u0007v\\u0002\\u0002\\u0433\\u0434\\u0007\",\n    \"4\\u0002\\u0002\\u0434\\u0435\\u00076\\u0002\\u0002\\u0435\\u0445\\u00072\\u0002\",\n    \"\\u0002\\u0436\\u0437\\u0007w\\u0002\\u0002\\u0437\\u0438\\u0007k\\u0002\\u0002\",\n    \"\\u0438\\u0439\\u0007p\\u0002\\u0002\\u0439\\u043a\\u0007v\\u0002\\u0002\\u043a\",\n    \"\\u043b\\u00074\\u0002\\u0002\\u043b\\u043c\\u00076\\u0002\\u0002\\u043c\\u0445\",\n    \"\\u0007:\\u0002\\u0002\\u043d\\u043e\\u0007w\\u0002\\u0002\\u043e\\u043f\\u0007\",\n    \"k\\u0002\\u0002\\u043f\\u0440\\u0007p\\u0002\\u0002\\u0440\\u0441\\u0007v\\u0002\",\n    \"\\u0002\\u0441\\u0442\\u00074\\u0002\\u0002\\u0442\\u0443\\u00077\\u0002\\u0002\",\n    \"\\u0443\\u0445\\u00078\\u0002\\u0002\\u0444\\u036d\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u0371\\u0003\\u0002\\u0002\\u0002\\u0444\\u0376\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u037c\\u0003\\u0002\\u0002\\u0002\\u0444\\u0382\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u0388\\u0003\\u0002\\u0002\\u0002\\u0444\\u038e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u0394\\u0003\\u0002\\u0002\\u0002\\u0444\\u039a\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03a0\\u0003\\u0002\\u0002\\u0002\\u0444\\u03a6\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03ac\\u0003\\u0002\\u0002\\u0002\\u0444\\u03b2\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03b8\\u0003\\u0002\\u0002\\u0002\\u0444\\u03bf\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03c6\\u0003\\u0002\\u0002\\u0002\\u0444\\u03cd\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03d4\\u0003\\u0002\\u0002\\u0002\\u0444\\u03db\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03e2\\u0003\\u0002\\u0002\\u0002\\u0444\\u03e9\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03f0\\u0003\\u0002\\u0002\\u0002\\u0444\\u03f7\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u03fe\\u0003\\u0002\\u0002\\u0002\\u0444\\u0405\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u040c\\u0003\\u0002\\u0002\\u0002\\u0444\\u0413\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u041a\\u0003\\u0002\\u0002\\u0002\\u0444\\u0421\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u0428\\u0003\\u0002\\u0002\\u0002\\u0444\\u042f\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0444\\u0436\\u0003\\u0002\\u0002\\u0002\\u0444\\u043d\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0445\\u00c2\\u0003\\u0002\\u0002\\u0002\\u0446\\u0447\\u0007d\\u0002\\u0002\",\n    \"\\u0447\\u0448\\u0007{\\u0002\\u0002\\u0448\\u0449\\u0007v\\u0002\\u0002\\u0449\",\n    \"\\u044a\\u0007g\\u0002\\u0002\\u044a\\u0523\\u0007u\\u0002\\u0002\\u044b\\u044c\",\n    \"\\u0007d\\u0002\\u0002\\u044c\\u044d\\u0007{\\u0002\\u0002\\u044d\\u044e\\u0007\",\n    \"v\\u0002\\u0002\\u044e\\u044f\\u0007g\\u0002\\u0002\\u044f\\u0450\\u0007u\\u0002\",\n    \"\\u0002\\u0450\\u0523\\u00073\\u0002\\u0002\\u0451\\u0452\\u0007d\\u0002\\u0002\",\n    \"\\u0452\\u0453\\u0007{\\u0002\\u0002\\u0453\\u0454\\u0007v\\u0002\\u0002\\u0454\",\n    \"\\u0455\\u0007g\\u0002\\u0002\\u0455\\u0456\\u0007u\\u0002\\u0002\\u0456\\u0523\",\n    \"\\u00074\\u0002\\u0002\\u0457\\u0458\\u0007d\\u0002\\u0002\\u0458\\u0459\\u0007\",\n    \"{\\u0002\\u0002\\u0459\\u045a\\u0007v\\u0002\\u0002\\u045a\\u045b\\u0007g\\u0002\",\n    \"\\u0002\\u045b\\u045c\\u0007u\\u0002\\u0002\\u045c\\u0523\\u00075\\u0002\\u0002\",\n    \"\\u045d\\u045e\\u0007d\\u0002\\u0002\\u045e\\u045f\\u0007{\\u0002\\u0002\\u045f\",\n    \"\\u0460\\u0007v\\u0002\\u0002\\u0460\\u0461\\u0007g\\u0002\\u0002\\u0461\\u0462\",\n    \"\\u0007u\\u0002\\u0002\\u0462\\u0523\\u00076\\u0002\\u0002\\u0463\\u0464\\u0007\",\n    \"d\\u0002\\u0002\\u0464\\u0465\\u0007{\\u0002\\u0002\\u0465\\u0466\\u0007v\\u0002\",\n    \"\\u0002\\u0466\\u0467\\u0007g\\u0002\\u0002\\u0467\\u0468\\u0007u\\u0002\\u0002\",\n    \"\\u0468\\u0523\\u00077\\u0002\\u0002\\u0469\\u046a\\u0007d\\u0002\\u0002\\u046a\",\n    \"\\u046b\\u0007{\\u0002\\u0002\\u046b\\u046c\\u0007v\\u0002\\u0002\\u046c\\u046d\",\n    \"\\u0007g\\u0002\\u0002\\u046d\\u046e\\u0007u\\u0002\\u0002\\u046e\\u0523\\u0007\",\n    \"8\\u0002\\u0002\\u046f\\u0470\\u0007d\\u0002\\u0002\\u0470\\u0471\\u0007{\\u0002\",\n    \"\\u0002\\u0471\\u0472\\u0007v\\u0002\\u0002\\u0472\\u0473\\u0007g\\u0002\\u0002\",\n    \"\\u0473\\u0474\\u0007u\\u0002\\u0002\\u0474\\u0523\\u00079\\u0002\\u0002\\u0475\",\n    \"\\u0476\\u0007d\\u0002\\u0002\\u0476\\u0477\\u0007{\\u0002\\u0002\\u0477\\u0478\",\n    \"\\u0007v\\u0002\\u0002\\u0478\\u0479\\u0007g\\u0002\\u0002\\u0479\\u047a\\u0007\",\n    \"u\\u0002\\u0002\\u047a\\u0523\\u0007:\\u0002\\u0002\\u047b\\u047c\\u0007d\\u0002\",\n    \"\\u0002\\u047c\\u047d\\u0007{\\u0002\\u0002\\u047d\\u047e\\u0007v\\u0002\\u0002\",\n    \"\\u047e\\u047f\\u0007g\\u0002\\u0002\\u047f\\u0480\\u0007u\\u0002\\u0002\\u0480\",\n    \"\\u0523\\u0007;\\u0002\\u0002\\u0481\\u0482\\u0007d\\u0002\\u0002\\u0482\\u0483\",\n    \"\\u0007{\\u0002\\u0002\\u0483\\u0484\\u0007v\\u0002\\u0002\\u0484\\u0485\\u0007\",\n    \"g\\u0002\\u0002\\u0485\\u0486\\u0007u\\u0002\\u0002\\u0486\\u0487\\u00073\\u0002\",\n    \"\\u0002\\u0487\\u0523\\u00072\\u0002\\u0002\\u0488\\u0489\\u0007d\\u0002\\u0002\",\n    \"\\u0489\\u048a\\u0007{\\u0002\\u0002\\u048a\\u048b\\u0007v\\u0002\\u0002\\u048b\",\n    \"\\u048c\\u0007g\\u0002\\u0002\\u048c\\u048d\\u0007u\\u0002\\u0002\\u048d\\u048e\",\n    \"\\u00073\\u0002\\u0002\\u048e\\u0523\\u00073\\u0002\\u0002\\u048f\\u0490\\u0007\",\n    \"d\\u0002\\u0002\\u0490\\u0491\\u0007{\\u0002\\u0002\\u0491\\u0492\\u0007v\\u0002\",\n    \"\\u0002\\u0492\\u0493\\u0007g\\u0002\\u0002\\u0493\\u0494\\u0007u\\u0002\\u0002\",\n    \"\\u0494\\u0495\\u00073\\u0002\\u0002\\u0495\\u0523\\u00074\\u0002\\u0002\\u0496\",\n    \"\\u0497\\u0007d\\u0002\\u0002\\u0497\\u0498\\u0007{\\u0002\\u0002\\u0498\\u0499\",\n    \"\\u0007v\\u0002\\u0002\\u0499\\u049a\\u0007g\\u0002\\u0002\\u049a\\u049b\\u0007\",\n    \"u\\u0002\\u0002\\u049b\\u049c\\u00073\\u0002\\u0002\\u049c\\u0523\\u00075\\u0002\",\n    \"\\u0002\\u049d\\u049e\\u0007d\\u0002\\u0002\\u049e\\u049f\\u0007{\\u0002\\u0002\",\n    \"\\u049f\\u04a0\\u0007v\\u0002\\u0002\\u04a0\\u04a1\\u0007g\\u0002\\u0002\\u04a1\",\n    \"\\u04a2\\u0007u\\u0002\\u0002\\u04a2\\u04a3\\u00073\\u0002\\u0002\\u04a3\\u0523\",\n    \"\\u00076\\u0002\\u0002\\u04a4\\u04a5\\u0007d\\u0002\\u0002\\u04a5\\u04a6\\u0007\",\n    \"{\\u0002\\u0002\\u04a6\\u04a7\\u0007v\\u0002\\u0002\\u04a7\\u04a8\\u0007g\\u0002\",\n    \"\\u0002\\u04a8\\u04a9\\u0007u\\u0002\\u0002\\u04a9\\u04aa\\u00073\\u0002\\u0002\",\n    \"\\u04aa\\u0523\\u00077\\u0002\\u0002\\u04ab\\u04ac\\u0007d\\u0002\\u0002\\u04ac\",\n    \"\\u04ad\\u0007{\\u0002\\u0002\\u04ad\\u04ae\\u0007v\\u0002\\u0002\\u04ae\\u04af\",\n    \"\\u0007g\\u0002\\u0002\\u04af\\u04b0\\u0007u\\u0002\\u0002\\u04b0\\u04b1\\u0007\",\n    \"3\\u0002\\u0002\\u04b1\\u0523\\u00078\\u0002\\u0002\\u04b2\\u04b3\\u0007d\\u0002\",\n    \"\\u0002\\u04b3\\u04b4\\u0007{\\u0002\\u0002\\u04b4\\u04b5\\u0007v\\u0002\\u0002\",\n    \"\\u04b5\\u04b6\\u0007g\\u0002\\u0002\\u04b6\\u04b7\\u0007u\\u0002\\u0002\\u04b7\",\n    \"\\u04b8\\u00073\\u0002\\u0002\\u04b8\\u0523\\u00079\\u0002\\u0002\\u04b9\\u04ba\",\n    \"\\u0007d\\u0002\\u0002\\u04ba\\u04bb\\u0007{\\u0002\\u0002\\u04bb\\u04bc\\u0007\",\n    \"v\\u0002\\u0002\\u04bc\\u04bd\\u0007g\\u0002\\u0002\\u04bd\\u04be\\u0007u\\u0002\",\n    \"\\u0002\\u04be\\u04bf\\u00073\\u0002\\u0002\\u04bf\\u0523\\u0007:\\u0002\\u0002\",\n    \"\\u04c0\\u04c1\\u0007d\\u0002\\u0002\\u04c1\\u04c2\\u0007{\\u0002\\u0002\\u04c2\",\n    \"\\u04c3\\u0007v\\u0002\\u0002\\u04c3\\u04c4\\u0007g\\u0002\\u0002\\u04c4\\u04c5\",\n    \"\\u0007u\\u0002\\u0002\\u04c5\\u04c6\\u00073\\u0002\\u0002\\u04c6\\u0523\\u0007\",\n    \";\\u0002\\u0002\\u04c7\\u04c8\\u0007d\\u0002\\u0002\\u04c8\\u04c9\\u0007{\\u0002\",\n    \"\\u0002\\u04c9\\u04ca\\u0007v\\u0002\\u0002\\u04ca\\u04cb\\u0007g\\u0002\\u0002\",\n    \"\\u04cb\\u04cc\\u0007u\\u0002\\u0002\\u04cc\\u04cd\\u00074\\u0002\\u0002\\u04cd\",\n    \"\\u0523\\u00072\\u0002\\u0002\\u04ce\\u04cf\\u0007d\\u0002\\u0002\\u04cf\\u04d0\",\n    \"\\u0007{\\u0002\\u0002\\u04d0\\u04d1\\u0007v\\u0002\\u0002\\u04d1\\u04d2\\u0007\",\n    \"g\\u0002\\u0002\\u04d2\\u04d3\\u0007u\\u0002\\u0002\\u04d3\\u04d4\\u00074\\u0002\",\n    \"\\u0002\\u04d4\\u0523\\u00073\\u0002\\u0002\\u04d5\\u04d6\\u0007d\\u0002\\u0002\",\n    \"\\u04d6\\u04d7\\u0007{\\u0002\\u0002\\u04d7\\u04d8\\u0007v\\u0002\\u0002\\u04d8\",\n    \"\\u04d9\\u0007g\\u0002\\u0002\\u04d9\\u04da\\u0007u\\u0002\\u0002\\u04da\\u04db\",\n    \"\\u00074\\u0002\\u0002\\u04db\\u0523\\u00074\\u0002\\u0002\\u04dc\\u04dd\\u0007\",\n    \"d\\u0002\\u0002\\u04dd\\u04de\\u0007{\\u0002\\u0002\\u04de\\u04df\\u0007v\\u0002\",\n    \"\\u0002\\u04df\\u04e0\\u0007g\\u0002\\u0002\\u04e0\\u04e1\\u0007u\\u0002\\u0002\",\n    \"\\u04e1\\u04e2\\u00074\\u0002\\u0002\\u04e2\\u0523\\u00075\\u0002\\u0002\\u04e3\",\n    \"\\u04e4\\u0007d\\u0002\\u0002\\u04e4\\u04e5\\u0007{\\u0002\\u0002\\u04e5\\u04e6\",\n    \"\\u0007v\\u0002\\u0002\\u04e6\\u04e7\\u0007g\\u0002\\u0002\\u04e7\\u04e8\\u0007\",\n    \"u\\u0002\\u0002\\u04e8\\u04e9\\u00074\\u0002\\u0002\\u04e9\\u0523\\u00076\\u0002\",\n    \"\\u0002\\u04ea\\u04eb\\u0007d\\u0002\\u0002\\u04eb\\u04ec\\u0007{\\u0002\\u0002\",\n    \"\\u04ec\\u04ed\\u0007v\\u0002\\u0002\\u04ed\\u04ee\\u0007g\\u0002\\u0002\\u04ee\",\n    \"\\u04ef\\u0007u\\u0002\\u0002\\u04ef\\u04f0\\u00074\\u0002\\u0002\\u04f0\\u0523\",\n    \"\\u00077\\u0002\\u0002\\u04f1\\u04f2\\u0007d\\u0002\\u0002\\u04f2\\u04f3\\u0007\",\n    \"{\\u0002\\u0002\\u04f3\\u04f4\\u0007v\\u0002\\u0002\\u04f4\\u04f5\\u0007g\\u0002\",\n    \"\\u0002\\u04f5\\u04f6\\u0007u\\u0002\\u0002\\u04f6\\u04f7\\u00074\\u0002\\u0002\",\n    \"\\u04f7\\u0523\\u00078\\u0002\\u0002\\u04f8\\u04f9\\u0007d\\u0002\\u0002\\u04f9\",\n    \"\\u04fa\\u0007{\\u0002\\u0002\\u04fa\\u04fb\\u0007v\\u0002\\u0002\\u04fb\\u04fc\",\n    \"\\u0007g\\u0002\\u0002\\u04fc\\u04fd\\u0007u\\u0002\\u0002\\u04fd\\u04fe\\u0007\",\n    \"4\\u0002\\u0002\\u04fe\\u0523\\u00079\\u0002\\u0002\\u04ff\\u0500\\u0007d\\u0002\",\n    \"\\u0002\\u0500\\u0501\\u0007{\\u0002\\u0002\\u0501\\u0502\\u0007v\\u0002\\u0002\",\n    \"\\u0502\\u0503\\u0007g\\u0002\\u0002\\u0503\\u0504\\u0007u\\u0002\\u0002\\u0504\",\n    \"\\u0505\\u00074\\u0002\\u0002\\u0505\\u0523\\u0007:\\u0002\\u0002\\u0506\\u0507\",\n    \"\\u0007d\\u0002\\u0002\\u0507\\u0508\\u0007{\\u0002\\u0002\\u0508\\u0509\\u0007\",\n    \"v\\u0002\\u0002\\u0509\\u050a\\u0007g\\u0002\\u0002\\u050a\\u050b\\u0007u\\u0002\",\n    \"\\u0002\\u050b\\u050c\\u00074\\u0002\\u0002\\u050c\\u0523\\u0007;\\u0002\\u0002\",\n    \"\\u050d\\u050e\\u0007d\\u0002\\u0002\\u050e\\u050f\\u0007{\\u0002\\u0002\\u050f\",\n    \"\\u0510\\u0007v\\u0002\\u0002\\u0510\\u0511\\u0007g\\u0002\\u0002\\u0511\\u0512\",\n    \"\\u0007u\\u0002\\u0002\\u0512\\u0513\\u00075\\u0002\\u0002\\u0513\\u0523\\u0007\",\n    \"2\\u0002\\u0002\\u0514\\u0515\\u0007d\\u0002\\u0002\\u0515\\u0516\\u0007{\\u0002\",\n    \"\\u0002\\u0516\\u0517\\u0007v\\u0002\\u0002\\u0517\\u0518\\u0007g\\u0002\\u0002\",\n    \"\\u0518\\u0519\\u0007u\\u0002\\u0002\\u0519\\u051a\\u00075\\u0002\\u0002\\u051a\",\n    \"\\u0523\\u00073\\u0002\\u0002\\u051b\\u051c\\u0007d\\u0002\\u0002\\u051c\\u051d\",\n    \"\\u0007{\\u0002\\u0002\\u051d\\u051e\\u0007v\\u0002\\u0002\\u051e\\u051f\\u0007\",\n    \"g\\u0002\\u0002\\u051f\\u0520\\u0007u\\u0002\\u0002\\u0520\\u0521\\u00075\\u0002\",\n    \"\\u0002\\u0521\\u0523\\u00074\\u0002\\u0002\\u0522\\u0446\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u044b\\u0003\\u0002\\u0002\\u0002\\u0522\\u0451\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0457\\u0003\\u0002\\u0002\\u0002\\u0522\\u045d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0463\\u0003\\u0002\\u0002\\u0002\\u0522\\u0469\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u046f\\u0003\\u0002\\u0002\\u0002\\u0522\\u0475\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u047b\\u0003\\u0002\\u0002\\u0002\\u0522\\u0481\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0488\\u0003\\u0002\\u0002\\u0002\\u0522\\u048f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0496\\u0003\\u0002\\u0002\\u0002\\u0522\\u049d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04a4\\u0003\\u0002\\u0002\\u0002\\u0522\\u04ab\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04b2\\u0003\\u0002\\u0002\\u0002\\u0522\\u04b9\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04c0\\u0003\\u0002\\u0002\\u0002\\u0522\\u04c7\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04ce\\u0003\\u0002\\u0002\\u0002\\u0522\\u04d5\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04dc\\u0003\\u0002\\u0002\\u0002\\u0522\\u04e3\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04ea\\u0003\\u0002\\u0002\\u0002\\u0522\\u04f1\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u04f8\\u0003\\u0002\\u0002\\u0002\\u0522\\u04ff\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0506\\u0003\\u0002\\u0002\\u0002\\u0522\\u050d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0522\\u0514\\u0003\\u0002\\u0002\\u0002\\u0522\\u051b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0523\\u00c4\\u0003\\u0002\\u0002\\u0002\\u0524\\u0525\\u0007h\\u0002\",\n    \"\\u0002\\u0525\\u0526\\u0007k\\u0002\\u0002\\u0526\\u0527\\u0007z\\u0002\\u0002\",\n    \"\\u0527\\u0528\\u0007g\\u0002\\u0002\\u0528\\u053b\\u0007f\\u0002\\u0002\\u0529\",\n    \"\\u052a\\u0007h\\u0002\\u0002\\u052a\\u052b\\u0007k\\u0002\\u0002\\u052b\\u052c\",\n    \"\\u0007z\\u0002\\u0002\\u052c\\u052d\\u0007g\\u0002\\u0002\\u052d\\u052e\\u0007\",\n    \"f\\u0002\\u0002\\u052e\\u0530\\u0003\\u0002\\u0002\\u0002\\u052f\\u0531\\t\\u0002\",\n    \"\\u0002\\u0002\\u0530\\u052f\\u0003\\u0002\\u0002\\u0002\\u0531\\u0532\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0532\\u0530\\u0003\\u0002\\u0002\\u0002\\u0532\\u0533\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0533\\u0534\\u0003\\u0002\\u0002\\u0002\\u0534\\u0536\\u0007z\",\n    \"\\u0002\\u0002\\u0535\\u0537\\t\\u0002\\u0002\\u0002\\u0536\\u0535\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0537\\u0538\\u0003\\u0002\\u0002\\u0002\\u0538\\u0536\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0538\\u0539\\u0003\\u0002\\u0002\\u0002\\u0539\\u053b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u053a\\u0524\\u0003\\u0002\\u0002\\u0002\\u053a\\u0529\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u053b\\u00c6\\u0003\\u0002\\u0002\\u0002\\u053c\\u053d\\u0007w\",\n    \"\\u0002\\u0002\\u053d\\u053e\\u0007h\\u0002\\u0002\\u053e\\u053f\\u0007k\\u0002\",\n    \"\\u0002\\u053f\\u0540\\u0007z\\u0002\\u0002\\u0540\\u0541\\u0007g\\u0002\\u0002\",\n    \"\\u0541\\u0555\\u0007f\\u0002\\u0002\\u0542\\u0543\\u0007w\\u0002\\u0002\\u0543\",\n    \"\\u0544\\u0007h\\u0002\\u0002\\u0544\\u0545\\u0007k\\u0002\\u0002\\u0545\\u0546\",\n    \"\\u0007z\\u0002\\u0002\\u0546\\u0547\\u0007g\\u0002\\u0002\\u0547\\u0548\\u0007\",\n    \"f\\u0002\\u0002\\u0548\\u054a\\u0003\\u0002\\u0002\\u0002\\u0549\\u054b\\t\\u0002\",\n    \"\\u0002\\u0002\\u054a\\u0549\\u0003\\u0002\\u0002\\u0002\\u054b\\u054c\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u054c\\u054a\\u0003\\u0002\\u0002\\u0002\\u054c\\u054d\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u054d\\u054e\\u0003\\u0002\\u0002\\u0002\\u054e\\u0550\\u0007z\",\n    \"\\u0002\\u0002\\u054f\\u0551\\t\\u0002\\u0002\\u0002\\u0550\\u054f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0551\\u0552\\u0003\\u0002\\u0002\\u0002\\u0552\\u0550\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0552\\u0553\\u0003\\u0002\\u0002\\u0002\\u0553\\u0555\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0554\\u053c\\u0003\\u0002\\u0002\\u0002\\u0554\\u0542\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0555\\u00c8\\u0003\\u0002\\u0002\\u0002\\u0556\\u0557\\u0007v\",\n    \"\\u0002\\u0002\\u0557\\u0558\\u0007t\\u0002\\u0002\\u0558\\u0559\\u0007w\\u0002\",\n    \"\\u0002\\u0559\\u0560\\u0007g\\u0002\\u0002\\u055a\\u055b\\u0007h\\u0002\\u0002\",\n    \"\\u055b\\u055c\\u0007c\\u0002\\u0002\\u055c\\u055d\\u0007n\\u0002\\u0002\\u055d\",\n    \"\\u055e\\u0007u\\u0002\\u0002\\u055e\\u0560\\u0007g\\u0002\\u0002\\u055f\\u0556\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u055f\\u055a\\u0003\\u0002\\u0002\\u0002\\u0560\\u00ca\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0561\\u0568\\u0005\\u00cdg\\u0002\\u0562\\u0564\",\n    \"\\u0005\\u00cdg\\u0002\\u0563\\u0562\\u0003\\u0002\\u0002\\u0002\\u0563\\u0564\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0564\\u0565\\u0003\\u0002\\u0002\\u0002\\u0565\\u0566\",\n    \"\\u00070\\u0002\\u0002\\u0566\\u0568\\u0005\\u00cdg\\u0002\\u0567\\u0561\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0567\\u0563\\u0003\\u0002\\u0002\\u0002\\u0568\\u056b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0569\\u056a\\t\\u0003\\u0002\\u0002\\u056a\\u056c\\u0005\",\n    \"\\u00cdg\\u0002\\u056b\\u0569\\u0003\\u0002\\u0002\\u0002\\u056b\\u056c\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u056c\\u00cc\\u0003\\u0002\\u0002\\u0002\\u056d\\u0574\\t\",\n    \"\\u0002\\u0002\\u0002\\u056e\\u0570\\u0007a\\u0002\\u0002\\u056f\\u056e\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u056f\\u0570\\u0003\\u0002\\u0002\\u0002\\u0570\\u0571\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0571\\u0573\\t\\u0002\\u0002\\u0002\\u0572\\u056f\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0573\\u0576\\u0003\\u0002\\u0002\\u0002\\u0574\\u0572\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0574\\u0575\\u0003\\u0002\\u0002\\u0002\\u0575\\u00ce\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0576\\u0574\\u0003\\u0002\\u0002\\u0002\\u0577\\u0578\\u0007\",\n    \"2\\u0002\\u0002\\u0578\\u0579\\t\\u0004\\u0002\\u0002\\u0579\\u057a\\u0005\\u00d1\",\n    \"i\\u0002\\u057a\\u00d0\\u0003\\u0002\\u0002\\u0002\\u057b\\u0582\\u0005\\u00d9\",\n    \"m\\u0002\\u057c\\u057e\\u0007a\\u0002\\u0002\\u057d\\u057c\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u057d\\u057e\\u0003\\u0002\\u0002\\u0002\\u057e\\u057f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u057f\\u0581\\u0005\\u00d9m\\u0002\\u0580\\u057d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0581\\u0584\\u0003\\u0002\\u0002\\u0002\\u0582\\u0580\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0582\\u0583\\u0003\\u0002\\u0002\\u0002\\u0583\\u00d2\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0584\\u0582\\u0003\\u0002\\u0002\\u0002\\u0585\\u0586\\u0007y\\u0002\",\n    \"\\u0002\\u0586\\u0587\\u0007g\\u0002\\u0002\\u0587\\u05ba\\u0007k\\u0002\\u0002\",\n    \"\\u0588\\u0589\\u0007u\\u0002\\u0002\\u0589\\u058a\\u0007|\\u0002\\u0002\\u058a\",\n    \"\\u058b\\u0007c\\u0002\\u0002\\u058b\\u058c\\u0007d\\u0002\\u0002\\u058c\\u05ba\",\n    \"\\u0007q\\u0002\\u0002\\u058d\\u058e\\u0007h\\u0002\\u0002\\u058e\\u058f\\u0007\",\n    \"k\\u0002\\u0002\\u058f\\u0590\\u0007p\\u0002\\u0002\\u0590\\u0591\\u0007p\\u0002\",\n    \"\\u0002\\u0591\\u0592\\u0007g\\u0002\\u0002\\u0592\\u05ba\\u0007{\\u0002\\u0002\",\n    \"\\u0593\\u0594\\u0007g\\u0002\\u0002\\u0594\\u0595\\u0007v\\u0002\\u0002\\u0595\",\n    \"\\u0596\\u0007j\\u0002\\u0002\\u0596\\u0597\\u0007g\\u0002\\u0002\\u0597\\u05ba\",\n    \"\\u0007t\\u0002\\u0002\\u0598\\u0599\\u0007u\\u0002\\u0002\\u0599\\u059a\\u0007\",\n    \"g\\u0002\\u0002\\u059a\\u059b\\u0007e\\u0002\\u0002\\u059b\\u059c\\u0007q\\u0002\",\n    \"\\u0002\\u059c\\u059d\\u0007p\\u0002\\u0002\\u059d\\u059e\\u0007f\\u0002\\u0002\",\n    \"\\u059e\\u05ba\\u0007u\\u0002\\u0002\\u059f\\u05a0\\u0007o\\u0002\\u0002\\u05a0\",\n    \"\\u05a1\\u0007k\\u0002\\u0002\\u05a1\\u05a2\\u0007p\\u0002\\u0002\\u05a2\\u05a3\",\n    \"\\u0007w\\u0002\\u0002\\u05a3\\u05a4\\u0007v\\u0002\\u0002\\u05a4\\u05a5\\u0007\",\n    \"g\\u0002\\u0002\\u05a5\\u05ba\\u0007u\\u0002\\u0002\\u05a6\\u05a7\\u0007j\\u0002\",\n    \"\\u0002\\u05a7\\u05a8\\u0007q\\u0002\\u0002\\u05a8\\u05a9\\u0007w\\u0002\\u0002\",\n    \"\\u05a9\\u05aa\\u0007t\\u0002\\u0002\\u05aa\\u05ba\\u0007u\\u0002\\u0002\\u05ab\",\n    \"\\u05ac\\u0007f\\u0002\\u0002\\u05ac\\u05ad\\u0007c\\u0002\\u0002\\u05ad\\u05ae\",\n    \"\\u0007{\\u0002\\u0002\\u05ae\\u05ba\\u0007u\\u0002\\u0002\\u05af\\u05b0\\u0007\",\n    \"y\\u0002\\u0002\\u05b0\\u05b1\\u0007g\\u0002\\u0002\\u05b1\\u05b2\\u0007g\\u0002\",\n    \"\\u0002\\u05b2\\u05b3\\u0007m\\u0002\\u0002\\u05b3\\u05ba\\u0007u\\u0002\\u0002\",\n    \"\\u05b4\\u05b5\\u0007{\\u0002\\u0002\\u05b5\\u05b6\\u0007g\\u0002\\u0002\\u05b6\",\n    \"\\u05b7\\u0007c\\u0002\\u0002\\u05b7\\u05b8\\u0007t\\u0002\\u0002\\u05b8\\u05ba\",\n    \"\\u0007u\\u0002\\u0002\\u05b9\\u0585\\u0003\\u0002\\u0002\\u0002\\u05b9\\u0588\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u05b9\\u058d\\u0003\\u0002\\u0002\\u0002\\u05b9\\u0593\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u05b9\\u0598\\u0003\\u0002\\u0002\\u0002\\u05b9\\u059f\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u05b9\\u05a6\\u0003\\u0002\\u0002\\u0002\\u05b9\\u05ab\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u05b9\\u05af\\u0003\\u0002\\u0002\\u0002\\u05b9\\u05b4\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u05ba\\u00d4\\u0003\\u0002\\u0002\\u0002\\u05bb\\u05bc\",\n    \"\\u0007j\\u0002\\u0002\\u05bc\\u05bd\\u0007g\\u0002\\u0002\\u05bd\\u05be\\u0007\",\n    \"z\\u0002\\u0002\\u05be\\u05c9\\u0003\\u0002\\u0002\\u0002\\u05bf\\u05c1\\u0007\",\n    \"$\\u0002\\u0002\\u05c0\\u05c2\\u0005\\u00d1i\\u0002\\u05c1\\u05c0\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u05c1\\u05c2\\u0003\\u0002\\u0002\\u0002\\u05c2\\u05c3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u05c3\\u05ca\\u0007$\\u0002\\u0002\\u05c4\\u05c6\\u0007)\\u0002\",\n    \"\\u0002\\u05c5\\u05c7\\u0005\\u00d1i\\u0002\\u05c6\\u05c5\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u05c6\\u05c7\\u0003\\u0002\\u0002\\u0002\\u05c7\\u05c8\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u05c8\\u05ca\\u0007)\\u0002\\u0002\\u05c9\\u05bf\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u05c9\\u05c4\\u0003\\u0002\\u0002\\u0002\\u05ca\\u00d6\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u05cb\\u05cc\\u0005\\u00d9m\\u0002\\u05cc\\u05cd\\u0005\\u00d9m\\u0002\",\n    \"\\u05cd\\u00d8\\u0003\\u0002\\u0002\\u0002\\u05ce\\u05cf\\t\\u0005\\u0002\\u0002\",\n    \"\\u05cf\\u00da\\u0003\\u0002\\u0002\\u0002\\u05d0\\u05d1\\u0007c\\u0002\\u0002\",\n    \"\\u05d1\\u05d2\\u0007d\\u0002\\u0002\\u05d2\\u05d3\\u0007u\\u0002\\u0002\\u05d3\",\n    \"\\u05d4\\u0007v\\u0002\\u0002\\u05d4\\u05d5\\u0007t\\u0002\\u0002\\u05d5\\u05d6\",\n    \"\\u0007c\\u0002\\u0002\\u05d6\\u05d7\\u0007e\\u0002\\u0002\\u05d7\\u0629\\u0007\",\n    \"v\\u0002\\u0002\\u05d8\\u05d9\\u0007c\\u0002\\u0002\\u05d9\\u05da\\u0007h\\u0002\",\n    \"\\u0002\\u05da\\u05db\\u0007v\\u0002\\u0002\\u05db\\u05dc\\u0007g\\u0002\\u0002\",\n    \"\\u05dc\\u0629\\u0007t\\u0002\\u0002\\u05dd\\u05de\\u0007e\\u0002\\u0002\\u05de\",\n    \"\\u05df\\u0007c\\u0002\\u0002\\u05df\\u05e0\\u0007u\\u0002\\u0002\\u05e0\\u0629\",\n    \"\\u0007g\\u0002\\u0002\\u05e1\\u05e2\\u0007e\\u0002\\u0002\\u05e2\\u05e3\\u0007\",\n    \"c\\u0002\\u0002\\u05e3\\u05e4\\u0007v\\u0002\\u0002\\u05e4\\u05e5\\u0007e\\u0002\",\n    \"\\u0002\\u05e5\\u0629\\u0007j\\u0002\\u0002\\u05e6\\u05e7\\u0007f\\u0002\\u0002\",\n    \"\\u05e7\\u05e8\\u0007g\\u0002\\u0002\\u05e8\\u05e9\\u0007h\\u0002\\u0002\\u05e9\",\n    \"\\u05ea\\u0007c\\u0002\\u0002\\u05ea\\u05eb\\u0007w\\u0002\\u0002\\u05eb\\u05ec\",\n    \"\\u0007n\\u0002\\u0002\\u05ec\\u0629\\u0007v\\u0002\\u0002\\u05ed\\u05ee\\u0007\",\n    \"h\\u0002\\u0002\\u05ee\\u05ef\\u0007k\\u0002\\u0002\\u05ef\\u05f0\\u0007p\\u0002\",\n    \"\\u0002\\u05f0\\u05f1\\u0007c\\u0002\\u0002\\u05f1\\u0629\\u0007n\\u0002\\u0002\",\n    \"\\u05f2\\u05f3\\u0007k\\u0002\\u0002\\u05f3\\u0629\\u0007p\\u0002\\u0002\\u05f4\",\n    \"\\u05f5\\u0007k\\u0002\\u0002\\u05f5\\u05f6\\u0007p\\u0002\\u0002\\u05f6\\u05f7\",\n    \"\\u0007n\\u0002\\u0002\\u05f7\\u05f8\\u0007k\\u0002\\u0002\\u05f8\\u05f9\\u0007\",\n    \"p\\u0002\\u0002\\u05f9\\u0629\\u0007g\\u0002\\u0002\\u05fa\\u05fb\\u0007n\\u0002\",\n    \"\\u0002\\u05fb\\u05fc\\u0007g\\u0002\\u0002\\u05fc\\u0629\\u0007v\\u0002\\u0002\",\n    \"\\u05fd\\u05fe\\u0007o\\u0002\\u0002\\u05fe\\u05ff\\u0007c\\u0002\\u0002\\u05ff\",\n    \"\\u0600\\u0007v\\u0002\\u0002\\u0600\\u0601\\u0007e\\u0002\\u0002\\u0601\\u0629\",\n    \"\\u0007j\\u0002\\u0002\\u0602\\u0603\\u0007p\\u0002\\u0002\\u0603\\u0604\\u0007\",\n    \"w\\u0002\\u0002\\u0604\\u0605\\u0007n\\u0002\\u0002\\u0605\\u0629\\u0007n\\u0002\",\n    \"\\u0002\\u0606\\u0607\\u0007q\\u0002\\u0002\\u0607\\u0629\\u0007h\\u0002\\u0002\",\n    \"\\u0608\\u0609\\u0007t\\u0002\\u0002\\u0609\\u060a\\u0007g\\u0002\\u0002\\u060a\",\n    \"\\u060b\\u0007n\\u0002\\u0002\\u060b\\u060c\\u0007q\\u0002\\u0002\\u060c\\u060d\",\n    \"\\u0007e\\u0002\\u0002\\u060d\\u060e\\u0007c\\u0002\\u0002\\u060e\\u060f\\u0007\",\n    \"v\\u0002\\u0002\\u060f\\u0610\\u0007c\\u0002\\u0002\\u0610\\u0611\\u0007d\\u0002\",\n    \"\\u0002\\u0611\\u0612\\u0007n\\u0002\\u0002\\u0612\\u0629\\u0007g\\u0002\\u0002\",\n    \"\\u0613\\u0614\\u0007u\\u0002\\u0002\\u0614\\u0615\\u0007v\\u0002\\u0002\\u0615\",\n    \"\\u0616\\u0007c\\u0002\\u0002\\u0616\\u0617\\u0007v\\u0002\\u0002\\u0617\\u0618\",\n    \"\\u0007k\\u0002\\u0002\\u0618\\u0629\\u0007e\\u0002\\u0002\\u0619\\u061a\\u0007\",\n    \"u\\u0002\\u0002\\u061a\\u061b\\u0007y\\u0002\\u0002\\u061b\\u061c\\u0007k\\u0002\",\n    \"\\u0002\\u061c\\u061d\\u0007v\\u0002\\u0002\\u061d\\u061e\\u0007e\\u0002\\u0002\",\n    \"\\u061e\\u0629\\u0007j\\u0002\\u0002\\u061f\\u0620\\u0007v\\u0002\\u0002\\u0620\",\n    \"\\u0621\\u0007t\\u0002\\u0002\\u0621\\u0629\\u0007{\\u0002\\u0002\\u0622\\u0623\",\n    \"\\u0007v\\u0002\\u0002\\u0623\\u0624\\u0007{\\u0002\\u0002\\u0624\\u0625\\u0007\",\n    \"r\\u0002\\u0002\\u0625\\u0626\\u0007g\\u0002\\u0002\\u0626\\u0627\\u0007q\\u0002\",\n    \"\\u0002\\u0627\\u0629\\u0007h\\u0002\\u0002\\u0628\\u05d0\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u05d8\\u0003\\u0002\\u0002\\u0002\\u0628\\u05dd\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u05e1\\u0003\\u0002\\u0002\\u0002\\u0628\\u05e6\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u05ed\\u0003\\u0002\\u0002\\u0002\\u0628\\u05f2\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u05f4\\u0003\\u0002\\u0002\\u0002\\u0628\\u05fa\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u05fd\\u0003\\u0002\\u0002\\u0002\\u0628\\u0602\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u0606\\u0003\\u0002\\u0002\\u0002\\u0628\\u0608\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u0613\\u0003\\u0002\\u0002\\u0002\\u0628\\u0619\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0628\\u061f\\u0003\\u0002\\u0002\\u0002\\u0628\\u0622\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0629\\u00dc\\u0003\\u0002\\u0002\\u0002\\u062a\\u062b\\u0007c\\u0002\",\n    \"\\u0002\\u062b\\u062c\\u0007p\\u0002\\u0002\\u062c\\u062d\\u0007q\\u0002\\u0002\",\n    \"\\u062d\\u062e\\u0007p\\u0002\\u0002\\u062e\\u062f\\u0007{\\u0002\\u0002\\u062f\",\n    \"\\u0630\\u0007o\\u0002\\u0002\\u0630\\u0631\\u0007q\\u0002\\u0002\\u0631\\u0632\",\n    \"\\u0007w\\u0002\\u0002\\u0632\\u0633\\u0007u\\u0002\\u0002\\u0633\\u00de\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0634\\u0635\\u0007d\\u0002\\u0002\\u0635\\u0636\\u0007\",\n    \"t\\u0002\\u0002\\u0636\\u0637\\u0007g\\u0002\\u0002\\u0637\\u0638\\u0007c\\u0002\",\n    \"\\u0002\\u0638\\u0639\\u0007m\\u0002\\u0002\\u0639\\u00e0\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u063a\\u063b\\u0007e\\u0002\\u0002\\u063b\\u063c\\u0007q\\u0002\\u0002\",\n    \"\\u063c\\u063d\\u0007p\\u0002\\u0002\\u063d\\u063e\\u0007u\\u0002\\u0002\\u063e\",\n    \"\\u063f\\u0007v\\u0002\\u0002\\u063f\\u0640\\u0007c\\u0002\\u0002\\u0640\\u0641\",\n    \"\\u0007p\\u0002\\u0002\\u0641\\u0642\\u0007v\\u0002\\u0002\\u0642\\u00e2\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0643\\u0644\\u0007k\\u0002\\u0002\\u0644\\u0645\\u0007\",\n    \"o\\u0002\\u0002\\u0645\\u0646\\u0007o\\u0002\\u0002\\u0646\\u0647\\u0007w\\u0002\",\n    \"\\u0002\\u0647\\u0648\\u0007v\\u0002\\u0002\\u0648\\u0649\\u0007c\\u0002\\u0002\",\n    \"\\u0649\\u064a\\u0007d\\u0002\\u0002\\u064a\\u064b\\u0007n\\u0002\\u0002\\u064b\",\n    \"\\u064c\\u0007g\\u0002\\u0002\\u064c\\u00e4\\u0003\\u0002\\u0002\\u0002\\u064d\",\n    \"\\u064e\\u0007e\\u0002\\u0002\\u064e\\u064f\\u0007q\\u0002\\u0002\\u064f\\u0650\",\n    \"\\u0007p\\u0002\\u0002\\u0650\\u0651\\u0007v\\u0002\\u0002\\u0651\\u0652\\u0007\",\n    \"k\\u0002\\u0002\\u0652\\u0653\\u0007p\\u0002\\u0002\\u0653\\u0654\\u0007w\\u0002\",\n    \"\\u0002\\u0654\\u0655\\u0007g\\u0002\\u0002\\u0655\\u00e6\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0656\\u0657\\u0007n\\u0002\\u0002\\u0657\\u0658\\u0007g\\u0002\\u0002\",\n    \"\\u0658\\u0659\\u0007c\\u0002\\u0002\\u0659\\u065a\\u0007x\\u0002\\u0002\\u065a\",\n    \"\\u065b\\u0007g\\u0002\\u0002\\u065b\\u00e8\\u0003\\u0002\\u0002\\u0002\\u065c\",\n    \"\\u065d\\u0007g\\u0002\\u0002\\u065d\\u065e\\u0007z\\u0002\\u0002\\u065e\\u065f\",\n    \"\\u0007v\\u0002\\u0002\\u065f\\u0660\\u0007g\\u0002\\u0002\\u0660\\u0661\\u0007\",\n    \"t\\u0002\\u0002\\u0661\\u0662\\u0007p\\u0002\\u0002\\u0662\\u0663\\u0007c\\u0002\",\n    \"\\u0002\\u0663\\u0664\\u0007n\\u0002\\u0002\\u0664\\u00ea\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0665\\u0666\\u0007k\\u0002\\u0002\\u0666\\u0667\\u0007p\\u0002\\u0002\",\n    \"\\u0667\\u0668\\u0007f\\u0002\\u0002\\u0668\\u0669\\u0007g\\u0002\\u0002\\u0669\",\n    \"\\u066a\\u0007z\\u0002\\u0002\\u066a\\u066b\\u0007g\\u0002\\u0002\\u066b\\u066c\",\n    \"\\u0007f\\u0002\\u0002\\u066c\\u00ec\\u0003\\u0002\\u0002\\u0002\\u066d\\u066e\",\n    \"\\u0007k\\u0002\\u0002\\u066e\\u066f\\u0007p\\u0002\\u0002\\u066f\\u0670\\u0007\",\n    \"v\\u0002\\u0002\\u0670\\u0671\\u0007g\\u0002\\u0002\\u0671\\u0672\\u0007t\\u0002\",\n    \"\\u0002\\u0672\\u0673\\u0007p\\u0002\\u0002\\u0673\\u0674\\u0007c\\u0002\\u0002\",\n    \"\\u0674\\u0675\\u0007n\\u0002\\u0002\\u0675\\u00ee\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0676\\u0677\\u0007r\\u0002\\u0002\\u0677\\u0678\\u0007c\\u0002\\u0002\\u0678\",\n    \"\\u0679\\u0007{\\u0002\\u0002\\u0679\\u067a\\u0007c\\u0002\\u0002\\u067a\\u067b\",\n    \"\\u0007d\\u0002\\u0002\\u067b\\u067c\\u0007n\\u0002\\u0002\\u067c\\u067d\\u0007\",\n    \"g\\u0002\\u0002\\u067d\\u00f0\\u0003\\u0002\\u0002\\u0002\\u067e\\u067f\\u0007\",\n    \"r\\u0002\\u0002\\u067f\\u0680\\u0007t\\u0002\\u0002\\u0680\\u0681\\u0007k\\u0002\",\n    \"\\u0002\\u0681\\u0682\\u0007x\\u0002\\u0002\\u0682\\u0683\\u0007c\\u0002\\u0002\",\n    \"\\u0683\\u0684\\u0007v\\u0002\\u0002\\u0684\\u0685\\u0007g\\u0002\\u0002\\u0685\",\n    \"\\u00f2\\u0003\\u0002\\u0002\\u0002\\u0686\\u0687\\u0007r\\u0002\\u0002\\u0687\",\n    \"\\u0688\\u0007w\\u0002\\u0002\\u0688\\u0689\\u0007d\\u0002\\u0002\\u0689\\u068a\",\n    \"\\u0007n\\u0002\\u0002\\u068a\\u068b\\u0007k\\u0002\\u0002\\u068b\\u068c\\u0007\",\n    \"e\\u0002\\u0002\\u068c\\u00f4\\u0003\\u0002\\u0002\\u0002\\u068d\\u068e\\u0007\",\n    \"x\\u0002\\u0002\\u068e\\u068f\\u0007k\\u0002\\u0002\\u068f\\u0690\\u0007t\\u0002\",\n    \"\\u0002\\u0690\\u0691\\u0007v\\u0002\\u0002\\u0691\\u0692\\u0007w\\u0002\\u0002\",\n    \"\\u0692\\u0693\\u0007c\\u0002\\u0002\\u0693\\u0694\\u0007n\\u0002\\u0002\\u0694\",\n    \"\\u00f6\\u0003\\u0002\\u0002\\u0002\\u0695\\u0696\\u0007r\\u0002\\u0002\\u0696\",\n    \"\\u0697\\u0007w\\u0002\\u0002\\u0697\\u0698\\u0007t\\u0002\\u0002\\u0698\\u0699\",\n    \"\\u0007g\\u0002\\u0002\\u0699\\u00f8\\u0003\\u0002\\u0002\\u0002\\u069a\\u069b\",\n    \"\\u0007v\\u0002\\u0002\\u069b\\u069c\\u0007{\\u0002\\u0002\\u069c\\u069d\\u0007\",\n    \"r\\u0002\\u0002\\u069d\\u069e\\u0007g\\u0002\\u0002\\u069e\\u00fa\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u069f\\u06a0\\u0007x\\u0002\\u0002\\u06a0\\u06a1\\u0007k\\u0002\",\n    \"\\u0002\\u06a1\\u06a2\\u0007g\\u0002\\u0002\\u06a2\\u06a3\\u0007y\\u0002\\u0002\",\n    \"\\u06a3\\u00fc\\u0003\\u0002\\u0002\\u0002\\u06a4\\u06a5\\u0007e\\u0002\\u0002\",\n    \"\\u06a5\\u06a6\\u0007q\\u0002\\u0002\\u06a6\\u06a7\\u0007p\\u0002\\u0002\\u06a7\",\n    \"\\u06a8\\u0007u\\u0002\\u0002\\u06a8\\u06a9\\u0007v\\u0002\\u0002\\u06a9\\u06aa\",\n    \"\\u0007t\\u0002\\u0002\\u06aa\\u06ab\\u0007w\\u0002\\u0002\\u06ab\\u06ac\\u0007\",\n    \"e\\u0002\\u0002\\u06ac\\u06ad\\u0007v\\u0002\\u0002\\u06ad\\u06ae\\u0007q\\u0002\",\n    \"\\u0002\\u06ae\\u06af\\u0007t\\u0002\\u0002\\u06af\\u00fe\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u06b0\\u06b1\\u0007h\\u0002\\u0002\\u06b1\\u06b2\\u0007c\\u0002\\u0002\",\n    \"\\u06b2\\u06b3\\u0007n\\u0002\\u0002\\u06b3\\u06b4\\u0007n\\u0002\\u0002\\u06b4\",\n    \"\\u06b5\\u0007d\\u0002\\u0002\\u06b5\\u06b6\\u0007c\\u0002\\u0002\\u06b6\\u06b7\",\n    \"\\u0007e\\u0002\\u0002\\u06b7\\u06b8\\u0007m\\u0002\\u0002\\u06b8\\u0100\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06b9\\u06ba\\u0007t\\u0002\\u0002\\u06ba\\u06bb\\u0007\",\n    \"g\\u0002\\u0002\\u06bb\\u06bc\\u0007e\\u0002\\u0002\\u06bc\\u06bd\\u0007g\\u0002\",\n    \"\\u0002\\u06bd\\u06be\\u0007k\\u0002\\u0002\\u06be\\u06bf\\u0007x\\u0002\\u0002\",\n    \"\\u06bf\\u06c0\\u0007g\\u0002\\u0002\\u06c0\\u0102\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06c1\\u06c5\\u0005\\u0105\\u0083\\u0002\\u06c2\\u06c4\\u0005\\u0107\\u0084\\u0002\",\n    \"\\u06c3\\u06c2\\u0003\\u0002\\u0002\\u0002\\u06c4\\u06c7\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06c5\\u06c3\\u0003\\u0002\\u0002\\u0002\\u06c5\\u06c6\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06c6\\u0104\\u0003\\u0002\\u0002\\u0002\\u06c7\\u06c5\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06c8\\u06c9\\t\\u0006\\u0002\\u0002\\u06c9\\u0106\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06ca\\u06cb\\t\\u0007\\u0002\\u0002\\u06cb\\u0108\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06cc\\u06d0\\u0007$\\u0002\\u0002\\u06cd\\u06cf\\u0005\\u010b\\u0086\\u0002\",\n    \"\\u06ce\\u06cd\\u0003\\u0002\\u0002\\u0002\\u06cf\\u06d2\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06d0\\u06ce\\u0003\\u0002\\u0002\\u0002\\u06d0\\u06d1\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06d1\\u06d3\\u0003\\u0002\\u0002\\u0002\\u06d2\\u06d0\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u06d3\\u06dd\\u0007$\\u0002\\u0002\\u06d4\\u06d8\\u0007)\\u0002\\u0002\\u06d5\",\n    \"\\u06d7\\u0005\\u010d\\u0087\\u0002\\u06d6\\u06d5\\u0003\\u0002\\u0002\\u0002\\u06d7\",\n    \"\\u06da\\u0003\\u0002\\u0002\\u0002\\u06d8\\u06d6\\u0003\\u0002\\u0002\\u0002\\u06d8\",\n    \"\\u06d9\\u0003\\u0002\\u0002\\u0002\\u06d9\\u06db\\u0003\\u0002\\u0002\\u0002\\u06da\",\n    \"\\u06d8\\u0003\\u0002\\u0002\\u0002\\u06db\\u06dd\\u0007)\\u0002\\u0002\\u06dc\",\n    \"\\u06cc\\u0003\\u0002\\u0002\\u0002\\u06dc\\u06d4\\u0003\\u0002\\u0002\\u0002\\u06dd\",\n    \"\\u010a\\u0003\\u0002\\u0002\\u0002\\u06de\\u06e2\\n\\b\\u0002\\u0002\\u06df\\u06e0\",\n    \"\\u0007^\\u0002\\u0002\\u06e0\\u06e2\\u000b\\u0002\\u0002\\u0002\\u06e1\\u06de\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u06e1\\u06df\\u0003\\u0002\\u0002\\u0002\\u06e2\\u010c\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u06e3\\u06e7\\n\\t\\u0002\\u0002\\u06e4\\u06e5\\u0007\",\n    \"^\\u0002\\u0002\\u06e5\\u06e7\\u000b\\u0002\\u0002\\u0002\\u06e6\\u06e3\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06e6\\u06e4\\u0003\\u0002\\u0002\\u0002\\u06e7\\u010e\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06e8\\u06ea\\t\\u0002\\u0002\\u0002\\u06e9\\u06e8\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06ea\\u06eb\\u0003\\u0002\\u0002\\u0002\\u06eb\\u06e9\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06eb\\u06ec\\u0003\\u0002\\u0002\\u0002\\u06ec\\u06ed\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u06ed\\u06ef\\u00070\\u0002\\u0002\\u06ee\\u06f0\\t\\u0002\",\n    \"\\u0002\\u0002\\u06ef\\u06ee\\u0003\\u0002\\u0002\\u0002\\u06f0\\u06f1\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06f1\\u06ef\\u0003\\u0002\\u0002\\u0002\\u06f1\\u06f2\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06f2\\u06f9\\u0003\\u0002\\u0002\\u0002\\u06f3\\u06f5\\u00070\",\n    \"\\u0002\\u0002\\u06f4\\u06f6\\t\\u0002\\u0002\\u0002\\u06f5\\u06f4\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06f6\\u06f7\\u0003\\u0002\\u0002\\u0002\\u06f7\\u06f5\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06f7\\u06f8\\u0003\\u0002\\u0002\\u0002\\u06f8\\u06fa\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06f9\\u06f3\\u0003\\u0002\\u0002\\u0002\\u06f9\\u06fa\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u06fa\\u0110\\u0003\\u0002\\u0002\\u0002\\u06fb\\u06fd\\t\\n\\u0002\",\n    \"\\u0002\\u06fc\\u06fb\\u0003\\u0002\\u0002\\u0002\\u06fd\\u06fe\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u06fe\\u06fc\\u0003\\u0002\\u0002\\u0002\\u06fe\\u06ff\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u06ff\\u0700\\u0003\\u0002\\u0002\\u0002\\u0700\\u0701\\b\\u0089\\u0002\",\n    \"\\u0002\\u0701\\u0112\\u0003\\u0002\\u0002\\u0002\\u0702\\u0703\\u00071\\u0002\",\n    \"\\u0002\\u0703\\u0704\\u0007,\\u0002\\u0002\\u0704\\u0708\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0705\\u0707\\u000b\\u0002\\u0002\\u0002\\u0706\\u0705\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0707\\u070a\\u0003\\u0002\\u0002\\u0002\\u0708\\u0709\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0708\\u0706\\u0003\\u0002\\u0002\\u0002\\u0709\\u070b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u070a\\u0708\\u0003\\u0002\\u0002\\u0002\\u070b\\u070c\\u0007,\\u0002\",\n    \"\\u0002\\u070c\\u070d\\u00071\\u0002\\u0002\\u070d\\u070e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u070e\\u070f\\b\\u008a\\u0003\\u0002\\u070f\\u0114\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0710\\u0711\\u00071\\u0002\\u0002\\u0711\\u0712\\u00071\\u0002\\u0002\",\n    \"\\u0712\\u0716\\u0003\\u0002\\u0002\\u0002\\u0713\\u0715\\n\\u000b\\u0002\\u0002\",\n    \"\\u0714\\u0713\\u0003\\u0002\\u0002\\u0002\\u0715\\u0718\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0716\\u0714\\u0003\\u0002\\u0002\\u0002\\u0716\\u0717\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0717\\u0719\\u0003\\u0002\\u0002\\u0002\\u0718\\u0716\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0719\\u071a\\b\\u008b\\u0003\\u0002\\u071a\\u0116\\u0003\\u0002\\u0002\\u0002\",\n    \"&\\u0002\\u036b\\u0444\\u0522\\u0532\\u0538\\u053a\\u054c\\u0552\\u0554\\u055f\",\n    \"\\u0563\\u0567\\u056b\\u056f\\u0574\\u057d\\u0582\\u05b9\\u05c1\\u05c6\\u05c9\\u0628\",\n    \"\\u06c5\\u06d0\\u06d8\\u06dc\\u06e1\\u06e6\\u06eb\\u06f1\\u06f7\\u06f9\\u06fe\\u0708\",\n    \"\\u0716\\u0004\\b\\u0002\\u0002\\u0002\\u0003\\u0002\"].join(\"\");\n\n\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\n\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\n\nfunction SolidityLexer(input) {\n\tantlr4.Lexer.call(this, input);\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\n    return this;\n}\n\nSolidityLexer.prototype = Object.create(antlr4.Lexer.prototype);\nSolidityLexer.prototype.constructor = SolidityLexer;\n\nObject.defineProperty(SolidityLexer.prototype, \"atn\", {\n        get : function() {\n                return atn;\n        }\n});\n\nSolidityLexer.EOF = antlr4.Token.EOF;\nSolidityLexer.T__0 = 1;\nSolidityLexer.T__1 = 2;\nSolidityLexer.T__2 = 3;\nSolidityLexer.T__3 = 4;\nSolidityLexer.T__4 = 5;\nSolidityLexer.T__5 = 6;\nSolidityLexer.T__6 = 7;\nSolidityLexer.T__7 = 8;\nSolidityLexer.T__8 = 9;\nSolidityLexer.T__9 = 10;\nSolidityLexer.T__10 = 11;\nSolidityLexer.T__11 = 12;\nSolidityLexer.T__12 = 13;\nSolidityLexer.T__13 = 14;\nSolidityLexer.T__14 = 15;\nSolidityLexer.T__15 = 16;\nSolidityLexer.T__16 = 17;\nSolidityLexer.T__17 = 18;\nSolidityLexer.T__18 = 19;\nSolidityLexer.T__19 = 20;\nSolidityLexer.T__20 = 21;\nSolidityLexer.T__21 = 22;\nSolidityLexer.T__22 = 23;\nSolidityLexer.T__23 = 24;\nSolidityLexer.T__24 = 25;\nSolidityLexer.T__25 = 26;\nSolidityLexer.T__26 = 27;\nSolidityLexer.T__27 = 28;\nSolidityLexer.T__28 = 29;\nSolidityLexer.T__29 = 30;\nSolidityLexer.T__30 = 31;\nSolidityLexer.T__31 = 32;\nSolidityLexer.T__32 = 33;\nSolidityLexer.T__33 = 34;\nSolidityLexer.T__34 = 35;\nSolidityLexer.T__35 = 36;\nSolidityLexer.T__36 = 37;\nSolidityLexer.T__37 = 38;\nSolidityLexer.T__38 = 39;\nSolidityLexer.T__39 = 40;\nSolidityLexer.T__40 = 41;\nSolidityLexer.T__41 = 42;\nSolidityLexer.T__42 = 43;\nSolidityLexer.T__43 = 44;\nSolidityLexer.T__44 = 45;\nSolidityLexer.T__45 = 46;\nSolidityLexer.T__46 = 47;\nSolidityLexer.T__47 = 48;\nSolidityLexer.T__48 = 49;\nSolidityLexer.T__49 = 50;\nSolidityLexer.T__50 = 51;\nSolidityLexer.T__51 = 52;\nSolidityLexer.T__52 = 53;\nSolidityLexer.T__53 = 54;\nSolidityLexer.T__54 = 55;\nSolidityLexer.T__55 = 56;\nSolidityLexer.T__56 = 57;\nSolidityLexer.T__57 = 58;\nSolidityLexer.T__58 = 59;\nSolidityLexer.T__59 = 60;\nSolidityLexer.T__60 = 61;\nSolidityLexer.T__61 = 62;\nSolidityLexer.T__62 = 63;\nSolidityLexer.T__63 = 64;\nSolidityLexer.T__64 = 65;\nSolidityLexer.T__65 = 66;\nSolidityLexer.T__66 = 67;\nSolidityLexer.T__67 = 68;\nSolidityLexer.T__68 = 69;\nSolidityLexer.T__69 = 70;\nSolidityLexer.T__70 = 71;\nSolidityLexer.T__71 = 72;\nSolidityLexer.T__72 = 73;\nSolidityLexer.T__73 = 74;\nSolidityLexer.T__74 = 75;\nSolidityLexer.T__75 = 76;\nSolidityLexer.T__76 = 77;\nSolidityLexer.T__77 = 78;\nSolidityLexer.T__78 = 79;\nSolidityLexer.T__79 = 80;\nSolidityLexer.T__80 = 81;\nSolidityLexer.T__81 = 82;\nSolidityLexer.T__82 = 83;\nSolidityLexer.T__83 = 84;\nSolidityLexer.T__84 = 85;\nSolidityLexer.T__85 = 86;\nSolidityLexer.T__86 = 87;\nSolidityLexer.T__87 = 88;\nSolidityLexer.T__88 = 89;\nSolidityLexer.T__89 = 90;\nSolidityLexer.T__90 = 91;\nSolidityLexer.T__91 = 92;\nSolidityLexer.T__92 = 93;\nSolidityLexer.T__93 = 94;\nSolidityLexer.Int = 95;\nSolidityLexer.Uint = 96;\nSolidityLexer.Byte = 97;\nSolidityLexer.Fixed = 98;\nSolidityLexer.Ufixed = 99;\nSolidityLexer.BooleanLiteral = 100;\nSolidityLexer.DecimalNumber = 101;\nSolidityLexer.HexNumber = 102;\nSolidityLexer.NumberUnit = 103;\nSolidityLexer.HexLiteral = 104;\nSolidityLexer.ReservedKeyword = 105;\nSolidityLexer.AnonymousKeyword = 106;\nSolidityLexer.BreakKeyword = 107;\nSolidityLexer.ConstantKeyword = 108;\nSolidityLexer.ImmutableKeyword = 109;\nSolidityLexer.ContinueKeyword = 110;\nSolidityLexer.LeaveKeyword = 111;\nSolidityLexer.ExternalKeyword = 112;\nSolidityLexer.IndexedKeyword = 113;\nSolidityLexer.InternalKeyword = 114;\nSolidityLexer.PayableKeyword = 115;\nSolidityLexer.PrivateKeyword = 116;\nSolidityLexer.PublicKeyword = 117;\nSolidityLexer.VirtualKeyword = 118;\nSolidityLexer.PureKeyword = 119;\nSolidityLexer.TypeKeyword = 120;\nSolidityLexer.ViewKeyword = 121;\nSolidityLexer.ConstructorKeyword = 122;\nSolidityLexer.FallbackKeyword = 123;\nSolidityLexer.ReceiveKeyword = 124;\nSolidityLexer.Identifier = 125;\nSolidityLexer.StringLiteralFragment = 126;\nSolidityLexer.VersionLiteral = 127;\nSolidityLexer.WS = 128;\nSolidityLexer.COMMENT = 129;\nSolidityLexer.LINE_COMMENT = 130;\n\nSolidityLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\n\nSolidityLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\n\nSolidityLexer.prototype.literalNames = [ null, \"'pragma'\", \"';'\", \"'^'\", \n                                         \"'~'\", \"'>='\", \"'>'\", \"'<'\", \"'<='\", \n                                         \"'='\", \"'as'\", \"'import'\", \"'*'\", \n                                         \"'from'\", \"'{'\", \"','\", \"'}'\", \n                                         \"'abstract'\", \"'contract'\", \"'interface'\", \n                                         \"'library'\", \"'is'\", \"'('\", \"')'\", \n                                         \"'using'\", \"'for'\", \"'struct'\", \n                                         \"'modifier'\", \"'function'\", \"'returns'\", \n                                         \"'event'\", \"'enum'\", \"'['\", \"']'\", \n                                         \"'address'\", \"'.'\", \"'mapping'\", \n                                         \"'=>'\", \"'memory'\", \"'storage'\", \n                                         \"'calldata'\", \"'if'\", \"'else'\", \n                                         \"'try'\", \"'catch'\", \"'while'\", \n                                         \"'assembly'\", \"'do'\", \"'return'\", \n                                         \"'throw'\", \"'emit'\", \"'var'\", \"'bool'\", \n                                         \"'string'\", \"'byte'\", \"'++'\", \"'--'\", \n                                         \"'new'\", \"':'\", \"'+'\", \"'-'\", \"'after'\", \n                                         \"'delete'\", \"'!'\", \"'**'\", \"'/'\", \n                                         \"'%'\", \"'<<'\", \"'>>'\", \"'&'\", \"'|'\", \n                                         \"'=='\", \"'!='\", \"'&&'\", \"'||'\", \n                                         \"'?'\", \"'|='\", \"'^='\", \"'&='\", \n                                         \"'<<='\", \"'>>='\", \"'+='\", \"'-='\", \n                                         \"'*='\", \"'/='\", \"'%='\", \"'let'\", \n                                         \"':='\", \"'=:'\", \"'switch'\", \"'case'\", \n                                         \"'default'\", \"'->'\", \"'callback'\", \n                                         \"'override'\", null, null, null, \n                                         null, null, null, null, null, null, \n                                         null, null, \"'anonymous'\", \"'break'\", \n                                         \"'constant'\", \"'immutable'\", \"'continue'\", \n                                         \"'leave'\", \"'external'\", \"'indexed'\", \n                                         \"'internal'\", \"'payable'\", \"'private'\", \n                                         \"'public'\", \"'virtual'\", \"'pure'\", \n                                         \"'type'\", \"'view'\", \"'constructor'\", \n                                         \"'fallback'\", \"'receive'\" ];\n\nSolidityLexer.prototype.symbolicNames = [ null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          null, null, null, null, null, \n                                          \"Int\", \"Uint\", \"Byte\", \"Fixed\", \n                                          \"Ufixed\", \"BooleanLiteral\", \"DecimalNumber\", \n                                          \"HexNumber\", \"NumberUnit\", \"HexLiteral\", \n                                          \"ReservedKeyword\", \"AnonymousKeyword\", \n                                          \"BreakKeyword\", \"ConstantKeyword\", \n                                          \"ImmutableKeyword\", \"ContinueKeyword\", \n                                          \"LeaveKeyword\", \"ExternalKeyword\", \n                                          \"IndexedKeyword\", \"InternalKeyword\", \n                                          \"PayableKeyword\", \"PrivateKeyword\", \n                                          \"PublicKeyword\", \"VirtualKeyword\", \n                                          \"PureKeyword\", \"TypeKeyword\", \n                                          \"ViewKeyword\", \"ConstructorKeyword\", \n                                          \"FallbackKeyword\", \"ReceiveKeyword\", \n                                          \"Identifier\", \"StringLiteralFragment\", \n                                          \"VersionLiteral\", \"WS\", \"COMMENT\", \n                                          \"LINE_COMMENT\" ];\n\nSolidityLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \n                                      \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \n                                      \"T__10\", \"T__11\", \"T__12\", \"T__13\", \n                                      \"T__14\", \"T__15\", \"T__16\", \"T__17\", \n                                      \"T__18\", \"T__19\", \"T__20\", \"T__21\", \n                                      \"T__22\", \"T__23\", \"T__24\", \"T__25\", \n                                      \"T__26\", \"T__27\", \"T__28\", \"T__29\", \n                                      \"T__30\", \"T__31\", \"T__32\", \"T__33\", \n                                      \"T__34\", \"T__35\", \"T__36\", \"T__37\", \n                                      \"T__38\", \"T__39\", \"T__40\", \"T__41\", \n                                      \"T__42\", \"T__43\", \"T__44\", \"T__45\", \n                                      \"T__46\", \"T__47\", \"T__48\", \"T__49\", \n                                      \"T__50\", \"T__51\", \"T__52\", \"T__53\", \n                                      \"T__54\", \"T__55\", \"T__56\", \"T__57\", \n                                      \"T__58\", \"T__59\", \"T__60\", \"T__61\", \n                                      \"T__62\", \"T__63\", \"T__64\", \"T__65\", \n                                      \"T__66\", \"T__67\", \"T__68\", \"T__69\", \n                                      \"T__70\", \"T__71\", \"T__72\", \"T__73\", \n                                      \"T__74\", \"T__75\", \"T__76\", \"T__77\", \n                                      \"T__78\", \"T__79\", \"T__80\", \"T__81\", \n                                      \"T__82\", \"T__83\", \"T__84\", \"T__85\", \n                                      \"T__86\", \"T__87\", \"T__88\", \"T__89\", \n                                      \"T__90\", \"T__91\", \"T__92\", \"T__93\", \n                                      \"Int\", \"Uint\", \"Byte\", \"Fixed\", \"Ufixed\", \n                                      \"BooleanLiteral\", \"DecimalNumber\", \n                                      \"DecimalDigits\", \"HexNumber\", \"HexDigits\", \n                                      \"NumberUnit\", \"HexLiteral\", \"HexPair\", \n                                      \"HexCharacter\", \"ReservedKeyword\", \n                                      \"AnonymousKeyword\", \"BreakKeyword\", \n                                      \"ConstantKeyword\", \"ImmutableKeyword\", \n                                      \"ContinueKeyword\", \"LeaveKeyword\", \n                                      \"ExternalKeyword\", \"IndexedKeyword\", \n                                      \"InternalKeyword\", \"PayableKeyword\", \n                                      \"PrivateKeyword\", \"PublicKeyword\", \n                                      \"VirtualKeyword\", \"PureKeyword\", \"TypeKeyword\", \n                                      \"ViewKeyword\", \"ConstructorKeyword\", \n                                      \"FallbackKeyword\", \"ReceiveKeyword\", \n                                      \"Identifier\", \"IdentifierStart\", \"IdentifierPart\", \n                                      \"StringLiteralFragment\", \"DoubleQuotedStringCharacter\", \n                                      \"SingleQuotedStringCharacter\", \"VersionLiteral\", \n                                      \"WS\", \"COMMENT\", \"LINE_COMMENT\" ];\n\nSolidityLexer.prototype.grammarFileName = \"Solidity.g4\";\n\n\nexports.SolidityLexer = SolidityLexer;\n\n","// Generated from antlr/Solidity.g4 by ANTLR 4.8\n// jshint ignore: start\nvar antlr4 = require('../antlr4/index');\nvar SolidityListener = require('./SolidityListener').SolidityListener;\nvar grammarFileName = \"Solidity.g4\";\n\n\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\n    \"\\u0003\\u0084\\u0439\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\",\n    \"\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\",\n    \"\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\",\n    \"\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\",\n    \"\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\",\n    \"\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\",\n    \"\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\",\n    \"\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\",\n    \"\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004\",\n    \"$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004*\\t*\\u0004\",\n    \"+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u00041\\t1\\u0004\",\n    \"2\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u00047\\t7\\u00048\\t8\\u0004\",\n    \"9\\t9\\u0004:\\t:\\u0004;\\t;\\u0004<\\t<\\u0004=\\t=\\u0004>\\t>\\u0004?\\t?\\u0004\",\n    \"@\\t@\\u0004A\\tA\\u0004B\\tB\\u0004C\\tC\\u0004D\\tD\\u0004E\\tE\\u0004F\\tF\\u0004\",\n    \"G\\tG\\u0004H\\tH\\u0004I\\tI\\u0004J\\tJ\\u0004K\\tK\\u0004L\\tL\\u0004M\\tM\\u0004\",\n    \"N\\tN\\u0004O\\tO\\u0004P\\tP\\u0004Q\\tQ\\u0004R\\tR\\u0004S\\tS\\u0004T\\tT\\u0004\",\n    \"U\\tU\\u0004V\\tV\\u0004W\\tW\\u0004X\\tX\\u0004Y\\tY\\u0004Z\\tZ\\u0004[\\t[\\u0004\",\n    \"\\\\\\t\\\\\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\n    \"\\u0002\\u0003\\u0002\\u0007\\u0002\\u00c0\\n\\u0002\\f\\u0002\\u000e\\u0002\\u00c3\",\n    \"\\u000b\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\",\n    \"\\u0005\\u0005\\u00d0\\n\\u0005\\u0003\\u0006\\u0003\\u0006\\u0005\\u0006\\u00d4\",\n    \"\\n\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0005\\b\\u00d9\\n\\b\\u0003\\b\\u0003\",\n    \"\\b\\u0005\\b\\u00dd\\n\\b\\u0003\\b\\u0005\\b\\u00e0\\n\\b\\u0003\\t\\u0003\\t\\u0003\",\n    \"\\t\\u0005\\t\\u00e5\\n\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0005\\n\\u00eb\\n\",\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0005\\n\\u00f1\\n\\n\\u0003\\n\\u0003\\n\",\n    \"\\u0005\\n\\u00f5\\n\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\n    \"\\n\\u0003\\n\\u0007\\n\\u00ff\\n\\n\\f\\n\\u000e\\n\\u0102\\u000b\\n\\u0003\\n\\u0003\",\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0005\\n\\u0109\\n\\n\\u0003\\u000b\\u0005\\u000b\",\n    \"\\u010c\\n\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\n    \"\\u000b\\u0003\\u000b\\u0007\\u000b\\u0114\\n\\u000b\\f\\u000b\\u000e\\u000b\\u0117\",\n    \"\\u000b\\u000b\\u0005\\u000b\\u0119\\n\\u000b\\u0003\\u000b\\u0003\\u000b\\u0007\",\n    \"\\u000b\\u011d\\n\\u000b\\f\\u000b\\u000e\\u000b\\u0120\\u000b\\u000b\\u0003\\u000b\",\n    \"\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u0127\\n\\f\\u0003\\f\\u0005\",\n    \"\\f\\u012a\\n\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\",\n    \"\\u0005\\r\\u0133\\n\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\n    \"\\u000e\\u0003\\u000e\\u0003\\u000e\\u0007\\u000e\\u013c\\n\\u000e\\f\\u000e\\u000e\",\n    \"\\u000e\\u013f\\u000b\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0005\\u000e\",\n    \"\\u0144\\n\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\\u000f\\u0003\",\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\",\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0005\\u0010\\u0154\\n\\u0010\",\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0007\\u0011\\u0160\\n\",\n    \"\\u0011\\f\\u0011\\u000e\\u0011\\u0163\\u000b\\u0011\\u0005\\u0011\\u0165\\n\\u0011\",\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0005\\u0012\",\n    \"\\u016c\\n\\u0012\\u0003\\u0012\\u0003\\u0012\\u0007\\u0012\\u0170\\n\\u0012\\f\\u0012\",\n    \"\\u000e\\u0012\\u0173\\u000b\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\",\n    \"\\u0013\\u0003\\u0013\\u0005\\u0013\\u017a\\n\\u0013\\u0003\\u0013\\u0005\\u0013\",\n    \"\\u017d\\n\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0005\",\n    \"\\u0014\\u0183\\n\\u0014\\u0003\\u0014\\u0003\\u0014\\u0005\\u0014\\u0187\\n\\u0014\",\n    \"\\u0003\\u0015\\u0003\\u0015\\u0005\\u0015\\u018b\\n\\u0015\\u0003\\u0015\\u0003\",\n    \"\\u0015\\u0003\\u0015\\u0005\\u0015\\u0190\\n\\u0015\\u0003\\u0016\\u0003\\u0016\",\n    \"\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\",\n    \"\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0007\\u0017\\u019d\\n\\u0017\\f\\u0017\",\n    \"\\u000e\\u0017\\u01a0\\u000b\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\",\n    \"\\u0018\\u0005\\u0018\\u01a6\\n\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\",\n    \"\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\",\n    \"\\u01b0\\n\\u001a\\u0003\\u001a\\u0003\\u001a\\u0007\\u001a\\u01b4\\n\\u001a\\f\\u001a\",\n    \"\\u000e\\u001a\\u01b7\\u000b\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\",\n    \"\\u001b\\u0003\\u001b\\u0003\\u001b\\u0007\\u001b\\u01bf\\n\\u001b\\f\\u001b\\u000e\",\n    \"\\u001b\\u01c2\\u000b\\u001b\\u0005\\u001b\\u01c4\\n\\u001b\\u0003\\u001b\\u0003\",\n    \"\\u001b\\u0003\\u001c\\u0003\\u001c\\u0005\\u001c\\u01ca\\n\\u001c\\u0003\\u001c\",\n    \"\\u0005\\u001c\\u01cd\\n\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\",\n    \"\\u001d\\u0007\\u001d\\u01d3\\n\\u001d\\f\\u001d\\u000e\\u001d\\u01d6\\u000b\\u001d\",\n    \"\\u0005\\u001d\\u01d8\\n\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\",\n    \"\\u001e\\u0005\\u001e\\u01de\\n\\u001e\\u0003\\u001e\\u0005\\u001e\\u01e1\\n\\u001e\",\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0007\\u001f\\u01e7\\n\",\n    \"\\u001f\\f\\u001f\\u000e\\u001f\\u01ea\\u000b\\u001f\\u0005\\u001f\\u01ec\\n\\u001f\",\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003 \\u0003 \\u0005 \\u01f2\\n \\u0003!\\u0003\",\n    \"!\\u0005!\\u01f6\\n!\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\",\n    \"\\\"\\u0003\\\"\\u0003\\\"\\u0005\\\"\\u0201\\n\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0005\\\"\",\n    \"\\u0206\\n\\\"\\u0003\\\"\\u0007\\\"\\u0209\\n\\\"\\f\\\"\\u000e\\\"\\u020c\\u000b\\\"\\u0003\",\n    \"#\\u0003#\\u0003#\\u0007#\\u0211\\n#\\f#\\u000e#\\u0214\\u000b#\\u0003$\\u0003\",\n    \"$\\u0005$\\u0218\\n$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003\",\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0007&\\u0226\\n&\\f&\\u000e&\\u0229\\u000b\",\n    \"&\\u0003&\\u0003&\\u0005&\\u022d\\n&\\u0003\\'\\u0003\\'\\u0003(\\u0003(\\u0003\",\n    \")\\u0003)\\u0007)\\u0235\\n)\\f)\\u000e)\\u0238\\u000b)\\u0003)\\u0003)\\u0003\",\n    \"*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003\",\n    \"*\\u0003*\\u0003*\\u0005*\\u0249\\n*\\u0003+\\u0003+\\u0003+\\u0003,\\u0003,\\u0003\",\n    \",\\u0003,\\u0003,\\u0003,\\u0003,\\u0005,\\u0255\\n,\\u0003-\\u0003-\\u0003-\\u0005\",\n    \"-\\u025a\\n-\\u0003-\\u0003-\\u0006-\\u025e\\n-\\r-\\u000e-\\u025f\\u0003.\\u0003\",\n    \".\\u0005.\\u0264\\n.\\u0003.\\u0005.\\u0267\\n.\\u0003.\\u0003.\\u0003/\\u0003\",\n    \"/\\u0003/\\u0003/\\u0003/\\u0003/\\u00030\\u00030\\u00050\\u0273\\n0\\u00031\\u0003\",\n    \"1\\u00031\\u00031\\u00051\\u0279\\n1\\u00031\\u00031\\u00051\\u027d\\n1\\u0003\",\n    \"1\\u00051\\u0280\\n1\\u00031\\u00031\\u00031\\u00032\\u00032\\u00052\\u0287\\n\",\n    \"2\\u00032\\u00032\\u00033\\u00033\\u00033\\u00033\\u00033\\u00033\\u00033\\u0003\",\n    \"3\\u00034\\u00034\\u00034\\u00035\\u00035\\u00035\\u00036\\u00036\\u00056\\u029b\",\n    \"\\n6\\u00036\\u00036\\u00037\\u00037\\u00037\\u00038\\u00038\\u00038\\u00038\\u0003\",\n    \"9\\u00039\\u00039\\u00039\\u00039\\u00039\\u00039\\u00059\\u02ad\\n9\\u00039\\u0003\",\n    \"9\\u00059\\u02b1\\n9\\u00039\\u00039\\u0003:\\u0005:\\u02b6\\n:\\u0003:\\u0003\",\n    \":\\u0005:\\u02ba\\n:\\u0007:\\u02bc\\n:\\f:\\u000e:\\u02bf\\u000b:\\u0003;\\u0003\",\n    \";\\u0005;\\u02c3\\n;\\u0003;\\u0007;\\u02c6\\n;\\f;\\u000e;\\u02c9\\u000b;\\u0003\",\n    \";\\u0005;\\u02cc\\n;\\u0003;\\u0003;\\u0003<\\u0003<\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0005=\\u02e4\\n=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0005=\\u0315\\n=\\u0003=\\u0003=\\u0003=\\u0003=\\u0005\",\n    \"=\\u031b\\n=\\u0003=\\u0003=\\u0005=\\u031f\\n=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\n    \"=\\u0007=\\u032f\\n=\\f=\\u000e=\\u0332\\u000b=\\u0003>\\u0003>\\u0003>\\u0003\",\n    \">\\u0003>\\u0003>\\u0003>\\u0005>\\u033b\\n>\\u0003>\\u0003>\\u0003>\\u0003>\\u0003\",\n    \">\\u0003>\\u0005>\\u0343\\n>\\u0005>\\u0345\\n>\\u0003?\\u0003?\\u0003?\\u0007\",\n    \"?\\u034a\\n?\\f?\\u000e?\\u034d\\u000b?\\u0003@\\u0003@\\u0003@\\u0007@\\u0352\",\n    \"\\n@\\f@\\u000e@\\u0355\\u000b@\\u0003@\\u0005@\\u0358\\n@\\u0003A\\u0003A\\u0003\",\n    \"A\\u0003A\\u0003B\\u0003B\\u0005B\\u0360\\nB\\u0003B\\u0003B\\u0005B\\u0364\\n\",\n    \"B\\u0005B\\u0366\\nB\\u0003C\\u0003C\\u0003C\\u0003C\\u0003C\\u0003D\\u0003D\\u0007\",\n    \"D\\u036f\\nD\\fD\\u000eD\\u0372\\u000bD\\u0003D\\u0003D\\u0003E\\u0003E\\u0003\",\n    \"E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003\",\n    \"E\\u0003E\\u0003E\\u0003E\\u0003E\\u0003E\\u0005E\\u0388\\nE\\u0003F\\u0003F\\u0003\",\n    \"F\\u0005F\\u038d\\nF\\u0003G\\u0003G\\u0003G\\u0003G\\u0003H\\u0003H\\u0003H\\u0003\",\n    \"H\\u0005H\\u0397\\nH\\u0003H\\u0003H\\u0005H\\u039b\\nH\\u0003H\\u0003H\\u0007\",\n    \"H\\u039f\\nH\\fH\\u000eH\\u03a2\\u000bH\\u0003H\\u0005H\\u03a5\\nH\\u0003I\\u0003\",\n    \"I\\u0003I\\u0003I\\u0005I\\u03ab\\nI\\u0003J\\u0003J\\u0003J\\u0003J\\u0003K\\u0003\",\n    \"K\\u0003K\\u0003K\\u0003K\\u0003K\\u0005K\\u03b7\\nK\\u0003L\\u0003L\\u0003L\\u0007\",\n    \"L\\u03bc\\nL\\fL\\u000eL\\u03bf\\u000bL\\u0003M\\u0003M\\u0003M\\u0003N\\u0003\",\n    \"N\\u0003N\\u0003O\\u0003O\\u0003O\\u0007O\\u03ca\\nO\\fO\\u000eO\\u03cd\\u000b\",\n    \"O\\u0003P\\u0003P\\u0003P\\u0003P\\u0003P\\u0003P\\u0005P\\u03d5\\nP\\u0003Q\\u0003\",\n    \"Q\\u0003Q\\u0003Q\\u0005Q\\u03db\\nQ\\u0003Q\\u0003Q\\u0005Q\\u03df\\nQ\\u0003\",\n    \"Q\\u0003Q\\u0003R\\u0003R\\u0003R\\u0003S\\u0003S\\u0003S\\u0005S\\u03e9\\nS\\u0003\",\n    \"S\\u0003S\\u0003S\\u0005S\\u03ee\\nS\\u0003S\\u0003S\\u0003T\\u0003T\\u0003T\\u0003\",\n    \"T\\u0003U\\u0003U\\u0003U\\u0003U\\u0005U\\u03fa\\nU\\u0003V\\u0003V\\u0003V\\u0003\",\n    \"V\\u0003W\\u0003W\\u0005W\\u0402\\nW\\u0003W\\u0003W\\u0005W\\u0406\\nW\\u0007\",\n    \"W\\u0408\\nW\\fW\\u000eW\\u040b\\u000bW\\u0003W\\u0003W\\u0003W\\u0003W\\u0003\",\n    \"W\\u0007W\\u0412\\nW\\fW\\u000eW\\u0415\\u000bW\\u0005W\\u0417\\nW\\u0003W\\u0005\",\n    \"W\\u041a\\nW\\u0003X\\u0003X\\u0005X\\u041e\\nX\\u0003Y\\u0003Y\\u0005Y\\u0422\",\n    \"\\nY\\u0003Z\\u0003Z\\u0003[\\u0003[\\u0003[\\u0003[\\u0003[\\u0007[\\u042b\\n\",\n    \"[\\f[\\u000e[\\u042e\\u000b[\\u0003[\\u0003[\\u0005[\\u0432\\n[\\u0003\\\\\\u0006\",\n    \"\\\\\\u0435\\n\\\\\\r\\\\\\u000e\\\\\\u0436\\u0003\\\\\\u0002\\u0004Bx]\\u0002\\u0004\\u0006\",\n    \"\\b\\n\\f\\u000e\\u0010\\u0012\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e \\\"$&(*\",\n    \",.02468:<>@BDFHJLNPRTVXZ\\\\^`bdfhjlnprtvxz|~\\u0080\\u0082\\u0084\\u0086\",\n    \"\\u0088\\u008a\\u008c\\u008e\\u0090\\u0092\\u0094\\u0096\\u0098\\u009a\\u009c\\u009e\",\n    \"\\u00a0\\u00a2\\u00a4\\u00a6\\u00a8\\u00aa\\u00ac\\u00ae\\u00b0\\u00b2\\u00b4\\u00b6\",\n    \"\\u0002\\u0011\\u0003\\u0002\\u0005\\u000b\\u0003\\u0002\\u0014\\u0016\\u0003\\u0002\",\n    \"(*\\u0006\\u0002nnuuyy{{\\u0005\\u0002$$58ae\\u0003\\u00029:\\u0003\\u0002=\",\n    \">\\u0003\\u0002?@\\u0004\\u0002\\u000e\\u000eCD\\u0003\\u0002EF\\u0003\\u0002\",\n    \"\\u0007\\n\\u0003\\u0002IJ\\u0004\\u0002\\u000b\\u000bNW\\u0003\\u0002gh\\b\\u0002\",\n    \"\\u000f\\u000f**__qquu~\\u007f\\u0002\\u04b4\\u0002\\u00c1\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0004\\u00c6\\u0003\\u0002\\u0002\\u0002\\u0006\\u00cb\\u0003\\u0002\\u0002\",\n    \"\\u0002\\b\\u00cf\\u0003\\u0002\\u0002\\u0002\\n\\u00d1\\u0003\\u0002\\u0002\\u0002\",\n    \"\\f\\u00d5\\u0003\\u0002\\u0002\\u0002\\u000e\\u00df\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0010\\u00e1\\u0003\\u0002\\u0002\\u0002\\u0012\\u0108\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0014\\u010b\\u0003\\u0002\\u0002\\u0002\\u0016\\u0123\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0018\\u0132\\u0003\\u0002\\u0002\\u0002\\u001a\\u0134\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u001c\\u0147\\u0003\\u0002\\u0002\\u0002\\u001e\\u014e\\u0003\\u0002\\u0002\\u0002\",\n    \" \\u0157\\u0003\\u0002\\u0002\\u0002\\\"\\u0168\\u0003\\u0002\\u0002\\u0002$\\u0176\",\n    \"\\u0003\\u0002\\u0002\\u0002&\\u017e\\u0003\\u0002\\u0002\\u0002(\\u018f\\u0003\",\n    \"\\u0002\\u0002\\u0002*\\u0191\\u0003\\u0002\\u0002\\u0002,\\u019e\\u0003\\u0002\",\n    \"\\u0002\\u0002.\\u01a1\\u0003\\u0002\\u0002\\u00020\\u01a9\\u0003\\u0002\\u0002\",\n    \"\\u00022\\u01ab\\u0003\\u0002\\u0002\\u00024\\u01ba\\u0003\\u0002\\u0002\\u0002\",\n    \"6\\u01c7\\u0003\\u0002\\u0002\\u00028\\u01ce\\u0003\\u0002\\u0002\\u0002:\\u01db\",\n    \"\\u0003\\u0002\\u0002\\u0002<\\u01e2\\u0003\\u0002\\u0002\\u0002>\\u01ef\\u0003\",\n    \"\\u0002\\u0002\\u0002@\\u01f3\\u0003\\u0002\\u0002\\u0002B\\u0200\\u0003\\u0002\",\n    \"\\u0002\\u0002D\\u020d\\u0003\\u0002\\u0002\\u0002F\\u0217\\u0003\\u0002\\u0002\",\n    \"\\u0002H\\u0219\\u0003\\u0002\\u0002\\u0002J\\u0220\\u0003\\u0002\\u0002\\u0002\",\n    \"L\\u022e\\u0003\\u0002\\u0002\\u0002N\\u0230\\u0003\\u0002\\u0002\\u0002P\\u0232\",\n    \"\\u0003\\u0002\\u0002\\u0002R\\u0248\\u0003\\u0002\\u0002\\u0002T\\u024a\\u0003\",\n    \"\\u0002\\u0002\\u0002V\\u024d\\u0003\\u0002\\u0002\\u0002X\\u0256\\u0003\\u0002\",\n    \"\\u0002\\u0002Z\\u0261\\u0003\\u0002\\u0002\\u0002\\\\\\u026a\\u0003\\u0002\\u0002\",\n    \"\\u0002^\\u0272\\u0003\\u0002\\u0002\\u0002`\\u0274\\u0003\\u0002\\u0002\\u0002\",\n    \"b\\u0284\\u0003\\u0002\\u0002\\u0002d\\u028a\\u0003\\u0002\\u0002\\u0002f\\u0292\",\n    \"\\u0003\\u0002\\u0002\\u0002h\\u0295\\u0003\\u0002\\u0002\\u0002j\\u0298\\u0003\",\n    \"\\u0002\\u0002\\u0002l\\u029e\\u0003\\u0002\\u0002\\u0002n\\u02a1\\u0003\\u0002\",\n    \"\\u0002\\u0002p\\u02ac\\u0003\\u0002\\u0002\\u0002r\\u02b5\\u0003\\u0002\\u0002\",\n    \"\\u0002t\\u02c0\\u0003\\u0002\\u0002\\u0002v\\u02cf\\u0003\\u0002\\u0002\\u0002\",\n    \"x\\u02e3\\u0003\\u0002\\u0002\\u0002z\\u0344\\u0003\\u0002\\u0002\\u0002|\\u0346\",\n    \"\\u0003\\u0002\\u0002\\u0002~\\u034e\\u0003\\u0002\\u0002\\u0002\\u0080\\u0359\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0082\\u0365\\u0003\\u0002\\u0002\\u0002\\u0084\\u0367\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0086\\u036c\\u0003\\u0002\\u0002\\u0002\\u0088\\u0387\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u008a\\u038c\\u0003\\u0002\\u0002\\u0002\\u008c\\u038e\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u008e\\u0396\\u0003\\u0002\\u0002\\u0002\\u0090\\u03a6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0092\\u03ac\\u0003\\u0002\\u0002\\u0002\\u0094\\u03b6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0096\\u03b8\\u0003\\u0002\\u0002\\u0002\\u0098\\u03c0\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u009a\\u03c3\\u0003\\u0002\\u0002\\u0002\\u009c\\u03c6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u009e\\u03d4\\u0003\\u0002\\u0002\\u0002\\u00a0\\u03d6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00a2\\u03e2\\u0003\\u0002\\u0002\\u0002\\u00a4\\u03e5\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00a6\\u03f1\\u0003\\u0002\\u0002\\u0002\\u00a8\\u03f9\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00aa\\u03fb\\u0003\\u0002\\u0002\\u0002\\u00ac\\u0419\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00ae\\u041d\\u0003\\u0002\\u0002\\u0002\\u00b0\\u041f\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b2\\u0423\\u0003\\u0002\\u0002\\u0002\\u00b4\\u0425\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b6\\u0434\\u0003\\u0002\\u0002\\u0002\\u00b8\\u00c0\",\n    \"\\u0005\\u0004\\u0003\\u0002\\u00b9\\u00c0\\u0005\\u0012\\n\\u0002\\u00ba\\u00c0\",\n    \"\\u0005\\u0014\\u000b\\u0002\\u00bb\\u00c0\\u00052\\u001a\\u0002\\u00bc\\u00c0\",\n    \"\\u0005 \\u0011\\u0002\\u00bd\\u00c0\\u0005&\\u0014\\u0002\\u00be\\u00c0\\u0005\",\n    \"\\u001c\\u000f\\u0002\\u00bf\\u00b8\\u0003\\u0002\\u0002\\u0002\\u00bf\\u00b9\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00bf\\u00ba\\u0003\\u0002\\u0002\\u0002\\u00bf\\u00bb\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00bf\\u00bc\\u0003\\u0002\\u0002\\u0002\\u00bf\\u00bd\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00bf\\u00be\\u0003\\u0002\\u0002\\u0002\\u00c0\\u00c3\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00c1\\u00bf\\u0003\\u0002\\u0002\\u0002\\u00c1\\u00c2\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00c2\\u00c4\\u0003\\u0002\\u0002\\u0002\\u00c3\\u00c1\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00c4\\u00c5\\u0007\\u0002\\u0002\\u0003\\u00c5\\u0003\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00c6\\u00c7\\u0007\\u0003\\u0002\\u0002\\u00c7\\u00c8\\u0005\",\n    \"\\u0006\\u0004\\u0002\\u00c8\\u00c9\\u0005\\b\\u0005\\u0002\\u00c9\\u00ca\\u0007\",\n    \"\\u0004\\u0002\\u0002\\u00ca\\u0005\\u0003\\u0002\\u0002\\u0002\\u00cb\\u00cc\\u0005\",\n    \"\\u00b2Z\\u0002\\u00cc\\u0007\\u0003\\u0002\\u0002\\u0002\\u00cd\\u00d0\\u0005\",\n    \"\\n\\u0006\\u0002\\u00ce\\u00d0\\u0005x=\\u0002\\u00cf\\u00cd\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00cf\\u00ce\\u0003\\u0002\\u0002\\u0002\\u00d0\\t\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u00d1\\u00d3\\u0005\\u000e\\b\\u0002\\u00d2\\u00d4\\u0005\\u000e\\b\\u0002\",\n    \"\\u00d3\\u00d2\\u0003\\u0002\\u0002\\u0002\\u00d3\\u00d4\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u00d4\\u000b\\u0003\\u0002\\u0002\\u0002\\u00d5\\u00d6\\t\\u0002\\u0002\\u0002\",\n    \"\\u00d6\\r\\u0003\\u0002\\u0002\\u0002\\u00d7\\u00d9\\u0005\\f\\u0007\\u0002\\u00d8\",\n    \"\\u00d7\\u0003\\u0002\\u0002\\u0002\\u00d8\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00d9\",\n    \"\\u00da\\u0003\\u0002\\u0002\\u0002\\u00da\\u00e0\\u0007\\u0081\\u0002\\u0002\\u00db\",\n    \"\\u00dd\\u0005\\f\\u0007\\u0002\\u00dc\\u00db\\u0003\\u0002\\u0002\\u0002\\u00dc\",\n    \"\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00dd\\u00de\\u0003\\u0002\\u0002\\u0002\\u00de\",\n    \"\\u00e0\\u0007g\\u0002\\u0002\\u00df\\u00d8\\u0003\\u0002\\u0002\\u0002\\u00df\",\n    \"\\u00dc\\u0003\\u0002\\u0002\\u0002\\u00e0\\u000f\\u0003\\u0002\\u0002\\u0002\\u00e1\",\n    \"\\u00e4\\u0005\\u00b2Z\\u0002\\u00e2\\u00e3\\u0007\\f\\u0002\\u0002\\u00e3\\u00e5\",\n    \"\\u0005\\u00b2Z\\u0002\\u00e4\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e4\\u00e5\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e5\\u0011\\u0003\\u0002\\u0002\\u0002\\u00e6\\u00e7\",\n    \"\\u0007\\r\\u0002\\u0002\\u00e7\\u00ea\\u0007\\u0080\\u0002\\u0002\\u00e8\\u00e9\",\n    \"\\u0007\\f\\u0002\\u0002\\u00e9\\u00eb\\u0005\\u00b2Z\\u0002\\u00ea\\u00e8\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00ea\\u00eb\\u0003\\u0002\\u0002\\u0002\\u00eb\\u00ec\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00ec\\u0109\\u0007\\u0004\\u0002\\u0002\\u00ed\\u00f0\\u0007\",\n    \"\\r\\u0002\\u0002\\u00ee\\u00f1\\u0007\\u000e\\u0002\\u0002\\u00ef\\u00f1\\u0005\",\n    \"\\u00b2Z\\u0002\\u00f0\\u00ee\\u0003\\u0002\\u0002\\u0002\\u00f0\\u00ef\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u00f1\\u00f4\\u0003\\u0002\\u0002\\u0002\\u00f2\\u00f3\\u0007\",\n    \"\\f\\u0002\\u0002\\u00f3\\u00f5\\u0005\\u00b2Z\\u0002\\u00f4\\u00f2\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u00f4\\u00f5\\u0003\\u0002\\u0002\\u0002\\u00f5\\u00f6\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u00f6\\u00f7\\u0007\\u000f\\u0002\\u0002\\u00f7\\u00f8\\u0007\\u0080\",\n    \"\\u0002\\u0002\\u00f8\\u0109\\u0007\\u0004\\u0002\\u0002\\u00f9\\u00fa\\u0007\\r\",\n    \"\\u0002\\u0002\\u00fa\\u00fb\\u0007\\u0010\\u0002\\u0002\\u00fb\\u0100\\u0005\\u0010\",\n    \"\\t\\u0002\\u00fc\\u00fd\\u0007\\u0011\\u0002\\u0002\\u00fd\\u00ff\\u0005\\u0010\",\n    \"\\t\\u0002\\u00fe\\u00fc\\u0003\\u0002\\u0002\\u0002\\u00ff\\u0102\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0100\\u00fe\\u0003\\u0002\\u0002\\u0002\\u0100\\u0101\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0101\\u0103\\u0003\\u0002\\u0002\\u0002\\u0102\\u0100\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0103\\u0104\\u0007\\u0012\\u0002\\u0002\\u0104\\u0105\\u0007\\u000f\",\n    \"\\u0002\\u0002\\u0105\\u0106\\u0007\\u0080\\u0002\\u0002\\u0106\\u0107\\u0007\\u0004\",\n    \"\\u0002\\u0002\\u0107\\u0109\\u0003\\u0002\\u0002\\u0002\\u0108\\u00e6\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0108\\u00ed\\u0003\\u0002\\u0002\\u0002\\u0108\\u00f9\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0109\\u0013\\u0003\\u0002\\u0002\\u0002\\u010a\\u010c\\u0007\\u0013\",\n    \"\\u0002\\u0002\\u010b\\u010a\\u0003\\u0002\\u0002\\u0002\\u010b\\u010c\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u010c\\u010d\\u0003\\u0002\\u0002\\u0002\\u010d\\u010e\\t\\u0003\",\n    \"\\u0002\\u0002\\u010e\\u0118\\u0005\\u00b2Z\\u0002\\u010f\\u0110\\u0007\\u0017\",\n    \"\\u0002\\u0002\\u0110\\u0115\\u0005\\u0016\\f\\u0002\\u0111\\u0112\\u0007\\u0011\",\n    \"\\u0002\\u0002\\u0112\\u0114\\u0005\\u0016\\f\\u0002\\u0113\\u0111\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0114\\u0117\\u0003\\u0002\\u0002\\u0002\\u0115\\u0113\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0115\\u0116\\u0003\\u0002\\u0002\\u0002\\u0116\\u0119\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0117\\u0115\\u0003\\u0002\\u0002\\u0002\\u0118\\u010f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0118\\u0119\\u0003\\u0002\\u0002\\u0002\\u0119\\u011a\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u011a\\u011e\\u0007\\u0010\\u0002\\u0002\\u011b\\u011d\\u0005\\u0018\",\n    \"\\r\\u0002\\u011c\\u011b\\u0003\\u0002\\u0002\\u0002\\u011d\\u0120\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u011e\\u011c\\u0003\\u0002\\u0002\\u0002\\u011e\\u011f\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u011f\\u0121\\u0003\\u0002\\u0002\\u0002\\u0120\\u011e\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0121\\u0122\\u0007\\u0012\\u0002\\u0002\\u0122\\u0015\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0123\\u0129\\u0005D#\\u0002\\u0124\\u0126\\u0007\\u0018\\u0002\",\n    \"\\u0002\\u0125\\u0127\\u0005|?\\u0002\\u0126\\u0125\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0126\\u0127\\u0003\\u0002\\u0002\\u0002\\u0127\\u0128\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0128\\u012a\\u0007\\u0019\\u0002\\u0002\\u0129\\u0124\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0129\\u012a\\u0003\\u0002\\u0002\\u0002\\u012a\\u0017\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u012b\\u0133\\u0005\\u001a\\u000e\\u0002\\u012c\\u0133\\u0005\\u001e\\u0010\\u0002\",\n    \"\\u012d\\u0133\\u0005 \\u0011\\u0002\\u012e\\u0133\\u0005\\\"\\u0012\\u0002\\u012f\",\n    \"\\u0133\\u0005&\\u0014\\u0002\\u0130\\u0133\\u0005.\\u0018\\u0002\\u0131\\u0133\",\n    \"\\u00052\\u001a\\u0002\\u0132\\u012b\\u0003\\u0002\\u0002\\u0002\\u0132\\u012c\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0132\\u012d\\u0003\\u0002\\u0002\\u0002\\u0132\\u012e\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0132\\u012f\\u0003\\u0002\\u0002\\u0002\\u0132\\u0130\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0132\\u0131\\u0003\\u0002\\u0002\\u0002\\u0133\\u0019\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0134\\u013d\\u0005B\\\"\\u0002\\u0135\\u013c\\u0007\",\n    \"w\\u0002\\u0002\\u0136\\u013c\\u0007t\\u0002\\u0002\\u0137\\u013c\\u0007v\\u0002\",\n    \"\\u0002\\u0138\\u013c\\u0007n\\u0002\\u0002\\u0139\\u013c\\u0007o\\u0002\\u0002\",\n    \"\\u013a\\u013c\\u0005\\u00b4[\\u0002\\u013b\\u0135\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u013b\\u0136\\u0003\\u0002\\u0002\\u0002\\u013b\\u0137\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u013b\\u0138\\u0003\\u0002\\u0002\\u0002\\u013b\\u0139\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u013b\\u013a\\u0003\\u0002\\u0002\\u0002\\u013c\\u013f\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u013d\\u013b\\u0003\\u0002\\u0002\\u0002\\u013d\\u013e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u013e\\u0140\\u0003\\u0002\\u0002\\u0002\\u013f\\u013d\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0140\\u0143\\u0005\\u00b2Z\\u0002\\u0141\\u0142\\u0007\\u000b\\u0002\\u0002\",\n    \"\\u0142\\u0144\\u0005x=\\u0002\\u0143\\u0141\\u0003\\u0002\\u0002\\u0002\\u0143\",\n    \"\\u0144\\u0003\\u0002\\u0002\\u0002\\u0144\\u0145\\u0003\\u0002\\u0002\\u0002\\u0145\",\n    \"\\u0146\\u0007\\u0004\\u0002\\u0002\\u0146\\u001b\\u0003\\u0002\\u0002\\u0002\\u0147\",\n    \"\\u0148\\u0005B\\\"\\u0002\\u0148\\u0149\\u0007n\\u0002\\u0002\\u0149\\u014a\\u0005\",\n    \"\\u00b2Z\\u0002\\u014a\\u014b\\u0007\\u000b\\u0002\\u0002\\u014b\\u014c\\u0005\",\n    \"x=\\u0002\\u014c\\u014d\\u0007\\u0004\\u0002\\u0002\\u014d\\u001d\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u014e\\u014f\\u0007\\u001a\\u0002\\u0002\\u014f\\u0150\\u0005\\u00b2\",\n    \"Z\\u0002\\u0150\\u0153\\u0007\\u001b\\u0002\\u0002\\u0151\\u0154\\u0007\\u000e\",\n    \"\\u0002\\u0002\\u0152\\u0154\\u0005B\\\"\\u0002\\u0153\\u0151\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0153\\u0152\\u0003\\u0002\\u0002\\u0002\\u0154\\u0155\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0155\\u0156\\u0007\\u0004\\u0002\\u0002\\u0156\\u001f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0157\\u0158\\u0007\\u001c\\u0002\\u0002\\u0158\\u0159\\u0005\\u00b2Z\",\n    \"\\u0002\\u0159\\u0164\\u0007\\u0010\\u0002\\u0002\\u015a\\u015b\\u0005@!\\u0002\",\n    \"\\u015b\\u0161\\u0007\\u0004\\u0002\\u0002\\u015c\\u015d\\u0005@!\\u0002\\u015d\",\n    \"\\u015e\\u0007\\u0004\\u0002\\u0002\\u015e\\u0160\\u0003\\u0002\\u0002\\u0002\\u015f\",\n    \"\\u015c\\u0003\\u0002\\u0002\\u0002\\u0160\\u0163\\u0003\\u0002\\u0002\\u0002\\u0161\",\n    \"\\u015f\\u0003\\u0002\\u0002\\u0002\\u0161\\u0162\\u0003\\u0002\\u0002\\u0002\\u0162\",\n    \"\\u0165\\u0003\\u0002\\u0002\\u0002\\u0163\\u0161\\u0003\\u0002\\u0002\\u0002\\u0164\",\n    \"\\u015a\\u0003\\u0002\\u0002\\u0002\\u0164\\u0165\\u0003\\u0002\\u0002\\u0002\\u0165\",\n    \"\\u0166\\u0003\\u0002\\u0002\\u0002\\u0166\\u0167\\u0007\\u0012\\u0002\\u0002\\u0167\",\n    \"!\\u0003\\u0002\\u0002\\u0002\\u0168\\u0169\\u0007\\u001d\\u0002\\u0002\\u0169\",\n    \"\\u016b\\u0005\\u00b2Z\\u0002\\u016a\\u016c\\u00054\\u001b\\u0002\\u016b\\u016a\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u016b\\u016c\\u0003\\u0002\\u0002\\u0002\\u016c\\u0171\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u016d\\u0170\\u0007x\\u0002\\u0002\\u016e\\u0170\",\n    \"\\u0005\\u00b4[\\u0002\\u016f\\u016d\\u0003\\u0002\\u0002\\u0002\\u016f\\u016e\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0170\\u0173\\u0003\\u0002\\u0002\\u0002\\u0171\\u016f\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0171\\u0172\\u0003\\u0002\\u0002\\u0002\\u0172\\u0174\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0173\\u0171\\u0003\\u0002\\u0002\\u0002\\u0174\\u0175\",\n    \"\\u0005P)\\u0002\\u0175#\\u0003\\u0002\\u0002\\u0002\\u0176\\u017c\\u0005\\u00b2\",\n    \"Z\\u0002\\u0177\\u0179\\u0007\\u0018\\u0002\\u0002\\u0178\\u017a\\u0005|?\\u0002\",\n    \"\\u0179\\u0178\\u0003\\u0002\\u0002\\u0002\\u0179\\u017a\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u017a\\u017b\\u0003\\u0002\\u0002\\u0002\\u017b\\u017d\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u017c\\u0177\\u0003\\u0002\\u0002\\u0002\\u017c\\u017d\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u017d%\\u0003\\u0002\\u0002\\u0002\\u017e\\u017f\\u0005(\\u0015\\u0002\\u017f\",\n    \"\\u0180\\u00054\\u001b\\u0002\\u0180\\u0182\\u0005,\\u0017\\u0002\\u0181\\u0183\",\n    \"\\u0005*\\u0016\\u0002\\u0182\\u0181\\u0003\\u0002\\u0002\\u0002\\u0182\\u0183\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0183\\u0186\\u0003\\u0002\\u0002\\u0002\\u0184\\u0187\",\n    \"\\u0007\\u0004\\u0002\\u0002\\u0185\\u0187\\u0005P)\\u0002\\u0186\\u0184\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0186\\u0185\\u0003\\u0002\\u0002\\u0002\\u0187\\'\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0188\\u018a\\u0007\\u001e\\u0002\\u0002\\u0189\\u018b\\u0005\",\n    \"\\u00b2Z\\u0002\\u018a\\u0189\\u0003\\u0002\\u0002\\u0002\\u018a\\u018b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u018b\\u0190\\u0003\\u0002\\u0002\\u0002\\u018c\\u0190\\u0007\",\n    \"|\\u0002\\u0002\\u018d\\u0190\\u0007}\\u0002\\u0002\\u018e\\u0190\\u0007~\\u0002\",\n    \"\\u0002\\u018f\\u0188\\u0003\\u0002\\u0002\\u0002\\u018f\\u018c\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u018f\\u018d\\u0003\\u0002\\u0002\\u0002\\u018f\\u018e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0190)\\u0003\\u0002\\u0002\\u0002\\u0191\\u0192\\u0007\\u001f\\u0002\",\n    \"\\u0002\\u0192\\u0193\\u00054\\u001b\\u0002\\u0193+\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0194\\u019d\\u0007r\\u0002\\u0002\\u0195\\u019d\\u0007w\\u0002\\u0002\\u0196\",\n    \"\\u019d\\u0007t\\u0002\\u0002\\u0197\\u019d\\u0007v\\u0002\\u0002\\u0198\\u019d\",\n    \"\\u0007x\\u0002\\u0002\\u0199\\u019d\\u0005N(\\u0002\\u019a\\u019d\\u0005$\\u0013\",\n    \"\\u0002\\u019b\\u019d\\u0005\\u00b4[\\u0002\\u019c\\u0194\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019c\\u0195\\u0003\\u0002\\u0002\\u0002\\u019c\\u0196\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019c\\u0197\\u0003\\u0002\\u0002\\u0002\\u019c\\u0198\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019c\\u0199\\u0003\\u0002\\u0002\\u0002\\u019c\\u019a\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019c\\u019b\\u0003\\u0002\\u0002\\u0002\\u019d\\u01a0\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019e\\u019c\\u0003\\u0002\\u0002\\u0002\\u019e\\u019f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u019f-\\u0003\\u0002\\u0002\\u0002\\u01a0\\u019e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u01a1\\u01a2\\u0007 \\u0002\\u0002\\u01a2\\u01a3\\u0005\\u00b2Z\\u0002\",\n    \"\\u01a3\\u01a5\\u00058\\u001d\\u0002\\u01a4\\u01a6\\u0007l\\u0002\\u0002\\u01a5\",\n    \"\\u01a4\\u0003\\u0002\\u0002\\u0002\\u01a5\\u01a6\\u0003\\u0002\\u0002\\u0002\\u01a6\",\n    \"\\u01a7\\u0003\\u0002\\u0002\\u0002\\u01a7\\u01a8\\u0007\\u0004\\u0002\\u0002\\u01a8\",\n    \"/\\u0003\\u0002\\u0002\\u0002\\u01a9\\u01aa\\u0005\\u00b2Z\\u0002\\u01aa1\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01ab\\u01ac\\u0007!\\u0002\\u0002\\u01ac\\u01ad\\u0005\",\n    \"\\u00b2Z\\u0002\\u01ad\\u01af\\u0007\\u0010\\u0002\\u0002\\u01ae\\u01b0\\u0005\",\n    \"0\\u0019\\u0002\\u01af\\u01ae\\u0003\\u0002\\u0002\\u0002\\u01af\\u01b0\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01b0\\u01b5\\u0003\\u0002\\u0002\\u0002\\u01b1\\u01b2\\u0007\",\n    \"\\u0011\\u0002\\u0002\\u01b2\\u01b4\\u00050\\u0019\\u0002\\u01b3\\u01b1\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01b4\\u01b7\\u0003\\u0002\\u0002\\u0002\\u01b5\\u01b3\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01b5\\u01b6\\u0003\\u0002\\u0002\\u0002\\u01b6\\u01b8\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01b7\\u01b5\\u0003\\u0002\\u0002\\u0002\\u01b8\\u01b9\\u0007\",\n    \"\\u0012\\u0002\\u0002\\u01b93\\u0003\\u0002\\u0002\\u0002\\u01ba\\u01c3\\u0007\",\n    \"\\u0018\\u0002\\u0002\\u01bb\\u01c0\\u00056\\u001c\\u0002\\u01bc\\u01bd\\u0007\",\n    \"\\u0011\\u0002\\u0002\\u01bd\\u01bf\\u00056\\u001c\\u0002\\u01be\\u01bc\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01bf\\u01c2\\u0003\\u0002\\u0002\\u0002\\u01c0\\u01be\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c0\\u01c1\\u0003\\u0002\\u0002\\u0002\\u01c1\\u01c4\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c2\\u01c0\\u0003\\u0002\\u0002\\u0002\\u01c3\\u01bb\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c3\\u01c4\\u0003\\u0002\\u0002\\u0002\\u01c4\\u01c5\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c5\\u01c6\\u0007\\u0019\\u0002\\u0002\\u01c65\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u01c7\\u01c9\\u0005B\\\"\\u0002\\u01c8\\u01ca\\u0005L\\'\\u0002\",\n    \"\\u01c9\\u01c8\\u0003\\u0002\\u0002\\u0002\\u01c9\\u01ca\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01ca\\u01cc\\u0003\\u0002\\u0002\\u0002\\u01cb\\u01cd\\u0005\\u00b2Z\\u0002\",\n    \"\\u01cc\\u01cb\\u0003\\u0002\\u0002\\u0002\\u01cc\\u01cd\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01cd7\\u0003\\u0002\\u0002\\u0002\\u01ce\\u01d7\\u0007\\u0018\\u0002\\u0002\",\n    \"\\u01cf\\u01d4\\u0005:\\u001e\\u0002\\u01d0\\u01d1\\u0007\\u0011\\u0002\\u0002\",\n    \"\\u01d1\\u01d3\\u0005:\\u001e\\u0002\\u01d2\\u01d0\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d3\\u01d6\\u0003\\u0002\\u0002\\u0002\\u01d4\\u01d2\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d4\\u01d5\\u0003\\u0002\\u0002\\u0002\\u01d5\\u01d8\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d6\\u01d4\\u0003\\u0002\\u0002\\u0002\\u01d7\\u01cf\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d7\\u01d8\\u0003\\u0002\\u0002\\u0002\\u01d8\\u01d9\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01d9\\u01da\\u0007\\u0019\\u0002\\u0002\\u01da9\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u01db\\u01dd\\u0005B\\\"\\u0002\\u01dc\\u01de\\u0007s\\u0002\\u0002\\u01dd\\u01dc\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u01dd\\u01de\\u0003\\u0002\\u0002\\u0002\\u01de\\u01e0\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u01df\\u01e1\\u0005\\u00b2Z\\u0002\\u01e0\\u01df\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u01e0\\u01e1\\u0003\\u0002\\u0002\\u0002\\u01e1;\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u01e2\\u01eb\\u0007\\u0018\\u0002\\u0002\\u01e3\\u01e8\",\n    \"\\u0005> \\u0002\\u01e4\\u01e5\\u0007\\u0011\\u0002\\u0002\\u01e5\\u01e7\\u0005\",\n    \"> \\u0002\\u01e6\\u01e4\\u0003\\u0002\\u0002\\u0002\\u01e7\\u01ea\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01e8\\u01e6\\u0003\\u0002\\u0002\\u0002\\u01e8\\u01e9\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01e9\\u01ec\\u0003\\u0002\\u0002\\u0002\\u01ea\\u01e8\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01eb\\u01e3\\u0003\\u0002\\u0002\\u0002\\u01eb\\u01ec\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01ec\\u01ed\\u0003\\u0002\\u0002\\u0002\\u01ed\\u01ee\\u0007\\u0019\",\n    \"\\u0002\\u0002\\u01ee=\\u0003\\u0002\\u0002\\u0002\\u01ef\\u01f1\\u0005B\\\"\\u0002\",\n    \"\\u01f0\\u01f2\\u0005L\\'\\u0002\\u01f1\\u01f0\\u0003\\u0002\\u0002\\u0002\\u01f1\",\n    \"\\u01f2\\u0003\\u0002\\u0002\\u0002\\u01f2?\\u0003\\u0002\\u0002\\u0002\\u01f3\",\n    \"\\u01f5\\u0005B\\\"\\u0002\\u01f4\\u01f6\\u0005L\\'\\u0002\\u01f5\\u01f4\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01f5\\u01f6\\u0003\\u0002\\u0002\\u0002\\u01f6\\u01f7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u01f7\\u01f8\\u0005\\u00b2Z\\u0002\\u01f8A\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u01f9\\u01fa\\b\\\"\\u0001\\u0002\\u01fa\\u0201\\u0005v<\\u0002\\u01fb\\u0201\",\n    \"\\u0005D#\\u0002\\u01fc\\u0201\\u0005H%\\u0002\\u01fd\\u0201\\u0005J&\\u0002\\u01fe\",\n    \"\\u01ff\\u0007$\\u0002\\u0002\\u01ff\\u0201\\u0007u\\u0002\\u0002\\u0200\\u01f9\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0200\\u01fb\\u0003\\u0002\\u0002\\u0002\\u0200\\u01fc\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0200\\u01fd\\u0003\\u0002\\u0002\\u0002\\u0200\\u01fe\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0201\\u020a\\u0003\\u0002\\u0002\\u0002\\u0202\\u0203\",\n    \"\\f\\u0005\\u0002\\u0002\\u0203\\u0205\\u0007\\\"\\u0002\\u0002\\u0204\\u0206\\u0005\",\n    \"x=\\u0002\\u0205\\u0204\\u0003\\u0002\\u0002\\u0002\\u0205\\u0206\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0206\\u0207\\u0003\\u0002\\u0002\\u0002\\u0207\\u0209\\u0007#\",\n    \"\\u0002\\u0002\\u0208\\u0202\\u0003\\u0002\\u0002\\u0002\\u0209\\u020c\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u020a\\u0208\\u0003\\u0002\\u0002\\u0002\\u020a\\u020b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u020bC\\u0003\\u0002\\u0002\\u0002\\u020c\\u020a\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u020d\\u0212\\u0005\\u00b2Z\\u0002\\u020e\\u020f\\u0007%\\u0002\",\n    \"\\u0002\\u020f\\u0211\\u0005\\u00b2Z\\u0002\\u0210\\u020e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0211\\u0214\\u0003\\u0002\\u0002\\u0002\\u0212\\u0210\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0212\\u0213\\u0003\\u0002\\u0002\\u0002\\u0213E\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0214\\u0212\\u0003\\u0002\\u0002\\u0002\\u0215\\u0218\\u0005v<\\u0002\",\n    \"\\u0216\\u0218\\u0005D#\\u0002\\u0217\\u0215\\u0003\\u0002\\u0002\\u0002\\u0217\",\n    \"\\u0216\\u0003\\u0002\\u0002\\u0002\\u0218G\\u0003\\u0002\\u0002\\u0002\\u0219\",\n    \"\\u021a\\u0007&\\u0002\\u0002\\u021a\\u021b\\u0007\\u0018\\u0002\\u0002\\u021b\",\n    \"\\u021c\\u0005F$\\u0002\\u021c\\u021d\\u0007\\'\\u0002\\u0002\\u021d\\u021e\\u0005\",\n    \"B\\\"\\u0002\\u021e\\u021f\\u0007\\u0019\\u0002\\u0002\\u021fI\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0220\\u0221\\u0007\\u001e\\u0002\\u0002\\u0221\\u0227\\u0005<\\u001f\",\n    \"\\u0002\\u0222\\u0226\\u0007t\\u0002\\u0002\\u0223\\u0226\\u0007r\\u0002\\u0002\",\n    \"\\u0224\\u0226\\u0005N(\\u0002\\u0225\\u0222\\u0003\\u0002\\u0002\\u0002\\u0225\",\n    \"\\u0223\\u0003\\u0002\\u0002\\u0002\\u0225\\u0224\\u0003\\u0002\\u0002\\u0002\\u0226\",\n    \"\\u0229\\u0003\\u0002\\u0002\\u0002\\u0227\\u0225\\u0003\\u0002\\u0002\\u0002\\u0227\",\n    \"\\u0228\\u0003\\u0002\\u0002\\u0002\\u0228\\u022c\\u0003\\u0002\\u0002\\u0002\\u0229\",\n    \"\\u0227\\u0003\\u0002\\u0002\\u0002\\u022a\\u022b\\u0007\\u001f\\u0002\\u0002\\u022b\",\n    \"\\u022d\\u0005<\\u001f\\u0002\\u022c\\u022a\\u0003\\u0002\\u0002\\u0002\\u022c\",\n    \"\\u022d\\u0003\\u0002\\u0002\\u0002\\u022dK\\u0003\\u0002\\u0002\\u0002\\u022e\",\n    \"\\u022f\\t\\u0004\\u0002\\u0002\\u022fM\\u0003\\u0002\\u0002\\u0002\\u0230\\u0231\",\n    \"\\t\\u0005\\u0002\\u0002\\u0231O\\u0003\\u0002\\u0002\\u0002\\u0232\\u0236\\u0007\",\n    \"\\u0010\\u0002\\u0002\\u0233\\u0235\\u0005R*\\u0002\\u0234\\u0233\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0235\\u0238\\u0003\\u0002\\u0002\\u0002\\u0236\\u0234\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0236\\u0237\\u0003\\u0002\\u0002\\u0002\\u0237\\u0239\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0238\\u0236\\u0003\\u0002\\u0002\\u0002\\u0239\\u023a\\u0007\\u0012\",\n    \"\\u0002\\u0002\\u023aQ\\u0003\\u0002\\u0002\\u0002\\u023b\\u0249\\u0005V,\\u0002\",\n    \"\\u023c\\u0249\\u0005X-\\u0002\\u023d\\u0249\\u0005\\\\/\\u0002\\u023e\\u0249\\u0005\",\n    \"`1\\u0002\\u023f\\u0249\\u0005P)\\u0002\\u0240\\u0249\\u0005b2\\u0002\\u0241\\u0249\",\n    \"\\u0005d3\\u0002\\u0242\\u0249\\u0005f4\\u0002\\u0243\\u0249\\u0005h5\\u0002\\u0244\",\n    \"\\u0249\\u0005j6\\u0002\\u0245\\u0249\\u0005l7\\u0002\\u0246\\u0249\\u0005n8\\u0002\",\n    \"\\u0247\\u0249\\u0005^0\\u0002\\u0248\\u023b\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u023c\\u0003\\u0002\\u0002\\u0002\\u0248\\u023d\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u023e\\u0003\\u0002\\u0002\\u0002\\u0248\\u023f\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u0240\\u0003\\u0002\\u0002\\u0002\\u0248\\u0241\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u0242\\u0003\\u0002\\u0002\\u0002\\u0248\\u0243\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u0244\\u0003\\u0002\\u0002\\u0002\\u0248\\u0245\\u0003\\u0002\\u0002\\u0002\\u0248\",\n    \"\\u0246\\u0003\\u0002\\u0002\\u0002\\u0248\\u0247\\u0003\\u0002\\u0002\\u0002\\u0249\",\n    \"S\\u0003\\u0002\\u0002\\u0002\\u024a\\u024b\\u0005x=\\u0002\\u024b\\u024c\\u0007\",\n    \"\\u0004\\u0002\\u0002\\u024cU\\u0003\\u0002\\u0002\\u0002\\u024d\\u024e\\u0007\",\n    \"+\\u0002\\u0002\\u024e\\u024f\\u0007\\u0018\\u0002\\u0002\\u024f\\u0250\\u0005\",\n    \"x=\\u0002\\u0250\\u0251\\u0007\\u0019\\u0002\\u0002\\u0251\\u0254\\u0005R*\\u0002\",\n    \"\\u0252\\u0253\\u0007,\\u0002\\u0002\\u0253\\u0255\\u0005R*\\u0002\\u0254\\u0252\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0254\\u0255\\u0003\\u0002\\u0002\\u0002\\u0255W\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0256\\u0257\\u0007-\\u0002\\u0002\\u0257\\u0259\",\n    \"\\u0005x=\\u0002\\u0258\\u025a\\u0005*\\u0016\\u0002\\u0259\\u0258\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0259\\u025a\\u0003\\u0002\\u0002\\u0002\\u025a\\u025b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u025b\\u025d\\u0005P)\\u0002\\u025c\\u025e\\u0005Z.\\u0002\\u025d\",\n    \"\\u025c\\u0003\\u0002\\u0002\\u0002\\u025e\\u025f\\u0003\\u0002\\u0002\\u0002\\u025f\",\n    \"\\u025d\\u0003\\u0002\\u0002\\u0002\\u025f\\u0260\\u0003\\u0002\\u0002\\u0002\\u0260\",\n    \"Y\\u0003\\u0002\\u0002\\u0002\\u0261\\u0266\\u0007.\\u0002\\u0002\\u0262\\u0264\",\n    \"\\u0005\\u00b2Z\\u0002\\u0263\\u0262\\u0003\\u0002\\u0002\\u0002\\u0263\\u0264\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0264\\u0265\\u0003\\u0002\\u0002\\u0002\\u0265\\u0267\",\n    \"\\u00054\\u001b\\u0002\\u0266\\u0263\\u0003\\u0002\\u0002\\u0002\\u0266\\u0267\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0267\\u0268\\u0003\\u0002\\u0002\\u0002\\u0268\\u0269\",\n    \"\\u0005P)\\u0002\\u0269[\\u0003\\u0002\\u0002\\u0002\\u026a\\u026b\\u0007/\\u0002\",\n    \"\\u0002\\u026b\\u026c\\u0007\\u0018\\u0002\\u0002\\u026c\\u026d\\u0005x=\\u0002\",\n    \"\\u026d\\u026e\\u0007\\u0019\\u0002\\u0002\\u026e\\u026f\\u0005R*\\u0002\\u026f\",\n    \"]\\u0003\\u0002\\u0002\\u0002\\u0270\\u0273\\u0005p9\\u0002\\u0271\\u0273\\u0005\",\n    \"T+\\u0002\\u0272\\u0270\\u0003\\u0002\\u0002\\u0002\\u0272\\u0271\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0273_\\u0003\\u0002\\u0002\\u0002\\u0274\\u0275\\u0007\\u001b\",\n    \"\\u0002\\u0002\\u0275\\u0278\\u0007\\u0018\\u0002\\u0002\\u0276\\u0279\\u0005^\",\n    \"0\\u0002\\u0277\\u0279\\u0007\\u0004\\u0002\\u0002\\u0278\\u0276\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0278\\u0277\\u0003\\u0002\\u0002\\u0002\\u0279\\u027c\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u027a\\u027d\\u0005T+\\u0002\\u027b\\u027d\\u0007\\u0004\\u0002\",\n    \"\\u0002\\u027c\\u027a\\u0003\\u0002\\u0002\\u0002\\u027c\\u027b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u027d\\u027f\\u0003\\u0002\\u0002\\u0002\\u027e\\u0280\\u0005x=\\u0002\",\n    \"\\u027f\\u027e\\u0003\\u0002\\u0002\\u0002\\u027f\\u0280\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0280\\u0281\\u0003\\u0002\\u0002\\u0002\\u0281\\u0282\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u0282\\u0283\\u0005R*\\u0002\\u0283a\\u0003\\u0002\\u0002\\u0002\\u0284\\u0286\",\n    \"\\u00070\\u0002\\u0002\\u0285\\u0287\\u0007\\u0080\\u0002\\u0002\\u0286\\u0285\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0286\\u0287\\u0003\\u0002\\u0002\\u0002\\u0287\\u0288\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0288\\u0289\\u0005\\u0086D\\u0002\\u0289c\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u028a\\u028b\\u00071\\u0002\\u0002\\u028b\\u028c\\u0005\",\n    \"R*\\u0002\\u028c\\u028d\\u0007/\\u0002\\u0002\\u028d\\u028e\\u0007\\u0018\\u0002\",\n    \"\\u0002\\u028e\\u028f\\u0005x=\\u0002\\u028f\\u0290\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u0290\\u0291\\u0007\\u0004\\u0002\\u0002\\u0291e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0292\\u0293\\u0007p\\u0002\\u0002\\u0293\\u0294\\u0007\\u0004\\u0002\\u0002\",\n    \"\\u0294g\\u0003\\u0002\\u0002\\u0002\\u0295\\u0296\\u0007m\\u0002\\u0002\\u0296\",\n    \"\\u0297\\u0007\\u0004\\u0002\\u0002\\u0297i\\u0003\\u0002\\u0002\\u0002\\u0298\",\n    \"\\u029a\\u00072\\u0002\\u0002\\u0299\\u029b\\u0005x=\\u0002\\u029a\\u0299\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u029a\\u029b\\u0003\\u0002\\u0002\\u0002\\u029b\\u029c\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u029c\\u029d\\u0007\\u0004\\u0002\\u0002\\u029dk\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u029e\\u029f\\u00073\\u0002\\u0002\\u029f\\u02a0\\u0007\",\n    \"\\u0004\\u0002\\u0002\\u02a0m\\u0003\\u0002\\u0002\\u0002\\u02a1\\u02a2\\u0007\",\n    \"4\\u0002\\u0002\\u02a2\\u02a3\\u0005\\u0084C\\u0002\\u02a3\\u02a4\\u0007\\u0004\",\n    \"\\u0002\\u0002\\u02a4o\\u0003\\u0002\\u0002\\u0002\\u02a5\\u02a6\\u00075\\u0002\",\n    \"\\u0002\\u02a6\\u02ad\\u0005t;\\u0002\\u02a7\\u02ad\\u0005@!\\u0002\\u02a8\\u02a9\",\n    \"\\u0007\\u0018\\u0002\\u0002\\u02a9\\u02aa\\u0005r:\\u0002\\u02aa\\u02ab\\u0007\",\n    \"\\u0019\\u0002\\u0002\\u02ab\\u02ad\\u0003\\u0002\\u0002\\u0002\\u02ac\\u02a5\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u02ac\\u02a7\\u0003\\u0002\\u0002\\u0002\\u02ac\\u02a8\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u02ad\\u02b0\\u0003\\u0002\\u0002\\u0002\\u02ae\\u02af\\u0007\",\n    \"\\u000b\\u0002\\u0002\\u02af\\u02b1\\u0005x=\\u0002\\u02b0\\u02ae\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u02b0\\u02b1\\u0003\\u0002\\u0002\\u0002\\u02b1\\u02b2\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u02b2\\u02b3\\u0007\\u0004\\u0002\\u0002\\u02b3q\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u02b4\\u02b6\\u0005@!\\u0002\\u02b5\\u02b4\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u02b5\\u02b6\\u0003\\u0002\\u0002\\u0002\\u02b6\\u02bd\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u02b7\\u02b9\\u0007\\u0011\\u0002\\u0002\\u02b8\\u02ba\\u0005@!\\u0002\",\n    \"\\u02b9\\u02b8\\u0003\\u0002\\u0002\\u0002\\u02b9\\u02ba\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02ba\\u02bc\\u0003\\u0002\\u0002\\u0002\\u02bb\\u02b7\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02bc\\u02bf\\u0003\\u0002\\u0002\\u0002\\u02bd\\u02bb\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02bd\\u02be\\u0003\\u0002\\u0002\\u0002\\u02bes\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02bf\\u02bd\\u0003\\u0002\\u0002\\u0002\\u02c0\\u02c7\\u0007\\u0018\\u0002\\u0002\",\n    \"\\u02c1\\u02c3\\u0005\\u00b2Z\\u0002\\u02c2\\u02c1\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02c2\\u02c3\\u0003\\u0002\\u0002\\u0002\\u02c3\\u02c4\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02c4\\u02c6\\u0007\\u0011\\u0002\\u0002\\u02c5\\u02c2\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02c6\\u02c9\\u0003\\u0002\\u0002\\u0002\\u02c7\\u02c5\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02c7\\u02c8\\u0003\\u0002\\u0002\\u0002\\u02c8\\u02cb\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02c9\\u02c7\\u0003\\u0002\\u0002\\u0002\\u02ca\\u02cc\\u0005\\u00b2Z\\u0002\",\n    \"\\u02cb\\u02ca\\u0003\\u0002\\u0002\\u0002\\u02cb\\u02cc\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02cc\\u02cd\\u0003\\u0002\\u0002\\u0002\\u02cd\\u02ce\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u02ceu\\u0003\\u0002\\u0002\\u0002\\u02cf\\u02d0\\t\\u0006\\u0002\\u0002\\u02d0\",\n    \"w\\u0003\\u0002\\u0002\\u0002\\u02d1\\u02d2\\b=\\u0001\\u0002\\u02d2\\u02d3\\u0007\",\n    \";\\u0002\\u0002\\u02d3\\u02e4\\u0005B\\\"\\u0002\\u02d4\\u02d5\\u0007\\u0018\\u0002\",\n    \"\\u0002\\u02d5\\u02d6\\u0005x=\\u0002\\u02d6\\u02d7\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u02d7\\u02e4\\u0003\\u0002\\u0002\\u0002\\u02d8\\u02d9\\t\\u0007\\u0002\\u0002\",\n    \"\\u02d9\\u02e4\\u0005x=\\u0015\\u02da\\u02db\\t\\b\\u0002\\u0002\\u02db\\u02e4\\u0005\",\n    \"x=\\u0014\\u02dc\\u02dd\\t\\t\\u0002\\u0002\\u02dd\\u02e4\\u0005x=\\u0013\\u02de\",\n    \"\\u02df\\u0007A\\u0002\\u0002\\u02df\\u02e4\\u0005x=\\u0012\\u02e0\\u02e1\\u0007\",\n    \"\\u0006\\u0002\\u0002\\u02e1\\u02e4\\u0005x=\\u0011\\u02e2\\u02e4\\u0005z>\\u0002\",\n    \"\\u02e3\\u02d1\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02d4\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02e3\\u02d8\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02da\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02e3\\u02dc\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02de\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02e3\\u02e0\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02e2\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u02e4\\u0330\\u0003\\u0002\\u0002\\u0002\\u02e5\\u02e6\\f\\u0010\\u0002\\u0002\",\n    \"\\u02e6\\u02e7\\u0007B\\u0002\\u0002\\u02e7\\u032f\\u0005x=\\u0011\\u02e8\\u02e9\",\n    \"\\f\\u000f\\u0002\\u0002\\u02e9\\u02ea\\t\\n\\u0002\\u0002\\u02ea\\u032f\\u0005x\",\n    \"=\\u0010\\u02eb\\u02ec\\f\\u000e\\u0002\\u0002\\u02ec\\u02ed\\t\\b\\u0002\\u0002\",\n    \"\\u02ed\\u032f\\u0005x=\\u000f\\u02ee\\u02ef\\f\\r\\u0002\\u0002\\u02ef\\u02f0\\t\",\n    \"\\u000b\\u0002\\u0002\\u02f0\\u032f\\u0005x=\\u000e\\u02f1\\u02f2\\f\\f\\u0002\\u0002\",\n    \"\\u02f2\\u02f3\\u0007G\\u0002\\u0002\\u02f3\\u032f\\u0005x=\\r\\u02f4\\u02f5\\f\",\n    \"\\u000b\\u0002\\u0002\\u02f5\\u02f6\\u0007\\u0005\\u0002\\u0002\\u02f6\\u032f\\u0005\",\n    \"x=\\f\\u02f7\\u02f8\\f\\n\\u0002\\u0002\\u02f8\\u02f9\\u0007H\\u0002\\u0002\\u02f9\",\n    \"\\u032f\\u0005x=\\u000b\\u02fa\\u02fb\\f\\t\\u0002\\u0002\\u02fb\\u02fc\\t\\f\\u0002\",\n    \"\\u0002\\u02fc\\u032f\\u0005x=\\n\\u02fd\\u02fe\\f\\b\\u0002\\u0002\\u02fe\\u02ff\",\n    \"\\t\\r\\u0002\\u0002\\u02ff\\u032f\\u0005x=\\t\\u0300\\u0301\\f\\u0007\\u0002\\u0002\",\n    \"\\u0301\\u0302\\u0007K\\u0002\\u0002\\u0302\\u032f\\u0005x=\\b\\u0303\\u0304\\f\",\n    \"\\u0006\\u0002\\u0002\\u0304\\u0305\\u0007L\\u0002\\u0002\\u0305\\u032f\\u0005\",\n    \"x=\\u0007\\u0306\\u0307\\f\\u0005\\u0002\\u0002\\u0307\\u0308\\u0007M\\u0002\\u0002\",\n    \"\\u0308\\u0309\\u0005x=\\u0002\\u0309\\u030a\\u0007<\\u0002\\u0002\\u030a\\u030b\",\n    \"\\u0005x=\\u0006\\u030b\\u032f\\u0003\\u0002\\u0002\\u0002\\u030c\\u030d\\f\\u0004\",\n    \"\\u0002\\u0002\\u030d\\u030e\\t\\u000e\\u0002\\u0002\\u030e\\u032f\\u0005x=\\u0005\",\n    \"\\u030f\\u0310\\f\\u001d\\u0002\\u0002\\u0310\\u032f\\t\\u0007\\u0002\\u0002\\u0311\",\n    \"\\u0312\\f\\u001b\\u0002\\u0002\\u0312\\u0314\\u0007\\\"\\u0002\\u0002\\u0313\\u0315\",\n    \"\\u0005x=\\u0002\\u0314\\u0313\\u0003\\u0002\\u0002\\u0002\\u0314\\u0315\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0315\\u0316\\u0003\\u0002\\u0002\\u0002\\u0316\\u032f\\u0007\",\n    \"#\\u0002\\u0002\\u0317\\u0318\\f\\u001a\\u0002\\u0002\\u0318\\u031a\\u0007\\\"\\u0002\",\n    \"\\u0002\\u0319\\u031b\\u0005x=\\u0002\\u031a\\u0319\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u031a\\u031b\\u0003\\u0002\\u0002\\u0002\\u031b\\u031c\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u031c\\u031e\\u0007<\\u0002\\u0002\\u031d\\u031f\\u0005x=\\u0002\\u031e\\u031d\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u031e\\u031f\\u0003\\u0002\\u0002\\u0002\\u031f\\u0320\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0320\\u032f\\u0007#\\u0002\\u0002\\u0321\\u0322\",\n    \"\\f\\u0019\\u0002\\u0002\\u0322\\u0323\\u0007%\\u0002\\u0002\\u0323\\u032f\\u0005\",\n    \"\\u00b2Z\\u0002\\u0324\\u0325\\f\\u0018\\u0002\\u0002\\u0325\\u0326\\u0007\\u0010\",\n    \"\\u0002\\u0002\\u0326\\u0327\\u0005~@\\u0002\\u0327\\u0328\\u0007\\u0012\\u0002\",\n    \"\\u0002\\u0328\\u032f\\u0003\\u0002\\u0002\\u0002\\u0329\\u032a\\f\\u0017\\u0002\",\n    \"\\u0002\\u032a\\u032b\\u0007\\u0018\\u0002\\u0002\\u032b\\u032c\\u0005\\u0082B\",\n    \"\\u0002\\u032c\\u032d\\u0007\\u0019\\u0002\\u0002\\u032d\\u032f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u02e5\\u0003\\u0002\\u0002\\u0002\\u032e\\u02e8\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u02eb\\u0003\\u0002\\u0002\\u0002\\u032e\\u02ee\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u02f1\\u0003\\u0002\\u0002\\u0002\\u032e\\u02f4\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u02f7\\u0003\\u0002\\u0002\\u0002\\u032e\\u02fa\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u02fd\\u0003\\u0002\\u0002\\u0002\\u032e\\u0300\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u0303\\u0003\\u0002\\u0002\\u0002\\u032e\\u0306\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u030c\\u0003\\u0002\\u0002\\u0002\\u032e\\u030f\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u0311\\u0003\\u0002\\u0002\\u0002\\u032e\\u0317\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u0321\\u0003\\u0002\\u0002\\u0002\\u032e\\u0324\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u032e\\u0329\\u0003\\u0002\\u0002\\u0002\\u032f\\u0332\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0330\\u032e\\u0003\\u0002\\u0002\\u0002\\u0330\\u0331\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0331y\\u0003\\u0002\\u0002\\u0002\\u0332\\u0330\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0333\\u0345\\u0007f\\u0002\\u0002\\u0334\\u0345\\u0005\\u00b0Y\\u0002\",\n    \"\\u0335\\u0345\\u0007j\\u0002\\u0002\\u0336\\u0345\\u0005\\u00b6\\\\\\u0002\\u0337\",\n    \"\\u033a\\u0005\\u00b2Z\\u0002\\u0338\\u0339\\u0007\\\"\\u0002\\u0002\\u0339\\u033b\",\n    \"\\u0007#\\u0002\\u0002\\u033a\\u0338\\u0003\\u0002\\u0002\\u0002\\u033a\\u033b\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u033b\\u0345\\u0003\\u0002\\u0002\\u0002\\u033c\\u0345\",\n    \"\\u0007z\\u0002\\u0002\\u033d\\u0345\\u0007u\\u0002\\u0002\\u033e\\u0345\\u0005\",\n    \"\\u00acW\\u0002\\u033f\\u0342\\u0005\\u00aeX\\u0002\\u0340\\u0341\\u0007\\\"\\u0002\",\n    \"\\u0002\\u0341\\u0343\\u0007#\\u0002\\u0002\\u0342\\u0340\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0342\\u0343\\u0003\\u0002\\u0002\\u0002\\u0343\\u0345\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0344\\u0333\\u0003\\u0002\\u0002\\u0002\\u0344\\u0334\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0344\\u0335\\u0003\\u0002\\u0002\\u0002\\u0344\\u0336\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0344\\u0337\\u0003\\u0002\\u0002\\u0002\\u0344\\u033c\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0344\\u033d\\u0003\\u0002\\u0002\\u0002\\u0344\\u033e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0344\\u033f\\u0003\\u0002\\u0002\\u0002\\u0345{\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0346\\u034b\\u0005x=\\u0002\\u0347\\u0348\\u0007\\u0011\\u0002\\u0002\",\n    \"\\u0348\\u034a\\u0005x=\\u0002\\u0349\\u0347\\u0003\\u0002\\u0002\\u0002\\u034a\",\n    \"\\u034d\\u0003\\u0002\\u0002\\u0002\\u034b\\u0349\\u0003\\u0002\\u0002\\u0002\\u034b\",\n    \"\\u034c\\u0003\\u0002\\u0002\\u0002\\u034c}\\u0003\\u0002\\u0002\\u0002\\u034d\",\n    \"\\u034b\\u0003\\u0002\\u0002\\u0002\\u034e\\u0353\\u0005\\u0080A\\u0002\\u034f\",\n    \"\\u0350\\u0007\\u0011\\u0002\\u0002\\u0350\\u0352\\u0005\\u0080A\\u0002\\u0351\",\n    \"\\u034f\\u0003\\u0002\\u0002\\u0002\\u0352\\u0355\\u0003\\u0002\\u0002\\u0002\\u0353\",\n    \"\\u0351\\u0003\\u0002\\u0002\\u0002\\u0353\\u0354\\u0003\\u0002\\u0002\\u0002\\u0354\",\n    \"\\u0357\\u0003\\u0002\\u0002\\u0002\\u0355\\u0353\\u0003\\u0002\\u0002\\u0002\\u0356\",\n    \"\\u0358\\u0007\\u0011\\u0002\\u0002\\u0357\\u0356\\u0003\\u0002\\u0002\\u0002\\u0357\",\n    \"\\u0358\\u0003\\u0002\\u0002\\u0002\\u0358\\u007f\\u0003\\u0002\\u0002\\u0002\\u0359\",\n    \"\\u035a\\u0005\\u00b2Z\\u0002\\u035a\\u035b\\u0007<\\u0002\\u0002\\u035b\\u035c\",\n    \"\\u0005x=\\u0002\\u035c\\u0081\\u0003\\u0002\\u0002\\u0002\\u035d\\u035f\\u0007\",\n    \"\\u0010\\u0002\\u0002\\u035e\\u0360\\u0005~@\\u0002\\u035f\\u035e\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u035f\\u0360\\u0003\\u0002\\u0002\\u0002\\u0360\\u0361\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0361\\u0366\\u0007\\u0012\\u0002\\u0002\\u0362\\u0364\\u0005|\",\n    \"?\\u0002\\u0363\\u0362\\u0003\\u0002\\u0002\\u0002\\u0363\\u0364\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0364\\u0366\\u0003\\u0002\\u0002\\u0002\\u0365\\u035d\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0365\\u0363\\u0003\\u0002\\u0002\\u0002\\u0366\\u0083\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0367\\u0368\\u0005x=\\u0002\\u0368\\u0369\\u0007\\u0018\\u0002\",\n    \"\\u0002\\u0369\\u036a\\u0005\\u0082B\\u0002\\u036a\\u036b\\u0007\\u0019\\u0002\",\n    \"\\u0002\\u036b\\u0085\\u0003\\u0002\\u0002\\u0002\\u036c\\u0370\\u0007\\u0010\\u0002\",\n    \"\\u0002\\u036d\\u036f\\u0005\\u0088E\\u0002\\u036e\\u036d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u036f\\u0372\\u0003\\u0002\\u0002\\u0002\\u0370\\u036e\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0370\\u0371\\u0003\\u0002\\u0002\\u0002\\u0371\\u0373\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0372\\u0370\\u0003\\u0002\\u0002\\u0002\\u0373\\u0374\\u0007\\u0012\\u0002\",\n    \"\\u0002\\u0374\\u0087\\u0003\\u0002\\u0002\\u0002\\u0375\\u0388\\u0005\\u00b2Z\",\n    \"\\u0002\\u0376\\u0388\\u0005\\u0086D\\u0002\\u0377\\u0388\\u0005\\u008aF\\u0002\",\n    \"\\u0378\\u0388\\u0005\\u0090I\\u0002\\u0379\\u0388\\u0005\\u0092J\\u0002\\u037a\",\n    \"\\u0388\\u0005\\u0098M\\u0002\\u037b\\u0388\\u0005\\u009aN\\u0002\\u037c\\u0388\",\n    \"\\u0005\\u009cO\\u0002\\u037d\\u0388\\u0005\\u00a0Q\\u0002\\u037e\\u0388\\u0005\",\n    \"\\u00a4S\\u0002\\u037f\\u0388\\u0005\\u00a6T\\u0002\\u0380\\u0388\\u0007m\\u0002\",\n    \"\\u0002\\u0381\\u0388\\u0007p\\u0002\\u0002\\u0382\\u0388\\u0007q\\u0002\\u0002\",\n    \"\\u0383\\u0388\\u0005\\u00aaV\\u0002\\u0384\\u0388\\u0005\\u00b0Y\\u0002\\u0385\",\n    \"\\u0388\\u0005\\u00b6\\\\\\u0002\\u0386\\u0388\\u0007j\\u0002\\u0002\\u0387\\u0375\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0376\\u0003\\u0002\\u0002\\u0002\\u0387\\u0377\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0378\\u0003\\u0002\\u0002\\u0002\\u0387\\u0379\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u037a\\u0003\\u0002\\u0002\\u0002\\u0387\\u037b\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u037c\\u0003\\u0002\\u0002\\u0002\\u0387\\u037d\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u037e\\u0003\\u0002\\u0002\\u0002\\u0387\\u037f\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0380\\u0003\\u0002\\u0002\\u0002\\u0387\\u0381\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0382\\u0003\\u0002\\u0002\\u0002\\u0387\\u0383\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0384\\u0003\\u0002\\u0002\\u0002\\u0387\\u0385\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0387\\u0386\\u0003\\u0002\\u0002\\u0002\\u0388\\u0089\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0389\\u038d\\u0005\\u008eH\\u0002\\u038a\\u038d\",\n    \"\\u0005\\u00a8U\\u0002\\u038b\\u038d\\u0005\\u008cG\\u0002\\u038c\\u0389\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u038c\\u038a\\u0003\\u0002\\u0002\\u0002\\u038c\\u038b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u038d\\u008b\\u0003\\u0002\\u0002\\u0002\\u038e\\u038f\\u0005\",\n    \"\\u00b2Z\\u0002\\u038f\\u0390\\u0007%\\u0002\\u0002\\u0390\\u0391\\u0005\\u00b2\",\n    \"Z\\u0002\\u0391\\u008d\\u0003\\u0002\\u0002\\u0002\\u0392\\u0397\\u00072\\u0002\",\n    \"\\u0002\\u0393\\u0397\\u0007$\\u0002\\u0002\\u0394\\u0397\\u00078\\u0002\\u0002\",\n    \"\\u0395\\u0397\\u0005\\u00b2Z\\u0002\\u0396\\u0392\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0396\\u0393\\u0003\\u0002\\u0002\\u0002\\u0396\\u0394\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0396\\u0395\\u0003\\u0002\\u0002\\u0002\\u0397\\u03a4\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0398\\u039a\\u0007\\u0018\\u0002\\u0002\\u0399\\u039b\\u0005\\u008aF\\u0002\",\n    \"\\u039a\\u0399\\u0003\\u0002\\u0002\\u0002\\u039a\\u039b\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u039b\\u03a0\\u0003\\u0002\\u0002\\u0002\\u039c\\u039d\\u0007\\u0011\\u0002\\u0002\",\n    \"\\u039d\\u039f\\u0005\\u008aF\\u0002\\u039e\\u039c\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u039f\\u03a2\\u0003\\u0002\\u0002\\u0002\\u03a0\\u039e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03a0\\u03a1\\u0003\\u0002\\u0002\\u0002\\u03a1\\u03a3\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03a2\\u03a0\\u0003\\u0002\\u0002\\u0002\\u03a3\\u03a5\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u03a4\\u0398\\u0003\\u0002\\u0002\\u0002\\u03a4\\u03a5\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03a5\\u008f\\u0003\\u0002\\u0002\\u0002\\u03a6\\u03a7\\u0007X\\u0002\\u0002\",\n    \"\\u03a7\\u03aa\\u0005\\u0094K\\u0002\\u03a8\\u03a9\\u0007Y\\u0002\\u0002\\u03a9\",\n    \"\\u03ab\\u0005\\u008aF\\u0002\\u03aa\\u03a8\\u0003\\u0002\\u0002\\u0002\\u03aa\",\n    \"\\u03ab\\u0003\\u0002\\u0002\\u0002\\u03ab\\u0091\\u0003\\u0002\\u0002\\u0002\\u03ac\",\n    \"\\u03ad\\u0005\\u0094K\\u0002\\u03ad\\u03ae\\u0007Y\\u0002\\u0002\\u03ae\\u03af\",\n    \"\\u0005\\u008aF\\u0002\\u03af\\u0093\\u0003\\u0002\\u0002\\u0002\\u03b0\\u03b7\",\n    \"\\u0005\\u00b2Z\\u0002\\u03b1\\u03b7\\u0005\\u008cG\\u0002\\u03b2\\u03b3\\u0007\",\n    \"\\u0018\\u0002\\u0002\\u03b3\\u03b4\\u0005\\u0096L\\u0002\\u03b4\\u03b5\\u0007\",\n    \"\\u0019\\u0002\\u0002\\u03b5\\u03b7\\u0003\\u0002\\u0002\\u0002\\u03b6\\u03b0\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03b6\\u03b1\\u0003\\u0002\\u0002\\u0002\\u03b6\\u03b2\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03b7\\u0095\\u0003\\u0002\\u0002\\u0002\\u03b8\\u03bd\\u0005\",\n    \"\\u00b2Z\\u0002\\u03b9\\u03ba\\u0007\\u0011\\u0002\\u0002\\u03ba\\u03bc\\u0005\",\n    \"\\u00b2Z\\u0002\\u03bb\\u03b9\\u0003\\u0002\\u0002\\u0002\\u03bc\\u03bf\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03bd\\u03bb\\u0003\\u0002\\u0002\\u0002\\u03bd\\u03be\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03be\\u0097\\u0003\\u0002\\u0002\\u0002\\u03bf\\u03bd\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03c0\\u03c1\\u0007Z\\u0002\\u0002\\u03c1\\u03c2\\u0005\",\n    \"\\u00b2Z\\u0002\\u03c2\\u0099\\u0003\\u0002\\u0002\\u0002\\u03c3\\u03c4\\u0005\",\n    \"\\u00b2Z\\u0002\\u03c4\\u03c5\\u0007<\\u0002\\u0002\\u03c5\\u009b\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u03c6\\u03c7\\u0007[\\u0002\\u0002\\u03c7\\u03cb\\u0005\\u008a\",\n    \"F\\u0002\\u03c8\\u03ca\\u0005\\u009eP\\u0002\\u03c9\\u03c8\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u03ca\\u03cd\\u0003\\u0002\\u0002\\u0002\\u03cb\\u03c9\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u03cb\\u03cc\\u0003\\u0002\\u0002\\u0002\\u03cc\\u009d\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u03cd\\u03cb\\u0003\\u0002\\u0002\\u0002\\u03ce\\u03cf\\u0007\\\\\\u0002\",\n    \"\\u0002\\u03cf\\u03d0\\u0005\\u00a8U\\u0002\\u03d0\\u03d1\\u0005\\u0086D\\u0002\",\n    \"\\u03d1\\u03d5\\u0003\\u0002\\u0002\\u0002\\u03d2\\u03d3\\u0007]\\u0002\\u0002\",\n    \"\\u03d3\\u03d5\\u0005\\u0086D\\u0002\\u03d4\\u03ce\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03d4\\u03d2\\u0003\\u0002\\u0002\\u0002\\u03d5\\u009f\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03d6\\u03d7\\u0007\\u001e\\u0002\\u0002\\u03d7\\u03d8\\u0005\\u00b2Z\\u0002\",\n    \"\\u03d8\\u03da\\u0007\\u0018\\u0002\\u0002\\u03d9\\u03db\\u0005\\u0096L\\u0002\",\n    \"\\u03da\\u03d9\\u0003\\u0002\\u0002\\u0002\\u03da\\u03db\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03db\\u03dc\\u0003\\u0002\\u0002\\u0002\\u03dc\\u03de\\u0007\\u0019\\u0002\\u0002\",\n    \"\\u03dd\\u03df\\u0005\\u00a2R\\u0002\\u03de\\u03dd\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03de\\u03df\\u0003\\u0002\\u0002\\u0002\\u03df\\u03e0\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03e0\\u03e1\\u0005\\u0086D\\u0002\\u03e1\\u00a1\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03e2\\u03e3\\u0007^\\u0002\\u0002\\u03e3\\u03e4\\u0005\\u0096L\\u0002\\u03e4\",\n    \"\\u00a3\\u0003\\u0002\\u0002\\u0002\\u03e5\\u03e8\\u0007\\u001b\\u0002\\u0002\\u03e6\",\n    \"\\u03e9\\u0005\\u0086D\\u0002\\u03e7\\u03e9\\u0005\\u008aF\\u0002\\u03e8\\u03e6\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u03e8\\u03e7\\u0003\\u0002\\u0002\\u0002\\u03e9\\u03ea\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u03ea\\u03ed\\u0005\\u008aF\\u0002\\u03eb\\u03ee\",\n    \"\\u0005\\u0086D\\u0002\\u03ec\\u03ee\\u0005\\u008aF\\u0002\\u03ed\\u03eb\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03ed\\u03ec\\u0003\\u0002\\u0002\\u0002\\u03ee\\u03ef\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03ef\\u03f0\\u0005\\u0086D\\u0002\\u03f0\\u00a5\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u03f1\\u03f2\\u0007+\\u0002\\u0002\\u03f2\\u03f3\\u0005\",\n    \"\\u008aF\\u0002\\u03f3\\u03f4\\u0005\\u0086D\\u0002\\u03f4\\u00a7\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u03f5\\u03fa\\u0005\\u00b6\\\\\\u0002\\u03f6\\u03fa\\u0007g\\u0002\",\n    \"\\u0002\\u03f7\\u03fa\\u0007h\\u0002\\u0002\\u03f8\\u03fa\\u0007j\\u0002\\u0002\",\n    \"\\u03f9\\u03f5\\u0003\\u0002\\u0002\\u0002\\u03f9\\u03f6\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03f9\\u03f7\\u0003\\u0002\\u0002\\u0002\\u03f9\\u03f8\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u03fa\\u00a9\\u0003\\u0002\\u0002\\u0002\\u03fb\\u03fc\\u00070\\u0002\\u0002\",\n    \"\\u03fc\\u03fd\\u0005\\u00b2Z\\u0002\\u03fd\\u03fe\\u0005\\u0086D\\u0002\\u03fe\",\n    \"\\u00ab\\u0003\\u0002\\u0002\\u0002\\u03ff\\u0401\\u0007\\u0018\\u0002\\u0002\\u0400\",\n    \"\\u0402\\u0005x=\\u0002\\u0401\\u0400\\u0003\\u0002\\u0002\\u0002\\u0401\\u0402\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0402\\u0409\\u0003\\u0002\\u0002\\u0002\\u0403\\u0405\",\n    \"\\u0007\\u0011\\u0002\\u0002\\u0404\\u0406\\u0005x=\\u0002\\u0405\\u0404\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0405\\u0406\\u0003\\u0002\\u0002\\u0002\\u0406\\u0408\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0407\\u0403\\u0003\\u0002\\u0002\\u0002\\u0408\\u040b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0409\\u0407\\u0003\\u0002\\u0002\\u0002\\u0409\\u040a\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u040a\\u040c\\u0003\\u0002\\u0002\\u0002\\u040b\\u0409\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u040c\\u041a\\u0007\\u0019\\u0002\\u0002\\u040d\\u0416\\u0007\",\n    \"\\\"\\u0002\\u0002\\u040e\\u0413\\u0005x=\\u0002\\u040f\\u0410\\u0007\\u0011\\u0002\",\n    \"\\u0002\\u0410\\u0412\\u0005x=\\u0002\\u0411\\u040f\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0412\\u0415\\u0003\\u0002\\u0002\\u0002\\u0413\\u0411\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0413\\u0414\\u0003\\u0002\\u0002\\u0002\\u0414\\u0417\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0415\\u0413\\u0003\\u0002\\u0002\\u0002\\u0416\\u040e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0416\\u0417\\u0003\\u0002\\u0002\\u0002\\u0417\\u0418\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0418\\u041a\\u0007#\\u0002\\u0002\\u0419\\u03ff\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0419\\u040d\\u0003\\u0002\\u0002\\u0002\\u041a\\u00ad\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u041b\\u041e\\u0005v<\\u0002\\u041c\\u041e\\u0005D#\\u0002\\u041d\\u041b\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u041d\\u041c\\u0003\\u0002\\u0002\\u0002\\u041e\\u00af\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u041f\\u0421\\t\\u000f\\u0002\\u0002\\u0420\\u0422\\u0007\",\n    \"i\\u0002\\u0002\\u0421\\u0420\\u0003\\u0002\\u0002\\u0002\\u0421\\u0422\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0422\\u00b1\\u0003\\u0002\\u0002\\u0002\\u0423\\u0424\\t\",\n    \"\\u0010\\u0002\\u0002\\u0424\\u00b3\\u0003\\u0002\\u0002\\u0002\\u0425\\u0431\\u0007\",\n    \"`\\u0002\\u0002\\u0426\\u0427\\u0007\\u0018\\u0002\\u0002\\u0427\\u042c\\u0005\",\n    \"D#\\u0002\\u0428\\u0429\\u0007\\u0011\\u0002\\u0002\\u0429\\u042b\\u0005D#\\u0002\",\n    \"\\u042a\\u0428\\u0003\\u0002\\u0002\\u0002\\u042b\\u042e\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u042c\\u042a\\u0003\\u0002\\u0002\\u0002\\u042c\\u042d\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u042d\\u042f\\u0003\\u0002\\u0002\\u0002\\u042e\\u042c\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u042f\\u0430\\u0007\\u0019\\u0002\\u0002\\u0430\\u0432\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0431\\u0426\\u0003\\u0002\\u0002\\u0002\\u0431\\u0432\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0432\\u00b5\\u0003\\u0002\\u0002\\u0002\\u0433\\u0435\\u0007\\u0080\\u0002\\u0002\",\n    \"\\u0434\\u0433\\u0003\\u0002\\u0002\\u0002\\u0435\\u0436\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0436\\u0434\\u0003\\u0002\\u0002\\u0002\\u0436\\u0437\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0437\\u00b7\\u0003\\u0002\\u0002\\u0002~\\u00bf\\u00c1\\u00cf\\u00d3\\u00d8\",\n    \"\\u00dc\\u00df\\u00e4\\u00ea\\u00f0\\u00f4\\u0100\\u0108\\u010b\\u0115\\u0118\\u011e\",\n    \"\\u0126\\u0129\\u0132\\u013b\\u013d\\u0143\\u0153\\u0161\\u0164\\u016b\\u016f\\u0171\",\n    \"\\u0179\\u017c\\u0182\\u0186\\u018a\\u018f\\u019c\\u019e\\u01a5\\u01af\\u01b5\\u01c0\",\n    \"\\u01c3\\u01c9\\u01cc\\u01d4\\u01d7\\u01dd\\u01e0\\u01e8\\u01eb\\u01f1\\u01f5\\u0200\",\n    \"\\u0205\\u020a\\u0212\\u0217\\u0225\\u0227\\u022c\\u0236\\u0248\\u0254\\u0259\\u025f\",\n    \"\\u0263\\u0266\\u0272\\u0278\\u027c\\u027f\\u0286\\u029a\\u02ac\\u02b0\\u02b5\\u02b9\",\n    \"\\u02bd\\u02c2\\u02c7\\u02cb\\u02e3\\u0314\\u031a\\u031e\\u032e\\u0330\\u033a\\u0342\",\n    \"\\u0344\\u034b\\u0353\\u0357\\u035f\\u0363\\u0365\\u0370\\u0387\\u038c\\u0396\\u039a\",\n    \"\\u03a0\\u03a4\\u03aa\\u03b6\\u03bd\\u03cb\\u03d4\\u03da\\u03de\\u03e8\\u03ed\\u03f9\",\n    \"\\u0401\\u0405\\u0409\\u0413\\u0416\\u0419\\u041d\\u0421\\u042c\\u0431\\u0436\"].join(\"\");\n\n\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\n\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\n\nvar sharedContextCache = new antlr4.PredictionContextCache();\n\nvar literalNames = [ null, \"'pragma'\", \"';'\", \"'^'\", \"'~'\", \"'>='\", \"'>'\", \n                     \"'<'\", \"'<='\", \"'='\", \"'as'\", \"'import'\", \"'*'\", \"'from'\", \n                     \"'{'\", \"','\", \"'}'\", \"'abstract'\", \"'contract'\", \"'interface'\", \n                     \"'library'\", \"'is'\", \"'('\", \"')'\", \"'using'\", \"'for'\", \n                     \"'struct'\", \"'modifier'\", \"'function'\", \"'returns'\", \n                     \"'event'\", \"'enum'\", \"'['\", \"']'\", \"'address'\", \"'.'\", \n                     \"'mapping'\", \"'=>'\", \"'memory'\", \"'storage'\", \"'calldata'\", \n                     \"'if'\", \"'else'\", \"'try'\", \"'catch'\", \"'while'\", \"'assembly'\", \n                     \"'do'\", \"'return'\", \"'throw'\", \"'emit'\", \"'var'\", \"'bool'\", \n                     \"'string'\", \"'byte'\", \"'++'\", \"'--'\", \"'new'\", \"':'\", \n                     \"'+'\", \"'-'\", \"'after'\", \"'delete'\", \"'!'\", \"'**'\", \n                     \"'/'\", \"'%'\", \"'<<'\", \"'>>'\", \"'&'\", \"'|'\", \"'=='\", \n                     \"'!='\", \"'&&'\", \"'||'\", \"'?'\", \"'|='\", \"'^='\", \"'&='\", \n                     \"'<<='\", \"'>>='\", \"'+='\", \"'-='\", \"'*='\", \"'/='\", \"'%='\", \n                     \"'let'\", \"':='\", \"'=:'\", \"'switch'\", \"'case'\", \"'default'\", \n                     \"'->'\", \"'callback'\", \"'override'\", null, null, null, \n                     null, null, null, null, null, null, null, null, \"'anonymous'\", \n                     \"'break'\", \"'constant'\", \"'immutable'\", \"'continue'\", \n                     \"'leave'\", \"'external'\", \"'indexed'\", \"'internal'\", \n                     \"'payable'\", \"'private'\", \"'public'\", \"'virtual'\", \n                     \"'pure'\", \"'type'\", \"'view'\", \"'constructor'\", \"'fallback'\", \n                     \"'receive'\" ];\n\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, null, null, null, null, \n                      null, null, null, null, null, \"Int\", \"Uint\", \"Byte\", \n                      \"Fixed\", \"Ufixed\", \"BooleanLiteral\", \"DecimalNumber\", \n                      \"HexNumber\", \"NumberUnit\", \"HexLiteral\", \"ReservedKeyword\", \n                      \"AnonymousKeyword\", \"BreakKeyword\", \"ConstantKeyword\", \n                      \"ImmutableKeyword\", \"ContinueKeyword\", \"LeaveKeyword\", \n                      \"ExternalKeyword\", \"IndexedKeyword\", \"InternalKeyword\", \n                      \"PayableKeyword\", \"PrivateKeyword\", \"PublicKeyword\", \n                      \"VirtualKeyword\", \"PureKeyword\", \"TypeKeyword\", \"ViewKeyword\", \n                      \"ConstructorKeyword\", \"FallbackKeyword\", \"ReceiveKeyword\", \n                      \"Identifier\", \"StringLiteralFragment\", \"VersionLiteral\", \n                      \"WS\", \"COMMENT\", \"LINE_COMMENT\" ];\n\nvar ruleNames =  [ \"sourceUnit\", \"pragmaDirective\", \"pragmaName\", \"pragmaValue\", \n                   \"version\", \"versionOperator\", \"versionConstraint\", \"importDeclaration\", \n                   \"importDirective\", \"contractDefinition\", \"inheritanceSpecifier\", \n                   \"contractPart\", \"stateVariableDeclaration\", \"fileLevelConstant\", \n                   \"usingForDeclaration\", \"structDefinition\", \"modifierDefinition\", \n                   \"modifierInvocation\", \"functionDefinition\", \"functionDescriptor\", \n                   \"returnParameters\", \"modifierList\", \"eventDefinition\", \n                   \"enumValue\", \"enumDefinition\", \"parameterList\", \"parameter\", \n                   \"eventParameterList\", \"eventParameter\", \"functionTypeParameterList\", \n                   \"functionTypeParameter\", \"variableDeclaration\", \"typeName\", \n                   \"userDefinedTypeName\", \"mappingKey\", \"mapping\", \"functionTypeName\", \n                   \"storageLocation\", \"stateMutability\", \"block\", \"statement\", \n                   \"expressionStatement\", \"ifStatement\", \"tryStatement\", \n                   \"catchClause\", \"whileStatement\", \"simpleStatement\", \"forStatement\", \n                   \"inlineAssemblyStatement\", \"doWhileStatement\", \"continueStatement\", \n                   \"breakStatement\", \"returnStatement\", \"throwStatement\", \n                   \"emitStatement\", \"variableDeclarationStatement\", \"variableDeclarationList\", \n                   \"identifierList\", \"elementaryTypeName\", \"expression\", \n                   \"primaryExpression\", \"expressionList\", \"nameValueList\", \n                   \"nameValue\", \"functionCallArguments\", \"functionCall\", \n                   \"assemblyBlock\", \"assemblyItem\", \"assemblyExpression\", \n                   \"assemblyMember\", \"assemblyCall\", \"assemblyLocalDefinition\", \n                   \"assemblyAssignment\", \"assemblyIdentifierOrList\", \"assemblyIdentifierList\", \n                   \"assemblyStackAssignment\", \"labelDefinition\", \"assemblySwitch\", \n                   \"assemblyCase\", \"assemblyFunctionDefinition\", \"assemblyFunctionReturns\", \n                   \"assemblyFor\", \"assemblyIf\", \"assemblyLiteral\", \"subAssembly\", \n                   \"tupleExpression\", \"typeNameExpression\", \"numberLiteral\", \n                   \"identifier\", \"overrideSpecifier\", \"stringLiteral\" ];\n\nfunction SolidityParser (input) {\n\tantlr4.Parser.call(this, input);\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\n    this.ruleNames = ruleNames;\n    this.literalNames = literalNames;\n    this.symbolicNames = symbolicNames;\n    return this;\n}\n\nSolidityParser.prototype = Object.create(antlr4.Parser.prototype);\nSolidityParser.prototype.constructor = SolidityParser;\n\nObject.defineProperty(SolidityParser.prototype, \"atn\", {\n\tget : function() {\n\t\treturn atn;\n\t}\n});\n\nSolidityParser.EOF = antlr4.Token.EOF;\nSolidityParser.T__0 = 1;\nSolidityParser.T__1 = 2;\nSolidityParser.T__2 = 3;\nSolidityParser.T__3 = 4;\nSolidityParser.T__4 = 5;\nSolidityParser.T__5 = 6;\nSolidityParser.T__6 = 7;\nSolidityParser.T__7 = 8;\nSolidityParser.T__8 = 9;\nSolidityParser.T__9 = 10;\nSolidityParser.T__10 = 11;\nSolidityParser.T__11 = 12;\nSolidityParser.T__12 = 13;\nSolidityParser.T__13 = 14;\nSolidityParser.T__14 = 15;\nSolidityParser.T__15 = 16;\nSolidityParser.T__16 = 17;\nSolidityParser.T__17 = 18;\nSolidityParser.T__18 = 19;\nSolidityParser.T__19 = 20;\nSolidityParser.T__20 = 21;\nSolidityParser.T__21 = 22;\nSolidityParser.T__22 = 23;\nSolidityParser.T__23 = 24;\nSolidityParser.T__24 = 25;\nSolidityParser.T__25 = 26;\nSolidityParser.T__26 = 27;\nSolidityParser.T__27 = 28;\nSolidityParser.T__28 = 29;\nSolidityParser.T__29 = 30;\nSolidityParser.T__30 = 31;\nSolidityParser.T__31 = 32;\nSolidityParser.T__32 = 33;\nSolidityParser.T__33 = 34;\nSolidityParser.T__34 = 35;\nSolidityParser.T__35 = 36;\nSolidityParser.T__36 = 37;\nSolidityParser.T__37 = 38;\nSolidityParser.T__38 = 39;\nSolidityParser.T__39 = 40;\nSolidityParser.T__40 = 41;\nSolidityParser.T__41 = 42;\nSolidityParser.T__42 = 43;\nSolidityParser.T__43 = 44;\nSolidityParser.T__44 = 45;\nSolidityParser.T__45 = 46;\nSolidityParser.T__46 = 47;\nSolidityParser.T__47 = 48;\nSolidityParser.T__48 = 49;\nSolidityParser.T__49 = 50;\nSolidityParser.T__50 = 51;\nSolidityParser.T__51 = 52;\nSolidityParser.T__52 = 53;\nSolidityParser.T__53 = 54;\nSolidityParser.T__54 = 55;\nSolidityParser.T__55 = 56;\nSolidityParser.T__56 = 57;\nSolidityParser.T__57 = 58;\nSolidityParser.T__58 = 59;\nSolidityParser.T__59 = 60;\nSolidityParser.T__60 = 61;\nSolidityParser.T__61 = 62;\nSolidityParser.T__62 = 63;\nSolidityParser.T__63 = 64;\nSolidityParser.T__64 = 65;\nSolidityParser.T__65 = 66;\nSolidityParser.T__66 = 67;\nSolidityParser.T__67 = 68;\nSolidityParser.T__68 = 69;\nSolidityParser.T__69 = 70;\nSolidityParser.T__70 = 71;\nSolidityParser.T__71 = 72;\nSolidityParser.T__72 = 73;\nSolidityParser.T__73 = 74;\nSolidityParser.T__74 = 75;\nSolidityParser.T__75 = 76;\nSolidityParser.T__76 = 77;\nSolidityParser.T__77 = 78;\nSolidityParser.T__78 = 79;\nSolidityParser.T__79 = 80;\nSolidityParser.T__80 = 81;\nSolidityParser.T__81 = 82;\nSolidityParser.T__82 = 83;\nSolidityParser.T__83 = 84;\nSolidityParser.T__84 = 85;\nSolidityParser.T__85 = 86;\nSolidityParser.T__86 = 87;\nSolidityParser.T__87 = 88;\nSolidityParser.T__88 = 89;\nSolidityParser.T__89 = 90;\nSolidityParser.T__90 = 91;\nSolidityParser.T__91 = 92;\nSolidityParser.T__92 = 93;\nSolidityParser.T__93 = 94;\nSolidityParser.Int = 95;\nSolidityParser.Uint = 96;\nSolidityParser.Byte = 97;\nSolidityParser.Fixed = 98;\nSolidityParser.Ufixed = 99;\nSolidityParser.BooleanLiteral = 100;\nSolidityParser.DecimalNumber = 101;\nSolidityParser.HexNumber = 102;\nSolidityParser.NumberUnit = 103;\nSolidityParser.HexLiteral = 104;\nSolidityParser.ReservedKeyword = 105;\nSolidityParser.AnonymousKeyword = 106;\nSolidityParser.BreakKeyword = 107;\nSolidityParser.ConstantKeyword = 108;\nSolidityParser.ImmutableKeyword = 109;\nSolidityParser.ContinueKeyword = 110;\nSolidityParser.LeaveKeyword = 111;\nSolidityParser.ExternalKeyword = 112;\nSolidityParser.IndexedKeyword = 113;\nSolidityParser.InternalKeyword = 114;\nSolidityParser.PayableKeyword = 115;\nSolidityParser.PrivateKeyword = 116;\nSolidityParser.PublicKeyword = 117;\nSolidityParser.VirtualKeyword = 118;\nSolidityParser.PureKeyword = 119;\nSolidityParser.TypeKeyword = 120;\nSolidityParser.ViewKeyword = 121;\nSolidityParser.ConstructorKeyword = 122;\nSolidityParser.FallbackKeyword = 123;\nSolidityParser.ReceiveKeyword = 124;\nSolidityParser.Identifier = 125;\nSolidityParser.StringLiteralFragment = 126;\nSolidityParser.VersionLiteral = 127;\nSolidityParser.WS = 128;\nSolidityParser.COMMENT = 129;\nSolidityParser.LINE_COMMENT = 130;\n\nSolidityParser.RULE_sourceUnit = 0;\nSolidityParser.RULE_pragmaDirective = 1;\nSolidityParser.RULE_pragmaName = 2;\nSolidityParser.RULE_pragmaValue = 3;\nSolidityParser.RULE_version = 4;\nSolidityParser.RULE_versionOperator = 5;\nSolidityParser.RULE_versionConstraint = 6;\nSolidityParser.RULE_importDeclaration = 7;\nSolidityParser.RULE_importDirective = 8;\nSolidityParser.RULE_contractDefinition = 9;\nSolidityParser.RULE_inheritanceSpecifier = 10;\nSolidityParser.RULE_contractPart = 11;\nSolidityParser.RULE_stateVariableDeclaration = 12;\nSolidityParser.RULE_fileLevelConstant = 13;\nSolidityParser.RULE_usingForDeclaration = 14;\nSolidityParser.RULE_structDefinition = 15;\nSolidityParser.RULE_modifierDefinition = 16;\nSolidityParser.RULE_modifierInvocation = 17;\nSolidityParser.RULE_functionDefinition = 18;\nSolidityParser.RULE_functionDescriptor = 19;\nSolidityParser.RULE_returnParameters = 20;\nSolidityParser.RULE_modifierList = 21;\nSolidityParser.RULE_eventDefinition = 22;\nSolidityParser.RULE_enumValue = 23;\nSolidityParser.RULE_enumDefinition = 24;\nSolidityParser.RULE_parameterList = 25;\nSolidityParser.RULE_parameter = 26;\nSolidityParser.RULE_eventParameterList = 27;\nSolidityParser.RULE_eventParameter = 28;\nSolidityParser.RULE_functionTypeParameterList = 29;\nSolidityParser.RULE_functionTypeParameter = 30;\nSolidityParser.RULE_variableDeclaration = 31;\nSolidityParser.RULE_typeName = 32;\nSolidityParser.RULE_userDefinedTypeName = 33;\nSolidityParser.RULE_mappingKey = 34;\nSolidityParser.RULE_mapping = 35;\nSolidityParser.RULE_functionTypeName = 36;\nSolidityParser.RULE_storageLocation = 37;\nSolidityParser.RULE_stateMutability = 38;\nSolidityParser.RULE_block = 39;\nSolidityParser.RULE_statement = 40;\nSolidityParser.RULE_expressionStatement = 41;\nSolidityParser.RULE_ifStatement = 42;\nSolidityParser.RULE_tryStatement = 43;\nSolidityParser.RULE_catchClause = 44;\nSolidityParser.RULE_whileStatement = 45;\nSolidityParser.RULE_simpleStatement = 46;\nSolidityParser.RULE_forStatement = 47;\nSolidityParser.RULE_inlineAssemblyStatement = 48;\nSolidityParser.RULE_doWhileStatement = 49;\nSolidityParser.RULE_continueStatement = 50;\nSolidityParser.RULE_breakStatement = 51;\nSolidityParser.RULE_returnStatement = 52;\nSolidityParser.RULE_throwStatement = 53;\nSolidityParser.RULE_emitStatement = 54;\nSolidityParser.RULE_variableDeclarationStatement = 55;\nSolidityParser.RULE_variableDeclarationList = 56;\nSolidityParser.RULE_identifierList = 57;\nSolidityParser.RULE_elementaryTypeName = 58;\nSolidityParser.RULE_expression = 59;\nSolidityParser.RULE_primaryExpression = 60;\nSolidityParser.RULE_expressionList = 61;\nSolidityParser.RULE_nameValueList = 62;\nSolidityParser.RULE_nameValue = 63;\nSolidityParser.RULE_functionCallArguments = 64;\nSolidityParser.RULE_functionCall = 65;\nSolidityParser.RULE_assemblyBlock = 66;\nSolidityParser.RULE_assemblyItem = 67;\nSolidityParser.RULE_assemblyExpression = 68;\nSolidityParser.RULE_assemblyMember = 69;\nSolidityParser.RULE_assemblyCall = 70;\nSolidityParser.RULE_assemblyLocalDefinition = 71;\nSolidityParser.RULE_assemblyAssignment = 72;\nSolidityParser.RULE_assemblyIdentifierOrList = 73;\nSolidityParser.RULE_assemblyIdentifierList = 74;\nSolidityParser.RULE_assemblyStackAssignment = 75;\nSolidityParser.RULE_labelDefinition = 76;\nSolidityParser.RULE_assemblySwitch = 77;\nSolidityParser.RULE_assemblyCase = 78;\nSolidityParser.RULE_assemblyFunctionDefinition = 79;\nSolidityParser.RULE_assemblyFunctionReturns = 80;\nSolidityParser.RULE_assemblyFor = 81;\nSolidityParser.RULE_assemblyIf = 82;\nSolidityParser.RULE_assemblyLiteral = 83;\nSolidityParser.RULE_subAssembly = 84;\nSolidityParser.RULE_tupleExpression = 85;\nSolidityParser.RULE_typeNameExpression = 86;\nSolidityParser.RULE_numberLiteral = 87;\nSolidityParser.RULE_identifier = 88;\nSolidityParser.RULE_overrideSpecifier = 89;\nSolidityParser.RULE_stringLiteral = 90;\n\n\nfunction SourceUnitContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_sourceUnit;\n    return this;\n}\n\nSourceUnitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nSourceUnitContext.prototype.constructor = SourceUnitContext;\n\nSourceUnitContext.prototype.EOF = function() {\n    return this.getToken(SolidityParser.EOF, 0);\n};\n\nSourceUnitContext.prototype.pragmaDirective = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(PragmaDirectiveContext);\n    } else {\n        return this.getTypedRuleContext(PragmaDirectiveContext,i);\n    }\n};\n\nSourceUnitContext.prototype.importDirective = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ImportDirectiveContext);\n    } else {\n        return this.getTypedRuleContext(ImportDirectiveContext,i);\n    }\n};\n\nSourceUnitContext.prototype.contractDefinition = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ContractDefinitionContext);\n    } else {\n        return this.getTypedRuleContext(ContractDefinitionContext,i);\n    }\n};\n\nSourceUnitContext.prototype.enumDefinition = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(EnumDefinitionContext);\n    } else {\n        return this.getTypedRuleContext(EnumDefinitionContext,i);\n    }\n};\n\nSourceUnitContext.prototype.structDefinition = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(StructDefinitionContext);\n    } else {\n        return this.getTypedRuleContext(StructDefinitionContext,i);\n    }\n};\n\nSourceUnitContext.prototype.functionDefinition = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(FunctionDefinitionContext);\n    } else {\n        return this.getTypedRuleContext(FunctionDefinitionContext,i);\n    }\n};\n\nSourceUnitContext.prototype.fileLevelConstant = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(FileLevelConstantContext);\n    } else {\n        return this.getTypedRuleContext(FileLevelConstantContext,i);\n    }\n};\n\nSourceUnitContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterSourceUnit(this);\n\t}\n};\n\nSourceUnitContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitSourceUnit(this);\n\t}\n};\n\n\n\n\nSolidityParser.SourceUnitContext = SourceUnitContext;\n\nSolidityParser.prototype.sourceUnit = function() {\n\n    var localctx = new SourceUnitContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 0, SolidityParser.RULE_sourceUnit);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 191;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__0) | (1 << SolidityParser.T__10) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__16) | (1 << SolidityParser.T__17) | (1 << SolidityParser.T__18) | (1 << SolidityParser.T__19) | (1 << SolidityParser.T__25) | (1 << SolidityParser.T__27) | (1 << SolidityParser.T__30))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ConstructorKeyword - 93)) | (1 << (SolidityParser.FallbackKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 189;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input,0,this._ctx);\n            switch(la_) {\n            case 1:\n                this.state = 182;\n                this.pragmaDirective();\n                break;\n\n            case 2:\n                this.state = 183;\n                this.importDirective();\n                break;\n\n            case 3:\n                this.state = 184;\n                this.contractDefinition();\n                break;\n\n            case 4:\n                this.state = 185;\n                this.enumDefinition();\n                break;\n\n            case 5:\n                this.state = 186;\n                this.structDefinition();\n                break;\n\n            case 6:\n                this.state = 187;\n                this.functionDefinition();\n                break;\n\n            case 7:\n                this.state = 188;\n                this.fileLevelConstant();\n                break;\n\n            }\n            this.state = 193;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 194;\n        this.match(SolidityParser.EOF);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction PragmaDirectiveContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_pragmaDirective;\n    return this;\n}\n\nPragmaDirectiveContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nPragmaDirectiveContext.prototype.constructor = PragmaDirectiveContext;\n\nPragmaDirectiveContext.prototype.pragmaName = function() {\n    return this.getTypedRuleContext(PragmaNameContext,0);\n};\n\nPragmaDirectiveContext.prototype.pragmaValue = function() {\n    return this.getTypedRuleContext(PragmaValueContext,0);\n};\n\nPragmaDirectiveContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterPragmaDirective(this);\n\t}\n};\n\nPragmaDirectiveContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitPragmaDirective(this);\n\t}\n};\n\n\n\n\nSolidityParser.PragmaDirectiveContext = PragmaDirectiveContext;\n\nSolidityParser.prototype.pragmaDirective = function() {\n\n    var localctx = new PragmaDirectiveContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 2, SolidityParser.RULE_pragmaDirective);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 196;\n        this.match(SolidityParser.T__0);\n        this.state = 197;\n        this.pragmaName();\n        this.state = 198;\n        this.pragmaValue();\n        this.state = 199;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction PragmaNameContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_pragmaName;\n    return this;\n}\n\nPragmaNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nPragmaNameContext.prototype.constructor = PragmaNameContext;\n\nPragmaNameContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nPragmaNameContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterPragmaName(this);\n\t}\n};\n\nPragmaNameContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitPragmaName(this);\n\t}\n};\n\n\n\n\nSolidityParser.PragmaNameContext = PragmaNameContext;\n\nSolidityParser.prototype.pragmaName = function() {\n\n    var localctx = new PragmaNameContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 4, SolidityParser.RULE_pragmaName);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 201;\n        this.identifier();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction PragmaValueContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_pragmaValue;\n    return this;\n}\n\nPragmaValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nPragmaValueContext.prototype.constructor = PragmaValueContext;\n\nPragmaValueContext.prototype.version = function() {\n    return this.getTypedRuleContext(VersionContext,0);\n};\n\nPragmaValueContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nPragmaValueContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterPragmaValue(this);\n\t}\n};\n\nPragmaValueContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitPragmaValue(this);\n\t}\n};\n\n\n\n\nSolidityParser.PragmaValueContext = PragmaValueContext;\n\nSolidityParser.prototype.pragmaValue = function() {\n\n    var localctx = new PragmaValueContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 6, SolidityParser.RULE_pragmaValue);\n    try {\n        this.state = 205;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 203;\n            this.version();\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 204;\n            this.expression(0);\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VersionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_version;\n    return this;\n}\n\nVersionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVersionContext.prototype.constructor = VersionContext;\n\nVersionContext.prototype.versionConstraint = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(VersionConstraintContext);\n    } else {\n        return this.getTypedRuleContext(VersionConstraintContext,i);\n    }\n};\n\nVersionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVersion(this);\n\t}\n};\n\nVersionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVersion(this);\n\t}\n};\n\n\n\n\nSolidityParser.VersionContext = VersionContext;\n\nSolidityParser.prototype.version = function() {\n\n    var localctx = new VersionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 8, SolidityParser.RULE_version);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 207;\n        this.versionConstraint();\n        this.state = 209;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__2) | (1 << SolidityParser.T__3) | (1 << SolidityParser.T__4) | (1 << SolidityParser.T__5) | (1 << SolidityParser.T__6) | (1 << SolidityParser.T__7) | (1 << SolidityParser.T__8))) !== 0) || _la===SolidityParser.DecimalNumber || _la===SolidityParser.VersionLiteral) {\n            this.state = 208;\n            this.versionConstraint();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VersionOperatorContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_versionOperator;\n    return this;\n}\n\nVersionOperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVersionOperatorContext.prototype.constructor = VersionOperatorContext;\n\n\nVersionOperatorContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVersionOperator(this);\n\t}\n};\n\nVersionOperatorContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVersionOperator(this);\n\t}\n};\n\n\n\n\nSolidityParser.VersionOperatorContext = VersionOperatorContext;\n\nSolidityParser.prototype.versionOperator = function() {\n\n    var localctx = new VersionOperatorContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 10, SolidityParser.RULE_versionOperator);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 211;\n        _la = this._input.LA(1);\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__2) | (1 << SolidityParser.T__3) | (1 << SolidityParser.T__4) | (1 << SolidityParser.T__5) | (1 << SolidityParser.T__6) | (1 << SolidityParser.T__7) | (1 << SolidityParser.T__8))) !== 0))) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VersionConstraintContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_versionConstraint;\n    return this;\n}\n\nVersionConstraintContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVersionConstraintContext.prototype.constructor = VersionConstraintContext;\n\nVersionConstraintContext.prototype.VersionLiteral = function() {\n    return this.getToken(SolidityParser.VersionLiteral, 0);\n};\n\nVersionConstraintContext.prototype.versionOperator = function() {\n    return this.getTypedRuleContext(VersionOperatorContext,0);\n};\n\nVersionConstraintContext.prototype.DecimalNumber = function() {\n    return this.getToken(SolidityParser.DecimalNumber, 0);\n};\n\nVersionConstraintContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVersionConstraint(this);\n\t}\n};\n\nVersionConstraintContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVersionConstraint(this);\n\t}\n};\n\n\n\n\nSolidityParser.VersionConstraintContext = VersionConstraintContext;\n\nSolidityParser.prototype.versionConstraint = function() {\n\n    var localctx = new VersionConstraintContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 12, SolidityParser.RULE_versionConstraint);\n    var _la = 0; // Token type\n    try {\n        this.state = 221;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,6,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 214;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__2) | (1 << SolidityParser.T__3) | (1 << SolidityParser.T__4) | (1 << SolidityParser.T__5) | (1 << SolidityParser.T__6) | (1 << SolidityParser.T__7) | (1 << SolidityParser.T__8))) !== 0)) {\n                this.state = 213;\n                this.versionOperator();\n            }\n\n            this.state = 216;\n            this.match(SolidityParser.VersionLiteral);\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 218;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__2) | (1 << SolidityParser.T__3) | (1 << SolidityParser.T__4) | (1 << SolidityParser.T__5) | (1 << SolidityParser.T__6) | (1 << SolidityParser.T__7) | (1 << SolidityParser.T__8))) !== 0)) {\n                this.state = 217;\n                this.versionOperator();\n            }\n\n            this.state = 220;\n            this.match(SolidityParser.DecimalNumber);\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ImportDeclarationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_importDeclaration;\n    return this;\n}\n\nImportDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nImportDeclarationContext.prototype.constructor = ImportDeclarationContext;\n\nImportDeclarationContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nImportDeclarationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterImportDeclaration(this);\n\t}\n};\n\nImportDeclarationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitImportDeclaration(this);\n\t}\n};\n\n\n\n\nSolidityParser.ImportDeclarationContext = ImportDeclarationContext;\n\nSolidityParser.prototype.importDeclaration = function() {\n\n    var localctx = new ImportDeclarationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 14, SolidityParser.RULE_importDeclaration);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 223;\n        this.identifier();\n        this.state = 226;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__9) {\n            this.state = 224;\n            this.match(SolidityParser.T__9);\n            this.state = 225;\n            this.identifier();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ImportDirectiveContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_importDirective;\n    return this;\n}\n\nImportDirectiveContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nImportDirectiveContext.prototype.constructor = ImportDirectiveContext;\n\nImportDirectiveContext.prototype.StringLiteralFragment = function() {\n    return this.getToken(SolidityParser.StringLiteralFragment, 0);\n};\n\nImportDirectiveContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nImportDirectiveContext.prototype.importDeclaration = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ImportDeclarationContext);\n    } else {\n        return this.getTypedRuleContext(ImportDeclarationContext,i);\n    }\n};\n\nImportDirectiveContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterImportDirective(this);\n\t}\n};\n\nImportDirectiveContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitImportDirective(this);\n\t}\n};\n\n\n\n\nSolidityParser.ImportDirectiveContext = ImportDirectiveContext;\n\nSolidityParser.prototype.importDirective = function() {\n\n    var localctx = new ImportDirectiveContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 16, SolidityParser.RULE_importDirective);\n    var _la = 0; // Token type\n    try {\n        this.state = 262;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,12,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 228;\n            this.match(SolidityParser.T__10);\n            this.state = 229;\n            this.match(SolidityParser.StringLiteralFragment);\n            this.state = 232;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__9) {\n                this.state = 230;\n                this.match(SolidityParser.T__9);\n                this.state = 231;\n                this.identifier();\n            }\n\n            this.state = 234;\n            this.match(SolidityParser.T__1);\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 235;\n            this.match(SolidityParser.T__10);\n            this.state = 238;\n            this._errHandler.sync(this);\n            switch(this._input.LA(1)) {\n            case SolidityParser.T__11:\n                this.state = 236;\n                this.match(SolidityParser.T__11);\n                break;\n            case SolidityParser.T__12:\n            case SolidityParser.T__39:\n            case SolidityParser.T__92:\n            case SolidityParser.LeaveKeyword:\n            case SolidityParser.PayableKeyword:\n            case SolidityParser.ReceiveKeyword:\n            case SolidityParser.Identifier:\n                this.state = 237;\n                this.identifier();\n                break;\n            default:\n                throw new antlr4.error.NoViableAltException(this);\n            }\n            this.state = 242;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__9) {\n                this.state = 240;\n                this.match(SolidityParser.T__9);\n                this.state = 241;\n                this.identifier();\n            }\n\n            this.state = 244;\n            this.match(SolidityParser.T__12);\n            this.state = 245;\n            this.match(SolidityParser.StringLiteralFragment);\n            this.state = 246;\n            this.match(SolidityParser.T__1);\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 247;\n            this.match(SolidityParser.T__10);\n            this.state = 248;\n            this.match(SolidityParser.T__13);\n            this.state = 249;\n            this.importDeclaration();\n            this.state = 254;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 250;\n                this.match(SolidityParser.T__14);\n                this.state = 251;\n                this.importDeclaration();\n                this.state = 256;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n            this.state = 257;\n            this.match(SolidityParser.T__15);\n            this.state = 258;\n            this.match(SolidityParser.T__12);\n            this.state = 259;\n            this.match(SolidityParser.StringLiteralFragment);\n            this.state = 260;\n            this.match(SolidityParser.T__1);\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ContractDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_contractDefinition;\n    return this;\n}\n\nContractDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nContractDefinitionContext.prototype.constructor = ContractDefinitionContext;\n\nContractDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nContractDefinitionContext.prototype.inheritanceSpecifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(InheritanceSpecifierContext);\n    } else {\n        return this.getTypedRuleContext(InheritanceSpecifierContext,i);\n    }\n};\n\nContractDefinitionContext.prototype.contractPart = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ContractPartContext);\n    } else {\n        return this.getTypedRuleContext(ContractPartContext,i);\n    }\n};\n\nContractDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterContractDefinition(this);\n\t}\n};\n\nContractDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitContractDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.ContractDefinitionContext = ContractDefinitionContext;\n\nSolidityParser.prototype.contractDefinition = function() {\n\n    var localctx = new ContractDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 18, SolidityParser.RULE_contractDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 265;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__16) {\n            this.state = 264;\n            this.match(SolidityParser.T__16);\n        }\n\n        this.state = 267;\n        _la = this._input.LA(1);\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__17) | (1 << SolidityParser.T__18) | (1 << SolidityParser.T__19))) !== 0))) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n        this.state = 268;\n        this.identifier();\n        this.state = 278;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__20) {\n            this.state = 269;\n            this.match(SolidityParser.T__20);\n            this.state = 270;\n            this.inheritanceSpecifier();\n            this.state = 275;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 271;\n                this.match(SolidityParser.T__14);\n                this.state = 272;\n                this.inheritanceSpecifier();\n                this.state = 277;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n        }\n\n        this.state = 280;\n        this.match(SolidityParser.T__13);\n        this.state = 284;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__12) | (1 << SolidityParser.T__23) | (1 << SolidityParser.T__25) | (1 << SolidityParser.T__26) | (1 << SolidityParser.T__27) | (1 << SolidityParser.T__29) | (1 << SolidityParser.T__30))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ConstructorKeyword - 93)) | (1 << (SolidityParser.FallbackKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 281;\n            this.contractPart();\n            this.state = 286;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 287;\n        this.match(SolidityParser.T__15);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction InheritanceSpecifierContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_inheritanceSpecifier;\n    return this;\n}\n\nInheritanceSpecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nInheritanceSpecifierContext.prototype.constructor = InheritanceSpecifierContext;\n\nInheritanceSpecifierContext.prototype.userDefinedTypeName = function() {\n    return this.getTypedRuleContext(UserDefinedTypeNameContext,0);\n};\n\nInheritanceSpecifierContext.prototype.expressionList = function() {\n    return this.getTypedRuleContext(ExpressionListContext,0);\n};\n\nInheritanceSpecifierContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterInheritanceSpecifier(this);\n\t}\n};\n\nInheritanceSpecifierContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitInheritanceSpecifier(this);\n\t}\n};\n\n\n\n\nSolidityParser.InheritanceSpecifierContext = InheritanceSpecifierContext;\n\nSolidityParser.prototype.inheritanceSpecifier = function() {\n\n    var localctx = new InheritanceSpecifierContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 20, SolidityParser.RULE_inheritanceSpecifier);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 289;\n        this.userDefinedTypeName();\n        this.state = 295;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__21) {\n            this.state = 290;\n            this.match(SolidityParser.T__21);\n            this.state = 292;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 291;\n                this.expressionList();\n            }\n\n            this.state = 294;\n            this.match(SolidityParser.T__22);\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ContractPartContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_contractPart;\n    return this;\n}\n\nContractPartContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nContractPartContext.prototype.constructor = ContractPartContext;\n\nContractPartContext.prototype.stateVariableDeclaration = function() {\n    return this.getTypedRuleContext(StateVariableDeclarationContext,0);\n};\n\nContractPartContext.prototype.usingForDeclaration = function() {\n    return this.getTypedRuleContext(UsingForDeclarationContext,0);\n};\n\nContractPartContext.prototype.structDefinition = function() {\n    return this.getTypedRuleContext(StructDefinitionContext,0);\n};\n\nContractPartContext.prototype.modifierDefinition = function() {\n    return this.getTypedRuleContext(ModifierDefinitionContext,0);\n};\n\nContractPartContext.prototype.functionDefinition = function() {\n    return this.getTypedRuleContext(FunctionDefinitionContext,0);\n};\n\nContractPartContext.prototype.eventDefinition = function() {\n    return this.getTypedRuleContext(EventDefinitionContext,0);\n};\n\nContractPartContext.prototype.enumDefinition = function() {\n    return this.getTypedRuleContext(EnumDefinitionContext,0);\n};\n\nContractPartContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterContractPart(this);\n\t}\n};\n\nContractPartContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitContractPart(this);\n\t}\n};\n\n\n\n\nSolidityParser.ContractPartContext = ContractPartContext;\n\nSolidityParser.prototype.contractPart = function() {\n\n    var localctx = new ContractPartContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 22, SolidityParser.RULE_contractPart);\n    try {\n        this.state = 304;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,19,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 297;\n            this.stateVariableDeclaration();\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 298;\n            this.usingForDeclaration();\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 299;\n            this.structDefinition();\n            break;\n\n        case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 300;\n            this.modifierDefinition();\n            break;\n\n        case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 301;\n            this.functionDefinition();\n            break;\n\n        case 6:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 302;\n            this.eventDefinition();\n            break;\n\n        case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 303;\n            this.enumDefinition();\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StateVariableDeclarationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_stateVariableDeclaration;\n    return this;\n}\n\nStateVariableDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStateVariableDeclarationContext.prototype.constructor = StateVariableDeclarationContext;\n\nStateVariableDeclarationContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nStateVariableDeclarationContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nStateVariableDeclarationContext.prototype.PublicKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.PublicKeyword);\n    } else {\n        return this.getToken(SolidityParser.PublicKeyword, i);\n    }\n};\n\n\nStateVariableDeclarationContext.prototype.InternalKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.InternalKeyword);\n    } else {\n        return this.getToken(SolidityParser.InternalKeyword, i);\n    }\n};\n\n\nStateVariableDeclarationContext.prototype.PrivateKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.PrivateKeyword);\n    } else {\n        return this.getToken(SolidityParser.PrivateKeyword, i);\n    }\n};\n\n\nStateVariableDeclarationContext.prototype.ConstantKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.ConstantKeyword);\n    } else {\n        return this.getToken(SolidityParser.ConstantKeyword, i);\n    }\n};\n\n\nStateVariableDeclarationContext.prototype.ImmutableKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.ImmutableKeyword);\n    } else {\n        return this.getToken(SolidityParser.ImmutableKeyword, i);\n    }\n};\n\n\nStateVariableDeclarationContext.prototype.overrideSpecifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(OverrideSpecifierContext);\n    } else {\n        return this.getTypedRuleContext(OverrideSpecifierContext,i);\n    }\n};\n\nStateVariableDeclarationContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nStateVariableDeclarationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStateVariableDeclaration(this);\n\t}\n};\n\nStateVariableDeclarationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStateVariableDeclaration(this);\n\t}\n};\n\n\n\n\nSolidityParser.StateVariableDeclarationContext = StateVariableDeclarationContext;\n\nSolidityParser.prototype.stateVariableDeclaration = function() {\n\n    var localctx = new StateVariableDeclarationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 24, SolidityParser.RULE_stateVariableDeclaration);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 306;\n        this.typeName(0);\n        this.state = 315;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(((((_la - 94)) & ~0x1f) == 0 && ((1 << (_la - 94)) & ((1 << (SolidityParser.T__93 - 94)) | (1 << (SolidityParser.ConstantKeyword - 94)) | (1 << (SolidityParser.ImmutableKeyword - 94)) | (1 << (SolidityParser.InternalKeyword - 94)) | (1 << (SolidityParser.PrivateKeyword - 94)) | (1 << (SolidityParser.PublicKeyword - 94)))) !== 0)) {\n            this.state = 313;\n            this._errHandler.sync(this);\n            switch(this._input.LA(1)) {\n            case SolidityParser.PublicKeyword:\n                this.state = 307;\n                this.match(SolidityParser.PublicKeyword);\n                break;\n            case SolidityParser.InternalKeyword:\n                this.state = 308;\n                this.match(SolidityParser.InternalKeyword);\n                break;\n            case SolidityParser.PrivateKeyword:\n                this.state = 309;\n                this.match(SolidityParser.PrivateKeyword);\n                break;\n            case SolidityParser.ConstantKeyword:\n                this.state = 310;\n                this.match(SolidityParser.ConstantKeyword);\n                break;\n            case SolidityParser.ImmutableKeyword:\n                this.state = 311;\n                this.match(SolidityParser.ImmutableKeyword);\n                break;\n            case SolidityParser.T__93:\n                this.state = 312;\n                this.overrideSpecifier();\n                break;\n            default:\n                throw new antlr4.error.NoViableAltException(this);\n            }\n            this.state = 317;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 318;\n        this.identifier();\n        this.state = 321;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__8) {\n            this.state = 319;\n            this.match(SolidityParser.T__8);\n            this.state = 320;\n            this.expression(0);\n        }\n\n        this.state = 323;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FileLevelConstantContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_fileLevelConstant;\n    return this;\n}\n\nFileLevelConstantContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFileLevelConstantContext.prototype.constructor = FileLevelConstantContext;\n\nFileLevelConstantContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nFileLevelConstantContext.prototype.ConstantKeyword = function() {\n    return this.getToken(SolidityParser.ConstantKeyword, 0);\n};\n\nFileLevelConstantContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nFileLevelConstantContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nFileLevelConstantContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFileLevelConstant(this);\n\t}\n};\n\nFileLevelConstantContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFileLevelConstant(this);\n\t}\n};\n\n\n\n\nSolidityParser.FileLevelConstantContext = FileLevelConstantContext;\n\nSolidityParser.prototype.fileLevelConstant = function() {\n\n    var localctx = new FileLevelConstantContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 26, SolidityParser.RULE_fileLevelConstant);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 325;\n        this.typeName(0);\n        this.state = 326;\n        this.match(SolidityParser.ConstantKeyword);\n        this.state = 327;\n        this.identifier();\n        this.state = 328;\n        this.match(SolidityParser.T__8);\n        this.state = 329;\n        this.expression(0);\n        this.state = 330;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction UsingForDeclarationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_usingForDeclaration;\n    return this;\n}\n\nUsingForDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nUsingForDeclarationContext.prototype.constructor = UsingForDeclarationContext;\n\nUsingForDeclarationContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nUsingForDeclarationContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nUsingForDeclarationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterUsingForDeclaration(this);\n\t}\n};\n\nUsingForDeclarationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitUsingForDeclaration(this);\n\t}\n};\n\n\n\n\nSolidityParser.UsingForDeclarationContext = UsingForDeclarationContext;\n\nSolidityParser.prototype.usingForDeclaration = function() {\n\n    var localctx = new UsingForDeclarationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 28, SolidityParser.RULE_usingForDeclaration);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 332;\n        this.match(SolidityParser.T__23);\n        this.state = 333;\n        this.identifier();\n        this.state = 334;\n        this.match(SolidityParser.T__24);\n        this.state = 337;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__11:\n            this.state = 335;\n            this.match(SolidityParser.T__11);\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__27:\n        case SolidityParser.T__33:\n        case SolidityParser.T__35:\n        case SolidityParser.T__39:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.T__92:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n            this.state = 336;\n            this.typeName(0);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 339;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StructDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_structDefinition;\n    return this;\n}\n\nStructDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStructDefinitionContext.prototype.constructor = StructDefinitionContext;\n\nStructDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nStructDefinitionContext.prototype.variableDeclaration = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(VariableDeclarationContext);\n    } else {\n        return this.getTypedRuleContext(VariableDeclarationContext,i);\n    }\n};\n\nStructDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStructDefinition(this);\n\t}\n};\n\nStructDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStructDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.StructDefinitionContext = StructDefinitionContext;\n\nSolidityParser.prototype.structDefinition = function() {\n\n    var localctx = new StructDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 30, SolidityParser.RULE_structDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 341;\n        this.match(SolidityParser.T__25);\n        this.state = 342;\n        this.identifier();\n        this.state = 343;\n        this.match(SolidityParser.T__13);\n        this.state = 354;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 344;\n            this.variableDeclaration();\n            this.state = 345;\n            this.match(SolidityParser.T__1);\n            this.state = 351;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                this.state = 346;\n                this.variableDeclaration();\n                this.state = 347;\n                this.match(SolidityParser.T__1);\n                this.state = 353;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n        }\n\n        this.state = 356;\n        this.match(SolidityParser.T__15);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ModifierDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_modifierDefinition;\n    return this;\n}\n\nModifierDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nModifierDefinitionContext.prototype.constructor = ModifierDefinitionContext;\n\nModifierDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nModifierDefinitionContext.prototype.block = function() {\n    return this.getTypedRuleContext(BlockContext,0);\n};\n\nModifierDefinitionContext.prototype.parameterList = function() {\n    return this.getTypedRuleContext(ParameterListContext,0);\n};\n\nModifierDefinitionContext.prototype.VirtualKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.VirtualKeyword);\n    } else {\n        return this.getToken(SolidityParser.VirtualKeyword, i);\n    }\n};\n\n\nModifierDefinitionContext.prototype.overrideSpecifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(OverrideSpecifierContext);\n    } else {\n        return this.getTypedRuleContext(OverrideSpecifierContext,i);\n    }\n};\n\nModifierDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterModifierDefinition(this);\n\t}\n};\n\nModifierDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitModifierDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.ModifierDefinitionContext = ModifierDefinitionContext;\n\nSolidityParser.prototype.modifierDefinition = function() {\n\n    var localctx = new ModifierDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 32, SolidityParser.RULE_modifierDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 358;\n        this.match(SolidityParser.T__26);\n        this.state = 359;\n        this.identifier();\n        this.state = 361;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__21) {\n            this.state = 360;\n            this.parameterList();\n        }\n\n        this.state = 367;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__93 || _la===SolidityParser.VirtualKeyword) {\n            this.state = 365;\n            this._errHandler.sync(this);\n            switch(this._input.LA(1)) {\n            case SolidityParser.VirtualKeyword:\n                this.state = 363;\n                this.match(SolidityParser.VirtualKeyword);\n                break;\n            case SolidityParser.T__93:\n                this.state = 364;\n                this.overrideSpecifier();\n                break;\n            default:\n                throw new antlr4.error.NoViableAltException(this);\n            }\n            this.state = 369;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 370;\n        this.block();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ModifierInvocationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_modifierInvocation;\n    return this;\n}\n\nModifierInvocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nModifierInvocationContext.prototype.constructor = ModifierInvocationContext;\n\nModifierInvocationContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nModifierInvocationContext.prototype.expressionList = function() {\n    return this.getTypedRuleContext(ExpressionListContext,0);\n};\n\nModifierInvocationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterModifierInvocation(this);\n\t}\n};\n\nModifierInvocationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitModifierInvocation(this);\n\t}\n};\n\n\n\n\nSolidityParser.ModifierInvocationContext = ModifierInvocationContext;\n\nSolidityParser.prototype.modifierInvocation = function() {\n\n    var localctx = new ModifierInvocationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 34, SolidityParser.RULE_modifierInvocation);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 372;\n        this.identifier();\n        this.state = 378;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__21) {\n            this.state = 373;\n            this.match(SolidityParser.T__21);\n            this.state = 375;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 374;\n                this.expressionList();\n            }\n\n            this.state = 377;\n            this.match(SolidityParser.T__22);\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionDefinition;\n    return this;\n}\n\nFunctionDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionDefinitionContext.prototype.constructor = FunctionDefinitionContext;\n\nFunctionDefinitionContext.prototype.functionDescriptor = function() {\n    return this.getTypedRuleContext(FunctionDescriptorContext,0);\n};\n\nFunctionDefinitionContext.prototype.parameterList = function() {\n    return this.getTypedRuleContext(ParameterListContext,0);\n};\n\nFunctionDefinitionContext.prototype.modifierList = function() {\n    return this.getTypedRuleContext(ModifierListContext,0);\n};\n\nFunctionDefinitionContext.prototype.block = function() {\n    return this.getTypedRuleContext(BlockContext,0);\n};\n\nFunctionDefinitionContext.prototype.returnParameters = function() {\n    return this.getTypedRuleContext(ReturnParametersContext,0);\n};\n\nFunctionDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionDefinition(this);\n\t}\n};\n\nFunctionDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionDefinitionContext = FunctionDefinitionContext;\n\nSolidityParser.prototype.functionDefinition = function() {\n\n    var localctx = new FunctionDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 36, SolidityParser.RULE_functionDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 380;\n        this.functionDescriptor();\n        this.state = 381;\n        this.parameterList();\n        this.state = 382;\n        this.modifierList();\n        this.state = 384;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__28) {\n            this.state = 383;\n            this.returnParameters();\n        }\n\n        this.state = 388;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__1:\n            this.state = 386;\n            this.match(SolidityParser.T__1);\n            break;\n        case SolidityParser.T__13:\n            this.state = 387;\n            this.block();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionDescriptorContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionDescriptor;\n    return this;\n}\n\nFunctionDescriptorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionDescriptorContext.prototype.constructor = FunctionDescriptorContext;\n\nFunctionDescriptorContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nFunctionDescriptorContext.prototype.ConstructorKeyword = function() {\n    return this.getToken(SolidityParser.ConstructorKeyword, 0);\n};\n\nFunctionDescriptorContext.prototype.FallbackKeyword = function() {\n    return this.getToken(SolidityParser.FallbackKeyword, 0);\n};\n\nFunctionDescriptorContext.prototype.ReceiveKeyword = function() {\n    return this.getToken(SolidityParser.ReceiveKeyword, 0);\n};\n\nFunctionDescriptorContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionDescriptor(this);\n\t}\n};\n\nFunctionDescriptorContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionDescriptor(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionDescriptorContext = FunctionDescriptorContext;\n\nSolidityParser.prototype.functionDescriptor = function() {\n\n    var localctx = new FunctionDescriptorContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 38, SolidityParser.RULE_functionDescriptor);\n    var _la = 0; // Token type\n    try {\n        this.state = 397;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__27:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 390;\n            this.match(SolidityParser.T__27);\n            this.state = 392;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                this.state = 391;\n                this.identifier();\n            }\n\n            break;\n        case SolidityParser.ConstructorKeyword:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 394;\n            this.match(SolidityParser.ConstructorKeyword);\n            break;\n        case SolidityParser.FallbackKeyword:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 395;\n            this.match(SolidityParser.FallbackKeyword);\n            break;\n        case SolidityParser.ReceiveKeyword:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 396;\n            this.match(SolidityParser.ReceiveKeyword);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ReturnParametersContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_returnParameters;\n    return this;\n}\n\nReturnParametersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nReturnParametersContext.prototype.constructor = ReturnParametersContext;\n\nReturnParametersContext.prototype.parameterList = function() {\n    return this.getTypedRuleContext(ParameterListContext,0);\n};\n\nReturnParametersContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterReturnParameters(this);\n\t}\n};\n\nReturnParametersContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitReturnParameters(this);\n\t}\n};\n\n\n\n\nSolidityParser.ReturnParametersContext = ReturnParametersContext;\n\nSolidityParser.prototype.returnParameters = function() {\n\n    var localctx = new ReturnParametersContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 40, SolidityParser.RULE_returnParameters);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 399;\n        this.match(SolidityParser.T__28);\n        this.state = 400;\n        this.parameterList();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ModifierListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_modifierList;\n    return this;\n}\n\nModifierListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nModifierListContext.prototype.constructor = ModifierListContext;\n\nModifierListContext.prototype.ExternalKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.ExternalKeyword);\n    } else {\n        return this.getToken(SolidityParser.ExternalKeyword, i);\n    }\n};\n\n\nModifierListContext.prototype.PublicKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.PublicKeyword);\n    } else {\n        return this.getToken(SolidityParser.PublicKeyword, i);\n    }\n};\n\n\nModifierListContext.prototype.InternalKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.InternalKeyword);\n    } else {\n        return this.getToken(SolidityParser.InternalKeyword, i);\n    }\n};\n\n\nModifierListContext.prototype.PrivateKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.PrivateKeyword);\n    } else {\n        return this.getToken(SolidityParser.PrivateKeyword, i);\n    }\n};\n\n\nModifierListContext.prototype.VirtualKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.VirtualKeyword);\n    } else {\n        return this.getToken(SolidityParser.VirtualKeyword, i);\n    }\n};\n\n\nModifierListContext.prototype.stateMutability = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(StateMutabilityContext);\n    } else {\n        return this.getTypedRuleContext(StateMutabilityContext,i);\n    }\n};\n\nModifierListContext.prototype.modifierInvocation = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ModifierInvocationContext);\n    } else {\n        return this.getTypedRuleContext(ModifierInvocationContext,i);\n    }\n};\n\nModifierListContext.prototype.overrideSpecifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(OverrideSpecifierContext);\n    } else {\n        return this.getTypedRuleContext(OverrideSpecifierContext,i);\n    }\n};\n\nModifierListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterModifierList(this);\n\t}\n};\n\nModifierListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitModifierList(this);\n\t}\n};\n\n\n\n\nSolidityParser.ModifierListContext = ModifierListContext;\n\nSolidityParser.prototype.modifierList = function() {\n\n    var localctx = new ModifierListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 42, SolidityParser.RULE_modifierList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 412;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.T__93 - 93)) | (1 << (SolidityParser.ConstantKeyword - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.ExternalKeyword - 93)) | (1 << (SolidityParser.InternalKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.PrivateKeyword - 93)) | (1 << (SolidityParser.PublicKeyword - 93)) | (1 << (SolidityParser.VirtualKeyword - 93)) | (1 << (SolidityParser.PureKeyword - 93)) | (1 << (SolidityParser.ViewKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 410;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input,35,this._ctx);\n            switch(la_) {\n            case 1:\n                this.state = 402;\n                this.match(SolidityParser.ExternalKeyword);\n                break;\n\n            case 2:\n                this.state = 403;\n                this.match(SolidityParser.PublicKeyword);\n                break;\n\n            case 3:\n                this.state = 404;\n                this.match(SolidityParser.InternalKeyword);\n                break;\n\n            case 4:\n                this.state = 405;\n                this.match(SolidityParser.PrivateKeyword);\n                break;\n\n            case 5:\n                this.state = 406;\n                this.match(SolidityParser.VirtualKeyword);\n                break;\n\n            case 6:\n                this.state = 407;\n                this.stateMutability();\n                break;\n\n            case 7:\n                this.state = 408;\n                this.modifierInvocation();\n                break;\n\n            case 8:\n                this.state = 409;\n                this.overrideSpecifier();\n                break;\n\n            }\n            this.state = 414;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EventDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_eventDefinition;\n    return this;\n}\n\nEventDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEventDefinitionContext.prototype.constructor = EventDefinitionContext;\n\nEventDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nEventDefinitionContext.prototype.eventParameterList = function() {\n    return this.getTypedRuleContext(EventParameterListContext,0);\n};\n\nEventDefinitionContext.prototype.AnonymousKeyword = function() {\n    return this.getToken(SolidityParser.AnonymousKeyword, 0);\n};\n\nEventDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEventDefinition(this);\n\t}\n};\n\nEventDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEventDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.EventDefinitionContext = EventDefinitionContext;\n\nSolidityParser.prototype.eventDefinition = function() {\n\n    var localctx = new EventDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 44, SolidityParser.RULE_eventDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 415;\n        this.match(SolidityParser.T__29);\n        this.state = 416;\n        this.identifier();\n        this.state = 417;\n        this.eventParameterList();\n        this.state = 419;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.AnonymousKeyword) {\n            this.state = 418;\n            this.match(SolidityParser.AnonymousKeyword);\n        }\n\n        this.state = 421;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EnumValueContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_enumValue;\n    return this;\n}\n\nEnumValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEnumValueContext.prototype.constructor = EnumValueContext;\n\nEnumValueContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nEnumValueContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEnumValue(this);\n\t}\n};\n\nEnumValueContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEnumValue(this);\n\t}\n};\n\n\n\n\nSolidityParser.EnumValueContext = EnumValueContext;\n\nSolidityParser.prototype.enumValue = function() {\n\n    var localctx = new EnumValueContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 46, SolidityParser.RULE_enumValue);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 423;\n        this.identifier();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EnumDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_enumDefinition;\n    return this;\n}\n\nEnumDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEnumDefinitionContext.prototype.constructor = EnumDefinitionContext;\n\nEnumDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nEnumDefinitionContext.prototype.enumValue = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(EnumValueContext);\n    } else {\n        return this.getTypedRuleContext(EnumValueContext,i);\n    }\n};\n\nEnumDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEnumDefinition(this);\n\t}\n};\n\nEnumDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEnumDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.EnumDefinitionContext = EnumDefinitionContext;\n\nSolidityParser.prototype.enumDefinition = function() {\n\n    var localctx = new EnumDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 48, SolidityParser.RULE_enumDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 425;\n        this.match(SolidityParser.T__30);\n        this.state = 426;\n        this.identifier();\n        this.state = 427;\n        this.match(SolidityParser.T__13);\n        this.state = 429;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 428;\n            this.enumValue();\n        }\n\n        this.state = 435;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__14) {\n            this.state = 431;\n            this.match(SolidityParser.T__14);\n            this.state = 432;\n            this.enumValue();\n            this.state = 437;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 438;\n        this.match(SolidityParser.T__15);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ParameterListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_parameterList;\n    return this;\n}\n\nParameterListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nParameterListContext.prototype.constructor = ParameterListContext;\n\nParameterListContext.prototype.parameter = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ParameterContext);\n    } else {\n        return this.getTypedRuleContext(ParameterContext,i);\n    }\n};\n\nParameterListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterParameterList(this);\n\t}\n};\n\nParameterListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitParameterList(this);\n\t}\n};\n\n\n\n\nSolidityParser.ParameterListContext = ParameterListContext;\n\nSolidityParser.prototype.parameterList = function() {\n\n    var localctx = new ParameterListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 50, SolidityParser.RULE_parameterList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 440;\n        this.match(SolidityParser.T__21);\n        this.state = 449;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 441;\n            this.parameter();\n            this.state = 446;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 442;\n                this.match(SolidityParser.T__14);\n                this.state = 443;\n                this.parameter();\n                this.state = 448;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n        }\n\n        this.state = 451;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ParameterContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_parameter;\n    return this;\n}\n\nParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nParameterContext.prototype.constructor = ParameterContext;\n\nParameterContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nParameterContext.prototype.storageLocation = function() {\n    return this.getTypedRuleContext(StorageLocationContext,0);\n};\n\nParameterContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nParameterContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterParameter(this);\n\t}\n};\n\nParameterContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitParameter(this);\n\t}\n};\n\n\n\n\nSolidityParser.ParameterContext = ParameterContext;\n\nSolidityParser.prototype.parameter = function() {\n\n    var localctx = new ParameterContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 52, SolidityParser.RULE_parameter);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 453;\n        this.typeName(0);\n        this.state = 455;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,42,this._ctx);\n        if(la_===1) {\n            this.state = 454;\n            this.storageLocation();\n\n        }\n        this.state = 458;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 457;\n            this.identifier();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EventParameterListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_eventParameterList;\n    return this;\n}\n\nEventParameterListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEventParameterListContext.prototype.constructor = EventParameterListContext;\n\nEventParameterListContext.prototype.eventParameter = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(EventParameterContext);\n    } else {\n        return this.getTypedRuleContext(EventParameterContext,i);\n    }\n};\n\nEventParameterListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEventParameterList(this);\n\t}\n};\n\nEventParameterListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEventParameterList(this);\n\t}\n};\n\n\n\n\nSolidityParser.EventParameterListContext = EventParameterListContext;\n\nSolidityParser.prototype.eventParameterList = function() {\n\n    var localctx = new EventParameterListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 54, SolidityParser.RULE_eventParameterList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 460;\n        this.match(SolidityParser.T__21);\n        this.state = 469;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 461;\n            this.eventParameter();\n            this.state = 466;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 462;\n                this.match(SolidityParser.T__14);\n                this.state = 463;\n                this.eventParameter();\n                this.state = 468;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n        }\n\n        this.state = 471;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EventParameterContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_eventParameter;\n    return this;\n}\n\nEventParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEventParameterContext.prototype.constructor = EventParameterContext;\n\nEventParameterContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nEventParameterContext.prototype.IndexedKeyword = function() {\n    return this.getToken(SolidityParser.IndexedKeyword, 0);\n};\n\nEventParameterContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nEventParameterContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEventParameter(this);\n\t}\n};\n\nEventParameterContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEventParameter(this);\n\t}\n};\n\n\n\n\nSolidityParser.EventParameterContext = EventParameterContext;\n\nSolidityParser.prototype.eventParameter = function() {\n\n    var localctx = new EventParameterContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 56, SolidityParser.RULE_eventParameter);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 473;\n        this.typeName(0);\n        this.state = 475;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.IndexedKeyword) {\n            this.state = 474;\n            this.match(SolidityParser.IndexedKeyword);\n        }\n\n        this.state = 478;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 477;\n            this.identifier();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionTypeParameterListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionTypeParameterList;\n    return this;\n}\n\nFunctionTypeParameterListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionTypeParameterListContext.prototype.constructor = FunctionTypeParameterListContext;\n\nFunctionTypeParameterListContext.prototype.functionTypeParameter = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(FunctionTypeParameterContext);\n    } else {\n        return this.getTypedRuleContext(FunctionTypeParameterContext,i);\n    }\n};\n\nFunctionTypeParameterListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionTypeParameterList(this);\n\t}\n};\n\nFunctionTypeParameterListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionTypeParameterList(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionTypeParameterListContext = FunctionTypeParameterListContext;\n\nSolidityParser.prototype.functionTypeParameterList = function() {\n\n    var localctx = new FunctionTypeParameterListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 58, SolidityParser.RULE_functionTypeParameterList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 480;\n        this.match(SolidityParser.T__21);\n        this.state = 489;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 481;\n            this.functionTypeParameter();\n            this.state = 486;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 482;\n                this.match(SolidityParser.T__14);\n                this.state = 483;\n                this.functionTypeParameter();\n                this.state = 488;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n        }\n\n        this.state = 491;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionTypeParameterContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionTypeParameter;\n    return this;\n}\n\nFunctionTypeParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionTypeParameterContext.prototype.constructor = FunctionTypeParameterContext;\n\nFunctionTypeParameterContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nFunctionTypeParameterContext.prototype.storageLocation = function() {\n    return this.getTypedRuleContext(StorageLocationContext,0);\n};\n\nFunctionTypeParameterContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionTypeParameter(this);\n\t}\n};\n\nFunctionTypeParameterContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionTypeParameter(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionTypeParameterContext = FunctionTypeParameterContext;\n\nSolidityParser.prototype.functionTypeParameter = function() {\n\n    var localctx = new FunctionTypeParameterContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 60, SolidityParser.RULE_functionTypeParameter);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 493;\n        this.typeName(0);\n        this.state = 495;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (SolidityParser.T__37 - 38)) | (1 << (SolidityParser.T__38 - 38)) | (1 << (SolidityParser.T__39 - 38)))) !== 0)) {\n            this.state = 494;\n            this.storageLocation();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VariableDeclarationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_variableDeclaration;\n    return this;\n}\n\nVariableDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVariableDeclarationContext.prototype.constructor = VariableDeclarationContext;\n\nVariableDeclarationContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nVariableDeclarationContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nVariableDeclarationContext.prototype.storageLocation = function() {\n    return this.getTypedRuleContext(StorageLocationContext,0);\n};\n\nVariableDeclarationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVariableDeclaration(this);\n\t}\n};\n\nVariableDeclarationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVariableDeclaration(this);\n\t}\n};\n\n\n\n\nSolidityParser.VariableDeclarationContext = VariableDeclarationContext;\n\nSolidityParser.prototype.variableDeclaration = function() {\n\n    var localctx = new VariableDeclarationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 62, SolidityParser.RULE_variableDeclaration);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 497;\n        this.typeName(0);\n        this.state = 499;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,51,this._ctx);\n        if(la_===1) {\n            this.state = 498;\n            this.storageLocation();\n\n        }\n        this.state = 501;\n        this.identifier();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction TypeNameContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_typeName;\n    return this;\n}\n\nTypeNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nTypeNameContext.prototype.constructor = TypeNameContext;\n\nTypeNameContext.prototype.elementaryTypeName = function() {\n    return this.getTypedRuleContext(ElementaryTypeNameContext,0);\n};\n\nTypeNameContext.prototype.userDefinedTypeName = function() {\n    return this.getTypedRuleContext(UserDefinedTypeNameContext,0);\n};\n\nTypeNameContext.prototype.mapping = function() {\n    return this.getTypedRuleContext(MappingContext,0);\n};\n\nTypeNameContext.prototype.functionTypeName = function() {\n    return this.getTypedRuleContext(FunctionTypeNameContext,0);\n};\n\nTypeNameContext.prototype.PayableKeyword = function() {\n    return this.getToken(SolidityParser.PayableKeyword, 0);\n};\n\nTypeNameContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nTypeNameContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nTypeNameContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterTypeName(this);\n\t}\n};\n\nTypeNameContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitTypeName(this);\n\t}\n};\n\n\n\nSolidityParser.prototype.typeName = function(_p) {\n\tif(_p===undefined) {\n\t    _p = 0;\n\t}\n    var _parentctx = this._ctx;\n    var _parentState = this.state;\n    var localctx = new TypeNameContext(this, this._ctx, _parentState);\n    var _prevctx = localctx;\n    var _startState = 64;\n    this.enterRecursionRule(localctx, 64, SolidityParser.RULE_typeName, _p);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 510;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,52,this._ctx);\n        switch(la_) {\n        case 1:\n            this.state = 504;\n            this.elementaryTypeName();\n            break;\n\n        case 2:\n            this.state = 505;\n            this.userDefinedTypeName();\n            break;\n\n        case 3:\n            this.state = 506;\n            this.mapping();\n            break;\n\n        case 4:\n            this.state = 507;\n            this.functionTypeName();\n            break;\n\n        case 5:\n            this.state = 508;\n            this.match(SolidityParser.T__33);\n            this.state = 509;\n            this.match(SolidityParser.PayableKeyword);\n            break;\n\n        }\n        this._ctx.stop = this._input.LT(-1);\n        this.state = 520;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,54,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                if(this._parseListeners!==null) {\n                    this.triggerExitRuleEvent();\n                }\n                _prevctx = localctx;\n                localctx = new TypeNameContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_typeName);\n                this.state = 512;\n                if (!( this.precpred(this._ctx, 3))) {\n                    throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\n                }\n                this.state = 513;\n                this.match(SolidityParser.T__31);\n                this.state = 515;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                    this.state = 514;\n                    this.expression(0);\n                }\n\n                this.state = 517;\n                this.match(SolidityParser.T__32); \n            }\n            this.state = 522;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,54,this._ctx);\n        }\n\n    } catch( error) {\n        if(error instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = error;\n\t        this._errHandler.reportError(this, error);\n\t        this._errHandler.recover(this, error);\n\t    } else {\n\t    \tthrow error;\n\t    }\n    } finally {\n        this.unrollRecursionContexts(_parentctx)\n    }\n    return localctx;\n};\n\n\nfunction UserDefinedTypeNameContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_userDefinedTypeName;\n    return this;\n}\n\nUserDefinedTypeNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nUserDefinedTypeNameContext.prototype.constructor = UserDefinedTypeNameContext;\n\nUserDefinedTypeNameContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nUserDefinedTypeNameContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterUserDefinedTypeName(this);\n\t}\n};\n\nUserDefinedTypeNameContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitUserDefinedTypeName(this);\n\t}\n};\n\n\n\n\nSolidityParser.UserDefinedTypeNameContext = UserDefinedTypeNameContext;\n\nSolidityParser.prototype.userDefinedTypeName = function() {\n\n    var localctx = new UserDefinedTypeNameContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 66, SolidityParser.RULE_userDefinedTypeName);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 523;\n        this.identifier();\n        this.state = 528;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,55,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                this.state = 524;\n                this.match(SolidityParser.T__34);\n                this.state = 525;\n                this.identifier(); \n            }\n            this.state = 530;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,55,this._ctx);\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction MappingKeyContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_mappingKey;\n    return this;\n}\n\nMappingKeyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nMappingKeyContext.prototype.constructor = MappingKeyContext;\n\nMappingKeyContext.prototype.elementaryTypeName = function() {\n    return this.getTypedRuleContext(ElementaryTypeNameContext,0);\n};\n\nMappingKeyContext.prototype.userDefinedTypeName = function() {\n    return this.getTypedRuleContext(UserDefinedTypeNameContext,0);\n};\n\nMappingKeyContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterMappingKey(this);\n\t}\n};\n\nMappingKeyContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitMappingKey(this);\n\t}\n};\n\n\n\n\nSolidityParser.MappingKeyContext = MappingKeyContext;\n\nSolidityParser.prototype.mappingKey = function() {\n\n    var localctx = new MappingKeyContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 68, SolidityParser.RULE_mappingKey);\n    try {\n        this.state = 533;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__33:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 531;\n            this.elementaryTypeName();\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__39:\n        case SolidityParser.T__92:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 532;\n            this.userDefinedTypeName();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction MappingContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_mapping;\n    return this;\n}\n\nMappingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nMappingContext.prototype.constructor = MappingContext;\n\nMappingContext.prototype.mappingKey = function() {\n    return this.getTypedRuleContext(MappingKeyContext,0);\n};\n\nMappingContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nMappingContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterMapping(this);\n\t}\n};\n\nMappingContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitMapping(this);\n\t}\n};\n\n\n\n\nSolidityParser.MappingContext = MappingContext;\n\nSolidityParser.prototype.mapping = function() {\n\n    var localctx = new MappingContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 70, SolidityParser.RULE_mapping);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 535;\n        this.match(SolidityParser.T__35);\n        this.state = 536;\n        this.match(SolidityParser.T__21);\n        this.state = 537;\n        this.mappingKey();\n        this.state = 538;\n        this.match(SolidityParser.T__36);\n        this.state = 539;\n        this.typeName(0);\n        this.state = 540;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionTypeNameContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionTypeName;\n    return this;\n}\n\nFunctionTypeNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionTypeNameContext.prototype.constructor = FunctionTypeNameContext;\n\nFunctionTypeNameContext.prototype.functionTypeParameterList = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(FunctionTypeParameterListContext);\n    } else {\n        return this.getTypedRuleContext(FunctionTypeParameterListContext,i);\n    }\n};\n\nFunctionTypeNameContext.prototype.InternalKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.InternalKeyword);\n    } else {\n        return this.getToken(SolidityParser.InternalKeyword, i);\n    }\n};\n\n\nFunctionTypeNameContext.prototype.ExternalKeyword = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.ExternalKeyword);\n    } else {\n        return this.getToken(SolidityParser.ExternalKeyword, i);\n    }\n};\n\n\nFunctionTypeNameContext.prototype.stateMutability = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(StateMutabilityContext);\n    } else {\n        return this.getTypedRuleContext(StateMutabilityContext,i);\n    }\n};\n\nFunctionTypeNameContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionTypeName(this);\n\t}\n};\n\nFunctionTypeNameContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionTypeName(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionTypeNameContext = FunctionTypeNameContext;\n\nSolidityParser.prototype.functionTypeName = function() {\n\n    var localctx = new FunctionTypeNameContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 72, SolidityParser.RULE_functionTypeName);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 542;\n        this.match(SolidityParser.T__27);\n        this.state = 543;\n        this.functionTypeParameterList();\n        this.state = 549;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,58,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                this.state = 547;\n                this._errHandler.sync(this);\n                switch(this._input.LA(1)) {\n                case SolidityParser.InternalKeyword:\n                    this.state = 544;\n                    this.match(SolidityParser.InternalKeyword);\n                    break;\n                case SolidityParser.ExternalKeyword:\n                    this.state = 545;\n                    this.match(SolidityParser.ExternalKeyword);\n                    break;\n                case SolidityParser.ConstantKeyword:\n                case SolidityParser.PayableKeyword:\n                case SolidityParser.PureKeyword:\n                case SolidityParser.ViewKeyword:\n                    this.state = 546;\n                    this.stateMutability();\n                    break;\n                default:\n                    throw new antlr4.error.NoViableAltException(this);\n                } \n            }\n            this.state = 551;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,58,this._ctx);\n        }\n\n        this.state = 554;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,59,this._ctx);\n        if(la_===1) {\n            this.state = 552;\n            this.match(SolidityParser.T__28);\n            this.state = 553;\n            this.functionTypeParameterList();\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StorageLocationContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_storageLocation;\n    return this;\n}\n\nStorageLocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStorageLocationContext.prototype.constructor = StorageLocationContext;\n\n\nStorageLocationContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStorageLocation(this);\n\t}\n};\n\nStorageLocationContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStorageLocation(this);\n\t}\n};\n\n\n\n\nSolidityParser.StorageLocationContext = StorageLocationContext;\n\nSolidityParser.prototype.storageLocation = function() {\n\n    var localctx = new StorageLocationContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 74, SolidityParser.RULE_storageLocation);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 556;\n        _la = this._input.LA(1);\n        if(!(((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (SolidityParser.T__37 - 38)) | (1 << (SolidityParser.T__38 - 38)) | (1 << (SolidityParser.T__39 - 38)))) !== 0))) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StateMutabilityContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_stateMutability;\n    return this;\n}\n\nStateMutabilityContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStateMutabilityContext.prototype.constructor = StateMutabilityContext;\n\nStateMutabilityContext.prototype.PureKeyword = function() {\n    return this.getToken(SolidityParser.PureKeyword, 0);\n};\n\nStateMutabilityContext.prototype.ConstantKeyword = function() {\n    return this.getToken(SolidityParser.ConstantKeyword, 0);\n};\n\nStateMutabilityContext.prototype.ViewKeyword = function() {\n    return this.getToken(SolidityParser.ViewKeyword, 0);\n};\n\nStateMutabilityContext.prototype.PayableKeyword = function() {\n    return this.getToken(SolidityParser.PayableKeyword, 0);\n};\n\nStateMutabilityContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStateMutability(this);\n\t}\n};\n\nStateMutabilityContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStateMutability(this);\n\t}\n};\n\n\n\n\nSolidityParser.StateMutabilityContext = StateMutabilityContext;\n\nSolidityParser.prototype.stateMutability = function() {\n\n    var localctx = new StateMutabilityContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 76, SolidityParser.RULE_stateMutability);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 558;\n        _la = this._input.LA(1);\n        if(!(((((_la - 108)) & ~0x1f) == 0 && ((1 << (_la - 108)) & ((1 << (SolidityParser.ConstantKeyword - 108)) | (1 << (SolidityParser.PayableKeyword - 108)) | (1 << (SolidityParser.PureKeyword - 108)) | (1 << (SolidityParser.ViewKeyword - 108)))) !== 0))) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction BlockContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_block;\n    return this;\n}\n\nBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nBlockContext.prototype.constructor = BlockContext;\n\nBlockContext.prototype.statement = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(StatementContext);\n    } else {\n        return this.getTypedRuleContext(StatementContext,i);\n    }\n};\n\nBlockContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterBlock(this);\n\t}\n};\n\nBlockContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitBlock(this);\n\t}\n};\n\n\n\n\nSolidityParser.BlockContext = BlockContext;\n\nSolidityParser.prototype.block = function() {\n\n    var localctx = new BlockContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 78, SolidityParser.RULE_block);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 560;\n        this.match(SolidityParser.T__13);\n        this.state = 564;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__13) | (1 << SolidityParser.T__21) | (1 << SolidityParser.T__24) | (1 << SolidityParser.T__27))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__35 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__40 - 32)) | (1 << (SolidityParser.T__42 - 32)) | (1 << (SolidityParser.T__44 - 32)) | (1 << (SolidityParser.T__45 - 32)) | (1 << (SolidityParser.T__46 - 32)) | (1 << (SolidityParser.T__47 - 32)) | (1 << (SolidityParser.T__48 - 32)) | (1 << (SolidityParser.T__49 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.BreakKeyword - 93)) | (1 << (SolidityParser.ContinueKeyword - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n            this.state = 561;\n            this.statement();\n            this.state = 566;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 567;\n        this.match(SolidityParser.T__15);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_statement;\n    return this;\n}\n\nStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStatementContext.prototype.constructor = StatementContext;\n\nStatementContext.prototype.ifStatement = function() {\n    return this.getTypedRuleContext(IfStatementContext,0);\n};\n\nStatementContext.prototype.tryStatement = function() {\n    return this.getTypedRuleContext(TryStatementContext,0);\n};\n\nStatementContext.prototype.whileStatement = function() {\n    return this.getTypedRuleContext(WhileStatementContext,0);\n};\n\nStatementContext.prototype.forStatement = function() {\n    return this.getTypedRuleContext(ForStatementContext,0);\n};\n\nStatementContext.prototype.block = function() {\n    return this.getTypedRuleContext(BlockContext,0);\n};\n\nStatementContext.prototype.inlineAssemblyStatement = function() {\n    return this.getTypedRuleContext(InlineAssemblyStatementContext,0);\n};\n\nStatementContext.prototype.doWhileStatement = function() {\n    return this.getTypedRuleContext(DoWhileStatementContext,0);\n};\n\nStatementContext.prototype.continueStatement = function() {\n    return this.getTypedRuleContext(ContinueStatementContext,0);\n};\n\nStatementContext.prototype.breakStatement = function() {\n    return this.getTypedRuleContext(BreakStatementContext,0);\n};\n\nStatementContext.prototype.returnStatement = function() {\n    return this.getTypedRuleContext(ReturnStatementContext,0);\n};\n\nStatementContext.prototype.throwStatement = function() {\n    return this.getTypedRuleContext(ThrowStatementContext,0);\n};\n\nStatementContext.prototype.emitStatement = function() {\n    return this.getTypedRuleContext(EmitStatementContext,0);\n};\n\nStatementContext.prototype.simpleStatement = function() {\n    return this.getTypedRuleContext(SimpleStatementContext,0);\n};\n\nStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStatement(this);\n\t}\n};\n\nStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.StatementContext = StatementContext;\n\nSolidityParser.prototype.statement = function() {\n\n    var localctx = new StatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 80, SolidityParser.RULE_statement);\n    try {\n        this.state = 582;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__40:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 569;\n            this.ifStatement();\n            break;\n        case SolidityParser.T__42:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 570;\n            this.tryStatement();\n            break;\n        case SolidityParser.T__44:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 571;\n            this.whileStatement();\n            break;\n        case SolidityParser.T__24:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 572;\n            this.forStatement();\n            break;\n        case SolidityParser.T__13:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 573;\n            this.block();\n            break;\n        case SolidityParser.T__45:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 574;\n            this.inlineAssemblyStatement();\n            break;\n        case SolidityParser.T__46:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 575;\n            this.doWhileStatement();\n            break;\n        case SolidityParser.ContinueKeyword:\n            this.enterOuterAlt(localctx, 8);\n            this.state = 576;\n            this.continueStatement();\n            break;\n        case SolidityParser.BreakKeyword:\n            this.enterOuterAlt(localctx, 9);\n            this.state = 577;\n            this.breakStatement();\n            break;\n        case SolidityParser.T__47:\n            this.enterOuterAlt(localctx, 10);\n            this.state = 578;\n            this.returnStatement();\n            break;\n        case SolidityParser.T__48:\n            this.enterOuterAlt(localctx, 11);\n            this.state = 579;\n            this.throwStatement();\n            break;\n        case SolidityParser.T__49:\n            this.enterOuterAlt(localctx, 12);\n            this.state = 580;\n            this.emitStatement();\n            break;\n        case SolidityParser.T__3:\n        case SolidityParser.T__12:\n        case SolidityParser.T__21:\n        case SolidityParser.T__27:\n        case SolidityParser.T__31:\n        case SolidityParser.T__33:\n        case SolidityParser.T__35:\n        case SolidityParser.T__39:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.T__54:\n        case SolidityParser.T__55:\n        case SolidityParser.T__56:\n        case SolidityParser.T__58:\n        case SolidityParser.T__59:\n        case SolidityParser.T__60:\n        case SolidityParser.T__61:\n        case SolidityParser.T__62:\n        case SolidityParser.T__92:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n        case SolidityParser.BooleanLiteral:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.TypeKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.enterOuterAlt(localctx, 13);\n            this.state = 581;\n            this.simpleStatement();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ExpressionStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_expressionStatement;\n    return this;\n}\n\nExpressionStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nExpressionStatementContext.prototype.constructor = ExpressionStatementContext;\n\nExpressionStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nExpressionStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterExpressionStatement(this);\n\t}\n};\n\nExpressionStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitExpressionStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.ExpressionStatementContext = ExpressionStatementContext;\n\nSolidityParser.prototype.expressionStatement = function() {\n\n    var localctx = new ExpressionStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 82, SolidityParser.RULE_expressionStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 584;\n        this.expression(0);\n        this.state = 585;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction IfStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_ifStatement;\n    return this;\n}\n\nIfStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nIfStatementContext.prototype.constructor = IfStatementContext;\n\nIfStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nIfStatementContext.prototype.statement = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(StatementContext);\n    } else {\n        return this.getTypedRuleContext(StatementContext,i);\n    }\n};\n\nIfStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterIfStatement(this);\n\t}\n};\n\nIfStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitIfStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.IfStatementContext = IfStatementContext;\n\nSolidityParser.prototype.ifStatement = function() {\n\n    var localctx = new IfStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 84, SolidityParser.RULE_ifStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 587;\n        this.match(SolidityParser.T__40);\n        this.state = 588;\n        this.match(SolidityParser.T__21);\n        this.state = 589;\n        this.expression(0);\n        this.state = 590;\n        this.match(SolidityParser.T__22);\n        this.state = 591;\n        this.statement();\n        this.state = 594;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,62,this._ctx);\n        if(la_===1) {\n            this.state = 592;\n            this.match(SolidityParser.T__41);\n            this.state = 593;\n            this.statement();\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction TryStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_tryStatement;\n    return this;\n}\n\nTryStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nTryStatementContext.prototype.constructor = TryStatementContext;\n\nTryStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nTryStatementContext.prototype.block = function() {\n    return this.getTypedRuleContext(BlockContext,0);\n};\n\nTryStatementContext.prototype.returnParameters = function() {\n    return this.getTypedRuleContext(ReturnParametersContext,0);\n};\n\nTryStatementContext.prototype.catchClause = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(CatchClauseContext);\n    } else {\n        return this.getTypedRuleContext(CatchClauseContext,i);\n    }\n};\n\nTryStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterTryStatement(this);\n\t}\n};\n\nTryStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitTryStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.TryStatementContext = TryStatementContext;\n\nSolidityParser.prototype.tryStatement = function() {\n\n    var localctx = new TryStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 86, SolidityParser.RULE_tryStatement);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 596;\n        this.match(SolidityParser.T__42);\n        this.state = 597;\n        this.expression(0);\n        this.state = 599;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__28) {\n            this.state = 598;\n            this.returnParameters();\n        }\n\n        this.state = 601;\n        this.block();\n        this.state = 603; \n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n            this.state = 602;\n            this.catchClause();\n            this.state = 605; \n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        } while(_la===SolidityParser.T__43);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction CatchClauseContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_catchClause;\n    return this;\n}\n\nCatchClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nCatchClauseContext.prototype.constructor = CatchClauseContext;\n\nCatchClauseContext.prototype.block = function() {\n    return this.getTypedRuleContext(BlockContext,0);\n};\n\nCatchClauseContext.prototype.parameterList = function() {\n    return this.getTypedRuleContext(ParameterListContext,0);\n};\n\nCatchClauseContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nCatchClauseContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterCatchClause(this);\n\t}\n};\n\nCatchClauseContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitCatchClause(this);\n\t}\n};\n\n\n\n\nSolidityParser.CatchClauseContext = CatchClauseContext;\n\nSolidityParser.prototype.catchClause = function() {\n\n    var localctx = new CatchClauseContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 88, SolidityParser.RULE_catchClause);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 607;\n        this.match(SolidityParser.T__43);\n        this.state = 612;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(((((_la - 13)) & ~0x1f) == 0 && ((1 << (_la - 13)) & ((1 << (SolidityParser.T__12 - 13)) | (1 << (SolidityParser.T__21 - 13)) | (1 << (SolidityParser.T__39 - 13)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 609;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                this.state = 608;\n                this.identifier();\n            }\n\n            this.state = 611;\n            this.parameterList();\n        }\n\n        this.state = 614;\n        this.block();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction WhileStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_whileStatement;\n    return this;\n}\n\nWhileStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nWhileStatementContext.prototype.constructor = WhileStatementContext;\n\nWhileStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nWhileStatementContext.prototype.statement = function() {\n    return this.getTypedRuleContext(StatementContext,0);\n};\n\nWhileStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterWhileStatement(this);\n\t}\n};\n\nWhileStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitWhileStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.WhileStatementContext = WhileStatementContext;\n\nSolidityParser.prototype.whileStatement = function() {\n\n    var localctx = new WhileStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 90, SolidityParser.RULE_whileStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 616;\n        this.match(SolidityParser.T__44);\n        this.state = 617;\n        this.match(SolidityParser.T__21);\n        this.state = 618;\n        this.expression(0);\n        this.state = 619;\n        this.match(SolidityParser.T__22);\n        this.state = 620;\n        this.statement();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction SimpleStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_simpleStatement;\n    return this;\n}\n\nSimpleStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nSimpleStatementContext.prototype.constructor = SimpleStatementContext;\n\nSimpleStatementContext.prototype.variableDeclarationStatement = function() {\n    return this.getTypedRuleContext(VariableDeclarationStatementContext,0);\n};\n\nSimpleStatementContext.prototype.expressionStatement = function() {\n    return this.getTypedRuleContext(ExpressionStatementContext,0);\n};\n\nSimpleStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterSimpleStatement(this);\n\t}\n};\n\nSimpleStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitSimpleStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.SimpleStatementContext = SimpleStatementContext;\n\nSolidityParser.prototype.simpleStatement = function() {\n\n    var localctx = new SimpleStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 92, SolidityParser.RULE_simpleStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 624;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,67,this._ctx);\n        switch(la_) {\n        case 1:\n            this.state = 622;\n            this.variableDeclarationStatement();\n            break;\n\n        case 2:\n            this.state = 623;\n            this.expressionStatement();\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ForStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_forStatement;\n    return this;\n}\n\nForStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nForStatementContext.prototype.constructor = ForStatementContext;\n\nForStatementContext.prototype.statement = function() {\n    return this.getTypedRuleContext(StatementContext,0);\n};\n\nForStatementContext.prototype.simpleStatement = function() {\n    return this.getTypedRuleContext(SimpleStatementContext,0);\n};\n\nForStatementContext.prototype.expressionStatement = function() {\n    return this.getTypedRuleContext(ExpressionStatementContext,0);\n};\n\nForStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nForStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterForStatement(this);\n\t}\n};\n\nForStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitForStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.ForStatementContext = ForStatementContext;\n\nSolidityParser.prototype.forStatement = function() {\n\n    var localctx = new ForStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 94, SolidityParser.RULE_forStatement);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 626;\n        this.match(SolidityParser.T__24);\n        this.state = 627;\n        this.match(SolidityParser.T__21);\n        this.state = 630;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__3:\n        case SolidityParser.T__12:\n        case SolidityParser.T__21:\n        case SolidityParser.T__27:\n        case SolidityParser.T__31:\n        case SolidityParser.T__33:\n        case SolidityParser.T__35:\n        case SolidityParser.T__39:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.T__54:\n        case SolidityParser.T__55:\n        case SolidityParser.T__56:\n        case SolidityParser.T__58:\n        case SolidityParser.T__59:\n        case SolidityParser.T__60:\n        case SolidityParser.T__61:\n        case SolidityParser.T__62:\n        case SolidityParser.T__92:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n        case SolidityParser.BooleanLiteral:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.TypeKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.state = 628;\n            this.simpleStatement();\n            break;\n        case SolidityParser.T__1:\n            this.state = 629;\n            this.match(SolidityParser.T__1);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 634;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__3:\n        case SolidityParser.T__12:\n        case SolidityParser.T__21:\n        case SolidityParser.T__31:\n        case SolidityParser.T__33:\n        case SolidityParser.T__39:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.T__54:\n        case SolidityParser.T__55:\n        case SolidityParser.T__56:\n        case SolidityParser.T__58:\n        case SolidityParser.T__59:\n        case SolidityParser.T__60:\n        case SolidityParser.T__61:\n        case SolidityParser.T__62:\n        case SolidityParser.T__92:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n        case SolidityParser.BooleanLiteral:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.TypeKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.state = 632;\n            this.expressionStatement();\n            break;\n        case SolidityParser.T__1:\n            this.state = 633;\n            this.match(SolidityParser.T__1);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 637;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n            this.state = 636;\n            this.expression(0);\n        }\n\n        this.state = 639;\n        this.match(SolidityParser.T__22);\n        this.state = 640;\n        this.statement();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction InlineAssemblyStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_inlineAssemblyStatement;\n    return this;\n}\n\nInlineAssemblyStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nInlineAssemblyStatementContext.prototype.constructor = InlineAssemblyStatementContext;\n\nInlineAssemblyStatementContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nInlineAssemblyStatementContext.prototype.StringLiteralFragment = function() {\n    return this.getToken(SolidityParser.StringLiteralFragment, 0);\n};\n\nInlineAssemblyStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterInlineAssemblyStatement(this);\n\t}\n};\n\nInlineAssemblyStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitInlineAssemblyStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.InlineAssemblyStatementContext = InlineAssemblyStatementContext;\n\nSolidityParser.prototype.inlineAssemblyStatement = function() {\n\n    var localctx = new InlineAssemblyStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 96, SolidityParser.RULE_inlineAssemblyStatement);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 642;\n        this.match(SolidityParser.T__45);\n        this.state = 644;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.StringLiteralFragment) {\n            this.state = 643;\n            this.match(SolidityParser.StringLiteralFragment);\n        }\n\n        this.state = 646;\n        this.assemblyBlock();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction DoWhileStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_doWhileStatement;\n    return this;\n}\n\nDoWhileStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nDoWhileStatementContext.prototype.constructor = DoWhileStatementContext;\n\nDoWhileStatementContext.prototype.statement = function() {\n    return this.getTypedRuleContext(StatementContext,0);\n};\n\nDoWhileStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nDoWhileStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterDoWhileStatement(this);\n\t}\n};\n\nDoWhileStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitDoWhileStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.DoWhileStatementContext = DoWhileStatementContext;\n\nSolidityParser.prototype.doWhileStatement = function() {\n\n    var localctx = new DoWhileStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 98, SolidityParser.RULE_doWhileStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 648;\n        this.match(SolidityParser.T__46);\n        this.state = 649;\n        this.statement();\n        this.state = 650;\n        this.match(SolidityParser.T__44);\n        this.state = 651;\n        this.match(SolidityParser.T__21);\n        this.state = 652;\n        this.expression(0);\n        this.state = 653;\n        this.match(SolidityParser.T__22);\n        this.state = 654;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ContinueStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_continueStatement;\n    return this;\n}\n\nContinueStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nContinueStatementContext.prototype.constructor = ContinueStatementContext;\n\nContinueStatementContext.prototype.ContinueKeyword = function() {\n    return this.getToken(SolidityParser.ContinueKeyword, 0);\n};\n\nContinueStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterContinueStatement(this);\n\t}\n};\n\nContinueStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitContinueStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.ContinueStatementContext = ContinueStatementContext;\n\nSolidityParser.prototype.continueStatement = function() {\n\n    var localctx = new ContinueStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 100, SolidityParser.RULE_continueStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 656;\n        this.match(SolidityParser.ContinueKeyword);\n        this.state = 657;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction BreakStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_breakStatement;\n    return this;\n}\n\nBreakStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nBreakStatementContext.prototype.constructor = BreakStatementContext;\n\nBreakStatementContext.prototype.BreakKeyword = function() {\n    return this.getToken(SolidityParser.BreakKeyword, 0);\n};\n\nBreakStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterBreakStatement(this);\n\t}\n};\n\nBreakStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitBreakStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.BreakStatementContext = BreakStatementContext;\n\nSolidityParser.prototype.breakStatement = function() {\n\n    var localctx = new BreakStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 102, SolidityParser.RULE_breakStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 659;\n        this.match(SolidityParser.BreakKeyword);\n        this.state = 660;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ReturnStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_returnStatement;\n    return this;\n}\n\nReturnStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nReturnStatementContext.prototype.constructor = ReturnStatementContext;\n\nReturnStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nReturnStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterReturnStatement(this);\n\t}\n};\n\nReturnStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitReturnStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.ReturnStatementContext = ReturnStatementContext;\n\nSolidityParser.prototype.returnStatement = function() {\n\n    var localctx = new ReturnStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 104, SolidityParser.RULE_returnStatement);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 662;\n        this.match(SolidityParser.T__47);\n        this.state = 664;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n            this.state = 663;\n            this.expression(0);\n        }\n\n        this.state = 666;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ThrowStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_throwStatement;\n    return this;\n}\n\nThrowStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nThrowStatementContext.prototype.constructor = ThrowStatementContext;\n\n\nThrowStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterThrowStatement(this);\n\t}\n};\n\nThrowStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitThrowStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.ThrowStatementContext = ThrowStatementContext;\n\nSolidityParser.prototype.throwStatement = function() {\n\n    var localctx = new ThrowStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 106, SolidityParser.RULE_throwStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 668;\n        this.match(SolidityParser.T__48);\n        this.state = 669;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction EmitStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_emitStatement;\n    return this;\n}\n\nEmitStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nEmitStatementContext.prototype.constructor = EmitStatementContext;\n\nEmitStatementContext.prototype.functionCall = function() {\n    return this.getTypedRuleContext(FunctionCallContext,0);\n};\n\nEmitStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterEmitStatement(this);\n\t}\n};\n\nEmitStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitEmitStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.EmitStatementContext = EmitStatementContext;\n\nSolidityParser.prototype.emitStatement = function() {\n\n    var localctx = new EmitStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 108, SolidityParser.RULE_emitStatement);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 671;\n        this.match(SolidityParser.T__49);\n        this.state = 672;\n        this.functionCall();\n        this.state = 673;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VariableDeclarationStatementContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_variableDeclarationStatement;\n    return this;\n}\n\nVariableDeclarationStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVariableDeclarationStatementContext.prototype.constructor = VariableDeclarationStatementContext;\n\nVariableDeclarationStatementContext.prototype.identifierList = function() {\n    return this.getTypedRuleContext(IdentifierListContext,0);\n};\n\nVariableDeclarationStatementContext.prototype.variableDeclaration = function() {\n    return this.getTypedRuleContext(VariableDeclarationContext,0);\n};\n\nVariableDeclarationStatementContext.prototype.variableDeclarationList = function() {\n    return this.getTypedRuleContext(VariableDeclarationListContext,0);\n};\n\nVariableDeclarationStatementContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nVariableDeclarationStatementContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVariableDeclarationStatement(this);\n\t}\n};\n\nVariableDeclarationStatementContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVariableDeclarationStatement(this);\n\t}\n};\n\n\n\n\nSolidityParser.VariableDeclarationStatementContext = VariableDeclarationStatementContext;\n\nSolidityParser.prototype.variableDeclarationStatement = function() {\n\n    var localctx = new VariableDeclarationStatementContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 110, SolidityParser.RULE_variableDeclarationStatement);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 682;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);\n        switch(la_) {\n        case 1:\n            this.state = 675;\n            this.match(SolidityParser.T__50);\n            this.state = 676;\n            this.identifierList();\n            break;\n\n        case 2:\n            this.state = 677;\n            this.variableDeclaration();\n            break;\n\n        case 3:\n            this.state = 678;\n            this.match(SolidityParser.T__21);\n            this.state = 679;\n            this.variableDeclarationList();\n            this.state = 680;\n            this.match(SolidityParser.T__22);\n            break;\n\n        }\n        this.state = 686;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__8) {\n            this.state = 684;\n            this.match(SolidityParser.T__8);\n            this.state = 685;\n            this.expression(0);\n        }\n\n        this.state = 688;\n        this.match(SolidityParser.T__1);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction VariableDeclarationListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_variableDeclarationList;\n    return this;\n}\n\nVariableDeclarationListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nVariableDeclarationListContext.prototype.constructor = VariableDeclarationListContext;\n\nVariableDeclarationListContext.prototype.variableDeclaration = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(VariableDeclarationContext);\n    } else {\n        return this.getTypedRuleContext(VariableDeclarationContext,i);\n    }\n};\n\nVariableDeclarationListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterVariableDeclarationList(this);\n\t}\n};\n\nVariableDeclarationListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitVariableDeclarationList(this);\n\t}\n};\n\n\n\n\nSolidityParser.VariableDeclarationListContext = VariableDeclarationListContext;\n\nSolidityParser.prototype.variableDeclarationList = function() {\n\n    var localctx = new VariableDeclarationListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 112, SolidityParser.RULE_variableDeclarationList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 691;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 690;\n            this.variableDeclaration();\n        }\n\n        this.state = 699;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__14) {\n            this.state = 693;\n            this.match(SolidityParser.T__14);\n            this.state = 695;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__12 || _la===SolidityParser.T__27 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__35 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                this.state = 694;\n                this.variableDeclaration();\n            }\n\n            this.state = 701;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction IdentifierListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_identifierList;\n    return this;\n}\n\nIdentifierListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nIdentifierListContext.prototype.constructor = IdentifierListContext;\n\nIdentifierListContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nIdentifierListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterIdentifierList(this);\n\t}\n};\n\nIdentifierListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitIdentifierList(this);\n\t}\n};\n\n\n\n\nSolidityParser.IdentifierListContext = IdentifierListContext;\n\nSolidityParser.prototype.identifierList = function() {\n\n    var localctx = new IdentifierListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 114, SolidityParser.RULE_identifierList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 702;\n        this.match(SolidityParser.T__21);\n        this.state = 709;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,79,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                this.state = 704;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                    this.state = 703;\n                    this.identifier();\n                }\n\n                this.state = 706;\n                this.match(SolidityParser.T__14); \n            }\n            this.state = 711;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,79,this._ctx);\n        }\n\n        this.state = 713;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 712;\n            this.identifier();\n        }\n\n        this.state = 715;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ElementaryTypeNameContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_elementaryTypeName;\n    return this;\n}\n\nElementaryTypeNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nElementaryTypeNameContext.prototype.constructor = ElementaryTypeNameContext;\n\nElementaryTypeNameContext.prototype.Int = function() {\n    return this.getToken(SolidityParser.Int, 0);\n};\n\nElementaryTypeNameContext.prototype.Uint = function() {\n    return this.getToken(SolidityParser.Uint, 0);\n};\n\nElementaryTypeNameContext.prototype.Byte = function() {\n    return this.getToken(SolidityParser.Byte, 0);\n};\n\nElementaryTypeNameContext.prototype.Fixed = function() {\n    return this.getToken(SolidityParser.Fixed, 0);\n};\n\nElementaryTypeNameContext.prototype.Ufixed = function() {\n    return this.getToken(SolidityParser.Ufixed, 0);\n};\n\nElementaryTypeNameContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterElementaryTypeName(this);\n\t}\n};\n\nElementaryTypeNameContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitElementaryTypeName(this);\n\t}\n};\n\n\n\n\nSolidityParser.ElementaryTypeNameContext = ElementaryTypeNameContext;\n\nSolidityParser.prototype.elementaryTypeName = function() {\n\n    var localctx = new ElementaryTypeNameContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 116, SolidityParser.RULE_elementaryTypeName);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 717;\n        _la = this._input.LA(1);\n        if(!(((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__50 - 34)) | (1 << (SolidityParser.T__51 - 34)) | (1 << (SolidityParser.T__52 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 95)) & ~0x1f) == 0 && ((1 << (_la - 95)) & ((1 << (SolidityParser.Int - 95)) | (1 << (SolidityParser.Uint - 95)) | (1 << (SolidityParser.Byte - 95)) | (1 << (SolidityParser.Fixed - 95)) | (1 << (SolidityParser.Ufixed - 95)))) !== 0))) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ExpressionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_expression;\n    return this;\n}\n\nExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nExpressionContext.prototype.constructor = ExpressionContext;\n\nExpressionContext.prototype.typeName = function() {\n    return this.getTypedRuleContext(TypeNameContext,0);\n};\n\nExpressionContext.prototype.expression = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ExpressionContext);\n    } else {\n        return this.getTypedRuleContext(ExpressionContext,i);\n    }\n};\n\nExpressionContext.prototype.primaryExpression = function() {\n    return this.getTypedRuleContext(PrimaryExpressionContext,0);\n};\n\nExpressionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nExpressionContext.prototype.nameValueList = function() {\n    return this.getTypedRuleContext(NameValueListContext,0);\n};\n\nExpressionContext.prototype.functionCallArguments = function() {\n    return this.getTypedRuleContext(FunctionCallArgumentsContext,0);\n};\n\nExpressionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterExpression(this);\n\t}\n};\n\nExpressionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitExpression(this);\n\t}\n};\n\n\n\nSolidityParser.prototype.expression = function(_p) {\n\tif(_p===undefined) {\n\t    _p = 0;\n\t}\n    var _parentctx = this._ctx;\n    var _parentState = this.state;\n    var localctx = new ExpressionContext(this, this._ctx, _parentState);\n    var _prevctx = localctx;\n    var _startState = 118;\n    this.enterRecursionRule(localctx, 118, SolidityParser.RULE_expression, _p);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 737;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,81,this._ctx);\n        switch(la_) {\n        case 1:\n            this.state = 720;\n            this.match(SolidityParser.T__56);\n            this.state = 721;\n            this.typeName(0);\n            break;\n\n        case 2:\n            this.state = 722;\n            this.match(SolidityParser.T__21);\n            this.state = 723;\n            this.expression(0);\n            this.state = 724;\n            this.match(SolidityParser.T__22);\n            break;\n\n        case 3:\n            this.state = 726;\n            _la = this._input.LA(1);\n            if(!(_la===SolidityParser.T__54 || _la===SolidityParser.T__55)) {\n            this._errHandler.recoverInline(this);\n            }\n            else {\n            \tthis._errHandler.reportMatch(this);\n                this.consume();\n            }\n            this.state = 727;\n            this.expression(19);\n            break;\n\n        case 4:\n            this.state = 728;\n            _la = this._input.LA(1);\n            if(!(_la===SolidityParser.T__58 || _la===SolidityParser.T__59)) {\n            this._errHandler.recoverInline(this);\n            }\n            else {\n            \tthis._errHandler.reportMatch(this);\n                this.consume();\n            }\n            this.state = 729;\n            this.expression(18);\n            break;\n\n        case 5:\n            this.state = 730;\n            _la = this._input.LA(1);\n            if(!(_la===SolidityParser.T__60 || _la===SolidityParser.T__61)) {\n            this._errHandler.recoverInline(this);\n            }\n            else {\n            \tthis._errHandler.reportMatch(this);\n                this.consume();\n            }\n            this.state = 731;\n            this.expression(17);\n            break;\n\n        case 6:\n            this.state = 732;\n            this.match(SolidityParser.T__62);\n            this.state = 733;\n            this.expression(16);\n            break;\n\n        case 7:\n            this.state = 734;\n            this.match(SolidityParser.T__3);\n            this.state = 735;\n            this.expression(15);\n            break;\n\n        case 8:\n            this.state = 736;\n            this.primaryExpression();\n            break;\n\n        }\n        this._ctx.stop = this._input.LT(-1);\n        this.state = 814;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,86,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                if(this._parseListeners!==null) {\n                    this.triggerExitRuleEvent();\n                }\n                _prevctx = localctx;\n                this.state = 812;\n                this._errHandler.sync(this);\n                var la_ = this._interp.adaptivePredict(this._input,85,this._ctx);\n                switch(la_) {\n                case 1:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 739;\n                    if (!( this.precpred(this._ctx, 14))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 14)\");\n                    }\n                    this.state = 740;\n                    this.match(SolidityParser.T__63);\n                    this.state = 741;\n                    this.expression(15);\n                    break;\n\n                case 2:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 742;\n                    if (!( this.precpred(this._ctx, 13))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 13)\");\n                    }\n                    this.state = 743;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__11 || _la===SolidityParser.T__64 || _la===SolidityParser.T__65)) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 744;\n                    this.expression(14);\n                    break;\n\n                case 3:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 745;\n                    if (!( this.precpred(this._ctx, 12))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 12)\");\n                    }\n                    this.state = 746;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__58 || _la===SolidityParser.T__59)) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 747;\n                    this.expression(13);\n                    break;\n\n                case 4:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 748;\n                    if (!( this.precpred(this._ctx, 11))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 11)\");\n                    }\n                    this.state = 749;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__66 || _la===SolidityParser.T__67)) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 750;\n                    this.expression(12);\n                    break;\n\n                case 5:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 751;\n                    if (!( this.precpred(this._ctx, 10))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 10)\");\n                    }\n                    this.state = 752;\n                    this.match(SolidityParser.T__68);\n                    this.state = 753;\n                    this.expression(11);\n                    break;\n\n                case 6:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 754;\n                    if (!( this.precpred(this._ctx, 9))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 9)\");\n                    }\n                    this.state = 755;\n                    this.match(SolidityParser.T__2);\n                    this.state = 756;\n                    this.expression(10);\n                    break;\n\n                case 7:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 757;\n                    if (!( this.precpred(this._ctx, 8))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 8)\");\n                    }\n                    this.state = 758;\n                    this.match(SolidityParser.T__69);\n                    this.state = 759;\n                    this.expression(9);\n                    break;\n\n                case 8:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 760;\n                    if (!( this.precpred(this._ctx, 7))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 7)\");\n                    }\n                    this.state = 761;\n                    _la = this._input.LA(1);\n                    if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__4) | (1 << SolidityParser.T__5) | (1 << SolidityParser.T__6) | (1 << SolidityParser.T__7))) !== 0))) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 762;\n                    this.expression(8);\n                    break;\n\n                case 9:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 763;\n                    if (!( this.precpred(this._ctx, 6))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 6)\");\n                    }\n                    this.state = 764;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__70 || _la===SolidityParser.T__71)) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 765;\n                    this.expression(7);\n                    break;\n\n                case 10:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 766;\n                    if (!( this.precpred(this._ctx, 5))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 5)\");\n                    }\n                    this.state = 767;\n                    this.match(SolidityParser.T__72);\n                    this.state = 768;\n                    this.expression(6);\n                    break;\n\n                case 11:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 769;\n                    if (!( this.precpred(this._ctx, 4))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 4)\");\n                    }\n                    this.state = 770;\n                    this.match(SolidityParser.T__73);\n                    this.state = 771;\n                    this.expression(5);\n                    break;\n\n                case 12:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 772;\n                    if (!( this.precpred(this._ctx, 3))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\n                    }\n                    this.state = 773;\n                    this.match(SolidityParser.T__74);\n                    this.state = 774;\n                    this.expression(0);\n                    this.state = 775;\n                    this.match(SolidityParser.T__57);\n                    this.state = 776;\n                    this.expression(4);\n                    break;\n\n                case 13:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 778;\n                    if (!( this.precpred(this._ctx, 2))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 2)\");\n                    }\n                    this.state = 779;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__8 || ((((_la - 76)) & ~0x1f) == 0 && ((1 << (_la - 76)) & ((1 << (SolidityParser.T__75 - 76)) | (1 << (SolidityParser.T__76 - 76)) | (1 << (SolidityParser.T__77 - 76)) | (1 << (SolidityParser.T__78 - 76)) | (1 << (SolidityParser.T__79 - 76)) | (1 << (SolidityParser.T__80 - 76)) | (1 << (SolidityParser.T__81 - 76)) | (1 << (SolidityParser.T__82 - 76)) | (1 << (SolidityParser.T__83 - 76)) | (1 << (SolidityParser.T__84 - 76)))) !== 0))) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    this.state = 780;\n                    this.expression(3);\n                    break;\n\n                case 14:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 781;\n                    if (!( this.precpred(this._ctx, 27))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 27)\");\n                    }\n                    this.state = 782;\n                    _la = this._input.LA(1);\n                    if(!(_la===SolidityParser.T__54 || _la===SolidityParser.T__55)) {\n                    this._errHandler.recoverInline(this);\n                    }\n                    else {\n                    \tthis._errHandler.reportMatch(this);\n                        this.consume();\n                    }\n                    break;\n\n                case 15:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 783;\n                    if (!( this.precpred(this._ctx, 25))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 25)\");\n                    }\n                    this.state = 784;\n                    this.match(SolidityParser.T__31);\n                    this.state = 786;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                        this.state = 785;\n                        this.expression(0);\n                    }\n\n                    this.state = 788;\n                    this.match(SolidityParser.T__32);\n                    break;\n\n                case 16:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 789;\n                    if (!( this.precpred(this._ctx, 24))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 24)\");\n                    }\n                    this.state = 790;\n                    this.match(SolidityParser.T__31);\n                    this.state = 792;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                        this.state = 791;\n                        this.expression(0);\n                    }\n\n                    this.state = 794;\n                    this.match(SolidityParser.T__57);\n                    this.state = 796;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                        this.state = 795;\n                        this.expression(0);\n                    }\n\n                    this.state = 798;\n                    this.match(SolidityParser.T__32);\n                    break;\n\n                case 17:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 799;\n                    if (!( this.precpred(this._ctx, 23))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 23)\");\n                    }\n                    this.state = 800;\n                    this.match(SolidityParser.T__34);\n                    this.state = 801;\n                    this.identifier();\n                    break;\n\n                case 18:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 802;\n                    if (!( this.precpred(this._ctx, 22))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 22)\");\n                    }\n                    this.state = 803;\n                    this.match(SolidityParser.T__13);\n                    this.state = 804;\n                    this.nameValueList();\n                    this.state = 805;\n                    this.match(SolidityParser.T__15);\n                    break;\n\n                case 19:\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\n                    this.pushNewRecursionContext(localctx, _startState, SolidityParser.RULE_expression);\n                    this.state = 807;\n                    if (!( this.precpred(this._ctx, 21))) {\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 21)\");\n                    }\n                    this.state = 808;\n                    this.match(SolidityParser.T__21);\n                    this.state = 809;\n                    this.functionCallArguments();\n                    this.state = 810;\n                    this.match(SolidityParser.T__22);\n                    break;\n\n                } \n            }\n            this.state = 816;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,86,this._ctx);\n        }\n\n    } catch( error) {\n        if(error instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = error;\n\t        this._errHandler.reportError(this, error);\n\t        this._errHandler.recover(this, error);\n\t    } else {\n\t    \tthrow error;\n\t    }\n    } finally {\n        this.unrollRecursionContexts(_parentctx)\n    }\n    return localctx;\n};\n\n\nfunction PrimaryExpressionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_primaryExpression;\n    return this;\n}\n\nPrimaryExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nPrimaryExpressionContext.prototype.constructor = PrimaryExpressionContext;\n\nPrimaryExpressionContext.prototype.BooleanLiteral = function() {\n    return this.getToken(SolidityParser.BooleanLiteral, 0);\n};\n\nPrimaryExpressionContext.prototype.numberLiteral = function() {\n    return this.getTypedRuleContext(NumberLiteralContext,0);\n};\n\nPrimaryExpressionContext.prototype.HexLiteral = function() {\n    return this.getToken(SolidityParser.HexLiteral, 0);\n};\n\nPrimaryExpressionContext.prototype.stringLiteral = function() {\n    return this.getTypedRuleContext(StringLiteralContext,0);\n};\n\nPrimaryExpressionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nPrimaryExpressionContext.prototype.TypeKeyword = function() {\n    return this.getToken(SolidityParser.TypeKeyword, 0);\n};\n\nPrimaryExpressionContext.prototype.PayableKeyword = function() {\n    return this.getToken(SolidityParser.PayableKeyword, 0);\n};\n\nPrimaryExpressionContext.prototype.tupleExpression = function() {\n    return this.getTypedRuleContext(TupleExpressionContext,0);\n};\n\nPrimaryExpressionContext.prototype.typeNameExpression = function() {\n    return this.getTypedRuleContext(TypeNameExpressionContext,0);\n};\n\nPrimaryExpressionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterPrimaryExpression(this);\n\t}\n};\n\nPrimaryExpressionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitPrimaryExpression(this);\n\t}\n};\n\n\n\n\nSolidityParser.PrimaryExpressionContext = PrimaryExpressionContext;\n\nSolidityParser.prototype.primaryExpression = function() {\n\n    var localctx = new PrimaryExpressionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 120, SolidityParser.RULE_primaryExpression);\n    try {\n        this.state = 834;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,89,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 817;\n            this.match(SolidityParser.BooleanLiteral);\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 818;\n            this.numberLiteral();\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 819;\n            this.match(SolidityParser.HexLiteral);\n            break;\n\n        case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 820;\n            this.stringLiteral();\n            break;\n\n        case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 821;\n            this.identifier();\n            this.state = 824;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input,87,this._ctx);\n            if(la_===1) {\n                this.state = 822;\n                this.match(SolidityParser.T__31);\n                this.state = 823;\n                this.match(SolidityParser.T__32);\n\n            }\n            break;\n\n        case 6:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 826;\n            this.match(SolidityParser.TypeKeyword);\n            break;\n\n        case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 827;\n            this.match(SolidityParser.PayableKeyword);\n            break;\n\n        case 8:\n            this.enterOuterAlt(localctx, 8);\n            this.state = 828;\n            this.tupleExpression();\n            break;\n\n        case 9:\n            this.enterOuterAlt(localctx, 9);\n            this.state = 829;\n            this.typeNameExpression();\n            this.state = 832;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input,88,this._ctx);\n            if(la_===1) {\n                this.state = 830;\n                this.match(SolidityParser.T__31);\n                this.state = 831;\n                this.match(SolidityParser.T__32);\n\n            }\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction ExpressionListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_expressionList;\n    return this;\n}\n\nExpressionListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nExpressionListContext.prototype.constructor = ExpressionListContext;\n\nExpressionListContext.prototype.expression = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ExpressionContext);\n    } else {\n        return this.getTypedRuleContext(ExpressionContext,i);\n    }\n};\n\nExpressionListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterExpressionList(this);\n\t}\n};\n\nExpressionListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitExpressionList(this);\n\t}\n};\n\n\n\n\nSolidityParser.ExpressionListContext = ExpressionListContext;\n\nSolidityParser.prototype.expressionList = function() {\n\n    var localctx = new ExpressionListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 122, SolidityParser.RULE_expressionList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 836;\n        this.expression(0);\n        this.state = 841;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__14) {\n            this.state = 837;\n            this.match(SolidityParser.T__14);\n            this.state = 838;\n            this.expression(0);\n            this.state = 843;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction NameValueListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_nameValueList;\n    return this;\n}\n\nNameValueListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nNameValueListContext.prototype.constructor = NameValueListContext;\n\nNameValueListContext.prototype.nameValue = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(NameValueContext);\n    } else {\n        return this.getTypedRuleContext(NameValueContext,i);\n    }\n};\n\nNameValueListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterNameValueList(this);\n\t}\n};\n\nNameValueListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitNameValueList(this);\n\t}\n};\n\n\n\n\nSolidityParser.NameValueListContext = NameValueListContext;\n\nSolidityParser.prototype.nameValueList = function() {\n\n    var localctx = new NameValueListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 124, SolidityParser.RULE_nameValueList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 844;\n        this.nameValue();\n        this.state = 849;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input,91,this._ctx)\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\n            if(_alt===1) {\n                this.state = 845;\n                this.match(SolidityParser.T__14);\n                this.state = 846;\n                this.nameValue(); \n            }\n            this.state = 851;\n            this._errHandler.sync(this);\n            _alt = this._interp.adaptivePredict(this._input,91,this._ctx);\n        }\n\n        this.state = 853;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__14) {\n            this.state = 852;\n            this.match(SolidityParser.T__14);\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction NameValueContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_nameValue;\n    return this;\n}\n\nNameValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nNameValueContext.prototype.constructor = NameValueContext;\n\nNameValueContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nNameValueContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nNameValueContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterNameValue(this);\n\t}\n};\n\nNameValueContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitNameValue(this);\n\t}\n};\n\n\n\n\nSolidityParser.NameValueContext = NameValueContext;\n\nSolidityParser.prototype.nameValue = function() {\n\n    var localctx = new NameValueContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 126, SolidityParser.RULE_nameValue);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 855;\n        this.identifier();\n        this.state = 856;\n        this.match(SolidityParser.T__57);\n        this.state = 857;\n        this.expression(0);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionCallArgumentsContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionCallArguments;\n    return this;\n}\n\nFunctionCallArgumentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionCallArgumentsContext.prototype.constructor = FunctionCallArgumentsContext;\n\nFunctionCallArgumentsContext.prototype.nameValueList = function() {\n    return this.getTypedRuleContext(NameValueListContext,0);\n};\n\nFunctionCallArgumentsContext.prototype.expressionList = function() {\n    return this.getTypedRuleContext(ExpressionListContext,0);\n};\n\nFunctionCallArgumentsContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionCallArguments(this);\n\t}\n};\n\nFunctionCallArgumentsContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionCallArguments(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionCallArgumentsContext = FunctionCallArgumentsContext;\n\nSolidityParser.prototype.functionCallArguments = function() {\n\n    var localctx = new FunctionCallArgumentsContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 128, SolidityParser.RULE_functionCallArguments);\n    var _la = 0; // Token type\n    try {\n        this.state = 867;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__13:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 859;\n            this.match(SolidityParser.T__13);\n            this.state = 861;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n                this.state = 860;\n                this.nameValueList();\n            }\n\n            this.state = 863;\n            this.match(SolidityParser.T__15);\n            break;\n        case SolidityParser.T__3:\n        case SolidityParser.T__12:\n        case SolidityParser.T__21:\n        case SolidityParser.T__22:\n        case SolidityParser.T__31:\n        case SolidityParser.T__33:\n        case SolidityParser.T__39:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.T__54:\n        case SolidityParser.T__55:\n        case SolidityParser.T__56:\n        case SolidityParser.T__58:\n        case SolidityParser.T__59:\n        case SolidityParser.T__60:\n        case SolidityParser.T__61:\n        case SolidityParser.T__62:\n        case SolidityParser.T__92:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n        case SolidityParser.BooleanLiteral:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.TypeKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 865;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 864;\n                this.expressionList();\n            }\n\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction FunctionCallContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_functionCall;\n    return this;\n}\n\nFunctionCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nFunctionCallContext.prototype.constructor = FunctionCallContext;\n\nFunctionCallContext.prototype.expression = function() {\n    return this.getTypedRuleContext(ExpressionContext,0);\n};\n\nFunctionCallContext.prototype.functionCallArguments = function() {\n    return this.getTypedRuleContext(FunctionCallArgumentsContext,0);\n};\n\nFunctionCallContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterFunctionCall(this);\n\t}\n};\n\nFunctionCallContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitFunctionCall(this);\n\t}\n};\n\n\n\n\nSolidityParser.FunctionCallContext = FunctionCallContext;\n\nSolidityParser.prototype.functionCall = function() {\n\n    var localctx = new FunctionCallContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 130, SolidityParser.RULE_functionCall);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 869;\n        this.expression(0);\n        this.state = 870;\n        this.match(SolidityParser.T__21);\n        this.state = 871;\n        this.functionCallArguments();\n        this.state = 872;\n        this.match(SolidityParser.T__22);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyBlockContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyBlock;\n    return this;\n}\n\nAssemblyBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyBlockContext.prototype.constructor = AssemblyBlockContext;\n\nAssemblyBlockContext.prototype.assemblyItem = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(AssemblyItemContext);\n    } else {\n        return this.getTypedRuleContext(AssemblyItemContext,i);\n    }\n};\n\nAssemblyBlockContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyBlock(this);\n\t}\n};\n\nAssemblyBlockContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyBlock(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyBlockContext = AssemblyBlockContext;\n\nSolidityParser.prototype.assemblyBlock = function() {\n\n    var localctx = new AssemblyBlockContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 132, SolidityParser.RULE_assemblyBlock);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 874;\n        this.match(SolidityParser.T__13);\n        this.state = 878;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__12) | (1 << SolidityParser.T__13) | (1 << SolidityParser.T__21) | (1 << SolidityParser.T__24) | (1 << SolidityParser.T__27))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__40 - 34)) | (1 << (SolidityParser.T__45 - 34)) | (1 << (SolidityParser.T__47 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 86)) & ~0x1f) == 0 && ((1 << (_la - 86)) & ((1 << (SolidityParser.T__85 - 86)) | (1 << (SolidityParser.T__87 - 86)) | (1 << (SolidityParser.T__88 - 86)) | (1 << (SolidityParser.T__92 - 86)) | (1 << (SolidityParser.DecimalNumber - 86)) | (1 << (SolidityParser.HexNumber - 86)) | (1 << (SolidityParser.HexLiteral - 86)) | (1 << (SolidityParser.BreakKeyword - 86)) | (1 << (SolidityParser.ContinueKeyword - 86)) | (1 << (SolidityParser.LeaveKeyword - 86)) | (1 << (SolidityParser.PayableKeyword - 86)))) !== 0) || ((((_la - 124)) & ~0x1f) == 0 && ((1 << (_la - 124)) & ((1 << (SolidityParser.ReceiveKeyword - 124)) | (1 << (SolidityParser.Identifier - 124)) | (1 << (SolidityParser.StringLiteralFragment - 124)))) !== 0)) {\n            this.state = 875;\n            this.assemblyItem();\n            this.state = 880;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n        this.state = 881;\n        this.match(SolidityParser.T__15);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyItemContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyItem;\n    return this;\n}\n\nAssemblyItemContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyItemContext.prototype.constructor = AssemblyItemContext;\n\nAssemblyItemContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyExpression = function() {\n    return this.getTypedRuleContext(AssemblyExpressionContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyLocalDefinition = function() {\n    return this.getTypedRuleContext(AssemblyLocalDefinitionContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyAssignment = function() {\n    return this.getTypedRuleContext(AssemblyAssignmentContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyStackAssignment = function() {\n    return this.getTypedRuleContext(AssemblyStackAssignmentContext,0);\n};\n\nAssemblyItemContext.prototype.labelDefinition = function() {\n    return this.getTypedRuleContext(LabelDefinitionContext,0);\n};\n\nAssemblyItemContext.prototype.assemblySwitch = function() {\n    return this.getTypedRuleContext(AssemblySwitchContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyFunctionDefinition = function() {\n    return this.getTypedRuleContext(AssemblyFunctionDefinitionContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyFor = function() {\n    return this.getTypedRuleContext(AssemblyForContext,0);\n};\n\nAssemblyItemContext.prototype.assemblyIf = function() {\n    return this.getTypedRuleContext(AssemblyIfContext,0);\n};\n\nAssemblyItemContext.prototype.BreakKeyword = function() {\n    return this.getToken(SolidityParser.BreakKeyword, 0);\n};\n\nAssemblyItemContext.prototype.ContinueKeyword = function() {\n    return this.getToken(SolidityParser.ContinueKeyword, 0);\n};\n\nAssemblyItemContext.prototype.LeaveKeyword = function() {\n    return this.getToken(SolidityParser.LeaveKeyword, 0);\n};\n\nAssemblyItemContext.prototype.subAssembly = function() {\n    return this.getTypedRuleContext(SubAssemblyContext,0);\n};\n\nAssemblyItemContext.prototype.numberLiteral = function() {\n    return this.getTypedRuleContext(NumberLiteralContext,0);\n};\n\nAssemblyItemContext.prototype.stringLiteral = function() {\n    return this.getTypedRuleContext(StringLiteralContext,0);\n};\n\nAssemblyItemContext.prototype.HexLiteral = function() {\n    return this.getToken(SolidityParser.HexLiteral, 0);\n};\n\nAssemblyItemContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyItem(this);\n\t}\n};\n\nAssemblyItemContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyItem(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyItemContext = AssemblyItemContext;\n\nSolidityParser.prototype.assemblyItem = function() {\n\n    var localctx = new AssemblyItemContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 134, SolidityParser.RULE_assemblyItem);\n    try {\n        this.state = 901;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,97,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 883;\n            this.identifier();\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 884;\n            this.assemblyBlock();\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 885;\n            this.assemblyExpression();\n            break;\n\n        case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 886;\n            this.assemblyLocalDefinition();\n            break;\n\n        case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 887;\n            this.assemblyAssignment();\n            break;\n\n        case 6:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 888;\n            this.assemblyStackAssignment();\n            break;\n\n        case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 889;\n            this.labelDefinition();\n            break;\n\n        case 8:\n            this.enterOuterAlt(localctx, 8);\n            this.state = 890;\n            this.assemblySwitch();\n            break;\n\n        case 9:\n            this.enterOuterAlt(localctx, 9);\n            this.state = 891;\n            this.assemblyFunctionDefinition();\n            break;\n\n        case 10:\n            this.enterOuterAlt(localctx, 10);\n            this.state = 892;\n            this.assemblyFor();\n            break;\n\n        case 11:\n            this.enterOuterAlt(localctx, 11);\n            this.state = 893;\n            this.assemblyIf();\n            break;\n\n        case 12:\n            this.enterOuterAlt(localctx, 12);\n            this.state = 894;\n            this.match(SolidityParser.BreakKeyword);\n            break;\n\n        case 13:\n            this.enterOuterAlt(localctx, 13);\n            this.state = 895;\n            this.match(SolidityParser.ContinueKeyword);\n            break;\n\n        case 14:\n            this.enterOuterAlt(localctx, 14);\n            this.state = 896;\n            this.match(SolidityParser.LeaveKeyword);\n            break;\n\n        case 15:\n            this.enterOuterAlt(localctx, 15);\n            this.state = 897;\n            this.subAssembly();\n            break;\n\n        case 16:\n            this.enterOuterAlt(localctx, 16);\n            this.state = 898;\n            this.numberLiteral();\n            break;\n\n        case 17:\n            this.enterOuterAlt(localctx, 17);\n            this.state = 899;\n            this.stringLiteral();\n            break;\n\n        case 18:\n            this.enterOuterAlt(localctx, 18);\n            this.state = 900;\n            this.match(SolidityParser.HexLiteral);\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyExpressionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyExpression;\n    return this;\n}\n\nAssemblyExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyExpressionContext.prototype.constructor = AssemblyExpressionContext;\n\nAssemblyExpressionContext.prototype.assemblyCall = function() {\n    return this.getTypedRuleContext(AssemblyCallContext,0);\n};\n\nAssemblyExpressionContext.prototype.assemblyLiteral = function() {\n    return this.getTypedRuleContext(AssemblyLiteralContext,0);\n};\n\nAssemblyExpressionContext.prototype.assemblyMember = function() {\n    return this.getTypedRuleContext(AssemblyMemberContext,0);\n};\n\nAssemblyExpressionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyExpression(this);\n\t}\n};\n\nAssemblyExpressionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyExpression(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyExpressionContext = AssemblyExpressionContext;\n\nSolidityParser.prototype.assemblyExpression = function() {\n\n    var localctx = new AssemblyExpressionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 136, SolidityParser.RULE_assemblyExpression);\n    try {\n        this.state = 906;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,98,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 903;\n            this.assemblyCall();\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 904;\n            this.assemblyLiteral();\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 905;\n            this.assemblyMember();\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyMemberContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyMember;\n    return this;\n}\n\nAssemblyMemberContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyMemberContext.prototype.constructor = AssemblyMemberContext;\n\nAssemblyMemberContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nAssemblyMemberContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyMember(this);\n\t}\n};\n\nAssemblyMemberContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyMember(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyMemberContext = AssemblyMemberContext;\n\nSolidityParser.prototype.assemblyMember = function() {\n\n    var localctx = new AssemblyMemberContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 138, SolidityParser.RULE_assemblyMember);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 908;\n        this.identifier();\n        this.state = 909;\n        this.match(SolidityParser.T__34);\n        this.state = 910;\n        this.identifier();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyCallContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyCall;\n    return this;\n}\n\nAssemblyCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyCallContext.prototype.constructor = AssemblyCallContext;\n\nAssemblyCallContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nAssemblyCallContext.prototype.assemblyExpression = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(AssemblyExpressionContext);\n    } else {\n        return this.getTypedRuleContext(AssemblyExpressionContext,i);\n    }\n};\n\nAssemblyCallContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyCall(this);\n\t}\n};\n\nAssemblyCallContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyCall(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyCallContext = AssemblyCallContext;\n\nSolidityParser.prototype.assemblyCall = function() {\n\n    var localctx = new AssemblyCallContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 140, SolidityParser.RULE_assemblyCall);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 916;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__47:\n            this.state = 912;\n            this.match(SolidityParser.T__47);\n            break;\n        case SolidityParser.T__33:\n            this.state = 913;\n            this.match(SolidityParser.T__33);\n            break;\n        case SolidityParser.T__53:\n            this.state = 914;\n            this.match(SolidityParser.T__53);\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__39:\n        case SolidityParser.T__92:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n            this.state = 915;\n            this.identifier();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 930;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);\n        if(la_===1) {\n            this.state = 918;\n            this.match(SolidityParser.T__21);\n            this.state = 920;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if(_la===SolidityParser.T__12 || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SolidityParser.T__33 - 34)) | (1 << (SolidityParser.T__39 - 34)) | (1 << (SolidityParser.T__47 - 34)) | (1 << (SolidityParser.T__53 - 34)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 919;\n                this.assemblyExpression();\n            }\n\n            this.state = 926;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 922;\n                this.match(SolidityParser.T__14);\n                this.state = 923;\n                this.assemblyExpression();\n                this.state = 928;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n            this.state = 929;\n            this.match(SolidityParser.T__22);\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyLocalDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyLocalDefinition;\n    return this;\n}\n\nAssemblyLocalDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyLocalDefinitionContext.prototype.constructor = AssemblyLocalDefinitionContext;\n\nAssemblyLocalDefinitionContext.prototype.assemblyIdentifierOrList = function() {\n    return this.getTypedRuleContext(AssemblyIdentifierOrListContext,0);\n};\n\nAssemblyLocalDefinitionContext.prototype.assemblyExpression = function() {\n    return this.getTypedRuleContext(AssemblyExpressionContext,0);\n};\n\nAssemblyLocalDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyLocalDefinition(this);\n\t}\n};\n\nAssemblyLocalDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyLocalDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyLocalDefinitionContext = AssemblyLocalDefinitionContext;\n\nSolidityParser.prototype.assemblyLocalDefinition = function() {\n\n    var localctx = new AssemblyLocalDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 142, SolidityParser.RULE_assemblyLocalDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 932;\n        this.match(SolidityParser.T__85);\n        this.state = 933;\n        this.assemblyIdentifierOrList();\n        this.state = 936;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__86) {\n            this.state = 934;\n            this.match(SolidityParser.T__86);\n            this.state = 935;\n            this.assemblyExpression();\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyAssignmentContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyAssignment;\n    return this;\n}\n\nAssemblyAssignmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyAssignmentContext.prototype.constructor = AssemblyAssignmentContext;\n\nAssemblyAssignmentContext.prototype.assemblyIdentifierOrList = function() {\n    return this.getTypedRuleContext(AssemblyIdentifierOrListContext,0);\n};\n\nAssemblyAssignmentContext.prototype.assemblyExpression = function() {\n    return this.getTypedRuleContext(AssemblyExpressionContext,0);\n};\n\nAssemblyAssignmentContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyAssignment(this);\n\t}\n};\n\nAssemblyAssignmentContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyAssignment(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyAssignmentContext = AssemblyAssignmentContext;\n\nSolidityParser.prototype.assemblyAssignment = function() {\n\n    var localctx = new AssemblyAssignmentContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 144, SolidityParser.RULE_assemblyAssignment);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 938;\n        this.assemblyIdentifierOrList();\n        this.state = 939;\n        this.match(SolidityParser.T__86);\n        this.state = 940;\n        this.assemblyExpression();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyIdentifierOrListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyIdentifierOrList;\n    return this;\n}\n\nAssemblyIdentifierOrListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyIdentifierOrListContext.prototype.constructor = AssemblyIdentifierOrListContext;\n\nAssemblyIdentifierOrListContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nAssemblyIdentifierOrListContext.prototype.assemblyMember = function() {\n    return this.getTypedRuleContext(AssemblyMemberContext,0);\n};\n\nAssemblyIdentifierOrListContext.prototype.assemblyIdentifierList = function() {\n    return this.getTypedRuleContext(AssemblyIdentifierListContext,0);\n};\n\nAssemblyIdentifierOrListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyIdentifierOrList(this);\n\t}\n};\n\nAssemblyIdentifierOrListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyIdentifierOrList(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyIdentifierOrListContext = AssemblyIdentifierOrListContext;\n\nSolidityParser.prototype.assemblyIdentifierOrList = function() {\n\n    var localctx = new AssemblyIdentifierOrListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 146, SolidityParser.RULE_assemblyIdentifierOrList);\n    try {\n        this.state = 948;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,104,this._ctx);\n        switch(la_) {\n        case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 942;\n            this.identifier();\n            break;\n\n        case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 943;\n            this.assemblyMember();\n            break;\n\n        case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 944;\n            this.match(SolidityParser.T__21);\n            this.state = 945;\n            this.assemblyIdentifierList();\n            this.state = 946;\n            this.match(SolidityParser.T__22);\n            break;\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyIdentifierListContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyIdentifierList;\n    return this;\n}\n\nAssemblyIdentifierListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyIdentifierListContext.prototype.constructor = AssemblyIdentifierListContext;\n\nAssemblyIdentifierListContext.prototype.identifier = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(IdentifierContext);\n    } else {\n        return this.getTypedRuleContext(IdentifierContext,i);\n    }\n};\n\nAssemblyIdentifierListContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyIdentifierList(this);\n\t}\n};\n\nAssemblyIdentifierListContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyIdentifierList(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyIdentifierListContext = AssemblyIdentifierListContext;\n\nSolidityParser.prototype.assemblyIdentifierList = function() {\n\n    var localctx = new AssemblyIdentifierListContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 148, SolidityParser.RULE_assemblyIdentifierList);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 950;\n        this.identifier();\n        this.state = 955;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__14) {\n            this.state = 951;\n            this.match(SolidityParser.T__14);\n            this.state = 952;\n            this.identifier();\n            this.state = 957;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyStackAssignmentContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyStackAssignment;\n    return this;\n}\n\nAssemblyStackAssignmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyStackAssignmentContext.prototype.constructor = AssemblyStackAssignmentContext;\n\nAssemblyStackAssignmentContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nAssemblyStackAssignmentContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyStackAssignment(this);\n\t}\n};\n\nAssemblyStackAssignmentContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyStackAssignment(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyStackAssignmentContext = AssemblyStackAssignmentContext;\n\nSolidityParser.prototype.assemblyStackAssignment = function() {\n\n    var localctx = new AssemblyStackAssignmentContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 150, SolidityParser.RULE_assemblyStackAssignment);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 958;\n        this.match(SolidityParser.T__87);\n        this.state = 959;\n        this.identifier();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction LabelDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_labelDefinition;\n    return this;\n}\n\nLabelDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nLabelDefinitionContext.prototype.constructor = LabelDefinitionContext;\n\nLabelDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nLabelDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterLabelDefinition(this);\n\t}\n};\n\nLabelDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitLabelDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.LabelDefinitionContext = LabelDefinitionContext;\n\nSolidityParser.prototype.labelDefinition = function() {\n\n    var localctx = new LabelDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 152, SolidityParser.RULE_labelDefinition);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 961;\n        this.identifier();\n        this.state = 962;\n        this.match(SolidityParser.T__57);\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblySwitchContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblySwitch;\n    return this;\n}\n\nAssemblySwitchContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblySwitchContext.prototype.constructor = AssemblySwitchContext;\n\nAssemblySwitchContext.prototype.assemblyExpression = function() {\n    return this.getTypedRuleContext(AssemblyExpressionContext,0);\n};\n\nAssemblySwitchContext.prototype.assemblyCase = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(AssemblyCaseContext);\n    } else {\n        return this.getTypedRuleContext(AssemblyCaseContext,i);\n    }\n};\n\nAssemblySwitchContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblySwitch(this);\n\t}\n};\n\nAssemblySwitchContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblySwitch(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblySwitchContext = AssemblySwitchContext;\n\nSolidityParser.prototype.assemblySwitch = function() {\n\n    var localctx = new AssemblySwitchContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 154, SolidityParser.RULE_assemblySwitch);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 964;\n        this.match(SolidityParser.T__88);\n        this.state = 965;\n        this.assemblyExpression();\n        this.state = 969;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while(_la===SolidityParser.T__89 || _la===SolidityParser.T__90) {\n            this.state = 966;\n            this.assemblyCase();\n            this.state = 971;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyCaseContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyCase;\n    return this;\n}\n\nAssemblyCaseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyCaseContext.prototype.constructor = AssemblyCaseContext;\n\nAssemblyCaseContext.prototype.assemblyLiteral = function() {\n    return this.getTypedRuleContext(AssemblyLiteralContext,0);\n};\n\nAssemblyCaseContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nAssemblyCaseContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyCase(this);\n\t}\n};\n\nAssemblyCaseContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyCase(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyCaseContext = AssemblyCaseContext;\n\nSolidityParser.prototype.assemblyCase = function() {\n\n    var localctx = new AssemblyCaseContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 156, SolidityParser.RULE_assemblyCase);\n    try {\n        this.state = 978;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__89:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 972;\n            this.match(SolidityParser.T__89);\n            this.state = 973;\n            this.assemblyLiteral();\n            this.state = 974;\n            this.assemblyBlock();\n            break;\n        case SolidityParser.T__90:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 976;\n            this.match(SolidityParser.T__90);\n            this.state = 977;\n            this.assemblyBlock();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyFunctionDefinitionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyFunctionDefinition;\n    return this;\n}\n\nAssemblyFunctionDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyFunctionDefinitionContext.prototype.constructor = AssemblyFunctionDefinitionContext;\n\nAssemblyFunctionDefinitionContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nAssemblyFunctionDefinitionContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nAssemblyFunctionDefinitionContext.prototype.assemblyIdentifierList = function() {\n    return this.getTypedRuleContext(AssemblyIdentifierListContext,0);\n};\n\nAssemblyFunctionDefinitionContext.prototype.assemblyFunctionReturns = function() {\n    return this.getTypedRuleContext(AssemblyFunctionReturnsContext,0);\n};\n\nAssemblyFunctionDefinitionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyFunctionDefinition(this);\n\t}\n};\n\nAssemblyFunctionDefinitionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyFunctionDefinition(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyFunctionDefinitionContext = AssemblyFunctionDefinitionContext;\n\nSolidityParser.prototype.assemblyFunctionDefinition = function() {\n\n    var localctx = new AssemblyFunctionDefinitionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 158, SolidityParser.RULE_assemblyFunctionDefinition);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 980;\n        this.match(SolidityParser.T__27);\n        this.state = 981;\n        this.identifier();\n        this.state = 982;\n        this.match(SolidityParser.T__21);\n        this.state = 984;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier) {\n            this.state = 983;\n            this.assemblyIdentifierList();\n        }\n\n        this.state = 986;\n        this.match(SolidityParser.T__22);\n        this.state = 988;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__91) {\n            this.state = 987;\n            this.assemblyFunctionReturns();\n        }\n\n        this.state = 990;\n        this.assemblyBlock();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyFunctionReturnsContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyFunctionReturns;\n    return this;\n}\n\nAssemblyFunctionReturnsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyFunctionReturnsContext.prototype.constructor = AssemblyFunctionReturnsContext;\n\nAssemblyFunctionReturnsContext.prototype.assemblyIdentifierList = function() {\n    return this.getTypedRuleContext(AssemblyIdentifierListContext,0);\n};\n\nAssemblyFunctionReturnsContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyFunctionReturns(this);\n\t}\n};\n\nAssemblyFunctionReturnsContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyFunctionReturns(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyFunctionReturnsContext = AssemblyFunctionReturnsContext;\n\nSolidityParser.prototype.assemblyFunctionReturns = function() {\n\n    var localctx = new AssemblyFunctionReturnsContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 160, SolidityParser.RULE_assemblyFunctionReturns);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 992;\n        this.match(SolidityParser.T__91);\n        this.state = 993;\n        this.assemblyIdentifierList();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyForContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyFor;\n    return this;\n}\n\nAssemblyForContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyForContext.prototype.constructor = AssemblyForContext;\n\nAssemblyForContext.prototype.assemblyExpression = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(AssemblyExpressionContext);\n    } else {\n        return this.getTypedRuleContext(AssemblyExpressionContext,i);\n    }\n};\n\nAssemblyForContext.prototype.assemblyBlock = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(AssemblyBlockContext);\n    } else {\n        return this.getTypedRuleContext(AssemblyBlockContext,i);\n    }\n};\n\nAssemblyForContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyFor(this);\n\t}\n};\n\nAssemblyForContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyFor(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyForContext = AssemblyForContext;\n\nSolidityParser.prototype.assemblyFor = function() {\n\n    var localctx = new AssemblyForContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 162, SolidityParser.RULE_assemblyFor);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 995;\n        this.match(SolidityParser.T__24);\n        this.state = 998;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__13:\n            this.state = 996;\n            this.assemblyBlock();\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__33:\n        case SolidityParser.T__39:\n        case SolidityParser.T__47:\n        case SolidityParser.T__53:\n        case SolidityParser.T__92:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.state = 997;\n            this.assemblyExpression();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 1000;\n        this.assemblyExpression();\n        this.state = 1003;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__13:\n            this.state = 1001;\n            this.assemblyBlock();\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__33:\n        case SolidityParser.T__39:\n        case SolidityParser.T__47:\n        case SolidityParser.T__53:\n        case SolidityParser.T__92:\n        case SolidityParser.DecimalNumber:\n        case SolidityParser.HexNumber:\n        case SolidityParser.HexLiteral:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n        case SolidityParser.StringLiteralFragment:\n            this.state = 1002;\n            this.assemblyExpression();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n        this.state = 1005;\n        this.assemblyBlock();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyIfContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyIf;\n    return this;\n}\n\nAssemblyIfContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyIfContext.prototype.constructor = AssemblyIfContext;\n\nAssemblyIfContext.prototype.assemblyExpression = function() {\n    return this.getTypedRuleContext(AssemblyExpressionContext,0);\n};\n\nAssemblyIfContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nAssemblyIfContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyIf(this);\n\t}\n};\n\nAssemblyIfContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyIf(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyIfContext = AssemblyIfContext;\n\nSolidityParser.prototype.assemblyIf = function() {\n\n    var localctx = new AssemblyIfContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 164, SolidityParser.RULE_assemblyIf);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1007;\n        this.match(SolidityParser.T__40);\n        this.state = 1008;\n        this.assemblyExpression();\n        this.state = 1009;\n        this.assemblyBlock();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction AssemblyLiteralContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_assemblyLiteral;\n    return this;\n}\n\nAssemblyLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nAssemblyLiteralContext.prototype.constructor = AssemblyLiteralContext;\n\nAssemblyLiteralContext.prototype.stringLiteral = function() {\n    return this.getTypedRuleContext(StringLiteralContext,0);\n};\n\nAssemblyLiteralContext.prototype.DecimalNumber = function() {\n    return this.getToken(SolidityParser.DecimalNumber, 0);\n};\n\nAssemblyLiteralContext.prototype.HexNumber = function() {\n    return this.getToken(SolidityParser.HexNumber, 0);\n};\n\nAssemblyLiteralContext.prototype.HexLiteral = function() {\n    return this.getToken(SolidityParser.HexLiteral, 0);\n};\n\nAssemblyLiteralContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterAssemblyLiteral(this);\n\t}\n};\n\nAssemblyLiteralContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitAssemblyLiteral(this);\n\t}\n};\n\n\n\n\nSolidityParser.AssemblyLiteralContext = AssemblyLiteralContext;\n\nSolidityParser.prototype.assemblyLiteral = function() {\n\n    var localctx = new AssemblyLiteralContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 166, SolidityParser.RULE_assemblyLiteral);\n    try {\n        this.state = 1015;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.StringLiteralFragment:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 1011;\n            this.stringLiteral();\n            break;\n        case SolidityParser.DecimalNumber:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 1012;\n            this.match(SolidityParser.DecimalNumber);\n            break;\n        case SolidityParser.HexNumber:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 1013;\n            this.match(SolidityParser.HexNumber);\n            break;\n        case SolidityParser.HexLiteral:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 1014;\n            this.match(SolidityParser.HexLiteral);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction SubAssemblyContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_subAssembly;\n    return this;\n}\n\nSubAssemblyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nSubAssemblyContext.prototype.constructor = SubAssemblyContext;\n\nSubAssemblyContext.prototype.identifier = function() {\n    return this.getTypedRuleContext(IdentifierContext,0);\n};\n\nSubAssemblyContext.prototype.assemblyBlock = function() {\n    return this.getTypedRuleContext(AssemblyBlockContext,0);\n};\n\nSubAssemblyContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterSubAssembly(this);\n\t}\n};\n\nSubAssemblyContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitSubAssembly(this);\n\t}\n};\n\n\n\n\nSolidityParser.SubAssemblyContext = SubAssemblyContext;\n\nSolidityParser.prototype.subAssembly = function() {\n\n    var localctx = new SubAssemblyContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 168, SolidityParser.RULE_subAssembly);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1017;\n        this.match(SolidityParser.T__45);\n        this.state = 1018;\n        this.identifier();\n        this.state = 1019;\n        this.assemblyBlock();\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction TupleExpressionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_tupleExpression;\n    return this;\n}\n\nTupleExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nTupleExpressionContext.prototype.constructor = TupleExpressionContext;\n\nTupleExpressionContext.prototype.expression = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(ExpressionContext);\n    } else {\n        return this.getTypedRuleContext(ExpressionContext,i);\n    }\n};\n\nTupleExpressionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterTupleExpression(this);\n\t}\n};\n\nTupleExpressionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitTupleExpression(this);\n\t}\n};\n\n\n\n\nSolidityParser.TupleExpressionContext = TupleExpressionContext;\n\nSolidityParser.prototype.tupleExpression = function() {\n\n    var localctx = new TupleExpressionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 170, SolidityParser.RULE_tupleExpression);\n    var _la = 0; // Token type\n    try {\n        this.state = 1047;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__21:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 1021;\n            this.match(SolidityParser.T__21);\n\n            this.state = 1023;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 1022;\n                this.expression(0);\n            }\n\n            this.state = 1031;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 1025;\n                this.match(SolidityParser.T__14);\n                this.state = 1027;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                    this.state = 1026;\n                    this.expression(0);\n                }\n\n                this.state = 1033;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n            this.state = 1034;\n            this.match(SolidityParser.T__22);\n            break;\n        case SolidityParser.T__31:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 1035;\n            this.match(SolidityParser.T__31);\n            this.state = 1044;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SolidityParser.T__3) | (1 << SolidityParser.T__12) | (1 << SolidityParser.T__21))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SolidityParser.T__31 - 32)) | (1 << (SolidityParser.T__33 - 32)) | (1 << (SolidityParser.T__39 - 32)) | (1 << (SolidityParser.T__50 - 32)) | (1 << (SolidityParser.T__51 - 32)) | (1 << (SolidityParser.T__52 - 32)) | (1 << (SolidityParser.T__53 - 32)) | (1 << (SolidityParser.T__54 - 32)) | (1 << (SolidityParser.T__55 - 32)) | (1 << (SolidityParser.T__56 - 32)) | (1 << (SolidityParser.T__58 - 32)) | (1 << (SolidityParser.T__59 - 32)) | (1 << (SolidityParser.T__60 - 32)) | (1 << (SolidityParser.T__61 - 32)) | (1 << (SolidityParser.T__62 - 32)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.Int - 93)) | (1 << (SolidityParser.Uint - 93)) | (1 << (SolidityParser.Byte - 93)) | (1 << (SolidityParser.Fixed - 93)) | (1 << (SolidityParser.Ufixed - 93)) | (1 << (SolidityParser.BooleanLiteral - 93)) | (1 << (SolidityParser.DecimalNumber - 93)) | (1 << (SolidityParser.HexNumber - 93)) | (1 << (SolidityParser.HexLiteral - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.TypeKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier || _la===SolidityParser.StringLiteralFragment) {\n                this.state = 1036;\n                this.expression(0);\n                this.state = 1041;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while(_la===SolidityParser.T__14) {\n                    this.state = 1037;\n                    this.match(SolidityParser.T__14);\n                    this.state = 1038;\n                    this.expression(0);\n                    this.state = 1043;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n\n            this.state = 1046;\n            this.match(SolidityParser.T__32);\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction TypeNameExpressionContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_typeNameExpression;\n    return this;\n}\n\nTypeNameExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nTypeNameExpressionContext.prototype.constructor = TypeNameExpressionContext;\n\nTypeNameExpressionContext.prototype.elementaryTypeName = function() {\n    return this.getTypedRuleContext(ElementaryTypeNameContext,0);\n};\n\nTypeNameExpressionContext.prototype.userDefinedTypeName = function() {\n    return this.getTypedRuleContext(UserDefinedTypeNameContext,0);\n};\n\nTypeNameExpressionContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterTypeNameExpression(this);\n\t}\n};\n\nTypeNameExpressionContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitTypeNameExpression(this);\n\t}\n};\n\n\n\n\nSolidityParser.TypeNameExpressionContext = TypeNameExpressionContext;\n\nSolidityParser.prototype.typeNameExpression = function() {\n\n    var localctx = new TypeNameExpressionContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 172, SolidityParser.RULE_typeNameExpression);\n    try {\n        this.state = 1051;\n        this._errHandler.sync(this);\n        switch(this._input.LA(1)) {\n        case SolidityParser.T__33:\n        case SolidityParser.T__50:\n        case SolidityParser.T__51:\n        case SolidityParser.T__52:\n        case SolidityParser.T__53:\n        case SolidityParser.Int:\n        case SolidityParser.Uint:\n        case SolidityParser.Byte:\n        case SolidityParser.Fixed:\n        case SolidityParser.Ufixed:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 1049;\n            this.elementaryTypeName();\n            break;\n        case SolidityParser.T__12:\n        case SolidityParser.T__39:\n        case SolidityParser.T__92:\n        case SolidityParser.LeaveKeyword:\n        case SolidityParser.PayableKeyword:\n        case SolidityParser.ReceiveKeyword:\n        case SolidityParser.Identifier:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 1050;\n            this.userDefinedTypeName();\n            break;\n        default:\n            throw new antlr4.error.NoViableAltException(this);\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction NumberLiteralContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_numberLiteral;\n    return this;\n}\n\nNumberLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nNumberLiteralContext.prototype.constructor = NumberLiteralContext;\n\nNumberLiteralContext.prototype.DecimalNumber = function() {\n    return this.getToken(SolidityParser.DecimalNumber, 0);\n};\n\nNumberLiteralContext.prototype.HexNumber = function() {\n    return this.getToken(SolidityParser.HexNumber, 0);\n};\n\nNumberLiteralContext.prototype.NumberUnit = function() {\n    return this.getToken(SolidityParser.NumberUnit, 0);\n};\n\nNumberLiteralContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterNumberLiteral(this);\n\t}\n};\n\nNumberLiteralContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitNumberLiteral(this);\n\t}\n};\n\n\n\n\nSolidityParser.NumberLiteralContext = NumberLiteralContext;\n\nSolidityParser.prototype.numberLiteral = function() {\n\n    var localctx = new NumberLiteralContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 174, SolidityParser.RULE_numberLiteral);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1053;\n        _la = this._input.LA(1);\n        if(!(_la===SolidityParser.DecimalNumber || _la===SolidityParser.HexNumber)) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n        this.state = 1055;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input,120,this._ctx);\n        if(la_===1) {\n            this.state = 1054;\n            this.match(SolidityParser.NumberUnit);\n\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction IdentifierContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_identifier;\n    return this;\n}\n\nIdentifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nIdentifierContext.prototype.constructor = IdentifierContext;\n\nIdentifierContext.prototype.ReceiveKeyword = function() {\n    return this.getToken(SolidityParser.ReceiveKeyword, 0);\n};\n\nIdentifierContext.prototype.PayableKeyword = function() {\n    return this.getToken(SolidityParser.PayableKeyword, 0);\n};\n\nIdentifierContext.prototype.LeaveKeyword = function() {\n    return this.getToken(SolidityParser.LeaveKeyword, 0);\n};\n\nIdentifierContext.prototype.Identifier = function() {\n    return this.getToken(SolidityParser.Identifier, 0);\n};\n\nIdentifierContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterIdentifier(this);\n\t}\n};\n\nIdentifierContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitIdentifier(this);\n\t}\n};\n\n\n\n\nSolidityParser.IdentifierContext = IdentifierContext;\n\nSolidityParser.prototype.identifier = function() {\n\n    var localctx = new IdentifierContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 176, SolidityParser.RULE_identifier);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1057;\n        _la = this._input.LA(1);\n        if(!(_la===SolidityParser.T__12 || _la===SolidityParser.T__39 || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SolidityParser.T__92 - 93)) | (1 << (SolidityParser.LeaveKeyword - 93)) | (1 << (SolidityParser.PayableKeyword - 93)) | (1 << (SolidityParser.ReceiveKeyword - 93)))) !== 0) || _la===SolidityParser.Identifier)) {\n        this._errHandler.recoverInline(this);\n        }\n        else {\n        \tthis._errHandler.reportMatch(this);\n            this.consume();\n        }\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction OverrideSpecifierContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_overrideSpecifier;\n    return this;\n}\n\nOverrideSpecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nOverrideSpecifierContext.prototype.constructor = OverrideSpecifierContext;\n\nOverrideSpecifierContext.prototype.userDefinedTypeName = function(i) {\n    if(i===undefined) {\n        i = null;\n    }\n    if(i===null) {\n        return this.getTypedRuleContexts(UserDefinedTypeNameContext);\n    } else {\n        return this.getTypedRuleContext(UserDefinedTypeNameContext,i);\n    }\n};\n\nOverrideSpecifierContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterOverrideSpecifier(this);\n\t}\n};\n\nOverrideSpecifierContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitOverrideSpecifier(this);\n\t}\n};\n\n\n\n\nSolidityParser.OverrideSpecifierContext = OverrideSpecifierContext;\n\nSolidityParser.prototype.overrideSpecifier = function() {\n\n    var localctx = new OverrideSpecifierContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 178, SolidityParser.RULE_overrideSpecifier);\n    var _la = 0; // Token type\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1059;\n        this.match(SolidityParser.T__93);\n        this.state = 1071;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if(_la===SolidityParser.T__21) {\n            this.state = 1060;\n            this.match(SolidityParser.T__21);\n            this.state = 1061;\n            this.userDefinedTypeName();\n            this.state = 1066;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while(_la===SolidityParser.T__14) {\n                this.state = 1062;\n                this.match(SolidityParser.T__14);\n                this.state = 1063;\n                this.userDefinedTypeName();\n                this.state = 1068;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n            }\n            this.state = 1069;\n            this.match(SolidityParser.T__22);\n        }\n\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nfunction StringLiteralContext(parser, parent, invokingState) {\n\tif(parent===undefined) {\n\t    parent = null;\n\t}\n\tif(invokingState===undefined || invokingState===null) {\n\t\tinvokingState = -1;\n\t}\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\n    this.parser = parser;\n    this.ruleIndex = SolidityParser.RULE_stringLiteral;\n    return this;\n}\n\nStringLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\nStringLiteralContext.prototype.constructor = StringLiteralContext;\n\nStringLiteralContext.prototype.StringLiteralFragment = function(i) {\n\tif(i===undefined) {\n\t\ti = null;\n\t}\n    if(i===null) {\n        return this.getTokens(SolidityParser.StringLiteralFragment);\n    } else {\n        return this.getToken(SolidityParser.StringLiteralFragment, i);\n    }\n};\n\n\nStringLiteralContext.prototype.enterRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.enterStringLiteral(this);\n\t}\n};\n\nStringLiteralContext.prototype.exitRule = function(listener) {\n    if(listener instanceof SolidityListener ) {\n        listener.exitStringLiteral(this);\n\t}\n};\n\n\n\n\nSolidityParser.StringLiteralContext = StringLiteralContext;\n\nSolidityParser.prototype.stringLiteral = function() {\n\n    var localctx = new StringLiteralContext(this, this._ctx, this.state);\n    this.enterRule(localctx, 180, SolidityParser.RULE_stringLiteral);\n    try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1074; \n        this._errHandler.sync(this);\n        var _alt = 1;\n        do {\n        \tswitch (_alt) {\n        \tcase 1:\n        \t\tthis.state = 1073;\n        \t\tthis.match(SolidityParser.StringLiteralFragment);\n        \t\tbreak;\n        \tdefault:\n        \t\tthrow new antlr4.error.NoViableAltException(this);\n        \t}\n        \tthis.state = 1076; \n        \tthis._errHandler.sync(this);\n        \t_alt = this._interp.adaptivePredict(this._input,123, this._ctx);\n        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );\n    } catch (re) {\n    \tif(re instanceof antlr4.error.RecognitionException) {\n\t        localctx.exception = re;\n\t        this._errHandler.reportError(this, re);\n\t        this._errHandler.recover(this, re);\n\t    } else {\n\t    \tthrow re;\n\t    }\n    } finally {\n        this.exitRule();\n    }\n    return localctx;\n};\n\n\nSolidityParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {\n\tswitch(ruleIndex) {\n\tcase 32:\n\t\t\treturn this.typeName_sempred(localctx, predIndex);\n\tcase 59:\n\t\t\treturn this.expression_sempred(localctx, predIndex);\n    default:\n        throw \"No predicate with index:\" + ruleIndex;\n   }\n};\n\nSolidityParser.prototype.typeName_sempred = function(localctx, predIndex) {\n\tswitch(predIndex) {\n\t\tcase 0:\n\t\t\treturn this.precpred(this._ctx, 3);\n\t\tdefault:\n\t\t\tthrow \"No predicate with index:\" + predIndex;\n\t}\n};\n\nSolidityParser.prototype.expression_sempred = function(localctx, predIndex) {\n\tswitch(predIndex) {\n\t\tcase 1:\n\t\t\treturn this.precpred(this._ctx, 14);\n\t\tcase 2:\n\t\t\treturn this.precpred(this._ctx, 13);\n\t\tcase 3:\n\t\t\treturn this.precpred(this._ctx, 12);\n\t\tcase 4:\n\t\t\treturn this.precpred(this._ctx, 11);\n\t\tcase 5:\n\t\t\treturn this.precpred(this._ctx, 10);\n\t\tcase 6:\n\t\t\treturn this.precpred(this._ctx, 9);\n\t\tcase 7:\n\t\t\treturn this.precpred(this._ctx, 8);\n\t\tcase 8:\n\t\t\treturn this.precpred(this._ctx, 7);\n\t\tcase 9:\n\t\t\treturn this.precpred(this._ctx, 6);\n\t\tcase 10:\n\t\t\treturn this.precpred(this._ctx, 5);\n\t\tcase 11:\n\t\t\treturn this.precpred(this._ctx, 4);\n\t\tcase 12:\n\t\t\treturn this.precpred(this._ctx, 3);\n\t\tcase 13:\n\t\t\treturn this.precpred(this._ctx, 2);\n\t\tcase 14:\n\t\t\treturn this.precpred(this._ctx, 27);\n\t\tcase 15:\n\t\t\treturn this.precpred(this._ctx, 25);\n\t\tcase 16:\n\t\t\treturn this.precpred(this._ctx, 24);\n\t\tcase 17:\n\t\t\treturn this.precpred(this._ctx, 23);\n\t\tcase 18:\n\t\t\treturn this.precpred(this._ctx, 22);\n\t\tcase 19:\n\t\t\treturn this.precpred(this._ctx, 21);\n\t\tdefault:\n\t\t\tthrow \"No predicate with index:\" + predIndex;\n\t}\n};\n\n\nexports.SolidityParser = SolidityParser;\n","// Generated from antlr/Solidity.g4 by ANTLR 4.8\n// jshint ignore: start\nvar antlr4 = require('../antlr4/index');\n\n// This class defines a complete listener for a parse tree produced by SolidityParser.\nfunction SolidityListener() {\n\tantlr4.tree.ParseTreeListener.call(this);\n\treturn this;\n}\n\nSolidityListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\nSolidityListener.prototype.constructor = SolidityListener;\n\n// Enter a parse tree produced by SolidityParser#sourceUnit.\nSolidityListener.prototype.enterSourceUnit = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#sourceUnit.\nSolidityListener.prototype.exitSourceUnit = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#pragmaDirective.\nSolidityListener.prototype.enterPragmaDirective = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#pragmaDirective.\nSolidityListener.prototype.exitPragmaDirective = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#pragmaName.\nSolidityListener.prototype.enterPragmaName = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#pragmaName.\nSolidityListener.prototype.exitPragmaName = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#pragmaValue.\nSolidityListener.prototype.enterPragmaValue = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#pragmaValue.\nSolidityListener.prototype.exitPragmaValue = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#version.\nSolidityListener.prototype.enterVersion = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#version.\nSolidityListener.prototype.exitVersion = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#versionOperator.\nSolidityListener.prototype.enterVersionOperator = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#versionOperator.\nSolidityListener.prototype.exitVersionOperator = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#versionConstraint.\nSolidityListener.prototype.enterVersionConstraint = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#versionConstraint.\nSolidityListener.prototype.exitVersionConstraint = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#importDeclaration.\nSolidityListener.prototype.enterImportDeclaration = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#importDeclaration.\nSolidityListener.prototype.exitImportDeclaration = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#importDirective.\nSolidityListener.prototype.enterImportDirective = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#importDirective.\nSolidityListener.prototype.exitImportDirective = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#contractDefinition.\nSolidityListener.prototype.enterContractDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#contractDefinition.\nSolidityListener.prototype.exitContractDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#inheritanceSpecifier.\nSolidityListener.prototype.enterInheritanceSpecifier = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#inheritanceSpecifier.\nSolidityListener.prototype.exitInheritanceSpecifier = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#contractPart.\nSolidityListener.prototype.enterContractPart = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#contractPart.\nSolidityListener.prototype.exitContractPart = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#stateVariableDeclaration.\nSolidityListener.prototype.enterStateVariableDeclaration = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#stateVariableDeclaration.\nSolidityListener.prototype.exitStateVariableDeclaration = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#fileLevelConstant.\nSolidityListener.prototype.enterFileLevelConstant = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#fileLevelConstant.\nSolidityListener.prototype.exitFileLevelConstant = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#usingForDeclaration.\nSolidityListener.prototype.enterUsingForDeclaration = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#usingForDeclaration.\nSolidityListener.prototype.exitUsingForDeclaration = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#structDefinition.\nSolidityListener.prototype.enterStructDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#structDefinition.\nSolidityListener.prototype.exitStructDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#modifierDefinition.\nSolidityListener.prototype.enterModifierDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#modifierDefinition.\nSolidityListener.prototype.exitModifierDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#modifierInvocation.\nSolidityListener.prototype.enterModifierInvocation = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#modifierInvocation.\nSolidityListener.prototype.exitModifierInvocation = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionDefinition.\nSolidityListener.prototype.enterFunctionDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionDefinition.\nSolidityListener.prototype.exitFunctionDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionDescriptor.\nSolidityListener.prototype.enterFunctionDescriptor = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionDescriptor.\nSolidityListener.prototype.exitFunctionDescriptor = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#returnParameters.\nSolidityListener.prototype.enterReturnParameters = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#returnParameters.\nSolidityListener.prototype.exitReturnParameters = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#modifierList.\nSolidityListener.prototype.enterModifierList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#modifierList.\nSolidityListener.prototype.exitModifierList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#eventDefinition.\nSolidityListener.prototype.enterEventDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#eventDefinition.\nSolidityListener.prototype.exitEventDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#enumValue.\nSolidityListener.prototype.enterEnumValue = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#enumValue.\nSolidityListener.prototype.exitEnumValue = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#enumDefinition.\nSolidityListener.prototype.enterEnumDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#enumDefinition.\nSolidityListener.prototype.exitEnumDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#parameterList.\nSolidityListener.prototype.enterParameterList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#parameterList.\nSolidityListener.prototype.exitParameterList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#parameter.\nSolidityListener.prototype.enterParameter = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#parameter.\nSolidityListener.prototype.exitParameter = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#eventParameterList.\nSolidityListener.prototype.enterEventParameterList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#eventParameterList.\nSolidityListener.prototype.exitEventParameterList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#eventParameter.\nSolidityListener.prototype.enterEventParameter = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#eventParameter.\nSolidityListener.prototype.exitEventParameter = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionTypeParameterList.\nSolidityListener.prototype.enterFunctionTypeParameterList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionTypeParameterList.\nSolidityListener.prototype.exitFunctionTypeParameterList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionTypeParameter.\nSolidityListener.prototype.enterFunctionTypeParameter = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionTypeParameter.\nSolidityListener.prototype.exitFunctionTypeParameter = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#variableDeclaration.\nSolidityListener.prototype.enterVariableDeclaration = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#variableDeclaration.\nSolidityListener.prototype.exitVariableDeclaration = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#typeName.\nSolidityListener.prototype.enterTypeName = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#typeName.\nSolidityListener.prototype.exitTypeName = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#userDefinedTypeName.\nSolidityListener.prototype.enterUserDefinedTypeName = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#userDefinedTypeName.\nSolidityListener.prototype.exitUserDefinedTypeName = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#mappingKey.\nSolidityListener.prototype.enterMappingKey = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#mappingKey.\nSolidityListener.prototype.exitMappingKey = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#mapping.\nSolidityListener.prototype.enterMapping = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#mapping.\nSolidityListener.prototype.exitMapping = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionTypeName.\nSolidityListener.prototype.enterFunctionTypeName = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionTypeName.\nSolidityListener.prototype.exitFunctionTypeName = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#storageLocation.\nSolidityListener.prototype.enterStorageLocation = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#storageLocation.\nSolidityListener.prototype.exitStorageLocation = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#stateMutability.\nSolidityListener.prototype.enterStateMutability = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#stateMutability.\nSolidityListener.prototype.exitStateMutability = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#block.\nSolidityListener.prototype.enterBlock = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#block.\nSolidityListener.prototype.exitBlock = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#statement.\nSolidityListener.prototype.enterStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#statement.\nSolidityListener.prototype.exitStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#expressionStatement.\nSolidityListener.prototype.enterExpressionStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#expressionStatement.\nSolidityListener.prototype.exitExpressionStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#ifStatement.\nSolidityListener.prototype.enterIfStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#ifStatement.\nSolidityListener.prototype.exitIfStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#tryStatement.\nSolidityListener.prototype.enterTryStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#tryStatement.\nSolidityListener.prototype.exitTryStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#catchClause.\nSolidityListener.prototype.enterCatchClause = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#catchClause.\nSolidityListener.prototype.exitCatchClause = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#whileStatement.\nSolidityListener.prototype.enterWhileStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#whileStatement.\nSolidityListener.prototype.exitWhileStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#simpleStatement.\nSolidityListener.prototype.enterSimpleStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#simpleStatement.\nSolidityListener.prototype.exitSimpleStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#forStatement.\nSolidityListener.prototype.enterForStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#forStatement.\nSolidityListener.prototype.exitForStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#inlineAssemblyStatement.\nSolidityListener.prototype.enterInlineAssemblyStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#inlineAssemblyStatement.\nSolidityListener.prototype.exitInlineAssemblyStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#doWhileStatement.\nSolidityListener.prototype.enterDoWhileStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#doWhileStatement.\nSolidityListener.prototype.exitDoWhileStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#continueStatement.\nSolidityListener.prototype.enterContinueStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#continueStatement.\nSolidityListener.prototype.exitContinueStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#breakStatement.\nSolidityListener.prototype.enterBreakStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#breakStatement.\nSolidityListener.prototype.exitBreakStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#returnStatement.\nSolidityListener.prototype.enterReturnStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#returnStatement.\nSolidityListener.prototype.exitReturnStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#throwStatement.\nSolidityListener.prototype.enterThrowStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#throwStatement.\nSolidityListener.prototype.exitThrowStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#emitStatement.\nSolidityListener.prototype.enterEmitStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#emitStatement.\nSolidityListener.prototype.exitEmitStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#variableDeclarationStatement.\nSolidityListener.prototype.enterVariableDeclarationStatement = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#variableDeclarationStatement.\nSolidityListener.prototype.exitVariableDeclarationStatement = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#variableDeclarationList.\nSolidityListener.prototype.enterVariableDeclarationList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#variableDeclarationList.\nSolidityListener.prototype.exitVariableDeclarationList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#identifierList.\nSolidityListener.prototype.enterIdentifierList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#identifierList.\nSolidityListener.prototype.exitIdentifierList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#elementaryTypeName.\nSolidityListener.prototype.enterElementaryTypeName = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#elementaryTypeName.\nSolidityListener.prototype.exitElementaryTypeName = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#expression.\nSolidityListener.prototype.enterExpression = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#expression.\nSolidityListener.prototype.exitExpression = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#primaryExpression.\nSolidityListener.prototype.enterPrimaryExpression = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#primaryExpression.\nSolidityListener.prototype.exitPrimaryExpression = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#expressionList.\nSolidityListener.prototype.enterExpressionList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#expressionList.\nSolidityListener.prototype.exitExpressionList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#nameValueList.\nSolidityListener.prototype.enterNameValueList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#nameValueList.\nSolidityListener.prototype.exitNameValueList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#nameValue.\nSolidityListener.prototype.enterNameValue = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#nameValue.\nSolidityListener.prototype.exitNameValue = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionCallArguments.\nSolidityListener.prototype.enterFunctionCallArguments = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionCallArguments.\nSolidityListener.prototype.exitFunctionCallArguments = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#functionCall.\nSolidityListener.prototype.enterFunctionCall = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#functionCall.\nSolidityListener.prototype.exitFunctionCall = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyBlock.\nSolidityListener.prototype.enterAssemblyBlock = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyBlock.\nSolidityListener.prototype.exitAssemblyBlock = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyItem.\nSolidityListener.prototype.enterAssemblyItem = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyItem.\nSolidityListener.prototype.exitAssemblyItem = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyExpression.\nSolidityListener.prototype.enterAssemblyExpression = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyExpression.\nSolidityListener.prototype.exitAssemblyExpression = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyMember.\nSolidityListener.prototype.enterAssemblyMember = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyMember.\nSolidityListener.prototype.exitAssemblyMember = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyCall.\nSolidityListener.prototype.enterAssemblyCall = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyCall.\nSolidityListener.prototype.exitAssemblyCall = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyLocalDefinition.\nSolidityListener.prototype.enterAssemblyLocalDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyLocalDefinition.\nSolidityListener.prototype.exitAssemblyLocalDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyAssignment.\nSolidityListener.prototype.enterAssemblyAssignment = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyAssignment.\nSolidityListener.prototype.exitAssemblyAssignment = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyIdentifierOrList.\nSolidityListener.prototype.enterAssemblyIdentifierOrList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyIdentifierOrList.\nSolidityListener.prototype.exitAssemblyIdentifierOrList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyIdentifierList.\nSolidityListener.prototype.enterAssemblyIdentifierList = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyIdentifierList.\nSolidityListener.prototype.exitAssemblyIdentifierList = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyStackAssignment.\nSolidityListener.prototype.enterAssemblyStackAssignment = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyStackAssignment.\nSolidityListener.prototype.exitAssemblyStackAssignment = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#labelDefinition.\nSolidityListener.prototype.enterLabelDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#labelDefinition.\nSolidityListener.prototype.exitLabelDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblySwitch.\nSolidityListener.prototype.enterAssemblySwitch = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblySwitch.\nSolidityListener.prototype.exitAssemblySwitch = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyCase.\nSolidityListener.prototype.enterAssemblyCase = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyCase.\nSolidityListener.prototype.exitAssemblyCase = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyFunctionDefinition.\nSolidityListener.prototype.enterAssemblyFunctionDefinition = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyFunctionDefinition.\nSolidityListener.prototype.exitAssemblyFunctionDefinition = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyFunctionReturns.\nSolidityListener.prototype.enterAssemblyFunctionReturns = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyFunctionReturns.\nSolidityListener.prototype.exitAssemblyFunctionReturns = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyFor.\nSolidityListener.prototype.enterAssemblyFor = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyFor.\nSolidityListener.prototype.exitAssemblyFor = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyIf.\nSolidityListener.prototype.enterAssemblyIf = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyIf.\nSolidityListener.prototype.exitAssemblyIf = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#assemblyLiteral.\nSolidityListener.prototype.enterAssemblyLiteral = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#assemblyLiteral.\nSolidityListener.prototype.exitAssemblyLiteral = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#subAssembly.\nSolidityListener.prototype.enterSubAssembly = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#subAssembly.\nSolidityListener.prototype.exitSubAssembly = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#tupleExpression.\nSolidityListener.prototype.enterTupleExpression = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#tupleExpression.\nSolidityListener.prototype.exitTupleExpression = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#typeNameExpression.\nSolidityListener.prototype.enterTypeNameExpression = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#typeNameExpression.\nSolidityListener.prototype.exitTypeNameExpression = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#numberLiteral.\nSolidityListener.prototype.enterNumberLiteral = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#numberLiteral.\nSolidityListener.prototype.exitNumberLiteral = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#identifier.\nSolidityListener.prototype.enterIdentifier = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#identifier.\nSolidityListener.prototype.exitIdentifier = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#overrideSpecifier.\nSolidityListener.prototype.enterOverrideSpecifier = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#overrideSpecifier.\nSolidityListener.prototype.exitOverrideSpecifier = function(ctx) {\n};\n\n\n// Enter a parse tree produced by SolidityParser#stringLiteral.\nSolidityListener.prototype.enterStringLiteral = function(ctx) {\n};\n\n// Exit a parse tree produced by SolidityParser#stringLiteral.\nSolidityListener.prototype.exitStringLiteral = function(ctx) {\n};\n\n\n\nexports.SolidityListener = SolidityListener;","const antlr4 = require('./antlr4/index')\n\nfunction toText(ctx) {\n  if (ctx !== null) {\n    return ctx.getText()\n  }\n  return null\n}\n\nfunction mapCommasToNulls(children) {\n  if (children.length === 0) {\n    return []\n  }\n\n  const values = []\n  let comma = true\n\n  for (const el of children) {\n    if (comma) {\n      if (toText(el) === ',') {\n        values.push(null)\n      } else {\n        values.push(el)\n        comma = false\n      }\n    } else {\n      if (toText(el) !== ',') {\n        throw new Error('expected comma')\n      }\n      comma = true\n    }\n  }\n\n  if (comma) {\n    values.push(null)\n  }\n\n  return values\n}\n\nfunction isBinOp(op) {\n  const binOps = [\n    '+',\n    '-',\n    '*',\n    '/',\n    '**',\n    '%',\n    '<<',\n    '>>',\n    '&&',\n    '||',\n    '&',\n    '|',\n    '^',\n    '<',\n    '>',\n    '<=',\n    '>=',\n    '==',\n    '!=',\n    '=',\n    '|=',\n    '^=',\n    '&=',\n    '<<=',\n    '>>=',\n    '+=',\n    '-=',\n    '*=',\n    '/=',\n    '%='\n  ]\n  return binOps.includes(op)\n}\n\nconst transformAST = {\n  SourceUnit(ctx) {\n    // last element is EOF terminal node\n    return {\n      children: this.visit(ctx.children.slice(0, -1))\n    }\n  },\n\n  EnumDefinition(ctx) {\n    return {\n      name: toText(ctx.identifier()),\n      members: this.visit(ctx.enumValue())\n    }\n  },\n\n  EnumValue(ctx) {\n    return {\n      name: toText(ctx.identifier())\n    }\n  },\n\n  UsingForDeclaration(ctx) {\n    let typeName = null\n    if (toText(ctx.getChild(3)) !== '*') {\n      typeName = this.visit(ctx.getChild(3))\n    }\n\n    return {\n      typeName,\n      libraryName: toText(ctx.identifier())\n    }\n  },\n\n  PragmaDirective(ctx) {\n    // this converts something like >= 0.5.0  <0.7.0\n    // in >=0.5.0 <0.7.0\n    const value = ctx\n      .pragmaValue()\n      .children[0].children.map(x => toText(x))\n      .join(\" \")\n\n    return {\n      name: toText(ctx.pragmaName()),\n      value\n    }\n  },\n\n  ContractDefinition(ctx) {\n    const name = toText(ctx.identifier())\n    const kind = toText(ctx.getChild(0))\n\n    this._currentContract = name\n\n    return {\n      name,\n      baseContracts: this.visit(ctx.inheritanceSpecifier()),\n      subNodes: this.visit(ctx.contractPart()),\n      kind\n    }\n  },\n\n  InheritanceSpecifier(ctx) {\n    const exprList = ctx.expressionList()\n    const args = (exprList != null)\n      ? this.visit(exprList.expression()) : []\n\n    return {\n      baseName: this.visit(ctx.userDefinedTypeName()),\n      arguments: args\n    }\n  },\n\n  ContractPart(ctx) {\n    return this.visit(ctx.children[0])\n  },\n\n  FunctionDefinition(ctx) {\n    let isConstructor = false\n    let isFallback = false\n    let isReceiveEther = false\n    let isVirtual = false\n    let name = null\n    let parameters = []\n    let returnParameters = null\n    let visibility = 'default'\n\n    let block = null\n    if (ctx.block()) {\n      block = this.visit(ctx.block())\n    }\n\n    const modifiers = ctx\n      .modifierList()\n      .modifierInvocation()\n      .map(mod => this.visit(mod))\n\n    let stateMutability = null\n    if (ctx.modifierList().stateMutability(0)) {\n      stateMutability = toText(ctx.modifierList().stateMutability(0))\n    }\n\n    // see what type of function we're dealing with\n    switch (toText(ctx.functionDescriptor().getChild(0))) {\n      case 'constructor':\n        parameters = this.visit(ctx.parameterList())\n\n        if (\n          ctx.returnParameters() &&\n          ctx.returnParameters().parameterList().parameter().length > 0\n        ) {\n          throw new Error('Constructors cannot have return parameters')\n        }\n\n        // error out on incorrect function visibility\n        if (ctx.modifierList().InternalKeyword(0)) {\n          visibility = 'internal'\n        } else if (ctx.modifierList().PublicKeyword(0)) {\n          visibility = 'public'\n        } else {\n          visibility = 'default'\n        }\n\n        isConstructor = true\n        break\n      case 'fallback':\n        if (ctx.parameterList().parameter().length > 0) {\n          throw new Error('Fallback functions cannot have parameters')\n        }\n\n        if (\n          ctx.returnParameters() &&\n          ctx.returnParameters().parameterList().parameter().length > 0\n        ) {\n          throw new Error(\n            'Fallback functions cannot have return parameters'\n          )\n        }\n\n        // error out on incorrect function visibility\n        if (!ctx.modifierList().ExternalKeyword(0)) {\n          throw new Error('Fallback functions have to be declared \"external\"')\n        }\n        visibility = 'external'\n\n        isFallback = true\n        break\n      case 'receive':\n        if (ctx.parameterList().parameter().length > 0) {\n          throw new Error('Receive Ether functions cannot have parameters')\n        }\n\n        if (\n          ctx.returnParameters() &&\n          ctx.returnParameters().parameterList().parameter().length > 0\n        ) {\n          throw new Error(\n            'Receive Ether functions cannot have return parameters'\n          )\n        }\n\n        // error out on incorrect function visibility\n        if (!ctx.modifierList().ExternalKeyword(0)) {\n          throw new Error(\n            'Receive Ether functions have to be declared \"external\"'\n          )\n        }\n        visibility = 'external'\n\n        // error out on incorrect function payability\n        if (\n          !ctx.modifierList().stateMutability(0) ||\n          !ctx.modifierList().stateMutability(0).PayableKeyword(0)\n        ) {\n          throw new Error(\n            'Receive Ether functions have to be declared \"payable\"'\n          )\n        }\n\n        isReceiveEther = true\n        break\n      case 'function':\n        name = ctx.functionDescriptor().identifier(0) ?\n          toText(ctx.functionDescriptor().identifier(0)) :\n          ''\n\n        parameters = this.visit(ctx.parameterList())\n        returnParameters = this.visit(ctx.returnParameters())\n\n        // parse function visibility\n        if (ctx.modifierList().ExternalKeyword(0)) {\n          visibility = 'external'\n        } else if (ctx.modifierList().InternalKeyword(0)) {\n          visibility = 'internal'\n        } else if (ctx.modifierList().PublicKeyword(0)) {\n          visibility = 'public'\n        } else if (ctx.modifierList().PrivateKeyword(0)) {\n          visibility = 'private'\n        }\n\n        // check if function is virtual\n        if (ctx.modifierList().VirtualKeyword(0)) {\n          isVirtual = true\n        }\n\n        isConstructor = (name === this._currentContract)\n        isFallback = (name === '')\n        break\n    }\n\n    let override\n    const overrideSpecifier = ctx.modifierList().overrideSpecifier()\n    if (overrideSpecifier.length === 0) {\n      override = null\n    } else {\n      override = this.visit(overrideSpecifier[0].userDefinedTypeName())\n    }\n\n    return {\n      name,\n      parameters,\n      returnParameters,\n      body: block,\n      visibility,\n      modifiers,\n      override,\n      isConstructor,\n      isReceiveEther,\n      isFallback,\n      isVirtual,\n      stateMutability\n    }\n  },\n\n  ModifierInvocation(ctx) {\n    const exprList = ctx.expressionList()\n\n    let args\n    if (exprList != null) {\n      args = this.visit(exprList.expression())\n    } else if (ctx.children.length > 1) {\n      args = []\n    } else {\n      args = null\n    }\n\n    return {\n      name: toText(ctx.identifier()),\n      arguments: args\n    }\n  },\n\n  TypeNameExpression(ctx) {\n    let typeName = ctx.elementaryTypeName()\n    if (typeName === null) {\n      typeName = ctx.userDefinedTypeName()\n    }\n    return {\n      typeName: this.visit(typeName)\n    }\n  },\n\n  TypeName(ctx) {\n    if (ctx.children.length > 2) {\n      let length = null\n      if (ctx.children.length === 4) {\n        length = this.visit(ctx.getChild(2))\n      }\n\n      return {\n        type: 'ArrayTypeName',\n        baseTypeName: this.visit(ctx.typeName()),\n        length\n      }\n    }\n    if (ctx.children.length === 2) {\n      return {\n        type: 'ElementaryTypeName',\n        name: toText(ctx.getChild(0)),\n        stateMutability: toText(ctx.getChild(1))\n      }\n    }\n    return this.visit(ctx.getChild(0))\n  },\n\n  FunctionTypeName(ctx) {\n    const parameterTypes = ctx\n      .functionTypeParameterList(0)\n      .functionTypeParameter()\n      .map(typeCtx => this.visit(typeCtx))\n\n    let returnTypes = []\n    if (ctx.functionTypeParameterList(1)) {\n      returnTypes = ctx\n        .functionTypeParameterList(1)\n        .functionTypeParameter()\n        .map(typeCtx => this.visit(typeCtx))\n    }\n\n    let visibility = 'default'\n    if (ctx.InternalKeyword(0)) {\n      visibility = 'internal'\n    } else if (ctx.ExternalKeyword(0)) {\n      visibility = 'external'\n    }\n\n    let stateMutability = null\n    if (ctx.stateMutability(0)) {\n      stateMutability = toText(ctx.stateMutability(0))\n    }\n\n    return {\n      parameterTypes,\n      returnTypes,\n      visibility,\n      stateMutability\n    }\n  },\n\n  ReturnStatement(ctx) {\n    let expression = null\n    if (ctx.expression()) {\n      expression = this.visit(ctx.expression())\n    }\n\n    return { expression }\n  },\n\n  EmitStatement(ctx) {\n    return {\n      eventCall: this.visit(ctx.functionCall())\n    }\n  },\n\n  FunctionCall(ctx) {\n    let args = []\n    const names = []\n\n    const ctxArgs = ctx.functionCallArguments()\n    if (ctxArgs.expressionList()) {\n      args = ctxArgs\n        .expressionList()\n        .expression()\n        .map(exprCtx => this.visit(exprCtx))\n    } else if (ctxArgs.nameValueList()) {\n      for (const nameValue of ctxArgs.nameValueList().nameValue()) {\n        args.push(this.visit(nameValue.expression()))\n        names.push(toText(nameValue.identifier()))\n      }\n    }\n\n    return {\n      expression: this.visit(ctx.expression()),\n      arguments: args,\n      names\n    }\n  },\n\n  StructDefinition(ctx) {\n    return {\n      name: toText(ctx.identifier()),\n      members: this.visit(ctx.variableDeclaration())\n    }\n  },\n\n  VariableDeclaration(ctx) {\n    let storageLocation = null\n    if (ctx.storageLocation()) {\n      storageLocation = toText(ctx.storageLocation())\n    }\n\n    return {\n      typeName: this.visit(ctx.typeName()),\n      name: toText(ctx.identifier()),\n      storageLocation,\n      isStateVar: false,\n      isIndexed: false\n    }\n  },\n\n  EventParameter(ctx) {\n    let storageLocation = null\n    if (ctx.storageLocation(0)) {\n      storageLocation = toText(ctx.storageLocation(0))\n    }\n\n    return {\n      type: 'VariableDeclaration',\n      typeName: this.visit(ctx.typeName()),\n      name: toText(ctx.identifier()),\n      storageLocation,\n      isStateVar: false,\n      isIndexed: !!ctx.IndexedKeyword(0)\n    }\n  },\n\n  FunctionTypeParameter(ctx) {\n    let storageLocation = null\n    if (ctx.storageLocation()) {\n      storageLocation = toText(ctx.storageLocation())\n    }\n\n    return {\n      type: 'VariableDeclaration',\n      typeName: this.visit(ctx.typeName()),\n      name: null,\n      storageLocation,\n      isStateVar: false,\n      isIndexed: false\n    }\n  },\n\n  WhileStatement(ctx) {\n    return {\n      condition: this.visit(ctx.expression()),\n      body: this.visit(ctx.statement())\n    }\n  },\n\n  DoWhileStatement(ctx) {\n    return {\n      condition: this.visit(ctx.expression()),\n      body: this.visit(ctx.statement())\n    }\n  },\n\n  IfStatement(ctx) {\n    const trueBody = this.visit(ctx.statement(0))\n\n    let falseBody = null\n    if (ctx.statement().length > 1) {\n      falseBody = this.visit(ctx.statement(1))\n    }\n\n    return {\n      condition: this.visit(ctx.expression()),\n      trueBody,\n      falseBody\n    }\n  },\n\n  TryStatement(ctx) {\n    let returnParameters = null\n    if (ctx.returnParameters()) {\n      returnParameters = this.visit(ctx.returnParameters())\n    }\n\n    const catchClauses = ctx.catchClause().map(exprCtx => this.visit(exprCtx))\n\n    return {\n      expression: this.visit(ctx.expression()),\n      returnParameters,\n      body: this.visit(ctx.block()),\n      catchClauses\n    }\n  },\n\n  CatchClause(ctx) {\n    let parameters = null\n    if (ctx.parameterList()) {\n      parameters = this.visit(ctx.parameterList())\n    }\n\n    if (ctx.identifier() && toText(ctx.identifier()) !== 'Error') {\n      throw new Error('Expected \"Error\" identifier in catch clause')\n    }\n\n    return {\n      isReasonStringType: !!(\n        ctx.identifier() &&\n        toText(ctx.identifier()) === 'Error'\n      ),\n      parameters,\n      body: this.visit(ctx.block())\n    }\n  },\n\n  UserDefinedTypeName(ctx) {\n    return {\n      namePath: toText(ctx)\n    }\n  },\n\n  ElementaryTypeName(ctx) {\n    return {\n      name: toText(ctx)\n    }\n  },\n\n  Block(ctx) {\n    return {\n      statements: this.visit(ctx.statement())\n    }\n  },\n\n  ExpressionStatement(ctx) {\n    return {\n      expression: this.visit(ctx.expression())\n    }\n  },\n\n  NumberLiteral(ctx) {\n    const number = toText(ctx.getChild(0))\n    let subdenomination = null\n\n    if (ctx.children.length === 2) {\n      subdenomination = toText(ctx.getChild(1))\n    }\n\n    return {\n      number,\n      subdenomination\n    }\n  },\n\n  MappingKey(ctx) {\n    if (ctx.elementaryTypeName()) {\n      return this.visit(ctx.elementaryTypeName())\n    } else if (ctx.userDefinedTypeName()) {\n      return this.visit(ctx.userDefinedTypeName())\n    } else {\n      throw new Error(\n        'Expected MappingKey to have either ' +\n        'elementaryTypeName or userDefinedTypeName'\n      )\n    }\n  },\n\n  Mapping(ctx) {\n    return {\n      keyType: this.visit(ctx.mappingKey()),\n      valueType: this.visit(ctx.typeName())\n    }\n  },\n\n  ModifierDefinition(ctx) {\n    let parameters = null\n    if (ctx.parameterList()) {\n      parameters = this.visit(ctx.parameterList())\n    }\n\n    let isVirtual = false\n    if (ctx.VirtualKeyword(0)) {\n      isVirtual = true\n    }\n\n    let override\n    const overrideSpecifier = ctx.overrideSpecifier()\n    if (overrideSpecifier.length === 0) {\n      override = null\n    } else {\n      override = this.visit(overrideSpecifier[0].userDefinedTypeName())\n    }\n\n    return {\n      name: toText(ctx.identifier()),\n      parameters,\n      body: this.visit(ctx.block()),\n      isVirtual,\n      override,\n    }\n  },\n\n  Statement(ctx) {\n    return this.visit(ctx.getChild(0))\n  },\n\n  SimpleStatement(ctx) {\n    return this.visit(ctx.getChild(0))\n  },\n\n  Expression(ctx) {\n    let op\n\n    switch (ctx.children.length) {\n      case 1:\n        // primary expression\n        return this.visit(ctx.getChild(0))\n\n      case 2:\n        op = toText(ctx.getChild(0))\n\n        // new expression\n        if (op === 'new') {\n          return {\n            type: 'NewExpression',\n            typeName: this.visit(ctx.typeName())\n          }\n        }\n\n        // prefix operators\n        if (['+', '-', '++', '--', '!', '~', 'after', 'delete'].includes(op)) {\n          return {\n            type: 'UnaryOperation',\n            operator: op,\n            subExpression: this.visit(ctx.getChild(1)),\n            isPrefix: true\n          }\n        }\n\n        op = toText(ctx.getChild(1))\n\n        // postfix operators\n        if (['++', '--'].includes(op)) {\n          return {\n            type: 'UnaryOperation',\n            operator: op,\n            subExpression: this.visit(ctx.getChild(0)),\n            isPrefix: false\n          }\n        }\n        break\n\n      case 3:\n        // treat parenthesis as no-op\n        if (\n          toText(ctx.getChild(0)) === '(' &&\n          toText(ctx.getChild(2)) === ')'\n        ) {\n          return {\n            type: 'TupleExpression',\n            components: [this.visit(ctx.getChild(1))],\n            isArray: false\n          }\n        }\n\n        // if square parenthesis are present it can only be\n        // a typename expression\n        if (\n          toText(ctx.getChild(1)) === '[' &&\n          toText(ctx.getChild(2)) === ']'\n        ) {\n          return {\n            \"type\": \"TypeNameExpression\",\n            \"typeName\": {\n              \"type\": \"ArrayTypeName\",\n              \"baseTypeName\": this.visit(ctx.getChild(0)),\n              \"length\": null\n            }\n          }\n        }\n\n        op = toText(ctx.getChild(1))\n\n        // tuple separator\n        if (op === ',') {\n          return {\n            type: 'TupleExpression',\n            components: [\n              this.visit(ctx.getChild(0)),\n              this.visit(ctx.getChild(2))\n            ],\n            isArray: false\n          }\n        }\n\n        // member access\n        if (op === '.') {\n          return {\n            type: 'MemberAccess',\n            expression: this.visit(ctx.getChild(0)),\n            memberName: toText(ctx.getChild(2))\n          }\n        }\n\n        if (isBinOp(op)) {\n          return {\n            type: 'BinaryOperation',\n            operator: op,\n            left: this.visit(ctx.getChild(0)),\n            right: this.visit(ctx.getChild(2))\n          }\n        }\n        break\n\n      case 4:\n        // function call\n        if (\n          toText(ctx.getChild(1)) === '(' &&\n          toText(ctx.getChild(3)) === ')'\n        ) {\n          let args = []\n          const names = []\n\n          const ctxArgs = ctx.functionCallArguments()\n          if (ctxArgs.expressionList()) {\n            args = ctxArgs\n              .expressionList()\n              .expression()\n              .map(exprCtx => this.visit(exprCtx))\n          } else if (ctxArgs.nameValueList()) {\n            for (const nameValue of ctxArgs.nameValueList().nameValue()) {\n              args.push(this.visit(nameValue.expression()))\n              names.push(toText(nameValue.identifier()))\n            }\n          }\n\n          return {\n            type: 'FunctionCall',\n            expression: this.visit(ctx.getChild(0)),\n            arguments: args,\n            names\n          }\n        }\n\n        // index access\n        if (\n          toText(ctx.getChild(1)) === '[' &&\n          toText(ctx.getChild(3)) === ']'\n        ) {\n          return {\n            type: 'IndexAccess',\n            base: this.visit(ctx.getChild(0)),\n            index: this.visit(ctx.getChild(2))\n          }\n        }\n\n        // expression with nameValueList\n        if (\n          toText(ctx.getChild(1)) === '{' &&\n          toText(ctx.getChild(3)) === '}'\n        ) {\n          return {\n            type: 'NameValueExpression',\n            expression: this.visit(ctx.getChild(0)),\n            arguments: this.visit(ctx.getChild(2))\n          }\n        }\n\n        break\n\n      case 5:\n        // ternary operator\n        if (\n          toText(ctx.getChild(1)) === '?' &&\n          toText(ctx.getChild(3)) === ':'\n        ) {\n          return {\n            type: 'Conditional',\n            condition: this.visit(ctx.getChild(0)),\n            trueExpression: this.visit(ctx.getChild(2)),\n            falseExpression: this.visit(ctx.getChild(4))\n          }\n        }\n\n        // index range access\n        if (\n          toText(ctx.getChild(1)) === '[' &&\n          toText(ctx.getChild(2)) === ':' &&\n          toText(ctx.getChild(4)) === ']'\n        ) {\n          return {\n            type: 'IndexRangeAccess',\n            base: this.visit(ctx.getChild(0)),\n            indexStart: null,\n            indexEnd: this.visit(ctx.getChild(3))\n          }\n        } else if (\n          toText(ctx.getChild(1)) === '[' &&\n          toText(ctx.getChild(3)) === ':' &&\n          toText(ctx.getChild(4)) === ']'\n        ) {\n          return {\n            type: 'IndexRangeAccess',\n            base: this.visit(ctx.getChild(0)),\n            indexStart: this.visit(ctx.getChild(2)),\n            indexEnd: null\n          }\n        }\n        break\n\n      case 6:\n        // index range access\n        if (\n          toText(ctx.getChild(1)) === '[' &&\n          toText(ctx.getChild(3)) === ':' &&\n          toText(ctx.getChild(5)) === ']'\n        ) {\n          return {\n            type: 'IndexRangeAccess',\n            base: this.visit(ctx.getChild(0)),\n            indexStart: this.visit(ctx.getChild(2)),\n            indexEnd: this.visit(ctx.getChild(4))\n          }\n        }\n        break\n    }\n\n    throw new Error('Unrecognized expression')\n  },\n\n  NameValueList(ctx) {\n    const names = []\n    const args = []\n\n    for (const nameValue of ctx.nameValue()) {\n      names.push(toText(nameValue.identifier()))\n      args.push(this.visit(nameValue.expression()))\n    }\n\n    return {\n      type: 'NameValueList',\n      names,\n      arguments: args,\n    }\n  },\n\n  StateVariableDeclaration(ctx) {\n    const type = this.visit(ctx.typeName())\n    const iden = ctx.identifier()\n    const name = toText(iden)\n\n    let expression = null\n    if (ctx.expression()) {\n      expression = this.visit(ctx.expression())\n    }\n\n    let visibility = 'default'\n    if (ctx.InternalKeyword(0)) {\n      visibility = 'internal'\n    } else if (ctx.PublicKeyword(0)) {\n      visibility = 'public'\n    } else if (ctx.PrivateKeyword(0)) {\n      visibility = 'private'\n    }\n\n    let isDeclaredConst = false\n    if (ctx.ConstantKeyword(0)) {\n      isDeclaredConst = true\n    }\n\n    let override\n    const overrideSpecifier = ctx.overrideSpecifier()\n    if (overrideSpecifier.length === 0) {\n      override = null\n    } else {\n      override = this.visit(overrideSpecifier[0].userDefinedTypeName())\n    }\n\n    let isImmutable = false\n    if (ctx.ImmutableKeyword(0)) {\n      isImmutable = true\n    }\n\n    const decl = this.createNode(\n      {\n        type: 'VariableDeclaration',\n        typeName: type,\n        name,\n        expression,\n        visibility,\n        isStateVar: true,\n        isDeclaredConst,\n        isIndexed: false,\n        isImmutable,\n        override,\n      },\n      iden\n    )\n\n    return {\n      variables: [decl],\n      initialValue: expression,\n    }\n  },\n\n  FileLevelConstant(ctx) {\n    const type = this.visit(ctx.typeName())\n    const iden = ctx.identifier()\n    const name = toText(iden)\n\n    let expression = null\n    if (ctx.expression()) {\n      expression = this.visit(ctx.expression())\n    }\n\n    return {\n      typeName: type,\n      name,\n      initialValue: expression,\n    }\n  },\n\n  ForStatement(ctx) {\n    let conditionExpression = this.visit(ctx.expressionStatement())\n    if (conditionExpression) {\n      conditionExpression = conditionExpression.expression\n    }\n    return {\n      initExpression: this.visit(ctx.simpleStatement()),\n      conditionExpression,\n      loopExpression: {\n        type: 'ExpressionStatement',\n        expression: this.visit(ctx.expression())\n      },\n      body: this.visit(ctx.statement())\n    }\n  },\n\n  PrimaryExpression(ctx) {\n    if (ctx.BooleanLiteral()) {\n      return {\n        type: 'BooleanLiteral',\n        value: toText(ctx.BooleanLiteral()) === 'true'\n      }\n    }\n\n    if (ctx.HexLiteral()) {\n      return {\n        type: 'HexLiteral',\n        value: toText(ctx.HexLiteral())\n      }\n    }\n\n    if (ctx.stringLiteral()) {\n      const value = ctx.stringLiteral().StringLiteralFragment().map(\n        stringLiteralFragmentCtx => {\n          const text = toText(stringLiteralFragmentCtx)\n          const singleQuotes = text[0] === \"'\"\n          const textWithoutQuotes = text.substring(1, text.length - 1)\n          const value = singleQuotes\n            ? textWithoutQuotes.replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\")\n            : textWithoutQuotes.replace(new RegExp('\\\\\\\\\"', 'g'), '\"')\n\n          return value\n        }\n      ).join(\"\")\n\n\n      return {\n        type: 'StringLiteral',\n        value\n      }\n    }\n\n    if (ctx.TypeKeyword()) {\n      return {\n        type: 'Identifier',\n        name: 'type'\n      }\n    }\n\n    if (\n      ctx.children.length == 3 &&\n      toText(ctx.getChild(1)) === '[' &&\n      toText(ctx.getChild(2)) === ']'\n    ) {\n      let node = this.visit(ctx.getChild(0))\n      if (node.type === 'Identifier') {\n        node = {\n          type: 'UserDefinedTypeName',\n          namePath: node.name\n        }\n      } else if (node.type == 'TypeNameExpression') {\n        node = node.typeName\n      } else {\n        node = {\n          type: 'ElementaryTypeName',\n          name: toText(ctx.getChild(0))\n        }\n      }\n\n      const typeName = {\n        type: 'ArrayTypeName',\n        baseTypeName: node,\n        length: null\n      }\n\n      return {\n        type: 'TypeNameExpression',\n        typeName\n      }\n    }\n\n    return this.visit(ctx.getChild(0))\n  },\n\n  Identifier(ctx) {\n    return {\n      name: toText(ctx)\n    }\n  },\n\n  TupleExpression(ctx) {\n    // remove parentheses\n    const children = ctx.children.slice(1, -1)\n    const components = mapCommasToNulls(children).map(expr => {\n      // add a null for each empty value\n      if (expr === null) {\n        return null\n      }\n      return this.visit(expr)\n    })\n\n    return {\n      components,\n      isArray: toText(ctx.getChild(0)) === '['\n    }\n  },\n\n  IdentifierList(ctx) {\n    // remove parentheses\n    const children = ctx.children.slice(1, -1)\n    return mapCommasToNulls(children).map(iden => {\n      // add a null for each empty value\n      if (iden === null) {\n        return null\n      }\n\n      return this.createNode(\n        {\n          type: 'VariableDeclaration',\n          name: toText(iden),\n          storageLocation: null,\n          typeName: null,\n          isStateVar: false,\n          isIndexed: false\n        },\n        iden\n      )\n    })\n  },\n\n  VariableDeclarationList(ctx) {\n    // remove parentheses\n    return mapCommasToNulls(ctx.children).map(decl => {\n      // add a null for each empty value\n      if (decl === null) {\n        return null\n      }\n\n      let storageLocation = null\n      if (decl.storageLocation()) {\n        storageLocation = toText(decl.storageLocation())\n      }\n\n      return this.createNode(\n        {\n          type: 'VariableDeclaration',\n          name: toText(decl.identifier()),\n          typeName: this.visit(decl.typeName()),\n          storageLocation,\n          isStateVar: false,\n          isIndexed: false\n        },\n        decl\n      )\n    })\n  },\n\n  VariableDeclarationStatement(ctx) {\n    let variables\n    if (ctx.variableDeclaration()) {\n      variables = [this.visit(ctx.variableDeclaration())]\n    } else if (ctx.identifierList()) {\n      variables = this.visit(ctx.identifierList())\n    } else if (ctx.variableDeclarationList()) {\n      variables = this.visit(ctx.variableDeclarationList())\n    }\n\n    let initialValue = null\n    if (ctx.expression()) {\n      initialValue = this.visit(ctx.expression())\n    }\n\n    return {\n      variables,\n      initialValue\n    }\n  },\n\n  ImportDirective(ctx) {\n    const pathString = toText(ctx.StringLiteralFragment())\n    let unitAlias = null\n    let symbolAliases = null\n\n    if (ctx.importDeclaration().length > 0) {\n      symbolAliases = ctx.importDeclaration().map(decl => {\n        const symbol = toText(decl.identifier(0))\n        let alias = null\n        if (decl.identifier(1)) {\n          alias = toText(decl.identifier(1))\n        }\n        return [symbol, alias]\n      })\n    } else if (ctx.children.length === 7) {\n      unitAlias = toText(ctx.getChild(3))\n    } else if (ctx.children.length === 5) {\n      unitAlias = toText(ctx.getChild(3))\n    }\n\n    return {\n      path: pathString.substring(1, pathString.length - 1),\n      unitAlias,\n      symbolAliases\n    }\n  },\n\n  EventDefinition(ctx) {\n    return {\n      name: toText(ctx.identifier()),\n      parameters: this.visit(ctx.eventParameterList()),\n      isAnonymous: !!ctx.AnonymousKeyword()\n    }\n  },\n\n  EventParameterList(ctx) {\n    return ctx.eventParameter().map(function(paramCtx) {\n      const type = this.visit(paramCtx.typeName())\n      let name = null\n      if (paramCtx.identifier()) {\n        name = toText(paramCtx.identifier())\n      }\n\n      return this.createNode(\n        {\n          type: 'VariableDeclaration',\n          typeName: type,\n          name,\n          isStateVar: false,\n          isIndexed: !!paramCtx.IndexedKeyword(0)\n        },\n        paramCtx\n      )\n    }, this)\n  },\n\n  ReturnParameters(ctx) {\n    return this.visit(ctx.parameterList())\n  },\n\n  ParameterList(ctx) {\n    return ctx.parameter().map(paramCtx => this.visit(paramCtx))\n  },\n\n  Parameter(ctx) {\n    let storageLocation = null\n    if (ctx.storageLocation()) {\n      storageLocation = toText(ctx.storageLocation())\n    }\n\n    let name = null\n    if (ctx.identifier()) {\n      name = toText(ctx.identifier())\n    }\n\n    return {\n      type: 'VariableDeclaration',\n      typeName: this.visit(ctx.typeName()),\n      name,\n      storageLocation,\n      isStateVar: false,\n      isIndexed: false\n    }\n  },\n\n  InlineAssemblyStatement(ctx) {\n    let language = null\n    if (ctx.StringLiteralFragment()) {\n      language = toText(ctx.StringLiteralFragment())\n      language = language.substring(1, language.length - 1)\n    }\n\n    return {\n      language,\n      body: this.visit(ctx.assemblyBlock())\n    }\n  },\n\n  AssemblyBlock(ctx) {\n    const operations = ctx.assemblyItem().map(it => this.visit(it))\n\n    return { operations }\n  },\n\n  AssemblyItem(ctx) {\n    let text\n\n    if (ctx.HexLiteral()) {\n      return {\n        type: 'HexLiteral',\n        value: toText(ctx.HexLiteral())\n      }\n    }\n\n    if (ctx.stringLiteral()) {\n      text = toText(ctx.stringLiteral())\n      return {\n        type: 'StringLiteral',\n        value: text.substring(1, text.length - 1)\n      }\n    }\n\n    if (ctx.BreakKeyword()) {\n      return {\n        type: 'Break'\n      }\n    }\n\n    if (ctx.ContinueKeyword()) {\n      return {\n        type: 'Continue'\n      }\n    }\n\n    return this.visit(ctx.getChild(0))\n  },\n\n  AssemblyExpression(ctx) {\n    return this.visit(ctx.getChild(0))\n  },\n\n  AssemblyCall(ctx) {\n    const functionName = toText(ctx.getChild(0))\n    const args = ctx.assemblyExpression().map(arg => this.visit(arg))\n\n    return {\n      functionName,\n      arguments: args\n    }\n  },\n\n  AssemblyLiteral(ctx) {\n    let text\n\n    if (ctx.stringLiteral()) {\n      text = toText(ctx)\n      return {\n        type: 'StringLiteral',\n        value: text.substring(1, text.length - 1)\n      }\n    }\n\n    if (ctx.DecimalNumber()) {\n      return {\n        type: 'DecimalNumber',\n        value: toText(ctx)\n      }\n    }\n\n    if (ctx.HexNumber()) {\n      return {\n        type: 'HexNumber',\n        value: toText(ctx)\n      }\n    }\n\n    if (ctx.HexLiteral()) {\n      return {\n        type: 'HexLiteral',\n        value: toText(ctx)\n      }\n    }\n  },\n\n  AssemblySwitch(ctx) {\n    return {\n      expression: this.visit(ctx.assemblyExpression()),\n      cases: ctx.assemblyCase().map(c => this.visit(c))\n    }\n  },\n\n  AssemblyCase(ctx) {\n    let value = null\n    if (toText(ctx.getChild(0)) === 'case') {\n      value = this.visit(ctx.assemblyLiteral())\n    }\n\n    const node = { block: this.visit(ctx.assemblyBlock()) }\n    if (value !== null) {\n      node.value = value\n    } else {\n      node.default = true\n    }\n\n    return node\n  },\n\n  AssemblyLocalDefinition(ctx) {\n    let names = ctx.assemblyIdentifierOrList()\n    if (names.identifier()) {\n      names = [this.visit(names.identifier())]\n    } else if (names.assemblyMember()) {\n      names = [this.visit(names.assemblyMember())]\n    } else {\n      names = this.visit(names.assemblyIdentifierList().identifier())\n    }\n\n    return {\n      names,\n      expression: this.visit(ctx.assemblyExpression())\n    }\n  },\n\n  AssemblyFunctionDefinition(ctx) {\n    let args = ctx.assemblyIdentifierList()\n    args = args ? this.visit(args.identifier()) : []\n\n    let returnArgs = ctx.assemblyFunctionReturns()\n    returnArgs = returnArgs\n      ? this.visit(returnArgs.assemblyIdentifierList().identifier())\n      : []\n\n    return {\n      name: toText(ctx.identifier()),\n      arguments: args,\n      returnArguments: returnArgs,\n      body: this.visit(ctx.assemblyBlock())\n    }\n  },\n\n  AssemblyAssignment(ctx) {\n    let names = ctx.assemblyIdentifierOrList()\n    if (names.identifier()) {\n      names = [this.visit(names.identifier())]\n    } else if (names.assemblyMember()) {\n      names = [this.visit(names.assemblyMember())]\n    } else {\n      names = this.visit(names.assemblyIdentifierList().identifier())\n    }\n\n    return {\n      names,\n      expression: this.visit(ctx.assemblyExpression())\n    }\n  },\n\n  AssemblyMember(ctx) {\n    const [accessed, member] = ctx.identifier()\n    return {\n      type: 'AssemblyMemberAccess',\n      expression: this.visit(accessed),\n      memberName: this.visit(member),\n    }\n  },\n\n  LabelDefinition(ctx) {\n    return {\n      name: toText(ctx.identifier())\n    }\n  },\n\n  AssemblyStackAssignment(ctx) {\n    return {\n      name: toText(ctx.identifier())\n    }\n  },\n\n  AssemblyFor(ctx) {\n    return {\n      pre: this.visit(ctx.getChild(1)),\n      condition: this.visit(ctx.getChild(2)),\n      post: this.visit(ctx.getChild(3)),\n      body: this.visit(ctx.getChild(4))\n    }\n  },\n\n  AssemblyIf(ctx) {\n    return {\n      condition: this.visit(ctx.assemblyExpression()),\n      body: this.visit(ctx.assemblyBlock())\n    }\n  }\n}\n\nfunction ASTBuilder(options) {\n  antlr4.tree.ParseTreeVisitor.call(this)\n  this.options = options\n}\n\nASTBuilder.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype)\nASTBuilder.prototype.constructor = ASTBuilder\n\nASTBuilder.prototype._loc = function(ctx) {\n  const sourceLocation = {\n    start: {\n      line: ctx.start.line,\n      column: ctx.start.column\n    },\n    end: {\n      line: ctx.stop ? ctx.stop.line : ctx.start.line,\n      column: ctx.stop ? ctx.stop.column : ctx.start.column\n    }\n  }\n  return { loc: sourceLocation }\n}\n\nASTBuilder.prototype._range = function(ctx) {\n  return { range: [ctx.start.start, ctx.stop.stop] }\n}\n\nASTBuilder.prototype.meta = function(ctx) {\n  const ret = {}\n  if (this.options.loc) {\n    Object.assign(ret, this._loc(ctx))\n  }\n  if (this.options.range) {\n    Object.assign(ret, this._range(ctx))\n  }\n  return ret\n}\n\nASTBuilder.prototype.createNode = function(obj, ctx) {\n  return Object.assign(obj, this.meta(ctx))\n}\n\nASTBuilder.prototype.visit = function(ctx) {\n  if (ctx == null) {\n    return null\n  }\n\n  if (Array.isArray(ctx)) {\n    return ctx.map(function(child) {\n      return this.visit(child)\n    }, this)\n  }\n\n  let name = ctx.constructor.name\n  if (name.endsWith('Context')) {\n    name = name.substring(0, name.length - 'Context'.length)\n  }\n\n  const node = { type: name }\n\n  if (name in transformAST) {\n    const visited = transformAST[name].call(this, ctx)\n    if (Array.isArray(visited)) {\n      return visited\n    }\n    Object.assign(node, visited)\n  }\n\n  return this.createNode(node, ctx)\n}\n\nmodule.exports = ASTBuilder\n","const antlr4 = require('./antlr4/index')\n\nfunction ErrorListener() {\n  antlr4.error.ErrorListener.call(this)\n  this._errors = []\n}\n\nErrorListener.prototype = Object.create(antlr4.error.ErrorListener.prototype)\nErrorListener.prototype.constructor = ErrorListener\n\nErrorListener.prototype.syntaxError = function(\n  recognizer,\n  offendingSymbol,\n  line,\n  column,\n  message\n) {\n  this._errors.push({ message, line, column })\n}\n\nErrorListener.prototype.getErrors = function() {\n  return this._errors\n}\n\nErrorListener.prototype.hasErrors = function() {\n  return this._errors.length > 0\n}\n\nmodule.exports = ErrorListener\n","export default \"T__0=1\\nT__1=2\\nT__2=3\\nT__3=4\\nT__4=5\\nT__5=6\\nT__6=7\\nT__7=8\\nT__8=9\\nT__9=10\\nT__10=11\\nT__11=12\\nT__12=13\\nT__13=14\\nT__14=15\\nT__15=16\\nT__16=17\\nT__17=18\\nT__18=19\\nT__19=20\\nT__20=21\\nT__21=22\\nT__22=23\\nT__23=24\\nT__24=25\\nT__25=26\\nT__26=27\\nT__27=28\\nT__28=29\\nT__29=30\\nT__30=31\\nT__31=32\\nT__32=33\\nT__33=34\\nT__34=35\\nT__35=36\\nT__36=37\\nT__37=38\\nT__38=39\\nT__39=40\\nT__40=41\\nT__41=42\\nT__42=43\\nT__43=44\\nT__44=45\\nT__45=46\\nT__46=47\\nT__47=48\\nT__48=49\\nT__49=50\\nT__50=51\\nT__51=52\\nT__52=53\\nT__53=54\\nT__54=55\\nT__55=56\\nT__56=57\\nT__57=58\\nT__58=59\\nT__59=60\\nT__60=61\\nT__61=62\\nT__62=63\\nT__63=64\\nT__64=65\\nT__65=66\\nT__66=67\\nT__67=68\\nT__68=69\\nT__69=70\\nT__70=71\\nT__71=72\\nT__72=73\\nT__73=74\\nT__74=75\\nT__75=76\\nT__76=77\\nT__77=78\\nT__78=79\\nT__79=80\\nT__80=81\\nT__81=82\\nT__82=83\\nT__83=84\\nT__84=85\\nT__85=86\\nT__86=87\\nT__87=88\\nT__88=89\\nT__89=90\\nT__90=91\\nT__91=92\\nT__92=93\\nT__93=94\\nInt=95\\nUint=96\\nByte=97\\nFixed=98\\nUfixed=99\\nBooleanLiteral=100\\nDecimalNumber=101\\nHexNumber=102\\nNumberUnit=103\\nHexLiteral=104\\nReservedKeyword=105\\nAnonymousKeyword=106\\nBreakKeyword=107\\nConstantKeyword=108\\nImmutableKeyword=109\\nContinueKeyword=110\\nLeaveKeyword=111\\nExternalKeyword=112\\nIndexedKeyword=113\\nInternalKeyword=114\\nPayableKeyword=115\\nPrivateKeyword=116\\nPublicKeyword=117\\nVirtualKeyword=118\\nPureKeyword=119\\nTypeKeyword=120\\nViewKeyword=121\\nConstructorKeyword=122\\nFallbackKeyword=123\\nReceiveKeyword=124\\nIdentifier=125\\nStringLiteralFragment=126\\nVersionLiteral=127\\nWS=128\\nCOMMENT=129\\nLINE_COMMENT=130\\n'pragma'=1\\n';'=2\\n'^'=3\\n'~'=4\\n'>='=5\\n'>'=6\\n'<'=7\\n'<='=8\\n'='=9\\n'as'=10\\n'import'=11\\n'*'=12\\n'from'=13\\n'{'=14\\n','=15\\n'}'=16\\n'abstract'=17\\n'contract'=18\\n'interface'=19\\n'library'=20\\n'is'=21\\n'('=22\\n')'=23\\n'using'=24\\n'for'=25\\n'struct'=26\\n'modifier'=27\\n'function'=28\\n'returns'=29\\n'event'=30\\n'enum'=31\\n'['=32\\n']'=33\\n'address'=34\\n'.'=35\\n'mapping'=36\\n'=>'=37\\n'memory'=38\\n'storage'=39\\n'calldata'=40\\n'if'=41\\n'else'=42\\n'try'=43\\n'catch'=44\\n'while'=45\\n'assembly'=46\\n'do'=47\\n'return'=48\\n'throw'=49\\n'emit'=50\\n'var'=51\\n'bool'=52\\n'string'=53\\n'byte'=54\\n'++'=55\\n'--'=56\\n'new'=57\\n':'=58\\n'+'=59\\n'-'=60\\n'after'=61\\n'delete'=62\\n'!'=63\\n'**'=64\\n'/'=65\\n'%'=66\\n'<<'=67\\n'>>'=68\\n'&'=69\\n'|'=70\\n'=='=71\\n'!='=72\\n'&&'=73\\n'||'=74\\n'?'=75\\n'|='=76\\n'^='=77\\n'&='=78\\n'<<='=79\\n'>>='=80\\n'+='=81\\n'-='=82\\n'*='=83\\n'/='=84\\n'%='=85\\n'let'=86\\n':='=87\\n'=:'=88\\n'switch'=89\\n'case'=90\\n'default'=91\\n'->'=92\\n'callback'=93\\n'override'=94\\n'anonymous'=106\\n'break'=107\\n'constant'=108\\n'immutable'=109\\n'continue'=110\\n'leave'=111\\n'external'=112\\n'indexed'=113\\n'internal'=114\\n'payable'=115\\n'private'=116\\n'public'=117\\n'virtual'=118\\n'pure'=119\\n'type'=120\\n'view'=121\\n'constructor'=122\\n'fallback'=123\\n'receive'=124\\n\";","import tokens from './lib/Solidity.tokens'\n\nconst TYPE_TOKENS = [\n  'var',\n  'bool',\n  'address',\n  'string',\n  'Int',\n  'Uint',\n  'Byte',\n  'Fixed',\n  'UFixed'\n]\n\nfunction rsplit(str, value) {\n  const index = str.lastIndexOf(value)\n  return [str.substring(0, index), str.substring(index + 1, str.length)]\n}\n\nfunction normalizeTokenType(value) {\n  if (value.endsWith(\"'\")) {\n    value = value.substring(0, value.length - 1)\n  }\n  if (value.startsWith(\"'\")) {\n    value = value.substring(1, value.length)\n  }\n  return value\n}\n\nfunction getTokenType(value) {\n  if (value === 'Identifier' || value === 'from') {\n    return 'Identifier'\n  } else if (value === 'TrueLiteral' || value === 'FalseLiteral') {\n    return 'Boolean'\n  } else if (value === 'VersionLiteral') {\n    return 'Version'\n  } else if (value === 'StringLiteral') {\n    return 'String'\n  } else if (TYPE_TOKENS.includes(value)) {\n    return 'Type'\n  } else if (value === 'NumberUnit') {\n    return 'Subdenomination'\n  } else if (value === 'DecimalNumber') {\n    return 'Numeric'\n  } else if (value === 'HexLiteral') {\n    return 'Hex'\n  } else if (value === 'ReservedKeyword') {\n    return 'Reserved'\n  } else if (/^\\W+$/.test(value)) {\n    return 'Punctuator'\n  } else {\n    return 'Keyword'\n  }\n}\n\nfunction getTokenTypeMap() {\n  return tokens\n    .split('\\n')\n    .map(line => rsplit(line, '='))\n    .reduce((acum, [value, key]) => {\n      acum[parseInt(key, 10)] = normalizeTokenType(value)\n      return acum\n    }, {})\n}\n\nexport function buildTokenList(tokens, options) {\n  const tokenTypes = getTokenTypeMap()\n\n  return tokens.map(token => {\n    const type = getTokenType(tokenTypes[token.type])\n    const node = { type, value: token.text }\n    if (options.range) {\n      node.range = [token.start, token.stop + 1]\n    }\n    if (options.loc) {\n      node.loc = {\n        start: { line: token.line, column: token.column },\n        end: { line: token.line, column: token.column + token.text.length }\n      }\n    }\n    return node\n  })\n}\n"],"sourceRoot":""}