// Generated by psc-bundle 0.10.7
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["applyFlipped"] = applyFlipped;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidLeft"] = voidLeft;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisli"] = composeKleisli;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Unit = PS["Data.Unit"];        
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  exports["Lazy"] = Lazy;
  exports["defer"] = defer;
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  }; 
  var liftM1 = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(v));
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["liftM1"] = liftM1;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["error"] = $foreign.error;
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
      this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  exports.ordArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i < xlen && i < ylen) {
          var x = xs[i];
          var y = ys[i];
          var o = f(x)(y);
          if (o !== 0) {
            return o;
          }
          i++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["zero"] = zero;
  exports["semiringInt"] = semiringInt;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordBoolean = new Ord(function () {
      return Data_Eq.eqBoolean;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $23 = compare(dictOrd)(a1)(a2);
              if ($23 instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $24 = compare(dictOrd)(a1)(a2);
              if ($24 instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $26 = compare(dictOrd)(a1)(a2);
              if ($26 instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var ordArray = function (dictOrd) {
      return new Ord(function () {
          return Data_Eq.eqArray(dictOrd["__superclass_Data.Eq.Eq_0"]());
      }, (function () {
          var toDelta = function (x) {
              return function (y) {
                  var $30 = compare(dictOrd)(x)(y);
                  if ($30 instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if ($30 instanceof Data_Ordering.LT) {
                      return 1;
                  };
                  if ($30 instanceof Data_Ordering.GT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Ord line 61, column 7 - line 66, column 1: " + [ $30.constructor.name ]);
              };
          };
          return function (xs) {
              return function (ys) {
                  return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
              };
          };
      })());
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["greaterThan"] = greaterThan;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["lessThan"] = lessThan;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordArray"] = ordArray;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Boolean = PS["Data.Boolean"];        
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe$prime = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v(Data_Unit.unit);
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 233, column 1 - line 233, column 28: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 220, column 1 - line 220, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar34) {
                  return $dollar34;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 271, column 1 - line 271, column 21: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var ordMaybe = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqMaybe(dictOrd["__superclass_Data.Eq.Eq_0"]());
      }, function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Nothing) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Nothing) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 196, column 1 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 69, column 3 - line 69, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 128, column 3 - line 128, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["maybe"] = maybe;
  exports["maybe'"] = maybe$prime;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["ordMaybe"] = ordMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeConj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Conj);
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["newtypeConj"] = newtypeConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($169) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var maximumBy = function (dictFoldable) {
      return function (cmp) {
          var max$prime = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(v1);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $92 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                          if ($92) {
                              return v.value0;
                          };
                          if (!$92) {
                              return v1;
                          };
                          throw new Error("Failed pattern match at Data.Foldable line 291, column 27 - line 291, column 57: " + [ $92.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Foldable line 290, column 3 - line 290, column 27: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
      };
  };
  var maximum = function (dictOrd) {
      return function (dictFoldable) {
          return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
      };
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return function (p) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)))(p);
          };
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($172) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($172));
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return function (p) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))(p);
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["intercalate"] = intercalate;
  exports["maximum"] = maximum;
  exports["maximumBy"] = maximumBy;
  exports["sum"] = sum;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return function (tma) {
              return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 37, column 3 - line 37, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar62) {
                  return $dollar62;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Either line 253, column 1 - line 253, column 23: " + [ v.constructor.name ]);
          })());
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 230, column 1 - line 230, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 44, column 3 - line 44, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 80, column 3 - line 80, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["fromRight"] = fromRight;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];        
  var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Tuple(f(v.value0), g(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["showTuple"] = showTuple;
  exports["eqTuple"] = eqTuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadState = function (__superclass_Control$dotMonad$dotMonad_0, state) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["modify"] = modify;
  exports["put"] = put;
  exports["state"] = state;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var MonadPlus = function (__superclass_Control$dotMonadZero$dotMonadZero_0) {
      this["__superclass_Control.MonadZero.MonadZero_0"] = __superclass_Control$dotMonadZero$dotMonadZero_0;
  };
  exports["MonadPlus"] = MonadPlus;
})(PS["Control.MonadPlus"] = PS["Control.MonadPlus"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
              })(function (a) {
                  var $56 = k(a);
                  return $56;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($89) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($89)));
      });
  };
  var monadErrorExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadError(function () {
          return monadExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
                  var $60 = k(a);
                  return $60;
              })(function ($91) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
              }));
          };
      }, function ($92) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
      });
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v2.value0));
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v1)(function (v3) {
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v3.value0));
                              };
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                  });
              };
          });
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadErrorExceptT"] = monadErrorExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                                 
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT(function ($1) {
          return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
      });
  };
  exports["mapExcept"] = mapExcept;
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var StateT = function (x) {
      return x;
  }; 
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
                      var $65 = f(v1.value0);
                      return $65(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT(function ($101) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($101));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var evalState = function (v) {
      return function (s) {
          var $11 = v(s);
          return $11.value0;
      };
  };
  exports["evalState"] = evalState;
})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Monad = PS["Control.Monad"];
  var mfromMaybe = function (dictMonadPlus) {
      return Data_Maybe.maybe(Control_Plus.empty(((dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]())["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]()))(Control_Applicative.pure(((dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]())["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]()));
  };
  var mcatMaybes = function (dictMonadPlus) {
      return function (m) {
          return Control_Bind.bind(((dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(mfromMaybe(dictMonadPlus));
      };
  };
  var mlefts = function (dictMonadPlus) {
      var l = function (v) {
          if (v instanceof Data_Either.Left) {
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_Either.Right) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Control.MonadPlus.Partial line 41, column 3 - line 41, column 23: " + [ v.constructor.name ]);
      };
      return function ($25) {
          return mcatMaybes(dictMonadPlus)(Control_Monad.liftM1((dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]())["__superclass_Control.Monad.Monad_0"]())(l)($25));
      };
  };
  var mrights = function (dictMonadPlus) {
      var r = function (v) {
          if (v instanceof Data_Either.Left) {
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof Data_Either.Right) {
              return new Data_Maybe.Just(v.value0);
          };
          throw new Error("Failed pattern match at Control.MonadPlus.Partial line 47, column 3 - line 47, column 24: " + [ v.constructor.name ]);
      };
      return function ($27) {
          return mcatMaybes(dictMonadPlus)(Control_Monad.liftM1((dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]())["__superclass_Control.Monad.Monad_0"]())(r)($27));
      };
  };
  exports["mcatMaybes"] = mcatMaybes;
  exports["mfromMaybe"] = mfromMaybe;
  exports["mlefts"] = mlefts;
  exports["mrights"] = mrights;
})(PS["Control.MonadPlus.Partial"] = PS["Control.MonadPlus.Partial"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.fromFoldableImpl = (function () {
    // jshint maxparams: 2
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      while (list !== emptyList) {
        result[count++] = list.head;
        list = list.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      // jshint maxparams: 2
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
          };
      });
  };
  var foldableNonEmpty = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
              };
          };
      });
  };
  var traversableNonEmpty = function (dictTraversable) {
      return new Data_Traversable.Traversable(function () {
          return foldableNonEmpty(dictTraversable["__superclass_Data.Foldable.Foldable_1"]());
      }, function () {
          return functorNonEmpty(dictTraversable["__superclass_Data.Functor.Functor_0"]());
      }, function (dictApplicative) {
          return function (v) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
          };
      }, function (dictApplicative) {
          return function (f) {
              return function (v) {
                  return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
  exports["traversableNonEmpty"] = traversableNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              while (true) {
                var maybe = f(b);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                b = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];        
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var $56 = comp(x)(y);
                  if ($56 instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if ($56 instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if ($56 instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 467, column 15 - line 472, column 1: " + [ $56.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())([  ]));
          };
      };
  };                                                                                  
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array line 249, column 1 - line 251, column 55: " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var span = function (p) {
      return function (arr) {
          var go = function (__copy_i) {
              var i = __copy_i;
              tco: while (true) {
                  var $61 = index(arr)(i);
                  if ($61 instanceof Data_Maybe.Just) {
                      var $62 = p($61.value0);
                      if ($62) {
                          var __tco_i = i + 1 | 0;
                          i = __tco_i;
                          continue tco;
                      };
                      if (!$62) {
                          return new Data_Maybe.Just(i);
                      };
                      throw new Error("Failed pattern match at Data.Array line 529, column 17 - line 529, column 49: " + [ $62.constructor.name ]);
                  };
                  if ($61 instanceof Data_Maybe.Nothing) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.Array line 528, column 5 - line 530, column 25: " + [ $61.constructor.name ]);
              };
          };
          var breakIndex = go(0);
          if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
              return {
                  init: [  ], 
                  rest: arr
              };
          };
          if (breakIndex instanceof Data_Maybe.Just) {
              return {
                  init: $foreign.slice(0)(breakIndex.value0)(arr), 
                  rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
              };
          };
          if (breakIndex instanceof Data_Maybe.Nothing) {
              return {
                  init: arr, 
                  rest: [  ]
              };
          };
          throw new Error("Failed pattern match at Data.Array line 515, column 3 - line 521, column 30: " + [ breakIndex.constructor.name ]);
      };
  };
  var takeWhile = function (p) {
      return function (xs) {
          return (span(p)(xs)).init;
      };
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  exports["elemIndex"] = elemIndex;
  exports["findIndex"] = findIndex;
  exports["fromFoldable"] = fromFoldable;
  exports["head"] = head;
  exports["index"] = index;
  exports["init"] = init;
  exports["last"] = last;
  exports["many"] = many;
  exports["null"] = $$null;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["span"] = span;
  exports["takeWhile"] = takeWhile;
  exports["uncons"] = uncons;
  exports["cons"] = $foreign.cons;
  exports["drop"] = $foreign.drop;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["range"] = $foreign.range;
  exports["slice"] = $foreign.slice;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Ring = PS["Data.Ring"];        
  var tail = function (dictPartial) {
      return function (xs) {
          return Data_Array.slice(1)(Data_Array.length(xs))(xs);
      };
  };
  var head = function (dictPartial) {
      return function (xs) {
          return xs[0];
      };
  };
  exports["head"] = head;
  exports["tail"] = tail;
})(PS["Data.Array.Partial"] = PS["Data.Array.Partial"] || {});
(function(exports) {
    "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.toLower = function (c) {
    return c.toLowerCase();
  };
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Char"];
  exports["toCharCode"] = $foreign.toCharCode;
  exports["toLower"] = $foreign.toLower;
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  // jshint maxparams: 1

  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
    "use strict";

  exports.mkFn2 = function (fn) {
    /* jshint maxparams: 2 */
    return function (a, b) {
      return fn(a)(b);
    };
  };

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  var mkFn1 = function (f) {
      return f;
  };
  exports["mkFn1"] = mkFn1;
  exports["mkFn2"] = $foreign.mkFn2;
  exports["runFn2"] = $foreign.runFn2;
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";

  exports.readFloat = parseFloat;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Global"];
  exports["readFloat"] = $foreign.readFloat;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._toChar = function (just) {
    return function (nothing) {
      return function (s) {
        return s.length === 1 ? just(s) : nothing;
      };
    };
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports._lastIndexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.lastIndexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.toUpper = function (s) {
    return s.toUpperCase();
  };

  exports.trim = function (s) {
    return s.trim();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
    "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Pattern = function (x) {
      return x;
  };
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v), 
          tail: $foreign.drop(1)(v)
      });
  };
  var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var $$null = function (s) {
      return s === "";
  };              
  var newtypePattern = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pattern);                                                                                        
  var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripSuffix = function (v) {
      return function (str) {
          var $32 = lastIndexOf(v)(str);
          if ($32 instanceof Data_Maybe.Just && $32.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
              return Data_Maybe.Just.create($foreign.take($32.value0)(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };                                                                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var $36 = indexOf(v)(str);
          if ($36 instanceof Data_Maybe.Just && $36.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      return function ($46) {
          return Data_Maybe.isJust(indexOf(pat)($46));
      };
  };                                                                                      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["Pattern"] = Pattern;
  exports["charAt"] = charAt;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["lastIndexOf"] = lastIndexOf;
  exports["null"] = $$null;
  exports["stripPrefix"] = stripPrefix;
  exports["stripSuffix"] = stripSuffix;
  exports["toChar"] = toChar;
  exports["uncons"] = uncons;
  exports["newtypePattern"] = newtypePattern;
  exports["drop"] = $foreign.drop;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["joinWith"] = $foreign.joinWith;
  exports["length"] = $foreign.length;
  exports["singleton"] = $foreign.singleton;
  exports["split"] = $foreign.split;
  exports["take"] = $foreign.take;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["toUpper"] = $foreign.toUpper;
  exports["trim"] = $foreign.trim;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Type_Proxy = PS["Type.Proxy"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Function = PS["Data.Function"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];        
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SUnit = (function () {
      function SUnit() {

      };
      SUnit.value = new SUnit();
      return SUnit;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var SigNumber = (function () {
      function SigNumber() {

      };
      SigNumber.value = new SigNumber();
      return SigNumber;
  })();
  var SigBoolean = (function () {
      function SigBoolean() {

      };
      SigBoolean.value = new SigBoolean();
      return SigBoolean;
  })();
  var SigInt = (function () {
      function SigInt() {

      };
      SigInt.value = new SigInt();
      return SigInt;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigChar = (function () {
      function SigChar() {

      };
      SigChar.value = new SigChar();
      return SigChar;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  }; 
  var genericString = new Generic(function (v) {
      if (v instanceof SString) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigString.value;
  }, SString.create);
  var genericNumber = new Generic(function (v) {
      if (v instanceof SNumber) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigNumber.value;
  }, SNumber.create);
  var genericInt = new Generic(function (v) {
      if (v instanceof SInt) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigInt.value;
  }, SInt.create);
  var genericChar = new Generic(function (v) {
      if (v instanceof SChar) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigChar.value;
  }, SChar.create);
  var genericBool = new Generic(function (v) {
      if (v instanceof SBoolean) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigBoolean.value;
  }, SBoolean.create);
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var force = function (f) {
      return f(Data_Unit.unit);
  };
  var genericArray = function (dictGeneric) {
      return new Generic(function (v) {
          if (v instanceof SArray) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($259) {
                  return fromSpine(dictGeneric)(force($259));
              })(v.value0);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var lowerProxy = function (v) {
              return Type_Proxy["Proxy"].value;
          };
          return new SigArray(function (v) {
              return toSignature(dictGeneric)(lowerProxy(x));
          });
      }, function ($260) {
          return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return function (v) {
                  return toSpine(dictGeneric)(x);
              };
          })($260));
      });
  };
  var genericMaybe = function (dictGeneric) {
      return new Generic(function (v) {
          if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
          };
          if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var mbProxy = function (v) {
              return Type_Proxy["Proxy"].value;
          };
          return new SigProd("Data.Maybe.Maybe", [ {
              sigConstructor: "Data.Maybe.Just", 
              sigValues: [ function (v) {
                  return toSignature(dictGeneric)(mbProxy(x));
              } ]
          }, {
              sigConstructor: "Data.Maybe.Nothing", 
              sigValues: [  ]
          } ]);
      }, function (v) {
          if (v instanceof Data_Maybe.Just) {
              return new SProd("Data.Maybe.Just", [ function (v1) {
                  return toSpine(dictGeneric)(v.value0);
              } ]);
          };
          if (v instanceof Data_Maybe.Nothing) {
              return new SProd("Data.Maybe.Nothing", [  ]);
          };
          throw new Error("Failed pattern match at Data.Generic line 110, column 3 - line 110, column 63: " + [ v.constructor.name ]);
      });
  };
  var genericNonEmpty = function (dictGeneric) {
      return function (dictGeneric1) {
          return new Generic(function (v) {
              if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v["value1"][0]))))(fromSpine(dictGeneric)(force(v["value1"][1])));
              };
              return Data_Maybe.Nothing.value;
          }, function (x) {
              var tailProxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              var headProxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              return new SigProd("Data.NonEmpty.NonEmpty", [ {
                  sigConstructor: "Data.NonEmpty.NonEmpty", 
                  sigValues: [ function (v) {
                      return toSignature(dictGeneric1)(headProxy(x));
                  }, function (v) {
                      return toSignature(dictGeneric)(tailProxy(x));
                  } ]
              } ]);
          }, function (v) {
              return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
                  return toSpine(dictGeneric1)(v.value0);
              }, function (v1) {
                  return toSpine(dictGeneric)(v.value1);
              } ]);
          });
      };
  };
  var genericShowPrec = function (v) {
      return function (v1) {
          if (v1 instanceof SProd) {
              if (Data_Array["null"](v1.value1)) {
                  return v1.value0;
              };
              if (Data_Boolean.otherwise) {
                  var showParen = function (v2) {
                      return function (x) {
                          if (!v2) {
                              return x;
                          };
                          if (v2) {
                              return "(" + (x + ")");
                          };
                          throw new Error("Failed pattern match at Data.Generic line 380, column 7 - line 380, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                      };
                  };
                  return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return genericShowPrec(11)(force(x));
                  })(v1.value1))));
              };
          };
          if (v1 instanceof SRecord) {
              var showLabelPart = function (x) {
                  return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
              };
              return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
          };
          if (v1 instanceof SBoolean) {
              return Data_Show.show(Data_Show.showBoolean)(v1.value0);
          };
          if (v1 instanceof SInt) {
              return Data_Show.show(Data_Show.showInt)(v1.value0);
          };
          if (v1 instanceof SNumber) {
              return Data_Show.show(Data_Show.showNumber)(v1.value0);
          };
          if (v1 instanceof SString) {
              return Data_Show.show(Data_Show.showString)(v1.value0);
          };
          if (v1 instanceof SChar) {
              return Data_Show.show(Data_Show.showChar)(v1.value0);
          };
          if (v1 instanceof SArray) {
              return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return genericShowPrec(0)(force(x));
              })(v1.value0)) + "]");
          };
          if (v1 instanceof SUnit) {
              return "unit";
          };
          throw new Error("Failed pattern match at Data.Generic line 374, column 1 - line 382, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var gShow = function (dictGeneric) {
      return function ($261) {
          return genericShowPrec(0)(toSpine(dictGeneric)($261));
      };
  };
  exports["SigProd"] = SigProd;
  exports["SigNumber"] = SigNumber;
  exports["SigBoolean"] = SigBoolean;
  exports["SigInt"] = SigInt;
  exports["SigString"] = SigString;
  exports["SigChar"] = SigChar;
  exports["SigArray"] = SigArray;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["SUnit"] = SUnit;
  exports["Generic"] = Generic;
  exports["fromSpine"] = fromSpine;
  exports["gShow"] = gShow;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["genericNumber"] = genericNumber;
  exports["genericInt"] = genericInt;
  exports["genericString"] = genericString;
  exports["genericChar"] = genericChar;
  exports["genericBool"] = genericBool;
  exports["genericArray"] = genericArray;
  exports["genericMaybe"] = genericMaybe;
  exports["genericNonEmpty"] = genericNonEmpty;
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
      return n;
  }, NonEmptyList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($128) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($128));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var b = __copy_b;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return b;
                  };
                  if (v instanceof Cons) {
                      var __tco_b = f(b)(v.value0);
                      var __tco_v = v.value1;
                      b = __tco_b;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 66, column 3 - line 69, column 34: " + [ b.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          return function (as) {
              var rev = function (__copy_acc) {
                  return function (__copy_v) {
                      var acc = __copy_acc;
                      var v = __copy_v;
                      tco: while (true) {
                          if (v instanceof Nil) {
                              return acc;
                          };
                          if (v instanceof Cons) {
                              var __tco_acc = new Cons(v.value0, acc);
                              var __tco_v = v.value1;
                              acc = __tco_acc;
                              v = __tco_v;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 62, column 3 - line 65, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                      };
                  };
              };
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
          };
      };
  });
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });           
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  };
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function ($129) {
              return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                  return function ($130) {
                      return Control_Apply.lift2(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Function.flip(Cons.create))(acc)(f($130));
                  };
              })(Control_Applicative.pure(dictApplicative)(Nil.value))($129));
          };
      };
  });                                                                              
  var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
      return function (b) {
          var go = function (__copy_source) {
              return function (__copy_memo) {
                  var source = __copy_source;
                  var memo = __copy_memo;
                  tco: while (true) {
                      var $70 = f(source);
                      if ($70 instanceof Data_Maybe.Nothing) {
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if ($70 instanceof Data_Maybe.Just) {
                          var __tco_memo = new Cons($70.value0.value0, memo);
                          source = $70.value0.value1;
                          memo = __tco_memo;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 75, column 24 - line 77, column 54: " + [ $70.constructor.name ]);
                  };
              };
          };
          return go(b)(Nil.value);
      };
  });
  var eqList = function (dictEq) {
      return new Data_Eq.Eq(function (xs) {
          return function (ys) {
              var go = function (__copy_v) {
                  return function (__copy_v1) {
                      return function (__copy_v2) {
                          var v = __copy_v;
                          var v1 = __copy_v1;
                          var v2 = __copy_v2;
                          tco: while (true) {
                              if (!v2) {
                                  return false;
                              };
                              if (v instanceof Nil && v1 instanceof Nil) {
                                  return v2;
                              };
                              if (v instanceof Cons && v1 instanceof Cons) {
                                  var __tco_v = v.value1;
                                  var __tco_v1 = v1.value1;
                                  var __tco_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  v2 = __tco_v2;
                                  continue tco;
                              };
                              return false;
                          };
                      };
                  };
              };
              return go(xs)(ys)(true);
          };
      });
  };
  var ordList = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqList(dictOrd["__superclass_Data.Eq.Eq_0"]());
      }, function (xs) {
          return function (ys) {
              var go = function (__copy_v) {
                  return function (__copy_v1) {
                      var v = __copy_v;
                      var v1 = __copy_v1;
                      tco: while (true) {
                          if (v instanceof Nil && v1 instanceof Nil) {
                              return Data_Ordering.EQ.value;
                          };
                          if (v instanceof Nil) {
                              return Data_Ordering.LT.value;
                          };
                          if (v1 instanceof Nil) {
                              return Data_Ordering.GT.value;
                          };
                          if (v instanceof Cons && v1 instanceof Cons) {
                              var $99 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                              if ($99 instanceof Data_Ordering.EQ) {
                                  var __tco_v = v.value1;
                                  var __tco_v1 = v1.value1;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              return $99;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 42, column 3 - line 50, column 23: " + [ v.constructor.name, v1.constructor.name ]);
                      };
                  };
              };
              return go(xs)(ys);
          };
      });
  }; 
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 84, column 3 - line 84, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 91, column 3 - line 91, column 19: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  var monadList = new Control_Monad.Monad(function () {
      return applicativeList;
  }, function () {
      return bindList;
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var alternativeList = new Control_Alternative.Alternative(function () {
      return applicativeList;
  }, function () {
      return plusList;
  });
  var monadZeroList = new Control_MonadZero.MonadZero(function () {
      return alternativeList;
  }, function () {
      return monadList;
  });
  var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
      return monadZeroList;
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["toList"] = toList;
  exports["showList"] = showList;
  exports["eqList"] = eqList;
  exports["ordList"] = ordList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["monadList"] = monadList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["alternativeList"] = alternativeList;
  exports["monadZeroList"] = monadZeroList;
  exports["monadPlusList"] = monadPlusList;
  exports["newtypeNonEmptyList"] = newtypeNonEmptyList;
  exports["showNonEmptyList"] = showNonEmptyList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];                                 
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0, 
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 253, column 1 - line 253, column 21: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 239, column 1 - line 239, column 19: " + [ v.constructor.name ]);
  };
  var span = function (v) {
      return function (v1) {
          if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
              var $124 = span(v)(v1.value1);
              return {
                  init: new Data_List_Types.Cons(v1.value0, $124.init), 
                  rest: $124.rest
              };
          };
          return {
              init: Data_List_Types.Nil.value, 
              rest: v1
          };
      };
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var sortBy = function (cmp) {
      var merge = function (v) {
          return function (v1) {
              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                  if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                      return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                  };
              };
              if (v instanceof Data_List_Types.Nil) {
                  return v1;
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return v;
              };
              throw new Error("Failed pattern match at Data.List line 468, column 3 - line 470, column 41: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
      var mergePairs = function (v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
              return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
          };
          return v;
      };
      var mergeAll = function (__copy_v) {
          var v = __copy_v;
          tco: while (true) {
              if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                  return v.value0;
              };
              var __tco_v = mergePairs(v);
              v = __tco_v;
              continue tco;
          };
      };
      var sequences = function (v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
              if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                  return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
              };
              if (Data_Boolean.otherwise) {
                  return ascending(v.value1.value0)(function (v1) {
                      return new Data_List_Types.Cons(v.value0, v1);
                  })(v.value1.value1);
              };
          };
          return singleton(v);
      };
      var descending = function (__copy_a) {
          return function (__copy_as) {
              return function (__copy_v) {
                  var a = __copy_a;
                  var as = __copy_as;
                  var v = __copy_v;
                  tco: while (true) {
                      if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                          var __tco_a = v.value0;
                          var __tco_as = new Data_List_Types.Cons(a, as);
                          var __tco_v = v.value1;
                          a = __tco_a;
                          as = __tco_as;
                          v = __tco_v;
                          continue tco;
                      };
                      return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                  };
              };
          };
      };
      var ascending = function (a) {
          return function (as) {
              return function (v) {
                  if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                      return ascending(v.value0)(function (ys) {
                          return as(new Data_List_Types.Cons(a, ys));
                      })(v.value1);
                  };
                  return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
              };
          };
      };
      return function ($302) {
          return mergeAll(sequences($302));
      };
  };
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 359, column 1 - line 362, column 36: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var unsnoc = function (lst) {
      var go = function (__copy_v) {
          return function (__copy_acc) {
              var v = __copy_v;
              var acc = __copy_acc;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      return new Data_Maybe.Just({
                          revInit: acc, 
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var __tco_v = v.value1;
                      var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                      v = __tco_v;
                      acc = __tco_acc;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 261, column 1 - line 265, column 36: " + [ v.constructor.name, acc.constructor.name ]);
              };
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit), 
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var mapMaybe = function (f) {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var $199 = f(v.value0);
                      if ($199 instanceof Data_Maybe.Nothing) {
                          var __tco_acc = acc;
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      if ($199 instanceof Data_Maybe.Just) {
                          var __tco_acc = new Data_List_Types.Cons($199.value0, acc);
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 412, column 5 - line 414, column 32: " + [ $199.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.List line 408, column 1 - line 414, column 32: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value));
          };
      };
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var last = function (__copy_v) {
      var v = __copy_v;
      tco: while (true) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              var __tco_v = v.value1;
              v = __tco_v;
              continue tco;
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var init = function (lst) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.init;
      })(unsnoc(lst));
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 224, column 1 - line 224, column 19: " + [ v.constructor.name ]);
  };
  var groupBy = function (v) {
      return function (v1) {
          if (v1 instanceof Data_List_Types.Nil) {
              return Data_List_Types.Nil.value;
          };
          if (v1 instanceof Data_List_Types.Cons) {
              var $241 = span(v(v1.value0))(v1.value1);
              return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, $241.init), groupBy(v)($241.rest));
          };
          throw new Error("Failed pattern match at Data.List line 560, column 1 - line 560, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var foldM = function (dictMonad) {
      return function (v) {
          return function (a) {
              return function (v1) {
                  if (v1 instanceof Data_List_Types.Nil) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
                  };
                  if (v1 instanceof Data_List_Types.Cons) {
                      return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
                          return foldM(dictMonad)(v)(a$prime)(v1.value1);
                      });
                  };
                  throw new Error("Failed pattern match at Data.List line 698, column 1 - line 698, column 23: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
              };
          };
      };
  };
  var filter = function (p) {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (p(v.value0)) {
                          var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      if (Data_Boolean.otherwise) {
                          var __tco_acc = acc;
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List line 381, column 1 - line 386, column 28: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var nubBy = function (v) {
      return function (v1) {
          if (v1 instanceof Data_List_Types.Nil) {
              return Data_List_Types.Nil.value;
          };
          if (v1 instanceof Data_List_Types.Cons) {
              return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                  return !v(v1.value0)(y);
              })(v1.value1)));
          };
          throw new Error("Failed pattern match at Data.List line 579, column 1 - line 579, column 22: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var nub = function (dictEq) {
      return nubBy(Data_Eq.eq(dictEq));
  };                                                                              
  var concat = function (v) {
      return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
  };
  var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
  exports["catMaybes"] = catMaybes;
  exports["concat"] = concat;
  exports["filter"] = filter;
  exports["foldM"] = foldM;
  exports["fromFoldable"] = fromFoldable;
  exports["groupBy"] = groupBy;
  exports["head"] = head;
  exports["init"] = init;
  exports["last"] = last;
  exports["length"] = length;
  exports["many"] = many;
  exports["mapMaybe"] = mapMaybe;
  exports["nub"] = nub;
  exports["nubBy"] = nubBy;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["sortBy"] = sortBy;
  exports["span"] = span;
  exports["tail"] = tail;
  exports["toUnfoldable"] = toUnfoldable;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = function ($36) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($36));
  };
  var head = function (v) {
      return v.value0;
  };
  exports["head"] = head;
  exports["singleton"] = singleton;
  exports["toList"] = toList;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Boolean = PS["Data.Boolean"];
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (v.value0 + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof JSONError) {
          return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Data.Foreign line 66, column 3 - line 67, column 3: " + [ v.constructor.name ]);
  });
  var fail = function ($112) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($112));
  };
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 152, column 58: " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 109, column 1 - line 111, column 54: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
      var fromNumber = function ($114) {
          return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($114));
      };
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };
  var readString = unsafeReadTagged("String");
  var readChar = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
      var fromString = function ($115) {
          return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($115));
      };
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
  };
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["fail"] = fail;
  exports["readArray"] = readArray;
  exports["readBoolean"] = readBoolean;
  exports["readChar"] = readChar;
  exports["readInt"] = readInt;
  exports["readNumber"] = readNumber;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["toForeign"] = $foreign.toForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["unsafeFromForeign"] = $foreign.unsafeFromForeign;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];        
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };                         
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                         
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var NullOrUndefined = function (x) {
      return x;
  };
  var unNullOrUndefined = function (v) {
      return v;
  };
  var readNullOrUndefined = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
          };
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($23) {
              return NullOrUndefined(Data_Maybe.Just.create($23));
          })(v(value));
      };
  };
  exports["NullOrUndefined"] = NullOrUndefined;
  exports["readNullOrUndefined"] = readNullOrUndefined;
  exports["unNullOrUndefined"] = unNullOrUndefined;
})(PS["Data.Foreign.NullOrUndefined"] = PS["Data.Foreign.NullOrUndefined"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Identity = PS["Data.Identity"];        
  var IsForeign = function (read) {
      this.read = read;
  };
  var AsForeign = function (write) {
      this.write = write;
  };
  var write = function (dict) {
      return dict.write;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var stringAsForeign = new AsForeign(Data_Foreign.toForeign);
  var read = function (dict) {
      return dict.read;
  };
  var readWith = function (dictIsForeign) {
      return function (f) {
          return function ($23) {
              return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f))(read(dictIsForeign)($23));
          };
      };
  };
  var readProp = function (dictIsForeign) {
      return function (dictIndex) {
          return function (prop) {
              return function (value) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign_Index.errorAt(dictIndex)(prop))));
              };
          };
      };
  };                                                          
  var nullOrUndefinedIsForeign = function (dictIsForeign) {
      return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
  };                                                       
  var foreignIsForeign = new IsForeign(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
  var charIsForeign = new IsForeign(Data_Foreign.readChar);
  var charAsForeign = new AsForeign(Data_Foreign.toForeign);
  var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
  var booleanAsForeign = new AsForeign(Data_Foreign.toForeign);
  var arrayIsForeign = function (dictIsForeign) {
      return new IsForeign((function () {
          var readElement = function (i) {
              return function (value) {
                  return readWith(dictIsForeign)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign.ErrorAtIndex.create(i)))(value);
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
          };
          return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray)(readElements);
      })());
  };
  var arrayAsForeign = function (dictAsForeign) {
      return new AsForeign(function ($24) {
          return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(write(dictAsForeign))($24));
      });
  };
  exports["AsForeign"] = AsForeign;
  exports["IsForeign"] = IsForeign;
  exports["read"] = read;
  exports["readProp"] = readProp;
  exports["readWith"] = readWith;
  exports["write"] = write;
  exports["foreignIsForeign"] = foreignIsForeign;
  exports["stringIsForeign"] = stringIsForeign;
  exports["charIsForeign"] = charIsForeign;
  exports["booleanIsForeign"] = booleanIsForeign;
  exports["arrayIsForeign"] = arrayIsForeign;
  exports["nullOrUndefinedIsForeign"] = nullOrUndefinedIsForeign;
  exports["stringAsForeign"] = stringAsForeign;
  exports["charAsForeign"] = charAsForeign;
  exports["booleanAsForeign"] = booleanAsForeign;
  exports["arrayAsForeign"] = arrayAsForeign;
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Extra

  exports._isTruthy = function (value) {
    return !!value;
  };

  exports.undefined = undefined;
})(PS["Data.Foreign.Extra"] = PS["Data.Foreign.Extra"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 2
  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var toList = function ($44) {
      return Data_List.fromFoldable(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($44));
  };
  var thawST = $foreign._copyEff;
  var showStrMap = function (dictShow) {
      return new Data_Show.Show(function (m) {
          return "fromList " + Data_Show.show(Data_List_Types.showList(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toList(m));
      });
  };
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var functorStrMap = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                  return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
              })();
              return v;
          });
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["pureST"] = pureST;
  exports["thawST"] = thawST;
  exports["toList"] = toList;
  exports["functorStrMap"] = functorStrMap;
  exports["showStrMap"] = showStrMap;
  exports["empty"] = $foreign.empty;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foreign.Extra"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Array = PS["Data.Array"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var truthy = function (a) {
      return Data_Foreign.toForeign(a);
  };
  var readPropMaybe = function (dictIsForeign) {
      return function (dictIndex) {
          return function (k) {
              return function (v) {
                  var $15 = Data_Foreign_Index.hasOwnProperty(dictIndex)(k)(v);
                  if ($15) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.readProp(Data_Foreign_Class.nullOrUndefinedIsForeign(dictIsForeign))(dictIndex)(k)(v))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign_NullOrUndefined.unNullOrUndefined(v1));
                      });
                  };
                  if (!$15) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
                  };
                  throw new Error("Failed pattern match at Data.Foreign.Extra line 32, column 3 - line 36, column 22: " + [ $15.constructor.name ]);
              };
          };
      };
  };
  var readNonemptyList = function (dictIsForeign) {
      return function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.read(Data_Foreign_Class.arrayIsForeign(dictIsForeign))(v))(function (v1) {
              var $18 = Data_List.fromFoldable(Data_Foldable.foldableArray)(v1);
              if ($18 instanceof Data_List_Types.Cons) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_NonEmpty.NonEmpty($18.value0, $18.value1));
              };
              return Data_Foreign.fail(Data_Foreign.JSONError.create("list is empty"));
          });
      };
  };
  var readNonemptyArray = function (dictIsForeign) {
      return function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.read(Data_Foreign_Class.arrayIsForeign(dictIsForeign))(v))(function (v1) {
              var $22 = Data_Array.uncons(v1);
              if ($22 instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_NonEmpty.NonEmpty($22.value0.head, $22.value0.tail));
              };
              return Data_Foreign.fail(Data_Foreign.JSONError.create("array is empty"));
          });
      };
  };
  var prettyForeignError = (function () {
      var nested = function (v) {
          if (v instanceof Data_Foreign.ErrorAtIndex) {
              return "[" + (Data_Show.show(Data_Show.showInt)(v.value0) + ("]" + nested(v.value1)));
          };
          if (v instanceof Data_Foreign.ErrorAtProperty) {
              return "[" + (Data_Show.show(Data_Show.showString)(v.value0) + ("]" + nested(v.value1)));
          };
          return ": " + Data_Show.show(Data_Foreign.showForeignError)(v);
      };
      var go = function (v) {
          if (v instanceof Data_Foreign.ErrorAtIndex) {
              return "Error at [" + (Data_Show.show(Data_Show.showInt)(v.value0) + ("]" + nested(v.value1)));
          };
          if (v instanceof Data_Foreign.ErrorAtProperty) {
              return "Error at [" + (Data_Show.show(Data_Show.showString)(v.value0) + ("]" + nested(v.value1)));
          };
          return Data_Show.show(Data_Foreign.showForeignError)(v);
      };
      return go;
  })();
  var isTruthy = function (v) {
      return $foreign._isTruthy(v);
  };
  var isObject = function (f) {
      return Data_Foreign.typeOf(f) === "object";
  };
  var readObject = function (value) {
      if (isObject(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.unsafeFromForeign(value));
      };
      return Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value)));
  };
  var isForeignTruthy = new Data_Foreign_Class.IsForeign(function (v) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v);
  });
  var errorAtIndex = function (i) {
      return function (f) {
          return Control_Monad_Error_Class.catchError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(f)(function (es) {
              return Data_Foreign.fail(new Data_Foreign.ErrorAtIndex(i, Data_List_NonEmpty.head(es)));
          });
      };
  };
  var defaultIfUndefined = function (dictIsForeign) {
      return function (dictIndex) {
          return function (k) {
              return function (d) {
                  return function (v) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readPropMaybe(Data_Foreign_Class.foreignIsForeign)(dictIndex)(k)(v))(function (v1) {
                          return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(d))(Data_Foreign_Class.read(dictIsForeign))(v1);
                      });
                  };
              };
          };
      };
  };
  exports["defaultIfUndefined"] = defaultIfUndefined;
  exports["errorAtIndex"] = errorAtIndex;
  exports["isObject"] = isObject;
  exports["isTruthy"] = isTruthy;
  exports["prettyForeignError"] = prettyForeignError;
  exports["readNonemptyArray"] = readNonemptyArray;
  exports["readNonemptyList"] = readNonemptyList;
  exports["readObject"] = readObject;
  exports["readPropMaybe"] = readPropMaybe;
  exports["truthy"] = truthy;
  exports["isForeignTruthy"] = isForeignTruthy;
  exports["undefined"] = $foreign["undefined"];
})(PS["Data.Foreign.Extra"] = PS["Data.Foreign.Extra"] || {});
(function(exports) {
    "use strict";

  exports.defer = function () {

    function Defer(thunk) {
      if (this instanceof Defer) {
        this.thunk = thunk;
        return this;
      } else {
        return new Defer(thunk);
      }
    }

    Defer.prototype.force = function () {
      var value = this.thunk();
      this.thunk = null;
      this.force = function () {
        return value;
      };
      return value;
    };

    return Defer;

  }();

  exports.force = function (l) {
    return l.force();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Field = PS["Data.Field"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var last = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar9) {
                  return $dollar9;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                  return v.value0;
              };
              if (v instanceof Data_List_Types.Cons) {
                  return last(dictPartial)(v.value1);
              };
              throw new Error("Failed pattern match at Data.List.Partial line 22, column 1 - line 22, column 22: " + [ v.constructor.name ]);
          })());
      };
  };
  var init = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar13) {
                  return $dollar13;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                  return Data_List_Types.Nil.value;
              };
              if (v instanceof Data_List_Types.Cons) {
                  return new Data_List_Types.Cons(v.value0, init(dictPartial)(v.value1));
              };
              throw new Error("Failed pattern match at Data.List.Partial line 29, column 1 - line 29, column 24: " + [ v.constructor.name ]);
          })());
      };
  };
  exports["init"] = init;
  exports["last"] = last;
})(PS["Data.List.Partial"] = PS["Data.List.Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toAscUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function (__copy_v) {
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          var __tco_v = v.value1;
                          v = __tco_v;
                          continue tco;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          var __tco_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          v = __tco_v;
                          continue tco;
                      };
                      if (v.value0 instanceof Three) {
                          var __tco_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          v = __tco_v;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 404, column 18 - line 413, column 71: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 402, column 1 - line 413, column 71: " + [ v.constructor.name ]);
              };
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
  var toList = toAscUnfoldable(Data_List_Types.unfoldableList);
  var lookup = function (dictOrd) {
      return function (k) {
          return function (tree) {
              if (tree instanceof Leaf) {
                  return Data_Maybe.Nothing.value;
              };
              var comp = Data_Ord.compare(dictOrd);
              var __unused = function (dictPartial1) {
                  return function ($dollar43) {
                      return $dollar43;
                  };
              };
              return __unused()((function () {
                  if (tree instanceof Two) {
                      var $189 = comp(k)(tree.value1);
                      if ($189 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value2);
                      };
                      if ($189 instanceof Data_Ordering.LT) {
                          return lookup(dictOrd)(k)(tree.value0);
                      };
                      return lookup(dictOrd)(k)(tree.value3);
                  };
                  if (tree instanceof Three) {
                      var $194 = comp(k)(tree.value1);
                      if ($194 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value2);
                      };
                      var $196 = comp(k)(tree.value4);
                      if ($196 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value5);
                      };
                      if ($194 instanceof Data_Ordering.LT) {
                          return lookup(dictOrd)(k)(tree.value0);
                      };
                      if ($196 instanceof Data_Ordering.GT) {
                          return lookup(dictOrd)(k)(tree.value6);
                      };
                      return lookup(dictOrd)(k)(tree.value3);
                  };
                  throw new Error("Failed pattern match at Data.Map line 149, column 10 - line 163, column 39: " + [ tree.constructor.name ]);
              })());
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 417, column 1 - line 417, column 16: " + [ v.constructor.name ]);
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map line 74, column 3 - line 74, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function (__copy_dictOrd) {
      return function (__copy_v) {
          return function (__copy_tree) {
              var dictOrd = __copy_dictOrd;
              var v = __copy_v;
              var tree = __copy_tree;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof TwoRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 240, column 3 - line 245, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 238, column 1 - line 238, column 27: " + [ v.constructor.name, tree.constructor.name ]);
              };
          };
      };
  };
  var insert = function (dictOrd) {
      var up = function (__copy_v) {
          return function (__copy_v1) {
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                      };
                      if (v.value0 instanceof TwoRight) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 276, column 5 - line 281, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 274, column 3 - line 274, column 54: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy_v1) {
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var v = __copy_v;
                      var v1 = __copy_v1;
                      tco: while (true) {
                          if (v1 instanceof Leaf) {
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var $317 = comp(k)(v1.value1);
                              if ($317 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if ($317 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three) {
                              var $322 = comp(k)(v1.value1);
                              if ($322 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var $324 = comp(k)(v1.value4);
                              if ($324 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if ($322 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              if ($322 instanceof Data_Ordering.GT && $324 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value3;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.Map line 257, column 3 - line 257, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var pop = function (dictOrd) {
      var up = function (ctxs) {
          return function (tree) {
              if (ctxs instanceof Data_List_Types.Nil) {
                  return tree;
              };
              if (ctxs instanceof Data_List_Types.Cons) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar51) {
                          return $dollar51;
                      };
                  };
                  return __unused()((function () {
                      if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                      };
                      if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                      };
                      if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                          return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                      };
                      if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                          return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                      };
                      if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                      };
                      if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                      };
                      if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                      };
                      if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                      };
                      throw new Error("Failed pattern match at Data.Map line 326, column 9 - line 343, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                  })());
              };
              throw new Error("Failed pattern match at Data.Map line 323, column 5 - line 343, column 136: " + [ ctxs.constructor.name ]);
          };
      };
      var removeMaxNode = function (ctx) {
          return function (m) {
              var __unused = function (dictPartial1) {
                  return function ($dollar53) {
                      return $dollar53;
                  };
              };
              return __unused()((function () {
                  if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                      return up(ctx)(Leaf.value);
                  };
                  if (m instanceof Two) {
                      return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                  };
                  if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                      return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                  };
                  if (m instanceof Three) {
                      return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map line 355, column 5 - line 359, column 107: " + [ m.constructor.name ]);
              })());
          };
      };
      var maxNode = function (m) {
          var __unused = function (dictPartial1) {
              return function ($dollar55) {
                  return $dollar55;
              };
          };
          return __unused()((function () {
              if (m instanceof Two && m.value3 instanceof Leaf) {
                  return {
                      key: m.value1, 
                      value: m.value2
                  };
              };
              if (m instanceof Two) {
                  return maxNode(m.value3);
              };
              if (m instanceof Three && m.value6 instanceof Leaf) {
                  return {
                      key: m.value4, 
                      value: m.value5
                  };
              };
              if (m instanceof Three) {
                  return maxNode(m.value6);
              };
              throw new Error("Failed pattern match at Data.Map line 346, column 33 - line 350, column 45: " + [ m.constructor.name ]);
          })());
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_m) {
                  var ctx = __copy_ctx;
                  var k = __copy_k;
                  var m = __copy_m;
                  tco: while (true) {
                      if (m instanceof Leaf) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var $535 = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && $535 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if ($535 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if ($535 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          var __tco_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          var __tco_k = k;
                          var __tco_m = m.value3;
                          ctx = __tco_ctx;
                          k = __tco_k;
                          m = __tco_m;
                          continue tco;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var $544 = comp(k)(m.value1);
                          var $545 = comp(k)(m.value4);
                          if (leaves && $544 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && $545 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if ($544 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if ($545 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if ($544 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          if ($544 instanceof Data_Ordering.GT && $545 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          var __tco_k = k;
                          var __tco_m = m.value6;
                          ctx = __tco_ctx;
                          k = __tco_k;
                          m = __tco_m;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 296, column 36 - line 319, column 82: " + [ m.constructor.name ]);
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var eqMap = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (m1) {
              return function (m2) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
              };
          });
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var $635 = f(lookup(dictOrd)(k)(m));
                  if ($635 instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if ($635 instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)($635.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map line 364, column 15 - line 366, column 25: " + [ $635.constructor.name ]);
              };
          };
      };
  };
  var fromFoldableWith = function (dictOrd) {
      return function (dictFoldable) {
          return function (f) {
              var combine = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Just) {
                          return Data_Maybe.Just.create(f(v)(v1.value0));
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return new Data_Maybe.Just(v);
                      };
                      throw new Error("Failed pattern match at Data.Map line 381, column 3 - line 381, column 38: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(function (m) {
                  return function (v) {
                      return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                  };
              })(empty);
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)(function ($648) {
                              return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($648));
                          })(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toList(m1));
              };
          };
      };
  };
  exports["alter"] = alter;
  exports["empty"] = empty;
  exports["fromFoldable"] = fromFoldable;
  exports["fromFoldableWith"] = fromFoldableWith;
  exports["insert"] = insert;
  exports["keys"] = keys;
  exports["lookup"] = lookup;
  exports["pop"] = pop;
  exports["singleton"] = singleton;
  exports["toAscUnfoldable"] = toAscUnfoldable;
  exports["toList"] = toList;
  exports["unionWith"] = unionWith;
  exports["eqMap"] = eqMap;
  exports["functorMap"] = functorMap;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var fromList$prime = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar8) {
                  return $dollar8;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons) {
                  return new Data_NonEmpty.NonEmpty(v.value0, v.value1);
              };
              throw new Error("Failed pattern match at Data.NonEmpty.Extra line 50, column 1 - line 50, column 25: " + [ v.constructor.name ]);
          })());
      };
  };
  var fromList = function (v) {
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
      };
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.NonEmpty.Extra line 42, column 1 - line 42, column 33: " + [ v.constructor.name ]);
  };
  var concat = function (v) {
      return new Data_NonEmpty.NonEmpty(v.value0.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value0.value1)(Data_List.concat(Data_Functor.map(Data_List_Types.functorList)(toList)(v.value1))));
  };
  var append = function (dictSemigroup) {
      return function (dictApplicative) {
          return function (v) {
              return function (v1) {
                  return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(dictSemigroup)(v.value1)(Data_Semigroup.append(dictSemigroup)(Control_Applicative.pure(dictApplicative)(v1.value0))(v1.value1)));
              };
          };
      };
  };
  exports["append"] = append;
  exports["concat"] = concat;
  exports["fromList"] = fromList;
  exports["fromList'"] = fromList$prime;
  exports["toList"] = toList;
})(PS["Data.NonEmpty.Extra"] = PS["Data.NonEmpty.Extra"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Args6 = (function () {
      function Args6(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      Args6.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new Args6(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return Args6;
  })();
  var Args5 = (function () {
      function Args5(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      Args5.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new Args5(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return Args5;
  })();
  var Args4 = (function () {
      function Args4(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Args4.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Args4(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Args4;
  })();
  var Args3 = (function () {
      function Args3(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Args3.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Args3(value0, value1, value2);
              };
          };
      };
      return Args3;
  })();
  var Args2 = (function () {
      function Args2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Args2.create = function (value0) {
          return function (value1) {
              return new Args2(value0, value1);
          };
      };
      return Args2;
  })();
  exports["Args2"] = Args2;
  exports["Args3"] = Args3;
  exports["Args4"] = Args4;
  exports["Args5"] = Args5;
  exports["Args6"] = Args6;
})(PS["Data.Optimize.Uncurried"] = PS["Data.Optimize.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Unit = PS["Data.Unit"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semiring = PS["Data.Semiring"];        
  var $$Set = (function () {
      function $$Set(value0) {
          this.value0 = value0;
      };
      $$Set.create = function (value0) {
          return new $$Set(value0);
      };
      return $$Set;
  })();
  var toList = function (v) {
      return Data_Map.keys(v.value0);
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0));
          };
      };
  };
  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function ($62) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($62));
          };
      };
  }, function (f) {
      return function (x) {
          return function ($63) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($63));
          };
      };
  }, function (f) {
      return function (x) {
          return function ($64) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($64));
          };
      };
  });
  var eqSet = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              return Data_Eq.eq(Data_Map.eqMap(dictEq)(Data_Eq.eqUnit))(v.value0)(v1.value0);
          };
      });
  };
  var ordSet = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqSet(dictOrd["__superclass_Data.Eq.Eq_0"]());
      }, function (s1) {
          return function (s2) {
              return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
          };
      });
  };
  var empty = new $$Set(Data_Map.empty);
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  exports["empty"] = empty;
  exports["fromFoldable"] = fromFoldable;
  exports["insert"] = insert;
  exports["eqSet"] = eqSet;
  exports["ordSet"] = ordSet;
  exports["foldableSet"] = foldableSet;
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Data_Either = PS["Data.Either"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Show = PS["Data.Show"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Pretty = function (pretty) {
      this.pretty = pretty;
  }; 
  var pretty = function (dict) {
      return dict.pretty;
  };
  var prettyStrMap = function (dictPretty) {
      return new Pretty(function (kvs) {
          return Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)(", ")(Data_Functor.mapFlipped(Data_List_Types.functorList)(Data_StrMap.toList(kvs))(function (v) {
              return v.value0 + (" => " + pretty(dictPretty)(v.value1));
          }));
      });
  };
  exports["Pretty"] = Pretty;
  exports["pretty"] = pretty;
  exports["prettyStrMap"] = prettyStrMap;
})(PS["Data.Pretty"] = PS["Data.Pretty"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String.Ext

  exports.concatImpl = function(s1, s2) {
    return s1 + s2;
  }
})(PS["Data.String.Ext"] = PS["Data.String.Ext"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String.Ext"];
  var Prelude = PS["Prelude"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Function = PS["Data.Function"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];        
  var upperCaseEq = Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Data_String.toUpper);
  var endsWith = function (needle) {
      return function (haystack) {
          return Data_Maybe.maybe(false)(Control_Category.id(Control_Category.categoryFn))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String.lastIndexOf(needle)(haystack))(function (v) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v === (Data_String.length(haystack) - Data_String.length(needle) | 0));
          }));
      };
  };
  var concat = Data_Function_Uncurried.runFn2($foreign.concatImpl);
  exports["concat"] = concat;
  exports["endsWith"] = endsWith;
  exports["upperCaseEq"] = upperCaseEq;
})(PS["Data.String.Ext"] = PS["Data.String.Ext"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.test = function (r) {
    return function (s) {
      var lastIndex = r.lastIndex;
      var result = r.test(s);
      r.lastIndex = lastIndex;
      return result;
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null) {
            return nothing;
          } else {
            var list = [];
            for (var i = 0; i < m.length; i++) {
              list.push(m[i] == null ? nothing : just(m[i]));
            }
            return just(list);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };

  exports["replace'"] = function (r) {
    return function (f) {
      return function (s2) {
        return s2.replace(r, function (match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String = PS["Data.String"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_MonadZero = PS["Control.MonadZero"];        
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                          
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          if (!v.value0.global) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 59, column 4 - line 59, column 32: " + [ v.value0.global.constructor.name ]);
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          if (!v.value0.ignoreCase) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 60, column 4 - line 60, column 36: " + [ v.value0.ignoreCase.constructor.name ]);
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          if (!v.value0.multiline) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 61, column 4 - line 61, column 35: " + [ v.value0.multiline.constructor.name ]);
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          if (!v.value0.sticky) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 62, column 4 - line 62, column 32: " + [ v.value0.sticky.constructor.name ]);
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          if (!v.value0.unicode) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 4 - line 63, column 33: " + [ v.value0.unicode.constructor.name ]);
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var parseFlags = function (s) {
      return new Data_String_Regex_Flags.RegexFlags({
          global: Data_String.contains("g")(s), 
          ignoreCase: Data_String.contains("i")(s), 
          multiline: Data_String.contains("m")(s), 
          sticky: Data_String.contains("y")(s), 
          unicode: Data_String.contains("u")(s)
      });
  };
  var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["match"] = match;
  exports["parseFlags"] = parseFlags;
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["replace"] = $foreign.replace;
  exports["replace'"] = $foreign["replace'"];
  exports["test"] = $foreign.test;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String.Regex.AnsiRegex

  exports.getRegex = function() {
    return require('ansi-regex')();
  }
})(PS["Data.String.Regex.AnsiRegex"] = PS["Data.String.Regex.AnsiRegex"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String.Regex.AnsiRegex"];
  var Prelude = PS["Prelude"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Unit = PS["Data.Unit"];        
  var regex = $foreign.getRegex(Data_Unit.unit);
  exports["regex"] = regex;
})(PS["Data.String.Regex.AnsiRegex"] = PS["Data.String.Regex.AnsiRegex"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Char = PS["Data.Char"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Category = PS["Control.Category"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Boolean = PS["Data.Boolean"];
  var unlines = Data_String.joinWith("\x0a");
  var lines = Data_String.split("\x0a");
  var cons = function ($58) {
      return Data_Semigroup.append(Data_Semigroup.semigroupString)(Data_String.singleton($58));
  };
  var replicate = (function () {
      var replicate$prime = function (__copy_acc) {
          return function (__copy_v) {
              return function (__copy_v1) {
                  var acc = __copy_acc;
                  var v = __copy_v;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v === 0) {
                          return acc;
                      };
                      var __tco_acc = cons(v1)(acc);
                      var __tco_v = v - 1 | 0;
                      var __tco_v1 = v1;
                      acc = __tco_acc;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
              };
          };
      };
      return replicate$prime("");
  })();
  exports["cons"] = cons;
  exports["lines"] = lines;
  exports["replicate"] = replicate;
  exports["unlines"] = unlines;
})(PS["Data.String.Yarn"] = PS["Data.String.Yarn"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var fs =require("fs");
  var path =require("path"); 

  function NeodocError(message, payload) {
    this.message = message;
    this.payload = payload;
    Error.call(this);
  }

  NeodocError.prototype.name = 'NeodocError';
  NeodocError.prototype = Object.create(Error);

  exports.jsError = function(msg) {
    return function(payload) {
      return new NeodocError(msg, payload);
    };
  };

  /**
 * Try and detect the version as indicated in the package.json neighbouring
 * the main module. Uses `require.main` to detect the main module and traverses
 * the parent directories in a search for a `package.json` using
 * `require.main.paths`.
 */  

  exports.readPkgVersionImpl = function (Just) {
    return function(Nothing) {
      return function() {
        if (!require.main) {
          return Nothing;
        } else if (require.main && require.main.paths /* in node? */){
          for (var i=0; i < require.main.paths.length; i++) {
            var xs = require.main.paths[i].split(path.sep);
            if (xs.pop() === 'node_modules' && xs.length > 1) {
              xs.push('package.json');
              var p = xs.join(path.sep);
              if (fs.existsSync(p)) {
                return Just(JSON.parse(fs.readFileSync(p)).version);
              }
            }
          }
          return Nothing;
        }
        return Nothing;
      }
    }
  };
})(PS["Neodoc"] = PS["Neodoc"] || {});
(function(exports) {
    "use strict";

  exports.process = process;

  exports.exit = function (code) {
    return function () {
      process.exit(code);
    };
  };
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Node.Process"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal = PS["Data.Posix.Signal"];
  var Data_StrMap = PS["Data.StrMap"];
  var Node_Platform = PS["Node.Platform"];
  var Node_Stream = PS["Node.Stream"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  var getEnv = mkEff(function (v) {
      return $foreign.process.env;
  });                            
  var argv = mkEff(function (v) {
      return $foreign.process.argv;
  });
  exports["argv"] = argv;
  exports["getEnv"] = getEnv;
  exports["exit"] = $foreign.exit;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];        
  var dedent = function (txt) {
      var nonEmpty = function ($3) {
          return (function (v) {
              return v !== 0;
          })(Data_String.length(Data_String.trim($3)));
      };
      var lines = Data_String.split("\x0a")(txt);
      var isWhitespace = function (v) {
          if (v === " ") {
              return true;
          };
          if (v === "\x0a") {
              return true;
          };
          if (v === "\x09") {
              return true;
          };
          return false;
      };
      var countLeading = function (line) {
          return Data_Array.length(Data_Array.takeWhile(isWhitespace)(Data_String.toCharArray(line)));
      };
      var shortestLeading = Data_Maybe.maybe(0)(Control_Category.id(Control_Category.categoryFn))(Data_Array.head(Data_Array.sort(Data_Ord.ordInt)(Data_Functor.map(Data_Functor.functorArray)(countLeading)(Data_Array.filter(nonEmpty)(lines)))));
      return Data_String.joinWith("\x0a")(Data_Functor.map(Data_Functor.functorArray)(Data_String.drop(shortestLeading))(lines));
  };
  exports["dedent"] = dedent;
})(PS["Text.Wrap"] = PS["Text.Wrap"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Foldable = PS["Data.Foldable"];        
  var EmptyableGroup = (function () {
      function EmptyableGroup(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      EmptyableGroup.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new EmptyableGroup(value0, value1, value2);
              };
          };
      };
      return EmptyableGroup;
  })();
  var EmptyableElem = (function () {
      function EmptyableElem(value0) {
          this.value0 = value0;
      };
      EmptyableElem.create = function (value0) {
          return new EmptyableElem(value0);
      };
      return EmptyableElem;
  })();
  var isForeignEmptyableLayout = function (dictIsForeign) {
      return new Data_Foreign_Class.IsForeign(function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_String.toUpper)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("type")(v)))(function (v1) {
              if (v1 === "ELEM") {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(EmptyableElem.create)(Data_Foreign_Class.readProp(dictIsForeign)(Data_Foreign_Index.indexString)("elem")(v));
              };
              if (v1 === "GROUP") {
                  return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(EmptyableGroup.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("optional")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_List.fromFoldable(Data_Foldable.foldableArray))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function (v2) {
                      return Data_Functor.map(Data_Functor.functorArray)(Data_List.fromFoldable(Data_Foldable.foldableArray))(v2);
                  })(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.arrayIsForeign(isForeignEmptyableLayout(dictIsForeign))))(Data_Foreign_Index.indexString)("branches")(v))));
              };
              return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("type")(Data_Foreign.JSONError.create("unknown type: " + v1)));
          });
      });
  }; 
  var asForeignEmptyableLayout = function (dictAsForeign) {
      return new Data_Foreign_Class.AsForeign(function (v) {
          if (v instanceof EmptyableElem) {
              return Data_Foreign.toForeign({
                  type: "Elem", 
                  elem: Data_Foreign_Class.write(dictAsForeign)(v.value0)
              });
          };
          if (v instanceof EmptyableGroup) {
              return Data_Foreign.toForeign({
                  type: "Group", 
                  optional: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value0), 
                  repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1), 
                  branches: Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function ($34) {
                      return Data_Array.fromFoldable(Data_List_Types.foldableList)((function (v1) {
                          return Data_Functor.map(Data_List_Types.functorList)(Data_Foreign_Class.write(asForeignEmptyableLayout(dictAsForeign)))(v1);
                      })($34));
                  })(v.value2))
              });
          };
          throw new Error("Failed pattern match at Neodoc.Data.EmptyableLayout line 64, column 3 - line 67, column 6: " + [ v.constructor.name ]);
      });
  };
  exports["EmptyableGroup"] = EmptyableGroup;
  exports["EmptyableElem"] = EmptyableElem;
  exports["isForeignEmptyableLayout"] = isForeignEmptyableLayout;
  exports["asForeignEmptyableLayout"] = asForeignEmptyableLayout;
})(PS["Neodoc.Data.EmptyableLayout"] = PS["Neodoc.Data.EmptyableLayout"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_List = PS["Data.List"];
  var Data_Foldable_Extra = PS["Data.Foldable.Extra"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Group = (function () {
      function Group(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Group.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Group(value0, value1, value2);
              };
          };
      };
      return Group;
  })();
  var Elem = (function () {
      function Elem(value0) {
          this.value0 = value0;
      };
      Elem.create = function (value0) {
          return new Elem(value0);
      };
      return Elem;
  })();
  var showLayout = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Elem) {
              return "Elem " + Data_Show.show(dictShow)(v.value0);
          };
          if (v instanceof Group) {
              return "Group " + (Data_Show.show(Data_Show.showBoolean)(v.value0) + (" " + (Data_Show.show(Data_Show.showBoolean)(v.value1) + (" " + Data_Show.show(Data_NonEmpty.showNonEmpty(Data_NonEmpty.showNonEmpty(showLayout(dictShow))(Data_List_Types.showList(showLayout(dictShow))))(Data_List_Types.showList(Data_NonEmpty.showNonEmpty(showLayout(dictShow))(Data_List_Types.showList(showLayout(dictShow))))))(v.value2)))));
          };
          throw new Error("Failed pattern match at Neodoc.Data.Layout line 62, column 3 - line 62, column 42: " + [ v.constructor.name ]);
      });
  };
  var prettyLayout = function (dictPretty) {
      return new Data_Pretty.Pretty(function (v) {
          if (v instanceof Elem) {
              return Data_Pretty.pretty(dictPretty)(v.value0);
          };
          if (v instanceof Group) {
              var inner = Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Monoid.monoidString)("|")(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v.value2)(function (x) {
                  return Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Monoid.monoidString)(" ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Pretty.pretty(prettyLayout(dictPretty)))(x));
              }));
              return (function () {
                  if (v.value0) {
                      return "[";
                  };
                  if (!v.value0) {
                      return "(";
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.Layout line 56, column 10 - line 56, column 32: " + [ v.value0.constructor.name ]);
              })() + (inner + ((function () {
                  if (v.value0) {
                      return "]";
                  };
                  if (!v.value0) {
                      return ")";
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.Layout line 58, column 11 - line 58, column 33: " + [ v.value0.constructor.name ]);
              })() + (function () {
                  if (v.value1) {
                      return "...";
                  };
                  if (!v.value1) {
                      return "";
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.Layout line 59, column 11 - line 59, column 34: " + [ v.value1.constructor.name ]);
              })()));
          };
          throw new Error("Failed pattern match at Neodoc.Data.Layout line 53, column 3 - line 53, column 30: " + [ v.constructor.name ]);
      });
  };
  var functorLayout = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Group) {
              return Group.create(v.value0)(v.value1)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
                  return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v2) {
                      return Data_Functor.map(functorLayout)(f)(v2);
                  })(v1);
              })(v.value2));
          };
          if (v instanceof Elem) {
              return new Elem(f(v.value0));
          };
          throw new Error("Failed pattern match at Neodoc.Data.Layout line 49, column 3 - line 49, column 62: " + [ f.constructor.name, v.constructor.name ]);
      };
  });
  exports["Group"] = Group;
  exports["Elem"] = Elem;
  exports["functorLayout"] = functorLayout;
  exports["prettyLayout"] = prettyLayout;
  exports["showLayout"] = showLayout;
})(PS["Neodoc.Data.Layout"] = PS["Neodoc.Data.Layout"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];        
  var Position = (function () {
      function Position(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Position.create = function (value0) {
          return function (value1) {
              return new Position(value0, value1);
          };
      };
      return Position;
  })();
  var split = Data_String.split(Data_Newtype.wrap(Data_String.newtypePattern)(""));
  var initialPos = new Position(1, 1);
  var _updatePosChar = function (v) {
      return function (c) {
          if (c === "\x0a") {
              return new Position(v.value0 + 1 | 0, 1);
          };
          if (c === "\x0d") {
              return new Position(v.value0 + 1 | 0, 1);
          };
          if (c === "\x09") {
              return new Position(v.value0, (v.value1 + 8 | 0) - (v.value1 - 1 | 0) % 8 | 0);
          };
          return new Position(v.value0, v.value1 + 1 | 0);
      };
  };
  var updatePosString = function (pos) {
      return function (str) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(_updatePosChar)(pos)(split(str));
      };
  };
  exports["Position"] = Position;
  exports["_updatePosChar"] = _updatePosChar;
  exports["initialPos"] = initialPos;
  exports["split"] = split;
  exports["updatePosString"] = updatePosString;
})(PS["Neodoc.Parsing.Parser.Pos"] = PS["Neodoc.Parsing.Parser.Pos"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var ParseArgs = (function () {
      function ParseArgs(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      ParseArgs.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new ParseArgs(value0, value1, value2, value3);
                  };
              };
          };
      };
      return ParseArgs;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var Step = (function () {
      function Step(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Step(value0, value1, value2);
              };
          };
      };
      return Step;
  })();
  var Parser = (function () {
      function Parser(value0) {
          this.value0 = value0;
      };
      Parser.create = function (value0) {
          return new Parser(value0);
      };
      return Parser;
  })();
  var unParser = function (v) {
      return v.value0;
  };
  var $$throw = function (e) {
      return new Parser(function (a) {
          return new Step(false, a, new Data_Either.Left(e));
      });
  };
  var setConsumedOr = function (b) {
      return function (v) {
          return new Step(b || v.value0, v.value1, v.value2);
      };
  };
  var runParser = function (v) {
      var $38 = unParser(v.value4)(new ParseArgs(v.value0, v.value1, v.value2, v.value3));
      return $38.value2;
  };
  var $$return = function (r) {
      return new Parser(function (a) {
          return new Step(false, a, new Data_Either.Right(r));
      });
  };
  var mapS = function (f) {
      return function (v) {
          return new ParseArgs(v.value0, f(v.value1), v.value2, v.value3);
      };
  };
  var modifyState = function (f) {
      return new Parser(function (a) {
          return new Step(false, mapS(f)(a), new Data_Either.Right(Data_Unit.unit));
      });
  };
  var mapI = function (f) {
      return function (v) {
          return new ParseArgs(v.value0, v.value1, v.value2, f(v.value3));
      };
  };
  var setI = function (i) {
      return mapI(Data_Function["const"](i));
  };
  var setInput = function (i) {
      return new Parser(function (a) {
          return new Step(false, mapI(Data_Function["const"](i))(a), new Data_Either.Right(Data_Unit.unit));
      });
  };
  var mapG = function (f) {
      return function (v) {
          return new ParseArgs(v.value0, v.value1, f(v.value2), v.value3);
      };
  };
  var modifyGlobalState = function (f) {
      return new Parser(function (a) {
          return new Step(false, mapG(f)(a), new Data_Either.Right(Data_Unit.unit));
      });
  };
  var setG = function (g) {
      return mapG(Data_Function["const"](g));
  };
  var lazyParser = new Control_Lazy.Lazy(function (f) {
      return new Parser(function (args) {
          return unParser(f(Data_Unit.unit))(args);
      });
  });
  var getS = function (v) {
      return v.value1;
  };
  var getState = new Parser(function (a) {
      return new Step(false, a, new Data_Either.Right(getS(a)));
  });
  var getParseState = new Parser(function (a) {
      return new Step(false, a, new Data_Either.Right(a));
  });
  var getI = function (v) {
      return v.value3;
  };
  var getInput = new Parser(function (a) {
      return new Step(false, a, new Data_Either.Right(getI(a)));
  });
  var getG = function (v) {
      return v.value2;
  };
  var getGlobalState = new Parser(function (a) {
      return new Step(false, a, new Data_Either.Right(getG(a)));
  });
  var getC = function (v) {
      return v.value0;
  };
  var getConfig = new Parser(function (a) {
      return new Step(false, a, new Data_Either.Right(getC(a)));
  });
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (p) {
          return new Parser(function (args) {
              var $100 = unParser(p)(args);
              return new Step($100.value0, $100.value1, Data_Functor.map(Data_Either.functorEither)(f)($100.value2));
          });
      };
  });
  var fatal$prime = function (e) {
      return new Parser(function (a) {
          return new Step(false, a, Data_Either.Left.create(new ParseError(true, new Data_Either.Right(e))));
      });
  };
  var fatal = function (message) {
      return new Parser(function (a) {
          return new Step(false, a, Data_Either.Left.create(new ParseError(true, new Data_Either.Left(message))));
      });
  };
  var fail$prime = function (e) {
      return new Parser(function (a) {
          return new Step(false, a, Data_Either.Left.create(new ParseError(false, new Data_Either.Right(e))));
      });
  };
  var fail = function (message) {
      return new Parser(function (a) {
          return new Step(false, a, Data_Either.Left.create(new ParseError(false, new Data_Either.Left(message))));
      });
  };
  var extractError = function (v) {
      return function (v1) {
          if (v1.value1 instanceof Data_Either.Left) {
              return v(v1.value1.value0);
          };
          if (v1.value1 instanceof Data_Either.Right) {
              return v1.value1.value0;
          };
          throw new Error("Failed pattern match at Neodoc.Parsing.Parser line 36, column 1 - line 36, column 46: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var error = function (msg) {
      return new ParseError(false, new Data_Either.Left(msg));
  };
  var $$catch = function (p) {
      return function (f) {
          return new Parser(function (v) {
              var step = unParser(p)(v);
              if (step.value2 instanceof Data_Either.Left && !(step.value2.value0.value0 || step.value0)) {
                  return unParser(f(step.value1.value1)(step.value2.value0))(new ParseArgs(v.value0, v.value1, step.value1.value2, v.value3));
              };
              return step;
          });
      };
  };                                            
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (p) {
      return function (f) {
          return new Parser(function (args) {
              var $128 = unParser(p)(args);
              if ($128.value2 instanceof Data_Either.Left) {
                  return new Step($128.value0, $128.value1, new Data_Either.Left($128.value2.value0));
              };
              if ($128.value2 instanceof Data_Either.Right) {
                  return setConsumedOr($128.value0)(unParser(f($128.value2.value0))($128.value1));
              };
              throw new Error("Failed pattern match at Neodoc.Parsing.Parser line 111, column 30 - line 113, column 67: " + [ $128.constructor.name ]);
          });
      };
  });
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, Control_Monad.ap(monadParser));
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, $$return);
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (p1) {
      return function (p2) {
          return $$catch(p1)(function (v) {
              return function (v1) {
                  return p2;
              };
          });
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  var monadZeroParser = new Control_MonadZero.MonadZero(function () {
      return alternativeParser;
  }, function () {
      return monadParser;
  });
  exports["ParseError"] = ParseError;
  exports["Parser"] = Parser;
  exports["ParseArgs"] = ParseArgs;
  exports["Step"] = Step;
  exports["catch"] = $$catch;
  exports["error"] = error;
  exports["extractError"] = extractError;
  exports["fail"] = fail;
  exports["fail'"] = fail$prime;
  exports["fatal"] = fatal;
  exports["fatal'"] = fatal$prime;
  exports["getC"] = getC;
  exports["getConfig"] = getConfig;
  exports["getG"] = getG;
  exports["getGlobalState"] = getGlobalState;
  exports["getI"] = getI;
  exports["getInput"] = getInput;
  exports["getParseState"] = getParseState;
  exports["getS"] = getS;
  exports["getState"] = getState;
  exports["mapG"] = mapG;
  exports["mapI"] = mapI;
  exports["mapS"] = mapS;
  exports["modifyGlobalState"] = modifyGlobalState;
  exports["modifyState"] = modifyState;
  exports["return"] = $$return;
  exports["runParser"] = runParser;
  exports["setConsumedOr"] = setConsumedOr;
  exports["setG"] = setG;
  exports["setI"] = setI;
  exports["setInput"] = setInput;
  exports["throw"] = $$throw;
  exports["unParser"] = unParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["functorParser"] = functorParser;
  exports["bindParser"] = bindParser;
  exports["monadParser"] = monadParser;
  exports["altParser"] = altParser;
  exports["plusParser"] = plusParser;
  exports["alternativeParser"] = alternativeParser;
  exports["lazyParser"] = lazyParser;
  exports["monadZeroParser"] = monadZeroParser;
})(PS["Neodoc.Parsing.Parser"] = PS["Neodoc.Parsing.Parser"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Neodoc.Parsing.Parser.String

  exports.getFirst = function(s) {
    return s.slice(0, 1);
  }

  exports.getRest = function(s) {
    return s.slice(1);
  }
})(PS["Neodoc.Parsing.Parser.String"] = PS["Neodoc.Parsing.Parser.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];        
  var withErrorMessage = function (p) {
      return function (msg) {
          return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(p)(Neodoc_Parsing_Parser.fail("Expected " + msg));
      };
  };
  var $$try = function (p) {
      return new Neodoc_Parsing_Parser.Parser(function (v) {
          var $11 = Neodoc_Parsing_Parser.unParser(p)(v);
          if ($11.value2 instanceof Data_Either.Left) {
              return new Neodoc_Parsing_Parser.Step(false, Neodoc_Parsing_Parser.setG(Neodoc_Parsing_Parser.getG($11.value1))(v), $11.value2);
          };
          return $11;
      });
  };
  var optional = function (p) {
      return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(p))(Neodoc_Parsing_Parser["return"](Data_Unit.unit));
  };
  var option = function (a) {
      return function (p) {
          return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(p)(Neodoc_Parsing_Parser["return"](a));
      };
  };
  var optionMaybe = function (p) {
      return option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(p));
  };
  var some = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(p)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser["return"](acc);
              };
              if (v instanceof Data_Maybe.Just) {
                  return go(new Data_List_Types.Cons(v.value0, acc));
              };
              throw new Error("Failed pattern match at Neodoc.Parsing.Parser.Combinators line 123, column 11 - line 125, column 34: " + [ v.constructor.name ]);
          });
      };
      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_List.reverse)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v) {
          return go(new Data_List_Types.Cons(v, Data_List_Types.Nil.value));
      }));
  };
  var someChar = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(p)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser["return"](acc);
              };
              if (v instanceof Data_Maybe.Just) {
                  return go(Data_String_Ext.concat(acc)(Unsafe_Coerce.unsafeCoerce(v.value0)));
              };
              throw new Error("Failed pattern match at Neodoc.Parsing.Parser.Combinators line 134, column 11 - line 136, column 60: " + [ v.constructor.name ]);
          });
      };
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v) {
          return go(Unsafe_Coerce.unsafeCoerce(v));
      });
  };
  var notFollowedBy = function (p) {
      return $$try(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)($$try(p))(Neodoc_Parsing_Parser.fail("Negated parser succeeded")))(Neodoc_Parsing_Parser["return"](Data_Unit.unit)));
  };
  var manyTill = function (p) {
      return function (end) {
          var go = function (acc) {
              return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(end)(Neodoc_Parsing_Parser["return"](acc)))(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v) {
                  return go(new Data_List_Types.Cons(v, acc));
              }));
          };
          return go(Data_List_Types.Nil.value);
      };
  };
  var manyChar = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(p)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser["return"](acc);
              };
              if (v instanceof Data_Maybe.Just) {
                  return go(Data_String_Ext.concat(acc)(Unsafe_Coerce.unsafeCoerce(v.value0)));
              };
              throw new Error("Failed pattern match at Neodoc.Parsing.Parser.Combinators line 113, column 11 - line 115, column 61: " + [ v.constructor.name ]);
          });
      };
      return go("");
  };
  var many = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(p)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser["return"](acc);
              };
              if (v instanceof Data_Maybe.Just) {
                  return go(new Data_List_Types.Cons(v.value0, acc));
              };
              throw new Error("Failed pattern match at Neodoc.Parsing.Parser.Combinators line 104, column 11 - line 106, column 34: " + [ v.constructor.name ]);
          });
      };
      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_List.reverse)(go(Data_List_Types.Nil.value));
  };
  var sepBy1 = function (p) {
      return function (sep) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(many(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(sep)(p)))(function (v1) {
                  return Neodoc_Parsing_Parser["return"](new Data_List_Types.Cons(v, v1));
              });
          });
      };
  };
  var lookAhead = function (p) {
      return new Neodoc_Parsing_Parser.Parser(function (a) {
          var $36 = Neodoc_Parsing_Parser.unParser(p)(a);
          return new Neodoc_Parsing_Parser.Step(false, a, $36.value2);
      });
  };
  var choice = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser))(Control_Plus.empty(Neodoc_Parsing_Parser.plusParser));
  };
  var between = function (open) {
      return function (close) {
          return function (p) {
              return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(open)(p))(close);
          };
      };
  };
  var asErrorMessage = Data_Function.flip(withErrorMessage);
  exports["asErrorMessage"] = asErrorMessage;
  exports["between"] = between;
  exports["choice"] = choice;
  exports["lookAhead"] = lookAhead;
  exports["many"] = many;
  exports["manyChar"] = manyChar;
  exports["manyTill"] = manyTill;
  exports["notFollowedBy"] = notFollowedBy;
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["optional"] = optional;
  exports["sepBy1"] = sepBy1;
  exports["some"] = some;
  exports["someChar"] = someChar;
  exports["try"] = $$try;
  exports["withErrorMessage"] = withErrorMessage;
})(PS["Neodoc.Parsing.Parser.Combinators"] = PS["Neodoc.Parsing.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Neodoc.Parsing.Parser.String"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Data_String = PS["Data.String"];
  var Data_Char = PS["Data.Char"];
  var Data_List = PS["Data.List"];
  var Data_Array = PS["Data.Array"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];        
  var string = function (str) {
      return new Neodoc_Parsing_Parser.Parser(function (v) {
          var $6 = Data_String.indexOf(Data_Newtype.wrap(Data_String.newtypePattern)(str))(v.value3);
          if ($6 instanceof Data_Maybe.Just && $6.value0 === 0) {
              var s$prime = Neodoc_Parsing_Parser_Pos.updatePosString(v.value1)(str);
              var i$prime = Data_String.drop(Data_String.length(str))(v.value3);
              return new Neodoc_Parsing_Parser.Step(true, new Neodoc_Parsing_Parser.ParseArgs(v.value0, s$prime, v.value2, i$prime), new Data_Either.Right(str));
          };
          return new Neodoc_Parsing_Parser.Step(false, v, new Data_Either.Left(Neodoc_Parsing_Parser.error("Expected " + Data_Show.show(Data_Show.showString)(str))));
      });
  };
  var isUpperAlpha = function (c) {
      return c > 64 && c < 91;
  };
  var isLowerAlpha = function (c) {
      return c > 96 && c < 123;
  };
  var isDigit = function (c) {
      return c > 47 && c < 58;
  };
  var getPosition = Neodoc_Parsing_Parser.getState;
  var eof = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
      return Control_Applicative.unless(Neodoc_Parsing_Parser.applicativeParser)(Data_String["null"](v))(Neodoc_Parsing_Parser.fail("Expected EOF"));
  });
  var anyChar = new Neodoc_Parsing_Parser.Parser(function (v) {
      if (v.value3 === "") {
          return new Neodoc_Parsing_Parser.Step(false, v, new Data_Either.Left(Neodoc_Parsing_Parser.error("Unexpected EOF")));
      };
      var tail = $foreign.getRest(v.value3);
      var head = $foreign.getFirst(v.value3);
      var s$prime = Neodoc_Parsing_Parser_Pos.updatePosString(v.value1)(Data_String.singleton(head));
      return new Neodoc_Parsing_Parser.Step(true, new Neodoc_Parsing_Parser.ParseArgs(v.value0, s$prime, v.value2, tail), new Data_Either.Right(head));
  });
  var satisfy = function (f) {
      return Neodoc_Parsing_Parser_Combinators["try"](Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(anyChar)(function (v) {
          var $20 = f(v);
          if ($20) {
              return Neodoc_Parsing_Parser["return"](v);
          };
          if (!$20) {
              return Neodoc_Parsing_Parser.fail("Character '" + (Data_String.singleton(v) + "' did not satisfy predicate"));
          };
          throw new Error("Failed pattern match at Neodoc.Parsing.Parser.String line 29, column 3 - line 32, column 1: " + [ $20.constructor.name ]);
      }));
  };
  var $$char = function (c) {
      return Neodoc_Parsing_Parser_Combinators.withErrorMessage(satisfy(function (v) {
          return v === c;
      }))("Expected " + Data_Show.show(Data_Show.showChar)(c));
  };
  var eol = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(string("\x0d\x0a")))(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)($$char("\x0a")));
  var noneOf = function (ss) {
      return Neodoc_Parsing_Parser_Combinators.withErrorMessage(satisfy(function (c) {
          return Data_Maybe.isNothing(Data_Array.elemIndex(Data_Eq.eqChar)(c)(ss));
      }))("Expected none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
  };
  var oneOf = function (ss) {
      return Neodoc_Parsing_Parser_Combinators.withErrorMessage(satisfy(function (c) {
          return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqChar)(c)(ss));
      }))("Expected one of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
  };
  var satisfyCode = function (f) {
      return satisfy(function (c) {
          return f(Data_Char.toCharCode(c));
      });
  };
  var digit = satisfyCode(function (c) {
      return c > 47 && c < 58;
  });
  var space = satisfy(function (c) {
      return c === " " || c === "\x09";
  });
  var spaces = Data_List.many(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(space);
  var alphaNum = satisfyCode(function (c) {
      return isUpperAlpha(c) || (isLowerAlpha(c) || isDigit(c));
  });
  exports["alphaNum"] = alphaNum;
  exports["anyChar"] = anyChar;
  exports["char"] = $$char;
  exports["digit"] = digit;
  exports["eof"] = eof;
  exports["eol"] = eol;
  exports["getPosition"] = getPosition;
  exports["isDigit"] = isDigit;
  exports["isLowerAlpha"] = isLowerAlpha;
  exports["isUpperAlpha"] = isUpperAlpha;
  exports["noneOf"] = noneOf;
  exports["oneOf"] = oneOf;
  exports["satisfy"] = satisfy;
  exports["satisfyCode"] = satisfyCode;
  exports["space"] = space;
  exports["spaces"] = spaces;
  exports["string"] = string;
})(PS["Neodoc.Parsing.Parser.String"] = PS["Neodoc.Parsing.Parser.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Global = PS["Global"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_Number_Backport = PS["Data.Number.Backport"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Array = PS["Data.Array"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Alt = PS["Control.Alt"];
  var Data_String = PS["Data.String"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_String = PS["Neodoc.Parsing.Parser.String"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var StringValue = (function () {
      function StringValue(value0) {
          this.value0 = value0;
      };
      StringValue.create = function (value0) {
          return new StringValue(value0);
      };
      return StringValue;
  })();
  var BoolValue = (function () {
      function BoolValue(value0) {
          this.value0 = value0;
      };
      BoolValue.create = function (value0) {
          return new BoolValue(value0);
      };
      return BoolValue;
  })();
  var ArrayValue = (function () {
      function ArrayValue(value0) {
          this.value0 = value0;
      };
      ArrayValue.create = function (value0) {
          return new ArrayValue(value0);
      };
      return ArrayValue;
  })();
  var IntValue = (function () {
      function IntValue(value0) {
          this.value0 = value0;
      };
      IntValue.create = function (value0) {
          return new IntValue(value0);
      };
      return IntValue;
  })();
  var FloatValue = (function () {
      function FloatValue(value0) {
          this.value0 = value0;
      };
      FloatValue.create = function (value0) {
          return new FloatValue(value0);
      };
      return FloatValue;
  })();
  var space = Neodoc_Parsing_Parser_String.satisfy(function (c) {
      return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
  });
  var skipSpaces = (function () {
      var go = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(space)(function () {
          return go;
      }))(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit));
      return go;
  })();
  var skipSomeSpaces = Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(space)(skipSpaces);
  var prettyPrintValue = function (v) {
      if (v instanceof StringValue) {
          return v.value0;
      };
      if (v instanceof BoolValue) {
          return Data_Show.show(Data_Show.showBoolean)(v.value0);
      };
      if (v instanceof ArrayValue) {
          return Data_Show.show(Data_Show.showArray(Data_Show.showString))(Data_Functor.map(Data_Functor.functorArray)(prettyPrintValue)(v.value0));
      };
      if (v instanceof IntValue) {
          return Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FloatValue) {
          return Data_Show.show(Data_Show.showNumber)(v.value0);
      };
      throw new Error("Failed pattern match at Neodoc.Value line 196, column 1 - line 196, column 37: " + [ v.constructor.name ]);
  };
  var prettyValue = new Data_Pretty.Pretty(prettyPrintValue);
  var parse = function (s) {
      return function (split) {
          var quoted = Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(StringValue.create)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Parsing_Parser_Combinators.between(Neodoc_Parsing_Parser_String["char"]("\""))(Neodoc_Parsing_Parser_String["char"]("\""))(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Parsing_Parser_String.noneOf([ "\"" ]))), Neodoc_Parsing_Parser_Combinators.between(Neodoc_Parsing_Parser_String["char"]("'"))(Neodoc_Parsing_Parser_String["char"]("'"))(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Parsing_Parser_String.noneOf([ "'" ]))) ])));
          var number = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(1)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_String["char"]("-"))(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(-1 | 0))))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Neodoc_Parsing_Parser_Combinators.some(Neodoc_Parsing_Parser_String.digit)))(function (v1) {
                  return Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($210) {
                      return FloatValue.create((function (v2) {
                          return Data_Int.toNumber(v) * v2;
                      })(Global.readFloat($210)));
                  })(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("."))(function () {
                      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Neodoc_Parsing_Parser_Combinators.some(Neodoc_Parsing_Parser_String.digit));
                  }))(function (v2) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(v1 + ("." + v2));
                  })), (function () {
                      var $69 = Data_Int.fromString(v1);
                      if ($69 instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(IntValue.create(v * $69.value0 | 0));
                      };
                      if ($69 instanceof Data_Maybe.Nothing) {
                          return Neodoc_Parsing_Parser.fail("Value not a valid Int");
                      };
                      throw new Error("Failed pattern match at Neodoc.Value line 258, column 9 - line 263, column 7: " + [ $69.constructor.name ]);
                  })() ]);
              });
          });
          var bool = (function () {
              var true$prime = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($211) {
                  return Neodoc_Parsing_Parser_Combinators["try"](Neodoc_Parsing_Parser_String.string($211));
              })([ "true", "True", "TRUE" ])))(function () {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new BoolValue(true));
              });
              var false$prime = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($212) {
                  return Neodoc_Parsing_Parser_Combinators["try"](Neodoc_Parsing_Parser_String.string($212));
              })([ "false", "False", "FALSE" ])))(function () {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new BoolValue(false));
              });
              return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(true$prime)(false$prime);
          })();
          var value = Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Neodoc_Parsing_Parser_Combinators["try"])([ bool, number, quoted ]));
          var inner = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_Combinators["try"](value))(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(StringValue.create)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Parsing_Parser_Combinators["try"](Neodoc_Parsing_Parser_String.noneOf([ ",", " ", "\x0a" ]))))));
          var values = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.sepBy1(inner)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Parsing_Parser_Combinators["try"](Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(skipSpaces)(Neodoc_Parsing_Parser_String["char"](",")))(skipSpaces)), skipSomeSpaces ])))(function (v) {
              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)((function () {
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      return v.value0;
                  };
                  return new ArrayValue(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(v));
              })());
          });
          var p = (function () {
              if (split) {
                  return values;
              };
              if (!split) {
                  return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(value)(Neodoc_Parsing_Parser_String.eof);
              };
              throw new Error("Failed pattern match at Neodoc.Value line 226, column 11 - line 226, column 51: " + [ split.constructor.name ]);
          })();
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Parsing_Parser.extractError(Control_Category.id(Control_Category.categoryFn)))(Neodoc_Parsing_Parser.runParser(new Data_Optimize_Uncurried.Args5(Data_Unit.unit, Neodoc_Parsing_Parser_Pos.initialPos, Data_Unit.unit, s, p)));
      };
  };
  var read = function (s) {
      return function (split) {
          return Data_Either.either(Data_Function["const"](new StringValue(s)))(Control_Category.id(Control_Category.categoryFn))(parse(s)(split));
      };
  };
  var isForeignValue = new Data_Foreign_Class.IsForeign(function (v) {
      return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(BoolValue.create)(Data_Foreign.readBoolean(v)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(IntValue.create)(Data_Foreign.readInt(v))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(FloatValue.create)(Data_Foreign.readNumber(v))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(StringValue.create)(Data_Foreign.readString(v))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(ArrayValue.create)(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray(v))(function (vs) {
          return Data_Traversable["for"](Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Traversable.traversableArray)(vs)(Data_Foreign_Class.read(isForeignValue));
      }))))(Data_Foreign.fail(new Data_Foreign.JSONError("Invalid value")));
  });
  var isBoolValue = function (v) {
      if (v instanceof BoolValue) {
          return true;
      };
      return false;
  };
  var intoArray = function (v) {
      if (v instanceof ArrayValue) {
          return v.value0;
      };
      return [ v ];
  };
  var genericValue = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Value.StringValue" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(StringValue.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Value.BoolValue" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(BoolValue.create))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Value.ArrayValue" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ArrayValue.create))(Data_Generic.fromSpine(Data_Generic.genericArray(genericValue))(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Value.IntValue" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(IntValue.create))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Value.FloatValue" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FloatValue.create))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.Value.Value", [ {
          sigConstructor: "Neodoc.Value.StringValue", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Value.BoolValue", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Value.ArrayValue", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericArray(genericValue))(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Value.IntValue", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Value.FloatValue", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof StringValue) {
          return new Data_Generic.SProd("Neodoc.Value.StringValue", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          } ]);
      };
      if (v instanceof BoolValue) {
          return new Data_Generic.SProd("Neodoc.Value.BoolValue", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value0);
          } ]);
      };
      if (v instanceof ArrayValue) {
          return new Data_Generic.SProd("Neodoc.Value.ArrayValue", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericArray(genericValue))(v.value0);
          } ]);
      };
      if (v instanceof IntValue) {
          return new Data_Generic.SProd("Neodoc.Value.IntValue", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericInt)(v.value0);
          } ]);
      };
      if (v instanceof FloatValue) {
          return new Data_Generic.SProd("Neodoc.Value.FloatValue", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericNumber)(v.value0);
          } ]);
      };
      throw new Error("Failed pattern match: " + [ v.constructor.name ]);
  });
  var showValue = new Data_Show.Show(Data_Generic.gShow(genericValue));
  var eqValue = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof StringValue && y instanceof StringValue) {
              return x.value0 === y.value0;
          };
          if (x instanceof BoolValue && y instanceof BoolValue) {
              return x.value0 === y.value0;
          };
          if (x instanceof ArrayValue && y instanceof ArrayValue) {
              return Data_Eq.eq(Data_Eq.eqArray(eqValue))(x.value0)(y.value0);
          };
          if (x instanceof IntValue && y instanceof IntValue) {
              return x.value0 === y.value0;
          };
          if (x instanceof FloatValue && y instanceof FloatValue) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  var ordValue = new Data_Ord.Ord(function () {
      return eqValue;
  }, function (x) {
      return function (y) {
          if (x instanceof StringValue && y instanceof StringValue) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof StringValue) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof StringValue) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof BoolValue && y instanceof BoolValue) {
              return Data_Ord.compare(Data_Ord.ordBoolean)(x.value0)(y.value0);
          };
          if (x instanceof BoolValue) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof BoolValue) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof ArrayValue && y instanceof ArrayValue) {
              return Data_Ord.compare(Data_Ord.ordArray(ordValue))(x.value0)(y.value0);
          };
          if (x instanceof ArrayValue) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof ArrayValue) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof IntValue && y instanceof IntValue) {
              return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
          };
          if (x instanceof IntValue) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof IntValue) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FloatValue && y instanceof FloatValue) {
              return Data_Ord.compare(Data_Ord.ordNumber)(x.value0)(y.value0);
          };
          throw new Error("Failed pattern match: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var asForeignValue = new Data_Foreign_Class.AsForeign(function (v) {
      if (v instanceof BoolValue) {
          return Data_Foreign.toForeign(v.value0);
      };
      if (v instanceof IntValue) {
          return Data_Foreign.toForeign(v.value0);
      };
      if (v instanceof FloatValue) {
          return Data_Foreign.toForeign(v.value0);
      };
      if (v instanceof StringValue) {
          return Data_Foreign.toForeign(v.value0);
      };
      if (v instanceof ArrayValue) {
          return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(Data_Foreign_Class.write(asForeignValue))(v.value0));
      };
      throw new Error("Failed pattern match at Neodoc.Value line 79, column 3 - line 79, column 41: " + [ v.constructor.name ]);
  });
  exports["StringValue"] = StringValue;
  exports["BoolValue"] = BoolValue;
  exports["ArrayValue"] = ArrayValue;
  exports["IntValue"] = IntValue;
  exports["FloatValue"] = FloatValue;
  exports["intoArray"] = intoArray;
  exports["isBoolValue"] = isBoolValue;
  exports["parse"] = parse;
  exports["prettyPrintValue"] = prettyPrintValue;
  exports["read"] = read;
  exports["eqValue"] = eqValue;
  exports["ordValue"] = ordValue;
  exports["genericValue"] = genericValue;
  exports["showValue"] = showValue;
  exports["isForeignValue"] = isForeignValue;
  exports["asForeignValue"] = asForeignValue;
  exports["prettyValue"] = prettyValue;
})(PS["Neodoc.Value"] = PS["Neodoc.Value"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var Short = (function () {
      function Short(value0) {
          this.value0 = value0;
      };
      Short.create = function (value0) {
          return new Short(value0);
      };
      return Short;
  })();
  var Long = (function () {
      function Long(value0) {
          this.value0 = value0;
      };
      Long.create = function (value0) {
          return new Long(value0);
      };
      return Long;
  })();                                                                     
  var prettyOptionAlias = new Data_Pretty.Pretty(function (v) {
      if (v instanceof Short) {
          return "-" + Data_String.singleton(v.value0);
      };
      if (v instanceof Long) {
          return "--" + v.value0;
      };
      throw new Error("Failed pattern match at Neodoc.OptionAlias line 64, column 3 - line 64, column 50: " + [ v.constructor.name ]);
  });
  var isLong = function (v) {
      if (v instanceof Long) {
          return true;
      };
      return false;
  };
  var genericOptionAlias = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.OptionAlias.Short" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Short.create))(Data_Generic.fromSpine(Data_Generic.genericChar)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.OptionAlias.Long" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Long.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.OptionAlias.OptionAlias", [ {
          sigConstructor: "Neodoc.OptionAlias.Short", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericChar)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.OptionAlias.Long", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof Short) {
          return new Data_Generic.SProd("Neodoc.OptionAlias.Short", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericChar)(v.value0);
          } ]);
      };
      if (v instanceof Long) {
          return new Data_Generic.SProd("Neodoc.OptionAlias.Long", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          } ]);
      };
      throw new Error("Failed pattern match at Neodoc.OptionAlias line 35, column 1 - line 35, column 58: " + [ v.constructor.name ]);
  });                                                                              
  var fromString = function (s) {
      var $40 = Data_String.uncons(s);
      if ($40 instanceof Data_Maybe.Just && $40.value0.head === "-") {
          var $41 = Data_String.uncons($40.value0.tail);
          if ($41 instanceof Data_Maybe.Just && ($41.value0.head === "-" && $41.value0.tail === "")) {
              return new Data_Either.Left("long option must have a name");
          };
          if ($41 instanceof Data_Maybe.Just && $41.value0.head === "-") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Long($41.value0.tail));
          };
          if ($41 instanceof Data_Maybe.Just && $41.value0.tail === "") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Short($41.value0.head));
          };
          return new Data_Either.Left("short option must have a singe char");
      };
      if ($40 instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left("option may not be empty");
      };
      return new Data_Either.Left("option must start with a dash");
  };
  var isForeignOptionAlias = new Data_Foreign_Class.IsForeign(function (v) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.read(Data_Foreign_Class.stringIsForeign)(v))(function (v1) {
          var $55 = fromString(v1);
          if ($55 instanceof Data_Either.Left) {
              return Data_Foreign.fail(new Data_Foreign.JSONError($55.value0));
          };
          if ($55 instanceof Data_Either.Right) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($55.value0);
          };
          throw new Error("Failed pattern match at Neodoc.OptionAlias line 43, column 5 - line 45, column 26: " + [ $55.constructor.name ]);
      });
  });
  var eqOptionAlias = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Short && y instanceof Short) {
              return x.value0 === y.value0;
          };
          if (x instanceof Long && y instanceof Long) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  var ordOptionAlias = new Data_Ord.Ord(function () {
      return eqOptionAlias;
  }, function (x) {
      return function (y) {
          if (x instanceof Short && y instanceof Short) {
              return Data_Ord.compare(Data_Ord.ordChar)(x.value0)(y.value0);
          };
          if (x instanceof Short) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Short) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Long && y instanceof Long) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          throw new Error("Failed pattern match at Neodoc.OptionAlias line 34, column 1 - line 34, column 50: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var asForeignOptionAlias = new Data_Foreign_Class.AsForeign(function (v) {
      if (v instanceof Short) {
          return Data_Foreign.toForeign("-" + Data_String.singleton(v.value0));
      };
      if (v instanceof Long) {
          return Data_Foreign.toForeign("--" + v.value0);
      };
      throw new Error("Failed pattern match at Neodoc.OptionAlias line 60, column 3 - line 60, column 63: " + [ v.constructor.name ]);
  });
  exports["Short"] = Short;
  exports["Long"] = Long;
  exports["fromString"] = fromString;
  exports["isLong"] = isLong;
  exports["eqOptionAlias"] = eqOptionAlias;
  exports["ordOptionAlias"] = ordOptionAlias;
  exports["genericOptionAlias"] = genericOptionAlias;
  exports["isForeignOptionAlias"] = isForeignOptionAlias;
  exports["asForeignOptionAlias"] = asForeignOptionAlias;
  exports["prettyOptionAlias"] = prettyOptionAlias;
})(PS["Neodoc.OptionAlias"] = PS["Neodoc.OptionAlias"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_String = PS["Data.String"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var OptionArgument = (function () {
      function OptionArgument(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptionArgument.create = function (value0) {
          return function (value1) {
              return new OptionArgument(value0, value1);
          };
      };
      return OptionArgument;
  })();
  var prettyOptionArgument = new Data_Pretty.Pretty(function (v) {
      return (function () {
          if (v.value1) {
              return "[";
          };
          if (!v.value1) {
              return "";
          };
          throw new Error("Failed pattern match at Neodoc.Data.OptionArgument line 42, column 8 - line 42, column 29: " + [ v.value1.constructor.name ]);
      })() + (v.value0 + (function () {
          if (v.value1) {
              return "]";
          };
          if (!v.value1) {
              return "";
          };
          throw new Error("Failed pattern match at Neodoc.Data.OptionArgument line 42, column 40 - line 42, column 61: " + [ v.value1.constructor.name ]);
      })());
  });
  var isOptionArgumentOptional = function (v) {
      return v.value1;
  };
  var isForeigntOptionArgument = new Data_Foreign_Class.IsForeign(function (v) {
      return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(OptionArgument.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("optional")(v));
  });
  var genericOptionArgument = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.OptionArgument.OptionArgument" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(OptionArgument.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][1](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.Data.OptionArgument.OptionArgument", [ {
          sigConstructor: "Neodoc.Data.OptionArgument.OptionArgument", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Neodoc.Data.OptionArgument.OptionArgument", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
      }, function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericBool)(v.value1);
      } ]);
  });
  var asForeigntOptionArgument = new Data_Foreign_Class.AsForeign(function (v) {
      return Data_Foreign.toForeign({
          name: v.value0, 
          optional: v.value1
      });
  });
  exports["OptionArgument"] = OptionArgument;
  exports["isOptionArgumentOptional"] = isOptionArgumentOptional;
  exports["genericOptionArgument"] = genericOptionArgument;
  exports["isForeigntOptionArgument"] = isForeigntOptionArgument;
  exports["asForeigntOptionArgument"] = asForeigntOptionArgument;
  exports["prettyOptionArgument"] = prettyOptionArgument;
})(PS["Neodoc.Data.OptionArgument"] = PS["Neodoc.Data.OptionArgument"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Data_String = PS["Data.String"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var OptionDescription = (function () {
      function OptionDescription(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      OptionDescription.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new OptionDescription(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return OptionDescription;
  })();
  var CommandDescription = (function () {
      function CommandDescription() {

      };
      CommandDescription.value = new CommandDescription();
      return CommandDescription;
  })();
  var isForeignDescription = new Data_Foreign_Class.IsForeign(function (v) {
      var readAliases = function (v1) {
          return Control_Monad_Error_Class.catchError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Extra.readNonemptyList(Neodoc_OptionAlias.isForeignOptionAlias))(Data_Foreign_Index.ix(Data_Foreign_Index.indexString)(v1)("aliases")))(function (es) {
              return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("aliases")(Data_List_NonEmpty.head(es)));
          });
      };
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_String.toUpper)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("type")(v)))(function (v1) {
          if (v1 === "COMMAND") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(CommandDescription.value);
          };
          if (v1 === "OPTION") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(OptionDescription.create)(readAliases(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v)))(Data_Foreign_Extra.readPropMaybe(Neodoc_Data_OptionArgument.isForeigntOptionArgument)(Data_Foreign_Index.indexString)("argument")(v)))(Data_Foreign_Extra.readPropMaybe(Neodoc_Value.isForeignValue)(Data_Foreign_Index.indexString)("default")(v)))(Data_Foreign_Extra.readPropMaybe(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("env")(v));
          };
          return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("type")(Data_Foreign.JSONError.create("unknown type: " + v1)));
      });
  });
  var asForeignDescription = new Data_Foreign_Class.AsForeign(function (v) {
      if (v instanceof CommandDescription) {
          return Data_Foreign.toForeign({
              type: "COMMAND"
          });
      };
      if (v instanceof OptionDescription) {
          return Data_Foreign.toForeign({
              type: "OPTION", 
              aliases: Data_Array.fromFoldable(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Foreign_Class.write(Neodoc_OptionAlias.asForeignOptionAlias))(v.value0)), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1), 
              argument: Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Neodoc_Data_OptionArgument.asForeigntOptionArgument))(v.value2), 
              "default": Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Neodoc_Value.asForeignValue))(v.value3), 
              env: Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign))(v.value4)
          });
      };
      throw new Error("Failed pattern match at Neodoc.Data.Description line 63, column 3 - line 63, column 62: " + [ v.constructor.name ]);
  });
  exports["OptionDescription"] = OptionDescription;
  exports["CommandDescription"] = CommandDescription;
  exports["isForeignDescription"] = isForeignDescription;
  exports["asForeignDescription"] = asForeignDescription;
})(PS["Neodoc.Data.Description"] = PS["Neodoc.Data.Description"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Control_Alt = PS["Control.Alt"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var Spec = function (x) {
      return x;
  };
  var isForeignOptionAlias = function (dictIsForeign) {
      return new Data_Foreign_Class.IsForeign(function (v) {
          var readDescriptions = function (v1) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(Neodoc_Data_Description.isForeignDescription))(Data_Foreign_Index.indexString)("descriptions")(v1))(function (v2) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List.fromFoldable(Data_Foldable.foldableArray)(v2));
              });
          };
          var readBranch = function (i) {
              return function (v1) {
                  return Data_Foreign_Extra.errorAtIndex(i)(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.read(Data_Foreign_Class.arrayIsForeign(dictIsForeign))(v1))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))((function () {
                          var $35 = Data_List.fromFoldable(Data_Foldable.foldableArray)(v2);
                          if ($35 instanceof Data_List_Types.Cons) {
                              return Data_Maybe.Just.create(new Data_NonEmpty.NonEmpty($35.value0, $35.value1));
                          };
                          if ($35 instanceof Data_List_Types.Nil) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Neodoc.Spec line 62, column 12 - line 64, column 24: " + [ $35.constructor.name ]);
                      })());
                  }));
              };
          };
          var readToplevel = function (i) {
              return function (v1) {
                  return Data_Foreign_Extra.errorAtIndex(i)(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.read(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.foreignIsForeign))(v1))(function (v2) {
                      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($58) {
                          return Data_List.catMaybes(Data_List.fromFoldable(Data_Foldable.foldableArray)($58));
                      })(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readBranch)(Data_Array.range(0)(Data_Array.length(v2)))(v2)));
                  }));
              };
          };
          var readLayouts = function (v1) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.foreignIsForeign))(Data_Foreign_Index.indexString)("layouts")(v1))(function (v2) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_List.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readToplevel)(Data_Array.range(0)(Data_Array.length(v2)))(v2))))(function (v3) {
                      if (v3 instanceof Data_List_Types.Cons) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_NonEmpty.NonEmpty(v3.value0, v3.value1));
                      };
                      if (v3 instanceof Data_List_Types.Nil) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_NonEmpty.NonEmpty(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec line 51, column 7 - line 53, column 34: " + [ v3.constructor.name ]);
                  });
              });
          };
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Spec)(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return {
                                  program: v1, 
                                  layouts: v2, 
                                  descriptions: v3, 
                                  helpText: v4, 
                                  shortHelp: v5
                              };
                          };
                      };
                  };
              };
          })(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("program")(v)))(readLayouts(v)))(readDescriptions(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("helpText")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("shortHelp")(v)));
      });
  };
  var asForeignOptionAlias = function (dictAsForeign) {
      return new Data_Foreign_Class.AsForeign(function (v) {
          var layouts$prime = Data_Array.fromFoldable(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v.layouts)(function (toplevel) {
              return Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(toplevel)(function (branch) {
                  return Data_Array.fromFoldable(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Foreign_Class.write(dictAsForeign))(branch));
              }));
          }));
          var descriptions$prime = Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(Data_Foreign_Class.write(Neodoc_Data_Description.asForeignDescription))(v.descriptions));
          return Data_Foreign.toForeign((function () {
              var $53 = {};
              for (var $54 in v) {
                  if ({}.hasOwnProperty.call(v, $54)) {
                      $53[$54] = v[$54];
                  };
              };
              $53.layouts = layouts$prime;
              $53.descriptions = descriptions$prime;
              return $53;
          })());
      });
  };
  exports["Spec"] = Spec;
  exports["isForeignOptionAlias"] = isForeignOptionAlias;
  exports["asForeignOptionAlias"] = asForeignOptionAlias;
})(PS["Neodoc.Spec"] = PS["Neodoc.Spec"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_String = PS["Data.String"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Either = PS["Data.Either"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var Command = (function () {
      function Command(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Command.create = function (value0) {
          return function (value1) {
              return new Command(value0, value1);
          };
      };
      return Command;
  })();
  var Positional = (function () {
      function Positional(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Positional.create = function (value0) {
          return function (value1) {
              return new Positional(value0, value1);
          };
      };
      return Positional;
  })();
  var Option = (function () {
      function Option(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Option.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Option(value0, value1, value2);
              };
          };
      };
      return Option;
  })();
  var OptionStack = (function () {
      function OptionStack(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OptionStack.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OptionStack(value0, value1, value2);
              };
          };
      };
      return OptionStack;
  })();
  var EOA = (function () {
      function EOA() {

      };
      EOA.value = new EOA();
      return EOA;
  })();
  var Stdin = (function () {
      function Stdin() {

      };
      Stdin.value = new Stdin();
      return Stdin;
  })();
  var Reference = (function () {
      function Reference(value0) {
          this.value0 = value0;
      };
      Reference.create = function (value0) {
          return new Reference(value0);
      };
      return Reference;
  })();
  var prettyUsageLayoutArg = new Data_Pretty.Pretty((function () {
      var rep = function (r) {
          if (r) {
              return "...";
          };
          if (!r) {
              return "";
          };
          throw new Error("Failed pattern match at Neodoc.Data.UsageLayout line 128, column 13 - line 128, column 34: " + [ r.constructor.name ]);
      };
      var go = function (v) {
          if (v instanceof Command) {
              return v.value0 + rep(v.value1);
          };
          if (v instanceof Positional) {
              return v.value0 + rep(v.value1);
          };
          if (v instanceof EOA) {
              return "--";
          };
          if (v instanceof Stdin) {
              return "-";
          };
          if (v instanceof Reference) {
              return "[" + (v.value0 + "]");
          };
          if (v instanceof Option) {
              return "--" + (v.value0 + (Data_Maybe.maybe("")(function ($216) {
                  return (function (v1) {
                      return "=" + v1;
                  })(Data_Pretty.pretty(Neodoc_Data_OptionArgument.prettyOptionArgument)($216));
              })(v.value1) + rep(v.value2)));
          };
          if (v instanceof OptionStack) {
              return "-" + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Monoid.monoidString)("")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_Functor.functorArray))(Data_String.singleton)(v.value0)) + (Data_Maybe.maybe("")(function ($217) {
                  return (function (v1) {
                      return "=" + v1;
                  })(Data_Pretty.pretty(Neodoc_Data_OptionArgument.prettyOptionArgument)($217));
              })(v.value1) + rep(v.value2)));
          };
          throw new Error("Failed pattern match at Neodoc.Data.UsageLayout line 111, column 3 - line 128, column 34: " + [ v.constructor.name ]);
      };
      return go;
  })());
  var isForeignUsageLayoutArg = new Data_Foreign_Class.IsForeign(function (v) {
      var readOptionStack = function (v1) {
          return Control_Monad_Error_Class.catchError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Extra.readNonemptyArray(Data_Foreign_Class.charIsForeign))(Data_Foreign_Index.ix(Data_Foreign_Index.indexString)(v1)("chars")))(function (es) {
              return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("chars")(Data_List_NonEmpty.head(es)));
          });
      };
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_String.toUpper)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("type")(v)))(function (v1) {
          if (v1 === "EOA") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(EOA.value);
          };
          if (v1 === "STDIN") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Stdin.value);
          };
          if (v1 === "COMMAND") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Command.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          if (v1 === "POSITIONAL") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Positional.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          if (v1 === "REFERENCE") {
              return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Reference.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v));
          };
          if (v1 === "OPTION") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Option.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Extra.readPropMaybe(Neodoc_Data_OptionArgument.isForeigntOptionArgument)(Data_Foreign_Index.indexString)("argument")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          if (v1 === "OPTIONSTACK") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(OptionStack.create)(readOptionStack(v)))(Data_Foreign_Extra.readPropMaybe(Neodoc_Data_OptionArgument.isForeigntOptionArgument)(Data_Foreign_Index.indexString)("argument")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("type")(Data_Foreign.JSONError.create("unknown type: " + v1)));
      });
  });
  var genericUsageLayoutArg = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.Command" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Command.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][1](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.Positional" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Positional.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][1](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.Option" && v.value1.length === 3)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Option.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][2](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.OptionStack" && v.value1.length === 3)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(OptionStack.create))(Data_Generic.fromSpine(Data_Generic.genericNonEmpty(Data_Generic.genericArray(Data_Generic.genericChar))(Data_Generic.genericChar))(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][2](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.EOA" && v.value1.length === 0)) {
          return new Data_Maybe.Just(EOA.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.Stdin" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Stdin.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.UsageLayout.Reference" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Reference.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.Data.UsageLayout.UsageLayoutArg", [ {
          sigConstructor: "Neodoc.Data.UsageLayout.Command", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.Positional", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.Option", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.OptionStack", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericNonEmpty(Data_Generic.genericArray(Data_Generic.genericChar))(Data_Generic.genericChar))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.EOA", 
          sigValues: [  ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.Stdin", 
          sigValues: [  ]
      }, {
          sigConstructor: "Neodoc.Data.UsageLayout.Reference", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof Command) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.Command", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value1);
          } ]);
      };
      if (v instanceof Positional) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.Positional", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value1);
          } ]);
      };
      if (v instanceof Option) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.Option", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v.value1);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value2);
          } ]);
      };
      if (v instanceof OptionStack) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.OptionStack", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericNonEmpty(Data_Generic.genericArray(Data_Generic.genericChar))(Data_Generic.genericChar))(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v.value1);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value2);
          } ]);
      };
      if (v instanceof EOA) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.EOA", [  ]);
      };
      if (v instanceof Stdin) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.Stdin", [  ]);
      };
      if (v instanceof Reference) {
          return new Data_Generic.SProd("Neodoc.Data.UsageLayout.Reference", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          } ]);
      };
      throw new Error("Failed pattern match at Neodoc.Data.UsageLayout line 39, column 1 - line 39, column 64: " + [ v.constructor.name ]);
  });
  var showUsageLayoutArg = new Data_Show.Show(Data_Generic.gShow(genericUsageLayoutArg));
  var asForeignUsageLayoutArg = new Data_Foreign_Class.AsForeign(function (v) {
      if (v instanceof Command) {
          return Data_Foreign.toForeign({
              type: "Command", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1)
          });
      };
      if (v instanceof Positional) {
          return Data_Foreign.toForeign({
              type: "Positional", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1)
          });
      };
      if (v instanceof Option) {
          return Data_Foreign.toForeign({
              type: "Option", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0), 
              argument: Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Neodoc_Data_OptionArgument.asForeigntOptionArgument))(v.value1), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value2)
          });
      };
      if (v instanceof OptionStack) {
          return Data_Foreign.toForeign({
              type: "OptionStack", 
              chars: Data_Foreign_Class.write(Data_Foreign_Class.arrayAsForeign(Data_Foreign_Class.charAsForeign))(Data_Array.fromFoldable(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(v.value0)), 
              argument: Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Neodoc_Data_OptionArgument.asForeigntOptionArgument))(v.value1), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value2)
          });
      };
      if (v instanceof Reference) {
          return Data_Foreign.toForeign({
              type: "Reference", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0)
          });
      };
      if (v instanceof Stdin) {
          return Data_Foreign.toForeign({
              type: "Stdin"
          });
      };
      if (v instanceof EOA) {
          return Data_Foreign.toForeign({
              type: "EOA"
          });
      };
      throw new Error("Failed pattern match at Neodoc.Data.UsageLayout line 46, column 3 - line 50, column 6: " + [ v.constructor.name ]);
  });
  exports["Command"] = Command;
  exports["Positional"] = Positional;
  exports["Option"] = Option;
  exports["OptionStack"] = OptionStack;
  exports["EOA"] = EOA;
  exports["Stdin"] = Stdin;
  exports["Reference"] = Reference;
  exports["genericUsageLayoutArg"] = genericUsageLayoutArg;
  exports["showUsageLayoutArg"] = showUsageLayoutArg;
  exports["asForeignUsageLayoutArg"] = asForeignUsageLayoutArg;
  exports["isForeignUsageLayoutArg"] = isForeignUsageLayoutArg;
  exports["prettyUsageLayoutArg"] = prettyUsageLayoutArg;
})(PS["Neodoc.Data.UsageLayout"] = PS["Neodoc.Data.UsageLayout"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_String = PS["Data.String"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Show = PS["Data.Show"];        
  var PositionalKey = (function () {
      function PositionalKey(value0) {
          this.value0 = value0;
      };
      PositionalKey.create = function (value0) {
          return new PositionalKey(value0);
      };
      return PositionalKey;
  })();
  var CommandKey = (function () {
      function CommandKey(value0) {
          this.value0 = value0;
      };
      CommandKey.create = function (value0) {
          return new CommandKey(value0);
      };
      return CommandKey;
  })();
  var OptionKey = (function () {
      function OptionKey(value0) {
          this.value0 = value0;
      };
      OptionKey.create = function (value0) {
          return new OptionKey(value0);
      };
      return OptionKey;
  })();
  var EOAKey = (function () {
      function EOAKey() {

      };
      EOAKey.value = new EOAKey();
      return EOAKey;
  })();
  var StdinKey = (function () {
      function StdinKey() {

      };
      StdinKey.value = new StdinKey();
      return StdinKey;
  })();                                                                  
  var eqArgKey = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof PositionalKey && v1 instanceof PositionalKey) {
              return Data_String.toUpper(v.value0) === Data_String.toUpper(v1.value0);
          };
          if (v instanceof CommandKey && v1 instanceof CommandKey) {
              return v.value0 === v1.value0;
          };
          if (v instanceof OptionKey && v1 instanceof OptionKey) {
              return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(v.value0)(v1.value0);
          };
          if (v instanceof EOAKey && v1 instanceof EOAKey) {
              return true;
          };
          if (v instanceof StdinKey && v1 instanceof StdinKey) {
              return true;
          };
          return false;
      };
  });
  var ordArgKey = new Data_Ord.Ord(function () {
      return eqArgKey;
  }, function (x) {
      return function (y) {
          if (x instanceof PositionalKey && y instanceof PositionalKey) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof PositionalKey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof PositionalKey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CommandKey && y instanceof CommandKey) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof CommandKey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CommandKey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof OptionKey && y instanceof OptionKey) {
              return Data_Ord.compare(Neodoc_OptionAlias.ordOptionAlias)(x.value0)(y.value0);
          };
          if (x instanceof OptionKey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof OptionKey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof EOAKey && y instanceof EOAKey) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof EOAKey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof EOAKey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof StdinKey && y instanceof StdinKey) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Neodoc.ArgKey line 16, column 1 - line 16, column 40: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["PositionalKey"] = PositionalKey;
  exports["CommandKey"] = CommandKey;
  exports["OptionKey"] = OptionKey;
  exports["EOAKey"] = EOAKey;
  exports["StdinKey"] = StdinKey;
  exports["ordArgKey"] = ordArgKey;
  exports["eqArgKey"] = eqArgKey;
})(PS["Neodoc.ArgKey"] = PS["Neodoc.ArgKey"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];        
  var ToArgKey = function (toArgKey) {
      this.toArgKey = toArgKey;
  };
  var toArgKeyOptionAlias = new ToArgKey(function (x) {
      return new Neodoc_ArgKey.OptionKey(x);
  });
  var toArgKey = function (dict) {
      return dict.toArgKey;
  };
  exports["ToArgKey"] = ToArgKey;
  exports["toArgKey"] = toArgKey;
  exports["toArgKeyOptionAlias"] = toArgKeyOptionAlias;
})(PS["Neodoc.ArgKey.Class"] = PS["Neodoc.ArgKey.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Either = PS["Data.Either"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_List = PS["Data.List"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Data_Function = PS["Data.Function"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];        
  var Command = (function () {
      function Command(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Command.create = function (value0) {
          return function (value1) {
              return new Command(value0, value1);
          };
      };
      return Command;
  })();
  var Positional = (function () {
      function Positional(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Positional.create = function (value0) {
          return function (value1) {
              return new Positional(value0, value1);
          };
      };
      return Positional;
  })();
  var Option = (function () {
      function Option(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Option.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Option(value0, value1, value2);
              };
          };
      };
      return Option;
  })();
  var EOA = (function () {
      function EOA() {

      };
      EOA.value = new EOA();
      return EOA;
  })();
  var Stdin = (function () {
      function Stdin() {

      };
      Stdin.value = new Stdin();
      return Stdin;
  })();
  var toArgKeySolvedLayoutArg = new Neodoc_ArgKey_Class.ToArgKey(function (v) {
      if (v instanceof Command) {
          return new Neodoc_ArgKey.CommandKey(v.value0);
      };
      if (v instanceof Positional) {
          return new Neodoc_ArgKey.PositionalKey(v.value0);
      };
      if (v instanceof Option) {
          return new Neodoc_ArgKey.OptionKey(v.value0);
      };
      if (v instanceof EOA) {
          return Neodoc_ArgKey.EOAKey.value;
      };
      if (v instanceof Stdin) {
          return Neodoc_ArgKey.StdinKey.value;
      };
      throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 49, column 3 - line 49, column 46: " + [ v.constructor.name ]);
  });
  var setRepeatableOr = function (v) {
      return function (v1) {
          if (v1 instanceof Neodoc_Data_Layout.Group) {
              return new Neodoc_Data_Layout.Group(v1.value0, v || v1.value1, v1.value2);
          };
          if (v1 instanceof Neodoc_Data_Layout.Elem && v1.value0 instanceof Command) {
              return new Neodoc_Data_Layout.Elem(new Command(v1.value0.value0, v || v1.value0.value1));
          };
          if (v1 instanceof Neodoc_Data_Layout.Elem && v1.value0 instanceof Positional) {
              return new Neodoc_Data_Layout.Elem(new Positional(v1.value0.value0, v || v1.value0.value1));
          };
          if (v1 instanceof Neodoc_Data_Layout.Elem && v1.value0 instanceof Option) {
              return new Neodoc_Data_Layout.Elem(new Option(v1.value0.value0, v1.value0.value1, v || v1.value0.value2));
          };
          return v1;
      };
  };
  var prettySolvedLayoutArg = new Data_Pretty.Pretty((function () {
      var rep = function (r) {
          if (r) {
              return "...";
          };
          if (!r) {
              return "";
          };
          throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 63, column 13 - line 64, column 5: " + [ r.constructor.name ]);
      };
      var prettyOA = function (a) {
          return function (v) {
              return (function () {
                  if (v.value1) {
                      return "[=";
                  };
                  if (!v.value1) {
                      var $111 = Neodoc_OptionAlias.isLong(a);
                      if ($111) {
                          return "=";
                      };
                      if (!$111) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 65, column 31 - line 65, column 71: " + [ $111.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 65, column 10 - line 65, column 72: " + [ v.value1.constructor.name ]);
              })() + (v.value0 + (function () {
                  if (v.value1) {
                      return "]";
                  };
                  if (!v.value1) {
                      return "";
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 67, column 13 - line 67, column 34: " + [ v.value1.constructor.name ]);
              })());
          };
      };
      var go = function (v) {
          if (v instanceof Command) {
              return v.value0 + rep(v.value1);
          };
          if (v instanceof Positional) {
              return v.value0 + rep(v.value1);
          };
          if (v instanceof EOA) {
              return "--";
          };
          if (v instanceof Stdin) {
              return "-";
          };
          if (v instanceof Option) {
              return Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias)(v.value0) + (Data_Maybe.maybe("")(prettyOA(v.value0))(v.value1) + rep(v.value2));
          };
          throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 56, column 3 - line 67, column 35: " + [ v.constructor.name ]);
      };
      return go;
  })());
  var isPositional = function (v) {
      if (v instanceof Positional) {
          return true;
      };
      return false;
  };
  var isOption = function (v) {
      if (v instanceof Option) {
          return true;
      };
      return false;
  };
  var isFreeElem = function (v) {
      if (v instanceof Option) {
          return true;
      };
      return false;
  };
  var isFreeLayout = function (v) {
      if (v instanceof Neodoc_Data_Layout.Group) {
          return Data_Foldable.all(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.all(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(isFreeLayout))(v.value2);
      };
      if (v instanceof Neodoc_Data_Layout.Elem) {
          return isFreeElem(v.value0);
      };
      throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 168, column 1 - line 168, column 56: " + [ v.constructor.name ]);
  };
  var isForeignSolvedLayoutArg = new Data_Foreign_Class.IsForeign(function (v) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_String.toUpper)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("type")(v)))(function (v1) {
          if (v1 === "EOA") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(EOA.value);
          };
          if (v1 === "STDIN") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Stdin.value);
          };
          if (v1 === "COMMAND") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Command.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          if (v1 === "POSITIONAL") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Positional.create)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          if (v1 === "OPTION") {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Option.create)(Data_Foreign_Class.readProp(Neodoc_OptionAlias.isForeignOptionAlias)(Data_Foreign_Index.indexString)("name")(v)))(Data_Foreign_Extra.readPropMaybe(Neodoc_Data_OptionArgument.isForeigntOptionArgument)(Data_Foreign_Index.indexString)("argument")(v)))(Data_Foreign_Class.readProp(Data_Foreign_Class.booleanIsForeign)(Data_Foreign_Index.indexString)("repeatable")(v));
          };
          return Data_Foreign.fail(Data_Foreign_Index.errorAt(Data_Foreign_Index.indexString)("type")(Data_Foreign.JSONError.create("unknown type: " + v1)));
      });
  });
  var isFlag = function (v) {
      if (v instanceof Option && v.value1 instanceof Data_Maybe.Nothing) {
          return true;
      };
      return false;
  };
  var isElemRepeatable = function (v) {
      if (v instanceof Command) {
          return v.value1;
      };
      if (v instanceof Positional) {
          return v.value1;
      };
      if (v instanceof Option) {
          return v.value2;
      };
      return false;
  };
  var isCommand = function (v) {
      if (v instanceof Command) {
          return true;
      };
      return false;
  };
  var genericSolvedLayoutArg = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.SolvedLayout.Command" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Command.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][1](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.SolvedLayout.Positional" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Positional.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][1](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.SolvedLayout.Option" && v.value1.length === 3)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Option.create))(Data_Generic.fromSpine(Neodoc_OptionAlias.genericOptionAlias)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericBool)(v["value1"][2](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.SolvedLayout.EOA" && v.value1.length === 0)) {
          return new Data_Maybe.Just(EOA.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Data.SolvedLayout.Stdin" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Stdin.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.Data.SolvedLayout.SolvedLayoutArg", [ {
          sigConstructor: "Neodoc.Data.SolvedLayout.Command", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.SolvedLayout.Positional", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.SolvedLayout.Option", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Neodoc_OptionAlias.genericOptionAlias)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericBool)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Data.SolvedLayout.EOA", 
          sigValues: [  ]
      }, {
          sigConstructor: "Neodoc.Data.SolvedLayout.Stdin", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Command) {
          return new Data_Generic.SProd("Neodoc.Data.SolvedLayout.Command", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value1);
          } ]);
      };
      if (v instanceof Positional) {
          return new Data_Generic.SProd("Neodoc.Data.SolvedLayout.Positional", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value1);
          } ]);
      };
      if (v instanceof Option) {
          return new Data_Generic.SProd("Neodoc.Data.SolvedLayout.Option", [ function ($dollarq) {
              return Data_Generic.toSpine(Neodoc_OptionAlias.genericOptionAlias)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericMaybe(Neodoc_Data_OptionArgument.genericOptionArgument))(v.value1);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericBool)(v.value2);
          } ]);
      };
      if (v instanceof EOA) {
          return new Data_Generic.SProd("Neodoc.Data.SolvedLayout.EOA", [  ]);
      };
      if (v instanceof Stdin) {
          return new Data_Generic.SProd("Neodoc.Data.SolvedLayout.Stdin", [  ]);
      };
      throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 43, column 1 - line 43, column 66: " + [ v.constructor.name ]);
  });
  var asForeignSolvedLayoutArg = new Data_Foreign_Class.AsForeign(function (v) {
      if (v instanceof Command) {
          return Data_Foreign.toForeign({
              type: "Command", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1)
          });
      };
      if (v instanceof Positional) {
          return Data_Foreign.toForeign({
              type: "Positional", 
              name: Data_Foreign_Class.write(Data_Foreign_Class.stringAsForeign)(v.value0), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value1)
          });
      };
      if (v instanceof Option) {
          return Data_Foreign.toForeign({
              type: "Option", 
              name: Data_Foreign_Class.write(Neodoc_OptionAlias.asForeignOptionAlias)(v.value0), 
              argument: Data_Maybe.maybe(Data_Foreign_Extra["undefined"])(Data_Foreign_Class.write(Neodoc_Data_OptionArgument.asForeigntOptionArgument))(v.value1), 
              repeatable: Data_Foreign_Class.write(Data_Foreign_Class.booleanAsForeign)(v.value2)
          });
      };
      if (v instanceof Stdin) {
          return Data_Foreign.toForeign({
              type: "Stdin"
          });
      };
      if (v instanceof EOA) {
          return Data_Foreign.toForeign({
              type: "EOA"
          });
      };
      throw new Error("Failed pattern match at Neodoc.Data.SolvedLayout line 70, column 3 - line 74, column 6: " + [ v.constructor.name ]);
  });
  exports["Command"] = Command;
  exports["Positional"] = Positional;
  exports["Option"] = Option;
  exports["EOA"] = EOA;
  exports["Stdin"] = Stdin;
  exports["isCommand"] = isCommand;
  exports["isElemRepeatable"] = isElemRepeatable;
  exports["isFlag"] = isFlag;
  exports["isFreeElem"] = isFreeElem;
  exports["isFreeLayout"] = isFreeLayout;
  exports["isOption"] = isOption;
  exports["isPositional"] = isPositional;
  exports["setRepeatableOr"] = setRepeatableOr;
  exports["genericSolvedLayoutArg"] = genericSolvedLayoutArg;
  exports["toArgKeySolvedLayoutArg"] = toArgKeySolvedLayoutArg;
  exports["prettySolvedLayoutArg"] = prettySolvedLayoutArg;
  exports["asForeignSolvedLayoutArg"] = asForeignSolvedLayoutArg;
  exports["isForeignSolvedLayoutArg"] = isForeignSolvedLayoutArg;
})(PS["Neodoc.Data.SolvedLayout"] = PS["Neodoc.Data.SolvedLayout"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Char = PS["Data.Char"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_String = PS["Data.String"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var ScanError = (function () {
      function ScanError(value0) {
          this.value0 = value0;
      };
      ScanError.create = function (value0) {
          return new ScanError(value0);
      };
      return ScanError;
  })();
  var SpecLexError = (function () {
      function SpecLexError(value0) {
          this.value0 = value0;
      };
      SpecLexError.create = function (value0) {
          return new SpecLexError(value0);
      };
      return SpecLexError;
  })();
  var SpecParseError = (function () {
      function SpecParseError(value0) {
          this.value0 = value0;
      };
      SpecParseError.create = function (value0) {
          return new SpecParseError(value0);
      };
      return SpecParseError;
  })();
  var SpecSolveError = (function () {
      function SpecSolveError(value0) {
          this.value0 = value0;
      };
      SpecSolveError.create = function (value0) {
          return new SpecSolveError(value0);
      };
      return SpecSolveError;
  })();
  var ArgParserError = (function () {
      function ArgParserError(value0) {
          this.value0 = value0;
      };
      ArgParserError.create = function (value0) {
          return new ArgParserError(value0);
      };
      return ArgParserError;
  })();
  var VersionMissingError = (function () {
      function VersionMissingError() {

      };
      VersionMissingError.value = new VersionMissingError();
      return VersionMissingError;
  })();
  var prettyNeodocError = new Data_Pretty.Pretty(function (v) {
      if (v instanceof ScanError) {
          return "Failed to disect neodoc text:\x0a" + v.value0;
      };
      if (v instanceof SpecLexError) {
          return "Failed to lex specification:\x0a" + v.value0;
      };
      if (v instanceof SpecParseError) {
          return "Failed to parse specification:\x0a" + v.value0;
      };
      if (v instanceof SpecSolveError) {
          return "Incoherent specification:\x0a" + v.value0;
      };
      if (v instanceof VersionMissingError) {
          return "Package version could not be detected";
      };
      if (v instanceof ArgParserError) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Neodoc.Error line 28, column 3 - line 28, column 68: " + [ v.constructor.name ]);
  });
  var isDeveloperError = function (v) {
      if (v instanceof ArgParserError) {
          return false;
      };
      return true;
  };
  exports["ScanError"] = ScanError;
  exports["SpecLexError"] = SpecLexError;
  exports["SpecParseError"] = SpecParseError;
  exports["SpecSolveError"] = SpecSolveError;
  exports["ArgParserError"] = ArgParserError;
  exports["VersionMissingError"] = VersionMissingError;
  exports["isDeveloperError"] = isDeveloperError;
  exports["prettyNeodocError"] = prettyNeodocError;
})(PS["Neodoc.Error"] = PS["Neodoc.Error"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Neodoc_Error = PS["Neodoc.Error"];        
  var ToNeodocError = function (toNeodocError) {
      this.toNeodocError = toNeodocError;
  };
  var toNeodocError = function (dict) {
      return dict.toNeodocError;
  };
  var capture = function (dictToNeodocError) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(toNeodocError(dictToNeodocError));
  };
  exports["ToNeodocError"] = ToNeodocError;
  exports["capture"] = capture;
  exports["toNeodocError"] = toNeodocError;
})(PS["Neodoc.Error.Class"] = PS["Neodoc.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Either = PS["Data.Either"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Error = PS["Neodoc.Error"];
  var Neodoc_Error_Class = PS["Neodoc.Error.Class"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var SolveError = function (x) {
      return x;
  };
  var toNeodocErrorSolveError = new Neodoc_Error_Class.ToNeodocError(function (v) {
      return new Neodoc_Error.SpecSolveError(v);
  });                                                                            
  var fail = function ($13) {
      return Data_Either.Left.create(SolveError($13));
  };
  exports["SolveError"] = SolveError;
  exports["fail"] = fail;
  exports["toNeodocErrorSolveError"] = toNeodocErrorSolveError;
})(PS["Neodoc.Solve.Error"] = PS["Neodoc.Solve.Error"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var unwrapEnv = function (v) {
      return v;
  };                              
  var lookup = Data_StrMap.lookup;
  var isForeignEnvWrapper = new Data_Foreign_Class.IsForeign(function (v) {
      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Unsafe_Coerce.unsafeCoerce)(Data_Foreign_Extra.readObject(v));
  });
  exports["lookup"] = lookup;
  exports["unwrapEnv"] = unwrapEnv;
  exports["isForeignEnvWrapper"] = isForeignEnvWrapper;
})(PS["Neodoc.Env"] = PS["Neodoc.Env"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Applicative = PS["Control.Applicative"];        
  var Free = (function () {
      function Free(value0) {
          this.value0 = value0;
      };
      Free.create = function (value0) {
          return new Free(value0);
      };
      return Free;
  })();
  var Fixed = (function () {
      function Fixed(value0) {
          this.value0 = value0;
      };
      Fixed.create = function (value0) {
          return new Fixed(value0);
      };
      return Fixed;
  })();
  var chunk = function (isFree1) {
      return function (xs) {
          var go = function (v) {
              return function (x) {
                  if (v instanceof Data_List_Types.Nil) {
                      return Control_Applicative.pure(Data_List_Types.applicativeList)((function () {
                          var $20 = isFree1(x);
                          if ($20) {
                              return Free.create;
                          };
                          if (!$20) {
                              return Fixed.create;
                          };
                          throw new Error("Failed pattern match at Neodoc.Data.Chunk line 36, column 24 - line 36, column 56: " + [ $20.constructor.name ]);
                      })()(Data_List.singleton(x)));
                  };
                  if (v instanceof Data_List_Types.Cons && (v.value0 instanceof Free && isFree1(x))) {
                      return new Data_List_Types.Cons(new Free(Data_Semigroup.append(Data_List_Types.semigroupList)(v.value0.value0)(Data_List.singleton(x))), v.value1);
                  };
                  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Free) {
                      return new Data_List_Types.Cons(Fixed.create(Data_List.singleton(x)), v);
                  };
                  if (v instanceof Data_List_Types.Cons && (v.value0 instanceof Fixed && isFree1(x))) {
                      return new Data_List_Types.Cons(Free.create(Data_List.singleton(x)), v);
                  };
                  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Fixed) {
                      return new Data_List_Types.Cons(new Fixed(Data_Semigroup.append(Data_List_Types.semigroupList)(v.value0.value0)(Data_List.singleton(x))), v.value1);
                  };
                  throw new Error("Failed pattern match at Neodoc.Data.Chunk line 36, column 3 - line 36, column 71: " + [ v.constructor.name, x.constructor.name ]);
              };
          };
          return Data_List.reverse(Data_Foldable.foldl(Data_List_Types.foldableList)(go)(Data_List_Types.Nil.value)(xs));
      };
  };
  exports["Free"] = Free;
  exports["Fixed"] = Fixed;
  exports["chunk"] = chunk;
})(PS["Neodoc.Data.Chunk"] = PS["Neodoc.Data.Chunk"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Map = PS["Data.Map"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Functor = PS["Data.Functor"];        
  var Indexed = (function () {
      function Indexed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Indexed.create = function (value0) {
          return function (value1) {
              return new Indexed(value0, value1);
          };
      };
      return Indexed;
  })();
  var toMap = function (xs) {
      return Data_Map.fromFoldable(Data_Ord.ordInt)(Data_List_Types.foldableList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(xs)(function (v) {
          return new Data_Tuple.Tuple(v.value0, v.value1);
      }));
  };
  exports["Indexed"] = Indexed;
  exports["toMap"] = toMap;
})(PS["Neodoc.Data.Indexed"] = PS["Neodoc.Data.Indexed"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Neodoc_Data_Indexed = PS["Neodoc.Data.Indexed"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Data_IndexedLayout = PS["Neodoc.Data.IndexedLayout"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Applicative = PS["Control.Applicative"];        
  var toStrictLayout = function (v) {
      if (v instanceof Neodoc_Data_EmptyableLayout.EmptyableElem) {
          return new Data_Maybe.Just(new Neodoc_Data_Layout.Elem(v.value0));
      };
      if (v instanceof Neodoc_Data_EmptyableLayout.EmptyableGroup) {
          var branches$prime = Data_List.catMaybes(Data_Functor.map(Data_List_Types.functorList)(toStrictBranch)(v.value2));
          if (branches$prime instanceof Data_List_Types.Cons) {
              return new Data_Maybe.Just(new Neodoc_Data_Layout.Group(v.value0, v.value1, new Data_NonEmpty.NonEmpty(branches$prime.value0, branches$prime.value1)));
          };
          if (branches$prime instanceof Data_List_Types.Nil) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 23, column 7 - line 25, column 26: " + [ branches$prime.constructor.name ]);
      };
      throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 20, column 1 - line 20, column 49: " + [ v.constructor.name ]);
  };
  var toStrictBranch = function (branch) {
      var elems = Data_List.catMaybes(Data_Functor.map(Data_List_Types.functorList)(toStrictLayout)(branch));
      if (elems instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(elems.value0, elems.value1));
      };
      if (elems instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 33, column 6 - line 35, column 26: " + [ elems.constructor.name ]);
  };
  var toEmptyableLayout = function (v) {
      if (v instanceof Neodoc_Data_Layout.Elem) {
          return new Neodoc_Data_EmptyableLayout.EmptyableElem(v.value0);
      };
      if (v instanceof Neodoc_Data_Layout.Group) {
          return Neodoc_Data_EmptyableLayout.EmptyableGroup.create(v.value0)(v.value1)(Data_NonEmpty_Extra.toList(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(toEmptyableBranch)(v.value2)));
      };
      throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 41, column 1 - line 41, column 45: " + [ v.constructor.name ]);
  };
  var toEmptyableBranch = function (xs) {
      return Data_NonEmpty_Extra.toList(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(toEmptyableLayout)(xs));
  };
  var indexBranch = function (branch) {
      var indexLayout = function (v) {
          if (v instanceof Neodoc_Data_Layout.Group) {
              return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Neodoc_Data_Layout.Group.create(v.value0)(v.value1))(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(v.value2)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(indexLayout)));
          };
          if (v instanceof Neodoc_Data_Layout.Elem) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (v1) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(v1 + 1 | 0))(function () {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Neodoc_Data_Layout.Elem(new Neodoc_Data_Indexed.Indexed(v1, v.value0)));
                  });
              });
          };
          throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 83, column 1 - line 90, column 29: " + [ v.constructor.name ]);
      };
      return Data_Function.flip(Control_Monad_State.evalState)(0)(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(branch)(indexLayout));
  };
  var flattenBranch = function (branch) {
      var flattenLayout = function (v) {
          if (v instanceof Neodoc_Data_Layout.Elem) {
              return new Data_NonEmpty.NonEmpty(v.value0, Data_List_Types.Nil.value);
          };
          if (v instanceof Neodoc_Data_Layout.Group) {
              return Data_NonEmpty_Extra.concat(Data_NonEmpty_Extra.concat(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
                  return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(flattenLayout)(v1);
              })(v.value2)));
          };
          throw new Error("Failed pattern match at Neodoc.Data.LayoutConversion line 64, column 1 - line 68, column 77: " + [ v.constructor.name ]);
      };
      return Data_NonEmpty_Extra.concat(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(flattenLayout)(branch));
  };
  exports["flattenBranch"] = flattenBranch;
  exports["indexBranch"] = indexBranch;
  exports["toEmptyableBranch"] = toEmptyableBranch;
  exports["toEmptyableLayout"] = toEmptyableLayout;
  exports["toStrictBranch"] = toStrictBranch;
  exports["toStrictLayout"] = toStrictLayout;
})(PS["Neodoc.Data.LayoutConversion"] = PS["Neodoc.Data.LayoutConversion"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_List = PS["Data.List"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];        
  var zipTraverseM = function (dictMonad) {
      return function (dictShow) {
          return function (dictShow1) {
              return function (f) {
                  var go = function (v) {
                      if (v.value1 instanceof Data_List_Types.Nil) {
                          return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(v.value0)(Data_Maybe.Nothing.value))(function (v1) {
                              if (v1.value1 instanceof Data_Maybe.Nothing) {
                                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_NonEmpty.NonEmpty(v1.value0.value0, v1.value0.value1));
                              };
                              if (v1.value1 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(go(new Data_NonEmpty.NonEmpty(v1.value1.value0, Data_List_Types.Nil.value)))(function (v2) {
                                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_NonEmpty.NonEmpty(v1.value0.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value0.value1)(new Data_List_Types.Cons(v2.value0, v2.value1))));
                                  });
                              };
                              throw new Error("Failed pattern match at Neodoc.Solve.Traverse line 27, column 7 - line 31, column 37: " + [ v1.value1.constructor.name ]);
                          });
                      };
                      if (v.value1 instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(v.value0)(new Data_Maybe.Just(v.value1.value0)))(function (v1) {
                              if (v1.value1 instanceof Data_Maybe.Nothing) {
                                  if (v.value1.value1 instanceof Data_List_Types.Cons) {
                                      return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(go(new Data_NonEmpty.NonEmpty(v.value1.value1.value0, v.value1.value1.value1)))(function (v2) {
                                          return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_NonEmpty.NonEmpty(v1.value0.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value0.value1)(new Data_List_Types.Cons(v2.value0, v2.value1))));
                                      });
                                  };
                                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_NonEmpty.NonEmpty(v1.value0.value0, v1.value0.value1));
                              };
                              if (v1.value1 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(go(new Data_NonEmpty.NonEmpty(v1.value1.value0, v.value1.value1)))(function (v2) {
                                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_NonEmpty.NonEmpty(v1.value0.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value0.value1)(new Data_List_Types.Cons(v2.value0, v2.value1))));
                                  });
                              };
                              throw new Error("Failed pattern match at Neodoc.Solve.Traverse line 36, column 7 - line 45, column 37: " + [ v1.value1.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Neodoc.Solve.Traverse line 23, column 1 - line 45, column 37: " + [ v.constructor.name ]);
                  };
                  return go;
              };
          };
      };
  };
  exports["zipTraverseM"] = zipTraverseM;
})(PS["Neodoc.Solve.Traverse"] = PS["Neodoc.Solve.Traverse"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Array = PS["Data.Array"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Extend = PS["Control.Extend"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Solve_Traverse = PS["Neodoc.Solve.Traverse"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Category = PS["Control.Category"];        
  var SolvedArg = (function () {
      function SolvedArg(value0) {
          this.value0 = value0;
      };
      SolvedArg.create = function (value0) {
          return new SolvedArg(value0);
      };
      return SolvedArg;
  })();
  var ReferenceArg = (function () {
      function ReferenceArg(value0) {
          this.value0 = value0;
      };
      ReferenceArg.create = function (value0) {
          return new ReferenceArg(value0);
      };
      return ReferenceArg;
  })();
  var stripAngles = (function () {
      var stripSuffix = function (s) {
          return Data_Maybe.fromMaybe(s)(Data_String.stripSuffix(">")(s));
      };
      var stripPrefix = function (s) {
          return Data_Maybe.fromMaybe(s)(Data_String.stripPrefix("<")(s));
      };
      return function ($287) {
          return stripPrefix(stripSuffix($287));
      };
  })();
  var posArgsEq = Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(function ($288) {
      return Data_String.toUpper(stripAngles($288));
  });
  var genericPreSolvedLayoutArg = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Solve.ExpandOptions.SolvedArg" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(SolvedArg.create))(Data_Generic.fromSpine(Neodoc_Data_SolvedLayout.genericSolvedLayoutArg)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Neodoc.Solve.ExpandOptions.ReferenceArg" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ReferenceArg.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Neodoc.Solve.ExpandOptions.ExpandedOptionsLayoutArg", [ {
          sigConstructor: "Neodoc.Solve.ExpandOptions.SolvedArg", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Neodoc_Data_SolvedLayout.genericSolvedLayoutArg)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Neodoc.Solve.ExpandOptions.ReferenceArg", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof SolvedArg) {
          return new Data_Generic.SProd("Neodoc.Solve.ExpandOptions.SolvedArg", [ function ($dollarq) {
              return Data_Generic.toSpine(Neodoc_Data_SolvedLayout.genericSolvedLayoutArg)(v.value0);
          } ]);
      };
      if (v instanceof ReferenceArg) {
          return new Data_Generic.SProd("Neodoc.Solve.ExpandOptions.ReferenceArg", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
          } ]);
      };
      throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 64, column 1 - line 64, column 78: " + [ v.constructor.name ]);
  });
  var showPreSolvedLayoutArg = new Data_Show.Show(Data_Generic.gShow(genericPreSolvedLayoutArg));
  var expandOptions = function (v) {
      var preSolveBranch = function (branch) {
          return Neodoc_Solve_Traverse.zipTraverseM(Data_Either.monadEither)(Neodoc_Data_Layout.showLayout(Neodoc_Data_UsageLayout.showUsageLayoutArg))(Neodoc_Data_Layout.showLayout(showPreSolvedLayoutArg))(preSolveAdjacent)(branch);
      };
      var preSolveAdjacent = function (layout) {
          return function (mAdjLayout) {
              var preSolveOptionStack = function (v1) {
                  var lookupValidDescription = function (isTrailing) {
                      return function (c1) {
                          var isMatch = function (v2) {
                              if (v2 instanceof Neodoc_Data_Description.OptionDescription) {
                                  return Data_Function.flip(Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean))(v2.value0)(function (v3) {
                                      if (v3 instanceof Neodoc_OptionAlias.Short) {
                                          return c1 === v3.value0;
                                      };
                                      return false;
                                  });
                              };
                              return false;
                          };
                          var matches = Data_List.filter(isMatch)(v.descriptions);
                          if (matches instanceof Data_List_Types.Nil) {
                              return new Data_Either.Right(Data_Maybe.Nothing.value);
                          };
                          if (matches instanceof Data_List_Types.Cons && (matches.value0 instanceof Neodoc_Data_Description.OptionDescription && (matches.value0.value2 instanceof Data_Maybe.Just && matches.value1 instanceof Data_List_Types.Nil))) {
                              if (isTrailing) {
                                  return new Data_Either.Right(new Data_Maybe.Just(new Data_Tuple.Tuple(matches.value0.value1, new Data_Maybe.Just(matches.value0.value2.value0))));
                              };
                              if (!isTrailing) {
                                  return Neodoc_Solve_Error.fail("Stacked option -" + (Data_String.singleton(c1) + " may not specify arguments"));
                              };
                              throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 330, column 17 - line 335, column 15: " + [ isTrailing.constructor.name ]);
                          };
                          if (matches instanceof Data_List_Types.Cons && (matches.value0 instanceof Neodoc_Data_Description.OptionDescription && (matches.value0.value2 instanceof Data_Maybe.Nothing && matches.value1 instanceof Data_List_Types.Nil))) {
                              return new Data_Either.Right(new Data_Maybe.Just(new Data_Tuple.Tuple(matches.value0.value1, Data_Maybe.Nothing.value)));
                          };
                          return Neodoc_Solve_Error.fail("Multiple option descriptions for option -" + Data_String.singleton(c1));
                      };
                  };
                  var trySlurp = function (v2) {
                      var guardArgNames = function (aN) {
                          return function (aN$prime) {
                              if (posArgsEq(aN)(aN$prime)) {
                                  return new Data_Either.Right(true);
                              };
                              return Neodoc_Solve_Error.fail("Arguments mismatch for option -" + (Data_String.singleton(v1.value3.value0) + (": " + (Data_Show.show(Data_Show.showString)(aN) + (" and " + Data_Show.show(Data_Show.showString)(aN$prime))))));
                          };
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription(true)(v2.value0))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v2.value1)(function (t) {
                              return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription(false)(t))(function () {
                                  return Data_Either.Right.create(function (r$prime) {
                                      return new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(t), Data_Maybe.Nothing.value, v1.value5 || r$prime);
                                  });
                              });
                          })))(function (v4) {
                              if (v3 instanceof Data_Maybe.Just && v3.value0.value1 instanceof Data_Maybe.Just) {
                                  return Data_Maybe["maybe'"](function (v5) {
                                      var $91 = !v3.value0.value1.value0.value1;
                                      if ($91) {
                                          return Neodoc_Solve_Error.fail("Option-Argument specified in options-section missing" + (" -" + Data_String.singleton(v2.value0)));
                                      };
                                      if (!$91) {
                                          var opt = new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(v2.value0), v3.value0.value1, v1.value5);
                                          var leading$prime = Data_Functor.map(Data_List_Types.functorList)(function (v6) {
                                              return v6(false);
                                          })(v4);
                                          return v1.value2((function () {
                                              if (leading$prime instanceof Data_List_Types.Cons) {
                                                  return new Data_NonEmpty.NonEmpty(leading$prime.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(leading$prime.value1)(Data_List.singleton(opt)));
                                              };
                                              if (leading$prime instanceof Data_List_Types.Nil) {
                                                  return new Data_NonEmpty.NonEmpty(opt, Data_List_Types.Nil.value);
                                              };
                                              throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 282, column 29 - line 284, column 45: " + [ leading$prime.constructor.name ]);
                                          })());
                                      };
                                      throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 276, column 17 - line 284, column 45: " + [ $91.constructor.name ]);
                                  })(function (v5) {
                                      return Control_Bind.bind(Data_Either.bindEither)(guardArgNames(v5.value1.value0)(v3.value0.value1.value0.value0))(function () {
                                          var opt = new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(v2.value0), Data_Maybe.Just.create(new Neodoc_Data_OptionArgument.OptionArgument(v5.value1.value0, v5.value1.value1)), v5.value0);
                                          var leading$prime = Data_Functor.map(Data_List_Types.functorList)(function (v6) {
                                              return v6(v5.value0);
                                          })(v4);
                                          return v1.value1((function () {
                                              if (leading$prime instanceof Data_List_Types.Cons) {
                                                  return new Data_NonEmpty.NonEmpty(leading$prime.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(leading$prime.value1)(Data_List.singleton(opt)));
                                              };
                                              if (leading$prime instanceof Data_List_Types.Nil) {
                                                  return new Data_NonEmpty.NonEmpty(opt, Data_List_Types.Nil.value);
                                              };
                                              throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 293, column 25 - line 295, column 39: " + [ leading$prime.constructor.name ]);
                                          })());
                                      });
                                  })(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(!v1.value5))(function () {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(v1.value0)(function (v5) {
                                          if (v5 instanceof Neodoc_Data_Layout.Elem && v5.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                              return new Data_Maybe.Just(new Data_Tuple.Tuple(v5.value0.value1, new Data_Tuple.Tuple(v5.value0.value0, false)));
                                          };
                                          if (v5 instanceof Neodoc_Data_Layout.Elem && v5.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                              return new Data_Maybe.Just(new Data_Tuple.Tuple(v5.value0.value1, new Data_Tuple.Tuple(v5.value0.value0, false)));
                                          };
                                          if (v5 instanceof Neodoc_Data_Layout.Group && (v5.value2.value0.value1 instanceof Data_List_Types.Nil && v5.value2.value1 instanceof Data_List_Types.Nil)) {
                                              if (v5.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v5.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v5.value1 || v5.value2.value0.value0.value0.value1, new Data_Tuple.Tuple(v5.value2.value0.value0.value0.value0, v5.value0)));
                                              };
                                              if (v5.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v5.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v5.value1 || v5.value2.value0.value0.value0.value1, new Data_Tuple.Tuple(v5.value2.value0.value0.value0.value0, v5.value0)));
                                              };
                                              return Data_Maybe.Nothing.value;
                                          };
                                          return Data_Maybe.Nothing.value;
                                      });
                                  }));
                              };
                              var opt = new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(v2.value0), Data_Maybe.Nothing.value, v1.value5);
                              var leading$prime = Data_Functor.map(Data_List_Types.functorList)(function (v5) {
                                  return v5(false);
                              })(v4);
                              return v1.value2((function () {
                                  if (leading$prime instanceof Data_List_Types.Cons) {
                                      return new Data_NonEmpty.NonEmpty(leading$prime.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(leading$prime.value1)(Data_List.singleton(opt)));
                                  };
                                  if (leading$prime instanceof Data_List_Types.Nil) {
                                      return new Data_NonEmpty.NonEmpty(opt, Data_List_Types.Nil.value);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 311, column 24 - line 313, column 39: " + [ leading$prime.constructor.name ]);
                              })());
                          });
                      });
                  };
                  var trySubsume = (function () {
                      var fs = Data_String.fromCharArray(Data_Array.cons(v1.value3.value0)(v1.value3.value1));
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(function ($289) {
                          return Data_List.head(Data_List.catMaybes($289));
                      })(Data_Traversable["for"](Data_Either.applicativeEither)(Data_List_Types.traversableList)(v.descriptions)(function (v2) {
                          if (v2 instanceof Neodoc_Data_Description.OptionDescription && v2.value2 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Data_Either.functorEither)(function ($290) {
                                  return Data_List.head(Data_List.catMaybes(Data_NonEmpty_Extra.toList($290)));
                              })(Data_Traversable["for"](Data_Either.applicativeEither)(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(v2.value0)(function (v3) {
                                  if (v3 instanceof Neodoc_OptionAlias.Short) {
                                      return new Data_Either.Right((function () {
                                          var haystack = Data_String.toUpper(fs);
                                          var bareArgname = stripAngles(v2.value2.value0.value0);
                                          var needle = Data_String.toUpper(Data_String.singleton(v3.value0) + bareArgname);
                                          return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
                                              var $138 = Data_String_Ext.endsWith(needle)(haystack);
                                              if ($138) {
                                                  var ix = Data_String.length(haystack) - Data_String.length(needle) | 0;
                                                  var $139 = Data_String_Unsafe.charAt(ix)(fs) === v3.value0;
                                                  if ($139) {
                                                      var rest = Data_String.toCharArray(Data_String.take((Data_String.length(fs) - Data_String.length(bareArgname) | 0) - 1 | 0)(fs));
                                                      var opt = new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(v3.value0), new Data_Maybe.Just(new Neodoc_Data_OptionArgument.OptionArgument(v2.value2.value0.value0, v2.value2.value0.value1)), v1.value5);
                                                      return new Data_Maybe.Just(new Data_Tuple.Tuple(rest, opt));
                                                  };
                                                  if (!$139) {
                                                      return Data_Maybe.Nothing.value;
                                                  };
                                                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 238, column 25 - line 243, column 37: " + [ $139.constructor.name ]);
                                              };
                                              if (!$138) {
                                                  return Data_Maybe.Nothing.value;
                                              };
                                              throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 235, column 32 - line 244, column 31: " + [ $138.constructor.name ]);
                                          })())(function (v4) {
                                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function ($291) {
                                                  return Data_Maybe.Just.create(Control_Category.id(Control_Category.categoryFn)($291));
                                              })(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v4.value0)(function (c1) {
                                                  return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription(false)(c1))(function () {
                                                      return Data_Either.Right.create(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(c1), Data_Maybe.Nothing.value, v1.value5));
                                                  });
                                              }))))(function (v5) {
                                                  return Data_Maybe.Just.create(new Data_Tuple.Tuple(v5, v4.value1));
                                              });
                                          });
                                      })());
                                  };
                                  return new Data_Either.Right(Data_Maybe.Nothing.value);
                              }));
                          };
                          return new Data_Either.Right(Data_Maybe.Nothing.value);
                      })))(function (v2) {
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return Neodoc_Solve_Error.fail("No description subsumed option");
                          };
                          if (v2 instanceof Data_Maybe.Just) {
                              return v1.value2((function () {
                                  if (v2.value0.value0 instanceof Data_List_Types.Cons) {
                                      return new Data_NonEmpty.NonEmpty(v2.value0.value0.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v2.value0.value0.value1)(Data_List.singleton(v2.value0.value1)));
                                  };
                                  if (v2.value0.value0 instanceof Data_List_Types.Nil) {
                                      return new Data_NonEmpty.NonEmpty(v2.value0.value1, Data_List_Types.Nil.value);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 261, column 40 - line 263, column 33: " + [ v2.value0.value0.constructor.name ]);
                              })());
                          };
                          throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 259, column 9 - line 263, column 33: " + [ v2.constructor.name ]);
                      });
                  })();
                  return Control_Bind.bind(Data_Either.bindEither)(new Data_Either.Right((function () {
                      var $161 = new Data_Tuple.Tuple(Data_Array.last(v1.value3.value1), Data_Array.init(v1.value3.value1));
                      if ($161.value0 instanceof Data_Maybe.Just && $161.value1 instanceof Data_Maybe.Just) {
                          return new Data_NonEmpty.NonEmpty($161.value0.value0, Data_Array.cons(v1.value3.value0)($161.value1.value0));
                      };
                      return new Data_NonEmpty.NonEmpty(v1.value3.value0, [  ]);
                  })()))(function (v2) {
                      if (v1.value4 instanceof Data_Maybe.Just) {
                          return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription(true)(v2.value0))(function () {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v2.value1)(function (t) {
                                  return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription(false)(t))(function () {
                                      return Data_Either.Right.create(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(t), Data_Maybe.Nothing.value, v1.value5));
                                  });
                              })))(function (v3) {
                                  var opt = new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Short(v2.value0), Data_Maybe.Just.create(new Neodoc_Data_OptionArgument.OptionArgument(v1.value4.value0.value0, v1.value4.value0.value1)), v1.value5);
                                  return v1.value2((function () {
                                      if (v3 instanceof Data_List_Types.Cons) {
                                          return new Data_NonEmpty.NonEmpty(v3.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v3.value1)(Data_List.singleton(opt)));
                                      };
                                      if (v3 instanceof Data_List_Types.Nil) {
                                          return new Data_NonEmpty.NonEmpty(opt, Data_List_Types.Nil.value);
                                      };
                                      throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 197, column 18 - line 199, column 33: " + [ v3.constructor.name ]);
                                  })());
                              });
                          });
                      };
                      if (v1.value4 instanceof Data_Maybe.Nothing) {
                          return Control_Alt.alt(Data_Either.altEither)(trySubsume)(trySlurp(new Data_Optimize_Uncurried.Args2(v2.value0, v2.value1)));
                      };
                      throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 185, column 7 - line 205, column 56: " + [ v1.value4.constructor.name ]);
                  });
              };
              var preSolveOption = function (v1) {
                  var lookupValidDescription = (function () {
                      var isMatch = function (v2) {
                          if (v2 instanceof Neodoc_Data_Description.OptionDescription) {
                              return Data_Function.flip(Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean))(v2.value0)(function (v3) {
                                  if (v3 instanceof Neodoc_OptionAlias.Long) {
                                      return v1.value3 === v3.value0;
                                  };
                                  return false;
                              });
                          };
                          return false;
                      };
                      var matches = Data_List.filter(isMatch)(v.descriptions);
                      if (matches instanceof Data_List_Types.Nil) {
                          return new Data_Either.Right(Data_Maybe.Nothing.value);
                      };
                      if (matches instanceof Data_List_Types.Cons && (matches.value0 instanceof Neodoc_Data_Description.OptionDescription && matches.value1 instanceof Data_List_Types.Nil)) {
                          return new Data_Either.Right(new Data_Maybe.Just(new Data_Tuple.Tuple(matches.value0.value1, matches.value0.value2)));
                      };
                      return Neodoc_Solve_Error.fail("Multiple option descriptions for " + ("option --" + v1.value3));
                  })();
                  var guardArgNames = function (aN) {
                      return function (aN$prime) {
                          if (posArgsEq(aN)(aN$prime)) {
                              return new Data_Either.Right(true);
                          };
                          return Neodoc_Solve_Error.fail("Arguments mismatch for option --" + (v1.value3 + (": " + (Data_Show.show(Data_Show.showString)(aN) + (" and " + Data_Show.show(Data_Show.showString)(aN$prime))))));
                      };
                  };
                  return Control_Bind.bind(Data_Either.bindEither)(lookupValidDescription)(function (v2) {
                      if (v1.value4 instanceof Data_Maybe.Just) {
                          return v1.value2(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Long(v1.value3), Data_Maybe.Just.create(new Neodoc_Data_OptionArgument.OptionArgument(v1.value4.value0.value0, v1.value4.value0.value1)), v1.value5));
                      };
                      if (v1.value4 instanceof Data_Maybe.Nothing) {
                          if (v2 instanceof Data_Maybe.Just && v2.value0.value1 instanceof Data_Maybe.Just) {
                              return Data_Maybe.maybe((function () {
                                  var $210 = !v2.value0.value1.value0.value1;
                                  if ($210) {
                                      return Neodoc_Solve_Error.fail("Option-Argument specified in options-section missing" + (" --" + v1.value3));
                                  };
                                  if (!$210) {
                                      return v1.value2(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Long(v1.value3), v2.value0.value1, v1.value5));
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 132, column 18 - line 135, column 77: " + [ $210.constructor.name ]);
                              })())(function (v3) {
                                  return Control_Bind.bind(Data_Either.bindEither)(guardArgNames(v3.value1.value0)(v2.value0.value1.value0.value0))(function () {
                                      return v1.value1(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Long(v1.value3), Data_Maybe.Just.create(new Neodoc_Data_OptionArgument.OptionArgument(v3.value1.value0, v3.value1.value1)), v3.value0));
                                  });
                              })(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(!v1.value5))(function () {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(v1.value0)(function (v3) {
                                      if (v3 instanceof Neodoc_Data_Layout.Elem && v3.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                          return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.value0.value1, new Data_Tuple.Tuple(v3.value0.value0, false)));
                                      };
                                      if (v3 instanceof Neodoc_Data_Layout.Elem && v3.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                          return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.value0.value1, new Data_Tuple.Tuple(v3.value0.value0, false)));
                                      };
                                      if (v3 instanceof Neodoc_Data_Layout.Group && (v3.value2.value0.value1 instanceof Data_List_Types.Nil && v3.value2.value1 instanceof Data_List_Types.Nil)) {
                                          if (v3.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v3.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                              return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.value1 || v3.value2.value0.value0.value0.value1, new Data_Tuple.Tuple(v3.value2.value0.value0.value0.value0, v3.value0)));
                                          };
                                          if (v3.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v3.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                              return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.value1 || v3.value2.value0.value0.value0.value1, new Data_Tuple.Tuple(v3.value2.value0.value0.value0.value0, v3.value0)));
                                          };
                                          return Data_Maybe.Nothing.value;
                                      };
                                      return Data_Maybe.Nothing.value;
                                  });
                              }));
                          };
                          return v1.value2(new Neodoc_Data_SolvedLayout.Option(new Neodoc_OptionAlias.Long(v1.value3), Data_Maybe.Nothing.value, v1.value5));
                      };
                      throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 121, column 7 - line 154, column 71: " + [ v1.value4.constructor.name ]);
                  });
              };
              var mAdjArg = Control_Bind.bind(Data_Maybe.bindMaybe)(mAdjLayout)(function (v1) {
                  if (v1 instanceof Neodoc_Data_Layout.Group) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v1 instanceof Neodoc_Data_Layout.Elem) {
                      return new Data_Maybe.Just(v1.value0);
                  };
                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 93, column 37 - line 95, column 44: " + [ v1.constructor.name ]);
              });
              var _slurp = function (xs) {
                  return new Data_Either.Right(new Data_Tuple.Tuple(xs, Data_Maybe.Nothing.value));
              };
              var _return = function (xs) {
                  return new Data_Either.Right(new Data_Tuple.Tuple(xs, mAdjLayout));
              };
              if (layout instanceof Neodoc_Data_Layout.Group) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Neodoc_Data_Layout.Group.create(layout.value0)(layout.value1))(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(Data_Either.applicativeEither)(preSolveBranch)(layout.value2)))(function (v1) {
                      return _return(Data_NonEmpty.singleton(Data_List_Types.plusList)(v1));
                  });
              };
              if (layout instanceof Neodoc_Data_Layout.Elem) {
                  var slurp = function (xs) {
                      return _slurp(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_Data_Layout.Elem.create)(xs));
                  };
                  var slurpedM = function (xs) {
                      return slurp(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(SolvedArg.create)(xs));
                  };
                  var slurped = function ($292) {
                      return slurpedM(Data_NonEmpty.singleton(Data_List_Types.plusList)($292));
                  };
                  var returnM = function (xs) {
                      return _return(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_Data_Layout.Elem.create)(xs));
                  };
                  var solvedM = function (xs) {
                      return returnM(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(SolvedArg.create)(xs));
                  };
                  var solved = function ($293) {
                      return solvedM(Data_NonEmpty.singleton(Data_List_Types.plusList)($293));
                  };
                  var $$return = function ($294) {
                      return returnM(Data_NonEmpty.singleton(Data_List_Types.plusList)($294));
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                      return solved(new Neodoc_Data_SolvedLayout.Command(layout.value0.value0, layout.value0.value1));
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                      return solved(new Neodoc_Data_SolvedLayout.Positional(layout.value0.value0, layout.value0.value1));
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.EOA) {
                      return solved(Neodoc_Data_SolvedLayout.EOA.value);
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.Stdin) {
                      return solved(Neodoc_Data_SolvedLayout.Stdin.value);
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.Reference) {
                      return $$return(new ReferenceArg(layout.value0.value0));
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.Option) {
                      return preSolveOption(new Data_Optimize_Uncurried.Args6(mAdjLayout, slurped, solved, layout.value0.value0, layout.value0.value1, layout.value0.value2));
                  };
                  if (layout.value0 instanceof Neodoc_Data_UsageLayout.OptionStack) {
                      return preSolveOptionStack(new Data_Optimize_Uncurried.Args6(mAdjLayout, slurpedM, solvedM, layout.value0.value0, layout.value0.value1, layout.value0.value2));
                  };
                  throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 108, column 14 - line 116, column 79: " + [ layout.value0.constructor.name ]);
              };
              throw new Error("Failed pattern match at Neodoc.Solve.ExpandOptions line 96, column 9 - line 116, column 79: " + [ layout.constructor.name ]);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(v.layouts)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(preSolveBranch)))(function (v1) {
          return new Data_Either.Right(Neodoc_Spec.Spec((function () {
              var $276 = {};
              for (var $277 in v) {
                  if ({}.hasOwnProperty.call(v, $277)) {
                      $276[$277] = v[$277];
                  };
              };
              $276.layouts = v1;
              return $276;
          })()));
      });
  };
  exports["SolvedArg"] = SolvedArg;
  exports["ReferenceArg"] = ReferenceArg;
  exports["expandOptions"] = expandOptions;
  exports["genericPreSolvedLayoutArg"] = genericPreSolvedLayoutArg;
  exports["showPreSolvedLayoutArg"] = showPreSolvedLayoutArg;
})(PS["Neodoc.Solve.ExpandOptions"] = PS["Neodoc.Solve.ExpandOptions"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];        
  var Argv = (function () {
      function Argv() {

      };
      Argv.value = new Argv();
      return Argv;
  })();
  var Environment = (function () {
      function Environment() {

      };
      Environment.value = new Environment();
      return Environment;
  })();
  var Default = (function () {
      function Default() {

      };
      Default.value = new Default();
      return Default;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var weight = function (v) {
      if (v instanceof Argv) {
          return 30000;
      };
      if (v instanceof Environment) {
          return 20000;
      };
      if (v instanceof Default) {
          return 10000;
      };
      if (v instanceof Empty) {
          return 0;
      };
      throw new Error("Failed pattern match at Neodoc.Value.Origin line 31, column 1 - line 32, column 1: " + [ v.constructor.name ]);
  };                                                                     
  var eqOrigin = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Argv && y instanceof Argv) {
              return true;
          };
          if (x instanceof Environment && y instanceof Environment) {
              return true;
          };
          if (x instanceof Default && y instanceof Default) {
              return true;
          };
          if (x instanceof Empty && y instanceof Empty) {
              return true;
          };
          return false;
      };
  });
  var ordOrigin = new Data_Ord.Ord(function () {
      return eqOrigin;
  }, function (x) {
      return function (y) {
          if (x instanceof Argv && y instanceof Argv) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Argv) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Argv) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Environment && y instanceof Environment) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Environment) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Environment) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Default && y instanceof Default) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Default) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Default) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Empty && y instanceof Empty) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Neodoc.Value.Origin line 18, column 1 - line 18, column 40: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["Argv"] = Argv;
  exports["Environment"] = Environment;
  exports["Default"] = Default;
  exports["Empty"] = Empty;
  exports["weight"] = weight;
  exports["eqOrigin"] = eqOrigin;
  exports["ordOrigin"] = ordOrigin;
})(PS["Neodoc.Value.Origin"] = PS["Neodoc.Value.Origin"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Value_Origin = PS["Neodoc.Value.Origin"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];        
  var RichValue = function (x) {
      return x;
  };
  var unRichValue = function (v) {
      return v;
  };
  var getOrigin = function (v) {
      return v.origin;
  };                                                                           
  var from = function (o) {
      return function (v) {
          return RichValue({
              value: v, 
              origin: o
          });
      };
  };
  var eqRichValue = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Neodoc_Value_Origin.eqOrigin)(x.origin)(y.origin) && Data_Eq.eq(Neodoc_Value.eqValue)(x.value)(y.value);
      };
  });
  exports["RichValue"] = RichValue;
  exports["from"] = from;
  exports["getOrigin"] = getOrigin;
  exports["unRichValue"] = unRichValue;
  exports["eqRichValue"] = eqRichValue;
})(PS["Neodoc.Value.RichValue"] = PS["Neodoc.Value.RichValue"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Foldable = PS["Data.Foldable"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];
  var Neodoc_ArgParser_KeyValue = PS["Neodoc.ArgParser.KeyValue"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var findDescription = function (v) {
      return function (v1) {
          if (v1 instanceof Neodoc_ArgKey.OptionKey) {
              var matchesAlias = function (v2) {
                  if (v2 instanceof Neodoc_Data_Description.OptionDescription) {
                      return Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v3) {
                          return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(v3)(v1.value0);
                      })(v2.value0);
                  };
                  return false;
              };
              return Data_List.head(Data_List.filter(matchesAlias)(v));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var findArgKeys = function (descriptions) {
      return function (k) {
          var xs = (function () {
              var $15 = findDescription(descriptions)(k);
              if ($15 instanceof Data_Maybe.Just && $15.value0 instanceof Neodoc_Data_Description.OptionDescription) {
                  return new Data_List_Types.Cons(k, Data_NonEmpty_Extra.toList(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_ArgKey.OptionKey.create)($15.value0.value0)));
              };
              return Data_List.singleton(k);
          })();
          return Data_Set.fromFoldable(Data_List_Types.foldableList)(Neodoc_ArgKey.ordArgKey)(xs);
      };
  };
  var annotateLayout = function (dictToArgKey) {
      return function (descriptions) {
          return function (l) {
              return Data_Functor.mapFlipped(Neodoc_Data_Layout.functorLayout)(l)(function (x) {
                  return new Data_Tuple.Tuple(x, findDescription(descriptions)(Neodoc_ArgKey_Class.toArgKey(dictToArgKey)(x)));
              });
          };
      };
  };
  exports["annotateLayout"] = annotateLayout;
  exports["findArgKeys"] = findArgKeys;
  exports["findDescription"] = findDescription;
})(PS["Neodoc.Evaluate.Annotate"] = PS["Neodoc.Evaluate.Annotate"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Map = PS["Data.Map"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_MonadPlus_Partial = PS["Control.MonadPlus.Partial"];
  var Control_Comonad = PS["Control.Comonad"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_Chunk = PS["Neodoc.Data.Chunk"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Neodoc_Data_Indexed = PS["Neodoc.Data.Indexed"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Neodoc_Solve_ExpandOptions = PS["Neodoc.Solve.ExpandOptions"];
  var Neodoc_Evaluate_Annotate = PS["Neodoc.Evaluate.Annotate"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];        
  var canonicalise = function (v) {
      var canonicaliseLayout = function (v1) {
          if (v1 instanceof Neodoc_Data_Layout.Elem) {
              return new Neodoc_Data_Layout.Elem(v1.value0);
          };
          if (v1 instanceof Neodoc_Data_Layout.Group && (!v1.value0 && (v1.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && (v1.value2.value0.value1 instanceof Data_List_Types.Nil && (v1.value2.value1 instanceof Data_List_Types.Nil && (Neodoc_Data_SolvedLayout.isPositional(v1.value2.value0.value0.value0) || (Neodoc_Data_SolvedLayout.isCommand(v1.value2.value0.value0.value0) || Neodoc_Data_SolvedLayout.isOption(v1.value2.value0.value0.value0) && (Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Neodoc_Data_SolvedLayout.isFlag)(v1.value2.value0.value0.value0) && !v1.value1)))))))) {
              return Neodoc_Data_SolvedLayout.setRepeatableOr(v1.value1)(new Neodoc_Data_Layout.Elem(v1.value2.value0.value0.value0));
          };
          if (v1 instanceof Neodoc_Data_Layout.Group && (v1.value2.value0.value0 instanceof Neodoc_Data_Layout.Group && (v1.value2.value0.value1 instanceof Data_List_Types.Nil && v1.value2.value1 instanceof Data_List_Types.Nil))) {
              return canonicaliseLayout(new Neodoc_Data_Layout.Group(v1.value0 || v1.value2.value0.value0.value0, v1.value1 || v1.value2.value0.value0.value1, v1.value2.value0.value0.value2));
          };
          if (v1 instanceof Neodoc_Data_Layout.Group) {
              var branches$prime = Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v1.value2)(function (v2) {
                  if (v2.value1 instanceof Data_List_Types.Nil) {
                      var $27 = canonicaliseLayout(v2.value0);
                      if ($27 instanceof Neodoc_Data_Layout.Group && ($27.value2.value1 instanceof Data_List_Types.Nil && (v1.value0 === $27.value0 && v1.value1 === $27.value1))) {
                          return $27.value2.value0;
                      };
                      return new Data_NonEmpty.NonEmpty($27, Data_List_Types.Nil.value);
                  };
                  return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(canonicaliseLayout)(v2);
              });
              return new Neodoc_Data_Layout.Group(v1.value0, v1.value1, branches$prime);
          };
          throw new Error("Failed pattern match at Neodoc.Solve.Canonicalise line 81, column 3 - line 81, column 39: " + [ v1.constructor.name ]);
      };
      var canonicaliseBranch = function (branch) {
          return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(canonicaliseLayout)(branch);
      };
      var layouts$prime = Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
          return Data_Functor.map(Data_List_Types.functorList)(canonicaliseBranch)(v1);
      })(v.layouts);
      return Control_Applicative.pure(Data_Either.applicativeEither)(Neodoc_Spec.Spec((function () {
          var $38 = {};
          for (var $39 in v) {
              if ({}.hasOwnProperty.call(v, $39)) {
                  $38[$39] = v[$39];
              };
          };
          $38.layouts = layouts$prime;
          return $38;
      })()));
  };
  exports["canonicalise"] = canonicalise;
})(PS["Neodoc.Solve.Canonicalise"] = PS["Neodoc.Solve.Canonicalise"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Map = PS["Data.Map"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_MonadPlus_Partial = PS["Control.MonadPlus.Partial"];
  var Control_Comonad = PS["Control.Comonad"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_Chunk = PS["Neodoc.Data.Chunk"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Neodoc_Data_Indexed = PS["Neodoc.Data.Indexed"];
  var Neodoc_Data_IndexedLayout = PS["Neodoc.Data.IndexedLayout"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Neodoc_Solve_ExpandOptions = PS["Neodoc.Solve.ExpandOptions"];
  var Neodoc_Evaluate_Annotate = PS["Neodoc.Evaluate.Annotate"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Applicative = PS["Control.Applicative"];        
  var partition = function (xs) {
      return Data_Functor.mapFlipped(Data_List_Types.functorList)(xs)(function (v) {
          if (v.value1 instanceof Neodoc_Solve_ExpandOptions.SolvedArg) {
              return new Data_Either.Left(v.value1.value0);
          };
          if (v.value1 instanceof Neodoc_Solve_ExpandOptions.ReferenceArg) {
              return Data_Either.Right.create(new Neodoc_Data_Indexed.Indexed(v.value0, v.value1.value0));
          };
          throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 188, column 23 - line 190, column 54: " + [ v.constructor.name ]);
      });
  };
  var expandChunk = function (v) {
      return function (v1) {
          if (v1 instanceof Neodoc_Data_Chunk.Fixed) {
              return Data_List_Types.Nil.value;
          };
          if (v1 instanceof Neodoc_Data_Chunk.Free) {
              var partitioned = partition(v1.value0);
              var references = Control_MonadPlus_Partial.mrights(Data_List_Types.monadPlusList)(partitioned);
              var surrounding = Data_Functor.map(Data_List_Types.functorList)(Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg))(Control_MonadPlus_Partial.mlefts(Data_List_Types.monadPlusList)(partitioned));
              var isSurroundedBy = function (k) {
                  return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v2) {
                      return Data_Eq.eq(Neodoc_ArgKey.eqArgKey)(v2)(k);
                  })(surrounding);
              };
              return Data_Functor.mapFlipped(Data_List_Types.functorList)(references)(function (v2) {
                  var args = Data_List.catMaybes(Data_Functor.mapFlipped(Data_List_Types.functorList)(v)(function (v3) {
                      if (v3 instanceof Neodoc_Data_Description.OptionDescription) {
                          var $26 = !Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($66) {
                              return isSurroundedBy(Neodoc_ArgKey_Class.toArgKey(Neodoc_ArgKey_Class.toArgKeyOptionAlias)($66));
                          })(v3.value0);
                          if ($26) {
                              return new Data_Maybe.Just(new Neodoc_Data_SolvedLayout.Option(v3.value0.value0, v3.value2, v3.value1));
                          };
                          if (!$26) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 178, column 15 - line 180, column 29: " + [ $26.constructor.name ]);
                      };
                      return Data_Maybe.Nothing.value;
                  }));
                  return new Neodoc_Data_Indexed.Indexed(v2.value0, args);
              });
          };
          throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 159, column 1 - line 159, column 30: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var chunkBranch = function ($67) {
      return Neodoc_Data_Chunk.chunk(function (v) {
          if (v.value1 instanceof Neodoc_Solve_ExpandOptions.ReferenceArg) {
              return true;
          };
          if (v.value1 instanceof Neodoc_Solve_ExpandOptions.SolvedArg) {
              return Neodoc_Data_SolvedLayout.isFreeLayout(new Neodoc_Data_Layout.Elem(v.value1.value0));
          };
          throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 197, column 38 - line 199, column 60: " + [ v.constructor.name ]);
      })(Data_List.fromFoldable(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))($67));
  };
  var expandReferences = function (v) {
      var expandReferencesInBranch = function (branch) {
          var indexedBranch = Neodoc_Data_LayoutConversion.indexBranch(branch);
          var flatBranch = Neodoc_Data_LayoutConversion.flattenBranch(indexedBranch);
          var chunks = chunkBranch(flatBranch);
          var indexToArgs = Neodoc_Data_Indexed.toMap(Data_List.concat(Data_List.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(expandChunk(v.descriptions))(chunks))));
          var expand = function (v1) {
              if (v1 instanceof Neodoc_Data_EmptyableLayout.EmptyableGroup) {
                  return Data_List.singleton(new Neodoc_Data_EmptyableLayout.EmptyableGroup(v1.value0, v1.value1, Data_Functor.map(Data_List_Types.functorList)(function ($68) {
                      return Data_List.concat((function (v2) {
                          return Data_Functor.map(Data_List_Types.functorList)(expand)(v2);
                      })($68));
                  })(v1.value2)));
              };
              if (v1 instanceof Neodoc_Data_EmptyableLayout.EmptyableElem && v1.value0.value1 instanceof Neodoc_Solve_ExpandOptions.SolvedArg) {
                  return Data_List.singleton(new Neodoc_Data_EmptyableLayout.EmptyableElem(v1.value0.value1.value0));
              };
              if (v1 instanceof Neodoc_Data_EmptyableLayout.EmptyableElem && v1.value0.value1 instanceof Neodoc_Solve_ExpandOptions.ReferenceArg) {
                  return Data_Maybe.fromMaybe(Data_List_Types.Nil.value)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map.lookup(Data_Ord.ordInt)(v1.value0.value0)(indexToArgs))(function (v2) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.mapFlipped(Data_List_Types.functorList)(v2)(function (arg) {
                          return new Neodoc_Data_EmptyableLayout.EmptyableGroup(true, false, new Data_List_Types.Cons(new Data_List_Types.Cons(new Neodoc_Data_EmptyableLayout.EmptyableElem(arg), Data_List_Types.Nil.value), Data_List_Types.Nil.value));
                      }));
                  }));
              };
              throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 141, column 18 - line 151, column 72: " + [ v1.constructor.name ]);
          };
          return Neodoc_Data_LayoutConversion.toStrictBranch(Data_List.concat(Data_Functor.mapFlipped(Data_List_Types.functorList)(Neodoc_Data_LayoutConversion.toEmptyableBranch(indexedBranch))(expand)));
      };
      var layouts$prime = (function (v1) {
          return Data_Functor.map(Data_List_Types.functorList)(Data_List.catMaybes)(v1);
      })(Data_NonEmpty_Extra.toList(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
          return Data_Functor.map(Data_List_Types.functorList)(expandReferencesInBranch)(v1);
      })(v.layouts)));
      var layouts$prime$prime = (function () {
          if (layouts$prime instanceof Data_List_Types.Nil) {
              return new Data_NonEmpty.NonEmpty(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
          };
          if (layouts$prime instanceof Data_List_Types.Cons) {
              return new Data_NonEmpty.NonEmpty(layouts$prime.value0, layouts$prime.value1);
          };
          throw new Error("Failed pattern match at Neodoc.Solve.ExpandReferences line 108, column 19 - line 110, column 40: " + [ layouts$prime.constructor.name ]);
      })();
      return Control_Applicative.pure(Data_Either.applicativeEither)(Neodoc_Spec.Spec((function () {
          var $61 = {};
          for (var $62 in v) {
              if ({}.hasOwnProperty.call(v, $62)) {
                  $61[$62] = v[$62];
              };
          };
          $61.layouts = layouts$prime$prime;
          return $61;
      })()));
  };
  exports["chunkBranch"] = chunkBranch;
  exports["expandChunk"] = expandChunk;
  exports["expandReferences"] = expandReferences;
  exports["partition"] = partition;
})(PS["Neodoc.Solve.ExpandReferences"] = PS["Neodoc.Solve.ExpandReferences"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_List = PS["Data.List"];
  var Data_Array = PS["Data.Array"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Either = PS["Data.Either"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Neodoc_Solve_ExpandOptions = PS["Neodoc.Solve.ExpandOptions"];
  var Neodoc_Solve_Traverse = PS["Neodoc.Solve.Traverse"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];        
  var smartOptions = function (v) {
      var smartOptionsOnBranch = function (descriptions1) {
          return function (branch) {
              var findDescriptions = function (a) {
                  var isMatch = function (v1) {
                      if (v1 instanceof Neodoc_Data_Description.OptionDescription) {
                          return Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v2) {
                              return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(v2)(a);
                          })(v1.value0);
                      };
                      return false;
                  };
                  return Data_List.filter(isMatch)(descriptions1);
              };
              var go = function (v1) {
                  if (v1 instanceof Neodoc_Data_Layout.Group) {
                      return Neodoc_Data_Layout.Group.create(v1.value0)(v1.value1)(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v1.value2)(function (v2) {
                          if (v2.value1 instanceof Data_List_Types.Cons && v2.value1.value1 instanceof Data_List_Types.Nil) {
                              return Data_Maybe.fromMaybe(v2)(Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
                                  if (v2.value1.value0 instanceof Neodoc_Data_Layout.Group && (v2.value1.value0.value2.value0.value1 instanceof Data_List_Types.Nil && v2.value1.value0.value2.value1 instanceof Data_List_Types.Nil)) {
                                      if (v2.value1.value0.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v2.value1.value0.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Neodoc_Data_OptionArgument.OptionArgument(v2.value1.value0.value2.value0.value0.value0.value0, v2.value1.value0.value0), v2.value1.value0.value2.value0.value0.value0.value1 || v2.value1.value0.value1));
                                      };
                                      if (v2.value1.value0.value2.value0.value0 instanceof Neodoc_Data_Layout.Elem && v2.value1.value0.value2.value0.value0.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Neodoc_Data_OptionArgument.OptionArgument(v2.value1.value0.value2.value0.value0.value0.value0, v2.value1.value0.value0), v2.value1.value0.value2.value0.value0.value0.value1 || v2.value1.value0.value1));
                                      };
                                      return Data_Maybe.Nothing.value;
                                  };
                                  if (v2.value1.value0 instanceof Neodoc_Data_Layout.Elem && v2.value1.value0.value0 instanceof Neodoc_Data_UsageLayout.Command) {
                                      return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Neodoc_Data_OptionArgument.OptionArgument(v2.value1.value0.value0.value0, false), v2.value1.value0.value0.value1));
                                  };
                                  if (v2.value1.value0 instanceof Neodoc_Data_Layout.Elem && v2.value1.value0.value0 instanceof Neodoc_Data_UsageLayout.Positional) {
                                      return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Neodoc_Data_OptionArgument.OptionArgument(v2.value1.value0.value0.value0, false), v2.value1.value0.value0.value1));
                                  };
                                  return Data_Maybe.Nothing.value;
                              })())(function (v3) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
                                      if (v2.value0 instanceof Neodoc_Data_Layout.Elem && (v2.value0.value0 instanceof Neodoc_Data_UsageLayout.Option && v2.value0.value0.value1 instanceof Data_Maybe.Nothing)) {
                                          var hasDescription = !Data_List["null"](findDescriptions(new Neodoc_OptionAlias.Long(v2.value0.value0.value0)));
                                          if (hasDescription) {
                                              return Data_Maybe.Nothing.value;
                                          };
                                          if (!hasDescription) {
                                              return Data_Maybe.Just.create(new Neodoc_Data_UsageLayout.Option(v2.value0.value0.value0, new Data_Maybe.Just(v3.value0), v2.value0.value0.value2 || v3.value1));
                                          };
                                          throw new Error("Failed pattern match at Neodoc.Solve.SmartOptions line 74, column 17 - line 76, column 60: " + [ hasDescription.constructor.name ]);
                                      };
                                      if (v2.value0 instanceof Neodoc_Data_Layout.Elem && (v2.value0.value0 instanceof Neodoc_Data_UsageLayout.OptionStack && v2.value0.value0.value1 instanceof Data_Maybe.Nothing)) {
                                          var h = (function () {
                                              var $46 = new Data_Tuple.Tuple(Data_Array.last(v2.value0.value0.value0.value1), Data_Array.init(v2.value0.value0.value0.value1));
                                              if ($46.value0 instanceof Data_Maybe.Just && $46.value1 instanceof Data_Maybe.Just) {
                                                  return $46.value0.value0;
                                              };
                                              return v2.value0.value0.value0.value0;
                                          })();
                                          var hasDescription = !Data_List["null"](findDescriptions(new Neodoc_OptionAlias.Short(h)));
                                          if (hasDescription) {
                                              return Data_Maybe.Nothing.value;
                                          };
                                          if (!hasDescription) {
                                              return Data_Maybe.Just.create(new Neodoc_Data_UsageLayout.OptionStack(new Data_NonEmpty.NonEmpty(v2.value0.value0.value0.value0, v2.value0.value0.value0.value1), new Data_Maybe.Just(v3.value0), v2.value0.value0.value2 || v3.value1));
                                          };
                                          throw new Error("Failed pattern match at Neodoc.Solve.SmartOptions line 87, column 17 - line 89, column 73: " + [ hasDescription.constructor.name ]);
                                      };
                                      return Data_Maybe.Nothing.value;
                                  })())(function (v4) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_NonEmpty.NonEmpty(new Neodoc_Data_Layout.Elem(v4), Data_List_Types.Nil.value));
                                  });
                              }));
                          };
                          return v2;
                      }));
                  };
                  return v1;
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(go)(branch));
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(v.layouts)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(smartOptionsOnBranch(v.descriptions))))(function (v1) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Neodoc_Spec.Spec((function () {
              var $69 = {};
              for (var $70 in v) {
                  if ({}.hasOwnProperty.call(v, $70)) {
                      $69[$70] = v[$70];
                  };
              };
              $69.layouts = v1;
              return $69;
          })()));
      });
  };
  exports["smartOptions"] = smartOptions;
})(PS["Neodoc.Solve.SmartOptions"] = PS["Neodoc.Solve.SmartOptions"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Debug_Profile = PS["Debug.Profile"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Data_List = PS["Data.List"];
  var Neodoc_Solve_Canonicalise = PS["Neodoc.Solve.Canonicalise"];
  var Neodoc_Solve_ExpandOptions = PS["Neodoc.Solve.ExpandOptions"];
  var Neodoc_Solve_ExpandReferences = PS["Neodoc.Solve.ExpandReferences"];
  var Neodoc_Solve_SmartOptions = PS["Neodoc.Solve.SmartOptions"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];        
  var solve$prime = function (v) {
      return function (usageTs) {
          return function (solvedTs) {
              return Control_Bind.composeKleisli(Data_Either.bindEither)((function () {
                  if (v.smartOptions) {
                      return Neodoc_Solve_SmartOptions.smartOptions;
                  };
                  if (!v.smartOptions) {
                      return Control_Applicative.pure(Data_Either.applicativeEither);
                  };
                  throw new Error("Failed pattern match at Neodoc.Solve line 35, column 8 - line 35, column 57: " + [ v.smartOptions.constructor.name ]);
              })())(Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Data_List.foldM(Data_Either.monadEither)(Data_Function.applyFlipped))(usageTs))(Control_Bind.composeKleisli(Data_Either.bindEither)(Neodoc_Solve_ExpandOptions.expandOptions)(Control_Bind.composeKleisli(Data_Either.bindEither)(Neodoc_Solve_ExpandReferences.expandReferences)(Control_Bind.composeKleisli(Data_Either.bindEither)(Neodoc_Solve_Canonicalise.canonicalise)(Data_Function.flip(Data_List.foldM(Data_Either.monadEither)(Data_Function.applyFlipped))(solvedTs))))));
          };
      };
  };
  var solve = function (opts) {
      return solve$prime(opts)(Data_List_Types.Nil.value)(Data_List_Types.Nil.value);
  };
  exports["solve"] = solve;
  exports["solve'"] = solve$prime;
})(PS["Neodoc.Solve"] = PS["Neodoc.Solve"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Control_Alt = PS["Control.Alt"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];        
  var toEmptyableSpec = function (v) {
      var layouts = Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
          return Data_Functor.map(Data_List_Types.functorList)(function (v2) {
              return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_Data_LayoutConversion.toEmptyableLayout)(v2);
          })(v1);
      })(v.layouts);
      return Neodoc_Spec.Spec((function () {
          var $7 = {};
          for (var $8 in v) {
              if ({}.hasOwnProperty.call(v, $8)) {
                  $7[$8] = v[$8];
              };
          };
          $7.layouts = layouts;
          return $7;
      })());
  };
  var fromEmptyableSpec = function (v) {
      var layouts$prime = Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v.layouts)(function (branches) {
          return Data_List.catMaybes(Data_Functor.mapFlipped(Data_List_Types.functorList)(branches)(function (branch) {
              return Data_NonEmpty_Extra.fromList(Data_List.catMaybes(Data_NonEmpty_Extra.toList(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_Data_LayoutConversion.toStrictLayout)(branch))));
          }));
      });
      var $11 = {};
      for (var $12 in v) {
          if ({}.hasOwnProperty.call(v, $12)) {
              $11[$12] = v[$12];
          };
      };
      $11.layouts = layouts$prime;
      return $11;
  };
  exports["fromEmptyableSpec"] = fromEmptyableSpec;
  exports["toEmptyableSpec"] = toEmptyableSpec;
})(PS["Neodoc.SpecConversions"] = PS["Neodoc.SpecConversions"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_List = PS["Data.List"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Solve = PS["Neodoc.Solve"];
  var Neodoc_SpecConversions = PS["Neodoc.SpecConversions"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Show = PS["Data.Show"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];        
  var NeodocOptions = function (x) {
      return x;
  };
  var defaultOptionsObj = {
      argv: Data_Maybe.Nothing.value, 
      env: Data_Maybe.Nothing.value, 
      optionsFirst: false, 
      dontExit: false, 
      smartOptions: false, 
      stopAt: [  ], 
      requireFlags: false, 
      laxPlacement: false, 
      version: Data_Maybe.Nothing.value, 
      versionFlags: [ new Neodoc_OptionAlias.Long("version") ], 
      helpFlags: [ new Neodoc_OptionAlias.Short("h"), new Neodoc_OptionAlias.Long("help") ], 
      transforms: {
          presolve: new Data_Either.Right([  ]), 
          postsolve: new Data_Either.Right([  ])
      }, 
      repeatableOptions: false, 
      allowUnknown: false
  };
  var isForeign = new Data_Foreign_Class.IsForeign(function (v) {
      var readTransforms = function (v1) {
          var readPresolveTransforms = function (v2) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.foreignIsForeign))(Data_Foreign_Index.indexString)("presolve")([  ])(v2))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Either.Left.create(Data_Functor.mapFlipped(Data_Functor.functorArray)(v3)(function (fn) {
                      return function (v4) {
                          var spec$prime = Unsafe_Coerce.unsafeCoerce(fn)(Data_Foreign_Class.write(Neodoc_Spec.asForeignOptionAlias(Neodoc_Data_EmptyableLayout.asForeignEmptyableLayout(Neodoc_Data_UsageLayout.asForeignUsageLayoutArg)))(Neodoc_SpecConversions.toEmptyableSpec(v4)));
                          var $25 = Data_Functor.map(Data_Either.functorEither)(Neodoc_SpecConversions.fromEmptyableSpec)(Control_Monad_Except.runExcept(Data_Foreign_Class.read(Neodoc_Spec.isForeignOptionAlias(Neodoc_Data_EmptyableLayout.isForeignEmptyableLayout(Neodoc_Data_UsageLayout.isForeignUsageLayoutArg)))(spec$prime)));
                          if ($25 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))($25.value0)));
                          };
                          if ($25 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($25.value0);
                          };
                          throw new Error("Failed pattern match at Neodoc.Options line 140, column 17 - line 142, column 36: " + [ $25.constructor.name ]);
                      };
                  })));
              });
          };
          var readPostsolveTransforms = function (v2) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.foreignIsForeign))(Data_Foreign_Index.indexString)("postsolve")([  ])(v2))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Either.Left.create(Data_Functor.mapFlipped(Data_Functor.functorArray)(v3)(function (fn) {
                      return function (v4) {
                          var spec$prime = Unsafe_Coerce.unsafeCoerce(fn)(Data_Foreign_Class.write(Neodoc_Spec.asForeignOptionAlias(Neodoc_Data_EmptyableLayout.asForeignEmptyableLayout(Neodoc_Data_SolvedLayout.asForeignSolvedLayoutArg)))(Neodoc_SpecConversions.toEmptyableSpec(v4)));
                          var $30 = Data_Functor.map(Data_Either.functorEither)(Neodoc_SpecConversions.fromEmptyableSpec)(Control_Monad_Except.runExcept(Data_Foreign_Class.read(Neodoc_Spec.isForeignOptionAlias(Neodoc_Data_EmptyableLayout.isForeignEmptyableLayout(Neodoc_Data_SolvedLayout.isForeignSolvedLayoutArg)))(spec$prime)));
                          if ($30 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))($30.value0)));
                          };
                          if ($30 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($30.value0);
                          };
                          throw new Error("Failed pattern match at Neodoc.Options line 149, column 17 - line 151, column 36: " + [ $30.constructor.name ]);
                      };
                  })));
              });
          };
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.foreignIsForeign)(Data_Foreign_Index.indexString)("transforms")(Data_Foreign.toForeign({}))(v1))(function (v2) {
              return Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function (v3) {
                  return function (v4) {
                      return {
                          presolve: v3, 
                          postsolve: v4
                      };
                  };
              })(readPresolveTransforms(v2)))(readPostsolveTransforms(v2));
          });
      };
      var readEnv = function (v1) {
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function (v2) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_Env.unwrapEnv)(v2);
          })(Data_Foreign_Extra.readPropMaybe(Neodoc_Env.isForeignEnvWrapper)(Data_Foreign_Index.indexString)("env")(v1));
      };
      var readArgv = Data_Foreign_Extra.readPropMaybe(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.stringIsForeign))(Data_Foreign_Index.indexString)("argv");
      var readVersion = Data_Foreign_Extra.readPropMaybe(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("version");
      var _readBool = function (k) {
          return function (d) {
              return function (v1) {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Foreign_Extra.isTruthy)(Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Extra.isForeignTruthy)(Data_Foreign_Index.indexString)(k)(Data_Foreign_Extra.truthy(d))(v1));
              };
          };
      };
      var readAllowUnknown = _readBool("allowUnknown")(defaultOptionsObj.allowUnknown);
      var readDontExit = _readBool("dontExit")(defaultOptionsObj.dontExit);
      var readLaxPlacement = _readBool("laxPlacement")(defaultOptionsObj.laxPlacement);
      var readOptionsFirst = _readBool("optionsFirst")(defaultOptionsObj.optionsFirst);
      var readRepeatOptions = _readBool("repeatableOptions")(defaultOptionsObj.repeatableOptions);
      var readRequireFlags = _readBool("requireFlags")(defaultOptionsObj.requireFlags);
      var readSmartOptions = _readBool("smartOptions")(defaultOptionsObj.smartOptions);
      var readHelpFlags = Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.arrayIsForeign(Neodoc_OptionAlias.isForeignOptionAlias))(Data_Foreign_Index.indexString)("helpFlags")(defaultOptionsObj.helpFlags);
      var readStopAt = Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.stringIsForeign))(Data_Foreign_Index.indexString)("stopAt")(defaultOptionsObj.stopAt);
      var readVersionFlags = Data_Foreign_Extra.defaultIfUndefined(Data_Foreign_Class.arrayIsForeign(Neodoc_OptionAlias.isForeignOptionAlias))(Data_Foreign_Index.indexString)("versionFlags")(defaultOptionsObj.versionFlags);
      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(NeodocOptions)(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      return function (v5) {
                          return function (v6) {
                              return function (v7) {
                                  return function (v8) {
                                      return function (v9) {
                                          return function (v10) {
                                              return function (v11) {
                                                  return function (v12) {
                                                      return function (v13) {
                                                          return function (v14) {
                                                              return {
                                                                  argv: v1, 
                                                                  env: v2, 
                                                                  optionsFirst: v3, 
                                                                  dontExit: v4, 
                                                                  smartOptions: v5, 
                                                                  stopAt: v6, 
                                                                  requireFlags: v7, 
                                                                  laxPlacement: v8, 
                                                                  version: v9, 
                                                                  versionFlags: v10, 
                                                                  helpFlags: v11, 
                                                                  transforms: v12, 
                                                                  repeatableOptions: v13, 
                                                                  allowUnknown: v14
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      })(readArgv(v)))(readEnv(v)))(readOptionsFirst(v)))(readDontExit(v)))(readSmartOptions(v)))(readStopAt(v)))(readRequireFlags(v)))(readLaxPlacement(v)))(readVersion(v)))(readVersionFlags(v)))(readHelpFlags(v)))(readTransforms(v)))(readRepeatOptions(v)))(readAllowUnknown(v)));
  });
  exports["NeodocOptions"] = NeodocOptions;
  exports["defaultOptionsObj"] = defaultOptionsObj;
  exports["isForeign"] = isForeign;
})(PS["Neodoc.Options"] = PS["Neodoc.Options"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Error = PS["Neodoc.Error"];
  var Neodoc_Error_Class = PS["Neodoc.Error.Class"];        
  var ScanError = function (x) {
      return x;
  };
  var toNeodocErrorScanError = new Neodoc_Error_Class.ToNeodocError(function (v) {
      return new Neodoc_Error.ScanError(v);
  });
  exports["ScanError"] = ScanError;
  exports["toNeodocErrorScanError"] = toNeodocErrorScanError;
})(PS["Neodoc.Scanner.Error"] = PS["Neodoc.Scanner.Error"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_List = PS["Data.List"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_String = PS["Data.String"];
  var Data_String_Yarn = PS["Data.String.Yarn"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_String_Regex_AnsiRegex = PS["Data.String.Regex.AnsiRegex"];
  var Neodoc_Scanner_Error = PS["Neodoc.Scanner.Error"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];        
  var section = function (name) {
      return Data_Either.fromRight()(Data_String_Regex.regex("^([^\x0a]*" + (name + "[^\x0a]*:(?:.*$)\x0a?(?:(?:[ \x09].*)?(?:\x0a|$))*)"))(Data_String_Regex.parseFlags("gmi")));
  };
  var fixSection = (function () {
      var to = function (c) {
          return Data_Function.flip(Data_String_Regex["replace'"])(function (m) {
              return function (v) {
                  return Data_Maybe.maybe("")(Data_String_Yarn.replicate(Data_String.length(m)))(c);
              };
          });
      };
      var removeEscapes = to(new Data_Maybe.Just(" "))(Data_String_Regex_AnsiRegex.regex);
      var fixHeaders = to(new Data_Maybe.Just(" "))(Data_Either.fromRight()(Data_String_Regex.regex("(^[^:]+:)")(Data_String_Regex_Flags.noFlags)));
      return function ($9) {
          return fixHeaders(removeEscapes($9));
      };
  })();
  var scan = function (text) {
      var sections = function (n) {
          return Data_Maybe.maybe(Data_List_Types.Nil.value)(function ($10) {
              return Data_List.catMaybes(Data_List.fromFoldable(Data_Foldable.foldableArray)($10));
          })(Data_String_Regex.match(section(n))(text));
      };
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Scanner_Error.ScanError)(Control_Bind.bind(Data_Either.bindEither)((function () {
          var $5 = sections("usage");
          if ($5 instanceof Data_List_Types.Nil) {
              return new Data_Either.Left("No usage section found!");
          };
          if ($5 instanceof Data_List_Types.Cons && $5.value1 instanceof Data_List_Types.Nil) {
              return Control_Applicative.pure(Data_Either.applicativeEither)($5.value0);
          };
          return new Data_Either.Left("Multiple usage sections found!");
      })())(function (v) {
          return Control_Applicative.pure(Data_Either.applicativeEither)({
              usage: fixSection(v), 
              options: Data_Functor.map(Data_List_Types.functorList)(fixSection)(sections("options")), 
              originalUsage: Data_String.trim(v)
          });
      }));
  };
  exports["scan"] = scan;
})(PS["Neodoc.Scanner"] = PS["Neodoc.Scanner"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Error = PS["Neodoc.Error"];
  var Neodoc_Error_Class = PS["Neodoc.Error.Class"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];        
  var SpecParseError = function (x) {
      return x;
  };
  var toNeodocErrorSpecParseError = new Neodoc_Error_Class.ToNeodocError(function (v) {
      return new Neodoc_Error.SpecParseError(v);
  });
  exports["SpecParseError"] = SpecParseError;
  exports["toNeodocErrorSpecParseError"] = toNeodocErrorSpecParseError;
})(PS["Neodoc.Spec.Error"] = PS["Neodoc.Spec.Error"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Array = PS["Data.Array"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];        
  var LParen = (function () {
      function LParen() {

      };
      LParen.value = new LParen();
      return LParen;
  })();
  var RParen = (function () {
      function RParen() {

      };
      RParen.value = new RParen();
      return RParen;
  })();
  var LSquare = (function () {
      function LSquare() {

      };
      LSquare.value = new LSquare();
      return LSquare;
  })();
  var RSquare = (function () {
      function RSquare() {

      };
      RSquare.value = new RSquare();
      return RSquare;
  })();
  var Dash = (function () {
      function Dash() {

      };
      Dash.value = new Dash();
      return Dash;
  })();
  var VBar = (function () {
      function VBar() {

      };
      VBar.value = new VBar();
      return VBar;
  })();
  var Colon = (function () {
      function Colon() {

      };
      Colon.value = new Colon();
      return Colon;
  })();
  var Comma = (function () {
      function Comma() {

      };
      Comma.value = new Comma();
      return Comma;
  })();
  var Newline = (function () {
      function Newline() {

      };
      Newline.value = new Newline();
      return Newline;
  })();
  var TripleDot = (function () {
      function TripleDot() {

      };
      TripleDot.value = new TripleDot();
      return TripleDot;
  })();
  var Reference = (function () {
      function Reference(value0) {
          this.value0 = value0;
      };
      Reference.create = function (value0) {
          return new Reference(value0);
      };
      return Reference;
  })();
  var LOpt = (function () {
      function LOpt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LOpt.create = function (value0) {
          return function (value1) {
              return new LOpt(value0, value1);
          };
      };
      return LOpt;
  })();
  var SOpt = (function () {
      function SOpt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SOpt.create = function (value0) {
          return function (value1) {
              return new SOpt(value0, value1);
          };
      };
      return SOpt;
  })();
  var Tag = (function () {
      function Tag(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tag.create = function (value0) {
          return function (value1) {
              return new Tag(value0, value1);
          };
      };
      return Tag;
  })();
  var Name = (function () {
      function Name(value0) {
          this.value0 = value0;
      };
      Name.create = function (value0) {
          return new Name(value0);
      };
      return Name;
  })();
  var ShoutName = (function () {
      function ShoutName(value0) {
          this.value0 = value0;
      };
      ShoutName.create = function (value0) {
          return new ShoutName(value0);
      };
      return ShoutName;
  })();
  var AngleName = (function () {
      function AngleName(value0) {
          this.value0 = value0;
      };
      AngleName.create = function (value0) {
          return new AngleName(value0);
      };
      return AngleName;
  })();
  var Garbage = (function () {
      function Garbage(value0) {
          this.value0 = value0;
      };
      Garbage.create = function (value0) {
          return new Garbage(value0);
      };
      return Garbage;
  })();
  var DoubleDash = (function () {
      function DoubleDash() {

      };
      DoubleDash.value = new DoubleDash();
      return DoubleDash;
  })();
  var PositionedToken = (function () {
      function PositionedToken(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PositionedToken.create = function (value0) {
          return function (value1) {
              return new PositionedToken(value0, value1);
          };
      };
      return PositionedToken;
  })();
  var prettyToken = new Data_Pretty.Pretty(function (v) {
      if (v instanceof LParen) {
          return Data_Show.show(Data_Show.showChar)("(");
      };
      if (v instanceof RParen) {
          return Data_Show.show(Data_Show.showChar)(")");
      };
      if (v instanceof LSquare) {
          return Data_Show.show(Data_Show.showChar)("[");
      };
      if (v instanceof RSquare) {
          return Data_Show.show(Data_Show.showChar)("]");
      };
      if (v instanceof Dash) {
          return Data_Show.show(Data_Show.showChar)("-");
      };
      if (v instanceof VBar) {
          return Data_Show.show(Data_Show.showChar)("|");
      };
      if (v instanceof Newline) {
          return Data_Show.show(Data_Show.showChar)("\x0a");
      };
      if (v instanceof Colon) {
          return Data_Show.show(Data_Show.showChar)(":");
      };
      if (v instanceof Comma) {
          return Data_Show.show(Data_Show.showChar)(",");
      };
      if (v instanceof TripleDot) {
          return "...";
      };
      if (v instanceof DoubleDash) {
          return "--";
      };
      if (v instanceof Reference) {
          return "Reference " + Data_Show.show(Data_Show.showString)(v.value0);
      };
      if (v instanceof Garbage) {
          return "Garbage " + Data_Show.show(Data_Show.showChar)(v.value0);
      };
      if (v instanceof Tag) {
          return "Tag " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + Data_Show.show(Data_Show.showString)(v.value1)));
      };
      if (v instanceof Name) {
          return "Name " + Data_Show.show(Data_Show.showString)(v.value0);
      };
      if (v instanceof ShoutName) {
          return "ShoutName " + Data_Show.show(Data_Show.showString)(v.value0);
      };
      if (v instanceof AngleName) {
          return "AngleName " + Data_Show.show(Data_Show.showString)(v.value0);
      };
      if (v instanceof LOpt) {
          var arg$prime = Data_Maybe.fromMaybe("")(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.value1)(function (a) {
              if (a.optional) {
                  return "[";
              };
              if (!a.optional) {
                  return "" + (a.name + (function () {
                      if (a.optional) {
                          return "]";
                      };
                      if (!a.optional) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Token line 77, column 26 - line 78, column 3: " + [ a.optional.constructor.name ]);
                  })());
              };
              throw new Error("Failed pattern match at Neodoc.Spec.Token line 75, column 21 - line 78, column 3: " + [ a.optional.constructor.name ]);
          }));
          return "--" + (v.value0 + arg$prime);
      };
      if (v instanceof SOpt) {
          var n = Data_String.fromCharArray(Data_Array.cons(v.value0.value0)(v.value0.value1));
          var arg$prime = Data_Maybe.fromMaybe("")(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.value1)(function (a) {
              if (a.optional) {
                  return "[";
              };
              if (!a.optional) {
                  return "" + (a.name + (function () {
                      if (a.optional) {
                          return "]";
                      };
                      if (!a.optional) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Token line 84, column 26 - line 86, column 1: " + [ a.optional.constructor.name ]);
                  })());
              };
              throw new Error("Failed pattern match at Neodoc.Spec.Token line 82, column 21 - line 86, column 1: " + [ a.optional.constructor.name ]);
          }));
          return "-" + (n + arg$prime);
      };
      throw new Error("Failed pattern match at Neodoc.Spec.Token line 55, column 3 - line 56, column 3: " + [ v.constructor.name ]);
  });
  var eqToken = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LParen && v1 instanceof LParen) {
              return true;
          };
          if (v instanceof RParen && v1 instanceof RParen) {
              return true;
          };
          if (v instanceof LSquare && v1 instanceof LSquare) {
              return true;
          };
          if (v instanceof RSquare && v1 instanceof RSquare) {
              return true;
          };
          if (v instanceof VBar && v1 instanceof VBar) {
              return true;
          };
          if (v instanceof Colon && v1 instanceof Colon) {
              return true;
          };
          if (v instanceof Comma && v1 instanceof Comma) {
              return true;
          };
          if (v instanceof Dash && v1 instanceof Dash) {
              return true;
          };
          if (v instanceof DoubleDash && v1 instanceof DoubleDash) {
              return true;
          };
          if (v instanceof TripleDot && v1 instanceof TripleDot) {
              return true;
          };
          if (v instanceof Newline && v1 instanceof Newline) {
              return true;
          };
          if (v instanceof Reference && v1 instanceof Reference) {
              return v.value0 === v1.value0;
          };
          if (v instanceof LOpt && v1 instanceof LOpt) {
              return v.value0 === v1.value0 && (Data_Maybe.isNothing(v.value1) && Data_Maybe.isNothing(v1.value1) || Data_Maybe.fromMaybe(false)(Control_Bind.bind(Data_Maybe.bindMaybe)(v.value1)(function (v2) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(v1.value1)(function (v3) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v2.name === v3.name && v2.optional === v3.optional);
                  });
              })));
          };
          if (v instanceof SOpt && v1 instanceof SOpt) {
              return v.value0.value0 === v1.value0.value0 && (Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqChar))(v.value0.value1)(v1.value0.value1) && (Data_Maybe.isNothing(v.value1) && Data_Maybe.isNothing(v1.value1) || Data_Maybe.fromMaybe(false)(Control_Bind.bind(Data_Maybe.bindMaybe)(v.value1)(function (v2) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(v1.value1)(function (v3) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v2.name === v3.name && v2.optional === v3.optional);
                  });
              }))));
          };
          if (v instanceof AngleName && v1 instanceof AngleName) {
              return v.value0 === v1.value0;
          };
          if (v instanceof ShoutName && v1 instanceof ShoutName) {
              return v.value0 === v1.value0;
          };
          if (v instanceof Name && v1 instanceof Name) {
              return v.value0 === v1.value0;
          };
          if (v instanceof Garbage && v1 instanceof Garbage) {
              return v.value0 === v1.value0;
          };
          return false;
      };
  });
  exports["PositionedToken"] = PositionedToken;
  exports["LParen"] = LParen;
  exports["RParen"] = RParen;
  exports["LSquare"] = LSquare;
  exports["RSquare"] = RSquare;
  exports["Dash"] = Dash;
  exports["VBar"] = VBar;
  exports["Colon"] = Colon;
  exports["Comma"] = Comma;
  exports["Newline"] = Newline;
  exports["TripleDot"] = TripleDot;
  exports["Reference"] = Reference;
  exports["LOpt"] = LOpt;
  exports["SOpt"] = SOpt;
  exports["Tag"] = Tag;
  exports["Name"] = Name;
  exports["ShoutName"] = ShoutName;
  exports["AngleName"] = AngleName;
  exports["Garbage"] = Garbage;
  exports["DoubleDash"] = DoubleDash;
  exports["prettyToken"] = prettyToken;
  exports["eqToken"] = eqToken;
})(PS["Neodoc.Spec.Token"] = PS["Neodoc.Spec.Token"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];        
  var ParserState = (function () {
      function ParserState(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParserState.create = function (value0) {
          return function (value1) {
              return new ParserState(value0, value1);
          };
      };
      return ParserState;
  })();
  var setIndentation = function (i) {
      return function (v) {
          return new ParserState(i, v.value1);
      };
  };
  var initialState = new ParserState(0, 0);
  var getIndentation = function (v) {
      return v.value0;
  };
  exports["ParserState"] = ParserState;
  exports["getIndentation"] = getIndentation;
  exports["initialState"] = initialState;
  exports["setIndentation"] = setIndentation;
})(PS["Neodoc.Spec.ParserState"] = PS["Neodoc.Spec.ParserState"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Neodoc_Spec_Token = PS["Neodoc.Spec.Token"];
  var Neodoc_Spec_ParserState = PS["Neodoc.Spec.ParserState"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];        
  var token = function (test) {
      return new Neodoc_Parsing_Parser.Parser(function (v) {
          if (v.value3 instanceof Data_List_Types.Cons) {
              var $14 = test(v.value3.value0.value1);
              if ($14 instanceof Data_Maybe.Just) {
                  var nextpos = (function () {
                      if (v.value3.value1 instanceof Data_List_Types.Cons) {
                          return v.value3.value1.value0.value0;
                      };
                      if (v.value3.value1 instanceof Data_List_Types.Nil) {
                          return v.value3.value0.value0;
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.TokenParser line 55, column 25 - line 57, column 28: " + [ v.value3.value1.constructor.name ]);
                  })();
                  return new Neodoc_Parsing_Parser.Step(true, Neodoc_Parsing_Parser.setI(v.value3.value1)(v), new Data_Either.Right($14.value0));
              };
              return new Neodoc_Parsing_Parser.Step(false, v, new Data_Either.Left(Neodoc_Parsing_Parser.error("Token did not match predicate")));
          };
          return new Neodoc_Parsing_Parser.Step(false, v, new Data_Either.Left(Neodoc_Parsing_Parser.error("Expected token, but met EOF")));
      });
  };
  var tag = function (s) {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.Tag && Data_String_Ext.upperCaseEq(v.value0)(s)) {
              return new Data_Maybe.Just(v.value1);
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage(Data_String_Ext.concat("tag: ")(s))(token(go));
  };
  var sopt = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.SOpt) {
              return new Data_Maybe.Just({
                  chars: v.value0, 
                  arg: v.value1
              });
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("short-option")(token(go));
  })();
  var shoutName = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.ShoutName) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("NAME")(token(go));
  })();
  var runTokenParser = function (s) {
      return function (p) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Parsing_Parser.extractError(Control_Category.id(Control_Category.categoryFn)))(Neodoc_Parsing_Parser.runParser(new Data_Optimize_Uncurried.Args5(Data_Unit.unit, Neodoc_Spec_ParserState.initialState, Data_Unit.unit, s, p)));
      };
  };
  var reference = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.Reference) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("reference")(token(go));
  })();
  var name = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.Name) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("name")(token(go));
  })();
  var match = function (tok) {
      return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(token(function ($53) {
          return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)((function (v) {
              return Data_Eq.eq(Neodoc_Spec_Token.eqToken)(v)(tok);
          })($53));
      }))(Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return Neodoc_Parsing_Parser.fail("Expected " + Data_Pretty.pretty(Neodoc_Spec_Token.prettyToken)(tok));
      }));
  };
  var newline = match(Neodoc_Spec_Token.Newline.value);
  var rparen = match(Neodoc_Spec_Token.RParen.value);
  var rsquare = match(Neodoc_Spec_Token.RSquare.value);
  var tripleDot = match(Neodoc_Spec_Token.TripleDot.value);
  var vbar = match(Neodoc_Spec_Token.VBar.value);
  var lsquare = match(Neodoc_Spec_Token.LSquare.value);
  var lparen = match(Neodoc_Spec_Token.LParen.value);
  var lopt = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.LOpt) {
              return new Data_Maybe.Just({
                  name: v.value0, 
                  arg: v.value1
              });
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("long-option")(token(go));
  })();
  var eof = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
      if (v instanceof Data_List_Types.Cons) {
          return Neodoc_Parsing_Parser.fail("Expected EOF");
      };
      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit);
  });
  var doubleDash = match(Neodoc_Spec_Token.DoubleDash.value);
  var dash = match(Neodoc_Spec_Token.Dash.value);
  var comma = match(Neodoc_Spec_Token.Comma.value);
  var colon = match(Neodoc_Spec_Token.Colon.value);
  var anyToken = token(Data_Maybe.Just.create);
  var angleName = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Spec_Token.AngleName) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Neodoc_Parsing_Parser_Combinators.asErrorMessage("<name>")(token(go));
  })();
  exports["angleName"] = angleName;
  exports["anyToken"] = anyToken;
  exports["colon"] = colon;
  exports["comma"] = comma;
  exports["dash"] = dash;
  exports["doubleDash"] = doubleDash;
  exports["eof"] = eof;
  exports["lopt"] = lopt;
  exports["lparen"] = lparen;
  exports["lsquare"] = lsquare;
  exports["match"] = match;
  exports["name"] = name;
  exports["newline"] = newline;
  exports["reference"] = reference;
  exports["rparen"] = rparen;
  exports["rsquare"] = rsquare;
  exports["runTokenParser"] = runTokenParser;
  exports["shoutName"] = shoutName;
  exports["sopt"] = sopt;
  exports["tag"] = tag;
  exports["token"] = token;
  exports["tripleDot"] = tripleDot;
  exports["vbar"] = vbar;
})(PS["Neodoc.Spec.TokenParser"] = PS["Neodoc.Spec.TokenParser"] || {});
(function(exports) {/**
 * trim the description section in order to make lexing faster.
 */  
  exports.trimDescSection = function(str) {
    str = '\n' + str; // note: ensure to capture match on first line
    var regex = /(.*(--?\S* *(((?!\[default *:|\[env *:)\S*) *(\.{3})?)?)|(^\s*)?\[(default|env): ("(?:[^"\\]|\\.)*"\s*|.*)*\])/gmi;
    var out = '';
    var m;
    while ((m = regex.exec(str)) !== null) {
      if (m.index === regex.lastIndex) {
        regex.lastIndex++;
      }

      if (m[0][0] !== '[') {
        out += '\n'
      } else {
        out += ' '
      }

      out += m[0]
    }
    return out;
  }
})(PS["Neodoc.Spec.Lexer"] = PS["Neodoc.Spec.Lexer"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Neodoc.Spec.Lexer"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Debug_Profile = PS["Debug.Profile"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List = PS["Data.List"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Spec_Token = PS["Neodoc.Spec.Token"];
  var Neodoc_Spec_Error = PS["Neodoc.Spec.Error"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_String = PS["Neodoc.Parsing.Parser.String"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Data_Show = PS["Data.Show"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];        
  var Usage = (function () {
      function Usage() {

      };
      Usage.value = new Usage();
      return Usage;
  })();
  var Descriptions = (function () {
      function Descriptions() {

      };
      Descriptions.value = new Descriptions();
      return Descriptions;
  })();
  var white = Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.oneOf([ "\x0a", "\x0d", " ", "\x09" ]));
  var skipSpaces = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.satisfy(function (c) {
      return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
  }))(function () {
      return skipSpaces;
  }))(Neodoc_Parsing_Parser["return"](Data_Unit.unit));
  var referenceRegex = Data_Either.fromRight()(Data_String_Regex.regex("\\[(([^\\]](?!\\s*-?\\s*options\\s*))*?.?)\\s*-?\\s*options\\s*(\\.\\.\\.)?\\s*\\]")(Data_String_Regex.parseFlags("gmi")));
  var maybeShoutNameRegex = Data_Either.fromRight()(Data_String_Regex.regex("[a-zA-Z]")(Data_String_Regex.parseFlags("gi")));
  var identLetter = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.alphaNum)(Neodoc_Parsing_Parser_String.oneOf([ "_", "-" ]));
  var _tag = Neodoc_Parsing_Parser_Combinators.between(Neodoc_Parsing_Parser_String["char"]("["))(Neodoc_Parsing_Parser_String["char"]("]"))(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($58) {
      return Data_String.trim(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton)($58));
  })(Data_List.some(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_Parsing_Parser_String.noneOf([ "]" ]))))(function (v) {
      var $26 = Data_Array.uncons(Data_String.split(":")(v));
      if ($26 instanceof Data_Maybe.Nothing) {
          return Neodoc_Parsing_Parser.fail("Expected label");
      };
      if ($26 instanceof Data_Maybe.Just && Data_Array.length($26.value0.tail) === 0) {
          return Neodoc_Parsing_Parser.fail("Expected label");
      };
      if ($26 instanceof Data_Maybe.Just) {
          var v1 = Data_String.trim(Data_String.joinWith(":")($26.value0.tail));
          return Neodoc_Parsing_Parser["return"](new Neodoc_Spec_Token.Tag($26.value0.head, v1));
      };
      throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 203, column 3 - line 208, column 29: " + [ $26.constructor.name ]);
  }));
  var _stdin = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("-"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.eof)(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(white), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("|")), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]")), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](")")), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.string("...")) ]))))(function () {
              return Neodoc_Parsing_Parser["return"](Neodoc_Spec_Token.Dash.value);
          });
      });
  });
  var _reference = Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_Token.Reference.create)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("@"))(function () {
      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Parsing_Parser_String.noneOf([ " ", "\x0a" ])));
  }));
  var _eoa = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.string("--"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.eof)(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(white), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]")), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](")")) ]))))(function () {
              return Neodoc_Parsing_Parser["return"](Neodoc_Spec_Token.DoubleDash.value);
          });
      });
  });
  var _anyName = Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_String_Ext.concat)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_String.singleton)(Neodoc_Parsing_Parser_String.alphaNum)))(Neodoc_Parsing_Parser_Combinators.manyChar(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ identLetter, Neodoc_Parsing_Parser_String.oneOf([ "-", "_", "/" ]), Neodoc_Parsing_Parser_Combinators["try"](Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_String["char"]("."))(Neodoc_Parsing_Parser_Combinators.notFollowedBy(Neodoc_Parsing_Parser_String.string("..")))) ])));
  var maybeShoutName = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(_anyName)(function (v) {
      return Neodoc_Parsing_Parser["return"]((function () {
          var $36 = Data_String.toUpper(v) === v && Data_String_Regex.test(maybeShoutNameRegex)(v);
          if ($36) {
              return new Neodoc_Spec_Token.ShoutName(v);
          };
          if (!$36) {
              return new Neodoc_Spec_Token.Name(v);
          };
          throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 153, column 12 - line 155, column 24: " + [ $36.constructor.name ]);
      })());
  });
  var _angleName = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("<"))(function () {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.someChar(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ identLetter, Neodoc_Parsing_Parser_String.noneOf([ "<", ">" ]) ])))(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"](">"))(function () {
              return Neodoc_Parsing_Parser["return"](Data_String_Ext.concat(Data_String_Ext.concat("<")(v))(">"));
          });
      });
  });
  var _longOption = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.string("--"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_String_Ext.concat)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_String.singleton)(Neodoc_Parsing_Parser_String.alphaNum)))(Neodoc_Parsing_Parser_Combinators.manyChar(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Parsing_Parser_String.alphaNum, Neodoc_Parsing_Parser_Combinators["try"](Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_String["char"]("."))(Neodoc_Parsing_Parser_Combinators.notFollowedBy(Neodoc_Parsing_Parser_String.string(".."))))(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_String.alphaNum))), Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_String.oneOf([ "-", "/" ]))(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_String.alphaNum)) ]))))(function (v1) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("["))(true)))(function (v2) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                      if (v2) {
                          return Neodoc_Parsing_Parser_Combinators.optional(Neodoc_Parsing_Parser_String["char"]("="));
                      };
                      if (!v2) {
                          return Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("="));
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 274, column 5 - line 276, column 5: " + [ v2.constructor.name ]);
                  })())(function () {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ _angleName, _anyName ]))(function (v3) {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(v2)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]"))))(function () {
                              return Neodoc_Parsing_Parser["return"]({
                                  name: v3, 
                                  optional: v2
                              });
                          });
                      });
                  });
              }))))(function (v2) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.eof)(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(white), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.oneOf([ "]", ")", ",", "|" ])), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.string("...")) ]))))(function () {
                      return Neodoc_Parsing_Parser["return"](new Neodoc_Spec_Token.LOpt(v1, v2));
                  });
              });
          });
      });
  });
  var _shortOption = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      var validChar = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.alphaNum)(Neodoc_Parsing_Parser_String.oneOf([ "?" ]));
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("-"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(validChar)(function (v1) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Array.fromFoldable(Data_List_Types.foldableList))(Neodoc_Parsing_Parser_Combinators.many(validChar)))(function (v2) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(Data_Maybe.Nothing.value)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("["))(true)))(function (v3) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                          if (v3) {
                              return Neodoc_Parsing_Parser_Combinators.optional(Neodoc_Parsing_Parser_String["char"]("="));
                          };
                          if (!v3) {
                              return Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("="));
                          };
                          throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 236, column 7 - line 238, column 7: " + [ v3.constructor.name ]);
                      })())(function () {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ _angleName, _anyName ]))(function (v4) {
                              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(v3)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]"))))(function () {
                                  return Neodoc_Parsing_Parser["return"]({
                                      name: v4, 
                                      optional: v3
                                  });
                              });
                          });
                      });
                  }), Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(_angleName)(function (v3) {
                      return Neodoc_Parsing_Parser["return"]({
                          name: v3, 
                          optional: false
                      });
                  }) ]))))(function (v3) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.eof)(Neodoc_Parsing_Parser_Combinators.lookAhead(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(white), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.oneOf([ "]", ")", ",", "|" ])), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.string("...")) ]))))(function () {
                          return Neodoc_Parsing_Parser["return"](new Neodoc_Spec_Token.SOpt(new Data_NonEmpty.NonEmpty(v1, v2), v3));
                      });
                  });
              });
          });
      });
  });
  var parseDescriptionToken = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](","))(Neodoc_Spec_Token.Comma.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("("))(Neodoc_Spec_Token.LParen.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](")"))(Neodoc_Spec_Token.RParen.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]"))(Neodoc_Spec_Token.RSquare.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.string("..."))(Neodoc_Spec_Token.TripleDot.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.eol)(Neodoc_Spec_Token.Newline.value), _reference, Neodoc_Parsing_Parser_Combinators["try"](_longOption), Neodoc_Parsing_Parser_Combinators["try"](_shortOption), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_Token.AngleName.create)(_angleName), maybeShoutName, Neodoc_Parsing_Parser_Combinators["try"](_tag), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("["))(Neodoc_Spec_Token.LSquare.value), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_Token.Garbage.create)(Neodoc_Parsing_Parser_String.anyChar) ]))(Neodoc_Parsing_Parser_String.spaces);
  });
  var parseUsageToken = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
      return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("("))(Neodoc_Spec_Token.LParen.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](")"))(Neodoc_Spec_Token.RParen.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("]"))(Neodoc_Spec_Token.RSquare.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("|"))(Neodoc_Spec_Token.VBar.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](":"))(Neodoc_Spec_Token.Colon.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"](","))(Neodoc_Spec_Token.Comma.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String.string("..."))(Neodoc_Spec_Token.TripleDot.value), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_String["char"]("["))(Neodoc_Spec_Token.LSquare.value), _reference, Neodoc_Parsing_Parser_Combinators["try"](_longOption), Neodoc_Parsing_Parser_Combinators["try"](_shortOption), Neodoc_Parsing_Parser_Combinators["try"](_eoa), _stdin, Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_Token.AngleName.create)(_angleName), maybeShoutName ]))(skipSpaces);
  });
  var parseTokens = function (m) {
      var tokParser = (function () {
          if (m instanceof Usage) {
              return parseUsageToken;
          };
          if (m instanceof Descriptions) {
              return parseDescriptionToken;
          };
          throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 92, column 19 - line 94, column 58: " + [ m.constructor.name ]);
      })();
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(skipSpaces)(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.many(Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_Token.PositionedToken.create)(Neodoc_Parsing_Parser_String.getPosition))(tokParser)))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Parsing_Parser_String.eof)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v1) {
                  return Neodoc_Parsing_Parser.fail("Unexpected input: " + v1);
              }))))(function () {
                  return Neodoc_Parsing_Parser["return"](v);
              });
          });
      });
  };
  var lex = function (m) {
      return function (input) {
          var input$prime = (function () {
              if (m instanceof Usage) {
                  return Data_String_Regex.replace(referenceRegex)("@$1")(input);
              };
              if (m instanceof Descriptions) {
                  return input;
              };
              throw new Error("Failed pattern match at Neodoc.Spec.Lexer line 77, column 16 - line 79, column 38: " + [ m.constructor.name ]);
          })();
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($59) {
              return Neodoc_Spec_Error.SpecParseError(Neodoc_Parsing_Parser.extractError(Control_Category.id(Control_Category.categoryFn))($59));
          })(Neodoc_Parsing_Parser.runParser(new Data_Optimize_Uncurried.Args5(Data_Unit.unit, Neodoc_Parsing_Parser_Pos.initialPos, Data_Unit.unit, input$prime, parseTokens(m))));
      };
  };
  var lexDescs = function ($60) {
      return lex(Descriptions.value)($foreign.trimDescSection($60));
  };
  var lexUsage = lex(Usage.value);
  exports["Usage"] = Usage;
  exports["Descriptions"] = Descriptions;
  exports["_angleName"] = _angleName;
  exports["_anyName"] = _anyName;
  exports["_eoa"] = _eoa;
  exports["_longOption"] = _longOption;
  exports["_reference"] = _reference;
  exports["_shortOption"] = _shortOption;
  exports["_stdin"] = _stdin;
  exports["_tag"] = _tag;
  exports["identLetter"] = identLetter;
  exports["lex"] = lex;
  exports["lexDescs"] = lexDescs;
  exports["lexUsage"] = lexUsage;
  exports["maybeShoutName"] = maybeShoutName;
  exports["maybeShoutNameRegex"] = maybeShoutNameRegex;
  exports["parseDescriptionToken"] = parseDescriptionToken;
  exports["parseTokens"] = parseTokens;
  exports["parseUsageToken"] = parseUsageToken;
  exports["referenceRegex"] = referenceRegex;
  exports["skipSpaces"] = skipSpaces;
  exports["white"] = white;
})(PS["Neodoc.Spec.Lexer"] = PS["Neodoc.Spec.Lexer"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_List = PS["Data.List"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Neodoc_Spec_Lexer = PS["Neodoc.Spec.Lexer"];
  var Neodoc_Spec_Token = PS["Neodoc.Spec.Token"];
  var Neodoc_Spec_TokenParser = PS["Neodoc.Spec.TokenParser"];
  var Neodoc_Spec_ParserState = PS["Neodoc.Spec.ParserState"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Control_Bind = PS["Control.Bind"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];        
  var nextTokPos = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
      if (v instanceof Data_List_Types.Cons) {
          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(v.value0.value0);
      };
      return Neodoc_Parsing_Parser.fail("Expected token, met EOF");
  });
  var markIndent$prime = function (level) {
      return function (p) {
          var setIndent = function (i) {
              return Neodoc_Parsing_Parser.modifyState(function (s) {
                  return Neodoc_Spec_ParserState.setIndentation(i)(s);
              });
          };
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_ParserState.getIndentation)(Neodoc_Parsing_Parser.getState))(function (v) {
              return Neodoc_Parsing_Parser_Combinators["try"](Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(setIndent(level))(p))(setIndent(v)));
          });
      };
  };
  var markIndent = function (p) {
      var setIndent = function (i) {
          return Neodoc_Parsing_Parser.modifyState(function (s) {
              return Neodoc_Spec_ParserState.setIndentation(i)(s);
          });
      };
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optionMaybe(nextTokPos))(function (v) {
          return Neodoc_Parsing_Parser_Combinators["try"]((function () {
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_ParserState.getIndentation)(Neodoc_Parsing_Parser.getState))(function (v1) {
                      return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(setIndent(v.value0.value1))(p))(setIndent(v1));
                  });
              };
              return p;
          })());
      });
  };
  var checkIndentation = function (rel) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(nextTokPos)(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_ParserState.getIndentation)(Neodoc_Parsing_Parser.getState))(function (v1) {
              return Control_MonadZero.guard(Neodoc_Parsing_Parser.monadZeroParser)(rel(v.value1)(v1));
          });
      });
  };
  var indented = Neodoc_Parsing_Parser_Combinators.withErrorMessage(checkIndentation(Data_Ord.greaterThanOrEq(Data_Ord.ordInt)))("indentation");
  var lessIndented = Neodoc_Parsing_Parser_Combinators.withErrorMessage(checkIndentation(Data_Ord.lessThan(Data_Ord.ordInt)))("less indentation");
  var moreIndented = Neodoc_Parsing_Parser_Combinators.withErrorMessage(checkIndentation(Data_Ord.greaterThan(Data_Ord.ordInt)))("more indentation");
  var sameIndent = Neodoc_Parsing_Parser_Combinators.withErrorMessage(checkIndentation(Data_Eq.eq(Data_Eq.eqInt)))("same indentation");
  exports["checkIndentation"] = checkIndentation;
  exports["indented"] = indented;
  exports["lessIndented"] = lessIndented;
  exports["markIndent"] = markIndent;
  exports["markIndent'"] = markIndent$prime;
  exports["moreIndented"] = moreIndented;
  exports["nextTokPos"] = nextTokPos;
  exports["sameIndent"] = sameIndent;
})(PS["Neodoc.Spec.Parser.Combinators"] = PS["Neodoc.Spec.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_List_Partial = PS["Data.List.Partial"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_Spec_Error = PS["Neodoc.Spec.Error"];
  var Neodoc_Spec_Token = PS["Neodoc.Spec.Token"];
  var Neodoc_Spec_TokenParser = PS["Neodoc.Spec.TokenParser"];
  var Neodoc_Spec_Parser_Combinators = PS["Neodoc.Spec.Parser.Combinators"];
  var Data_Function = PS["Data.Function"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];        
  var parse = function (toks) {
      var stdin = Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_TokenParser.dash)(Neodoc_Parsing_Parser["return"](Neodoc_Data_UsageLayout.Stdin.value));
      var repetition = Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.indented)(Neodoc_Spec_TokenParser.tripleDot))(true));
      var shortOption = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.sopt)(function (v) {
          var arg$prime = Control_Bind.bind(Data_Maybe.bindMaybe)(v.arg)(function (v1) {
              return new Data_Maybe.Just(new Neodoc_Data_OptionArgument.OptionArgument(v1.name, v1.optional));
          });
          return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_UsageLayout.OptionStack.create(v.chars)(arg$prime))(repetition);
      });
      var reference = Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_UsageLayout.Reference.create)(Neodoc_Spec_TokenParser.reference);
      var program = Neodoc_Parsing_Parser_Combinators.asErrorMessage("Program name")(Neodoc_Spec_TokenParser.name);
      var positional = Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_UsageLayout.Positional.create)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.shoutName)(Neodoc_Spec_TokenParser.angleName)))(repetition);
      var maybeInParens = function (p) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.moreIndented)(Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Tuple.Tuple.create)(Neodoc_Parsing_Parser_Combinators.optionMaybe(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lparen)(Neodoc_Spec_TokenParser.rparen), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lsquare)(Neodoc_Spec_TokenParser.rsquare) ]))))(p)))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Maybe.fromMaybe(Neodoc_Parsing_Parser["return"](Data_Unit.unit))(v.value0))(function () {
                  return Neodoc_Parsing_Parser["return"](v.value1);
              });
          });
      };
      var longOption = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.lopt)(function (v) {
          var arg$prime = Control_Bind.bind(Data_Maybe.bindMaybe)(v.arg)(function (v1) {
              return new Data_Maybe.Just(new Neodoc_Data_OptionArgument.OptionArgument(v1.name, v1.optional));
          });
          return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_UsageLayout.Option.create(v.name)(arg$prime))(repetition);
      });
      var option = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(longOption)(shortOption);
      var listToNonEmpty = function (dictPartial) {
          return function (v) {
              var __unused = function (dictPartial1) {
                  return function ($dollar21) {
                      return $dollar21;
                  };
              };
              return __unused(dictPartial)((function () {
                  if (v instanceof Data_List_Types.Cons) {
                      return new Data_NonEmpty.NonEmpty(v.value0, v.value1);
                  };
                  throw new Error("Failed pattern match at Neodoc.Spec.Parser.Usage line 175, column 3 - line 175, column 36: " + [ v.constructor.name ]);
              })());
          };
      };
      var command = Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_UsageLayout.Command.create)(Neodoc_Spec_TokenParser.name))(repetition);
      var reqGroup = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.between(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.indented)(Neodoc_Spec_TokenParser.lparen))(Neodoc_Spec_TokenParser.rparen)(Neodoc_Parsing_Parser_Combinators.sepBy1(Neodoc_Parsing_Parser_Combinators.some(elem))(Neodoc_Spec_TokenParser.vbar)))(function (v1) {
              return Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Group.create(false))(repetition))(Neodoc_Parsing_Parser["return"](listToNonEmpty()(Data_Functor.map(Data_List_Types.functorList)(listToNonEmpty())(v1))));
          });
      });
      var optGroup = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.between(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.indented)(Neodoc_Spec_TokenParser.lsquare))(Neodoc_Spec_TokenParser.rsquare)(Neodoc_Parsing_Parser_Combinators.sepBy1(Neodoc_Parsing_Parser_Combinators.some(elem))(Neodoc_Spec_TokenParser.vbar)))(function (v1) {
              return Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Group.create(true))(repetition))(Neodoc_Parsing_Parser["return"](listToNonEmpty()(Data_Functor.map(Data_List_Types.functorList)(listToNonEmpty())(v1))));
          });
      });
      var group = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ reqGroup, optGroup ]);
      });
      var elem = Neodoc_Parsing_Parser_Combinators.asErrorMessage("Option, Positional, Command, Group or Reference")(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Elem.create)(positional), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Elem.create)(command), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Elem.create)(reference), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Elem.create)(stdin), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Data_Layout.Elem.create)(option), Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return group;
      }) ]));
      var layout = function (name) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.asErrorMessage("Option, Positional, Command, Group or Reference elements")(Neodoc_Parsing_Parser_Combinators.sepBy1(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Parsing_Parser_Combinators["try"](Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.moreIndented)(elem))))(Neodoc_Spec_TokenParser.vbar)))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Parsing_Parser_Combinators["try"](Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(maybeInParens(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(maybeInParens(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.doubleDash)(function () {
                  return Neodoc_Parsing_Parser_Combinators.many(elem);
              })))(function () {
                  return Neodoc_Parsing_Parser_Combinators.many(elem);
              })))(function () {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.many(elem))(function () {
                      return Neodoc_Parsing_Parser["return"](Data_Maybe.Just.create(new Neodoc_Data_Layout.Elem(Neodoc_Data_UsageLayout.EOA.value)));
                  });
              })), Neodoc_Parsing_Parser_Combinators.withErrorMessage(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.eof)(Neodoc_Parsing_Parser_Combinators.lookAhead(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_Parser_Combinators.lessIndented)(Neodoc_Spec_Parser_Combinators.sameIndent))))(function () {
                  return Neodoc_Parsing_Parser["return"](Data_Maybe.Nothing.value);
              }))("End of usage line") ]))(function (v1) {
                  var branches$prime = Data_List.reverse((function () {
                      var $53 = Data_List.reverse(v);
                      if ($53 instanceof Data_List_Types.Nil) {
                          return Data_Maybe.maybe(Data_List_Types.Nil.value)(function ($71) {
                              return Data_List.singleton(Data_List.singleton($71));
                          })(v1);
                      };
                      if ($53 instanceof Data_List_Types.Cons) {
                          return new Data_List_Types.Cons(Data_Semigroup.append(Data_List_Types.semigroupList)($53.value0)(Data_Maybe.maybe(Data_List_Types.Nil.value)(Data_List.singleton)(v1)), $53.value1);
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Parser.Usage line 108, column 29 - line 110, column 58: " + [ $53.constructor.name ]);
                  })());
                  var branches$prime$prime = Data_List.filter(function ($72) {
                      return !Data_List["null"]($72);
                  })(branches$prime);
                  return Neodoc_Parsing_Parser["return"]((function () {
                      if (branches$prime$prime instanceof Data_List_Types.Nil) {
                          return Data_Maybe.Nothing.value;
                      };
                      return new Data_Maybe.Just(new Neodoc_Data_Layout.Group(false, false, listToNonEmpty()(Data_Functor.map(Data_List_Types.functorList)(listToNonEmpty())(branches$prime$prime))));
                  })());
              });
          });
      };
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Spec_Error.SpecParseError)(Neodoc_Spec_TokenParser.runTokenParser(toks)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.withErrorMessage(Neodoc_Spec_Parser_Combinators.nextTokPos)("Program name"))(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(program)(function (v1) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_Parser_Combinators["markIndent'"](v.value1)(Control_Apply.apply(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_NonEmpty.NonEmpty.create)(layout(v1)))(Neodoc_Parsing_Parser_Combinators.many(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optional(Neodoc_Parsing_Parser_Combinators["try"](Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.name)(function ($73) {
                  return Control_MonadZero.guard(Neodoc_Parsing_Parser.monadZeroParser)((function (v2) {
                      return v2 === "or";
                  })($73));
              }))(function () {
                  return Neodoc_Spec_TokenParser.colon;
              }))))(function () {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(program)(function (v2) {
                      var $60 = v1 !== v2;
                      if ($60) {
                          return Neodoc_Parsing_Parser.fatal("Program name mismatch: " + ("Expected \"" + (v1 + ("\"" + (", but got \"" + (v2 + "\""))))));
                      };
                      if (!$60) {
                          return layout(v1);
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Parser.Usage line 63, column 13 - line 69, column 32: " + [ $60.constructor.name ]);
                  });
              })))))(function (v2) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.withErrorMessage(Neodoc_Spec_TokenParser.eof)("End of usage section"))(function () {
                      return Neodoc_Parsing_Parser["return"]({
                          program: v1, 
                          layouts: Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v2)(function (v3) {
                              if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof Neodoc_Data_Layout.Group) {
                                  return Data_NonEmpty_Extra.toList(v3.value0.value2);
                              };
                              if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof Neodoc_Data_Layout.Elem) {
                                  return Data_List.singleton(new Data_NonEmpty.NonEmpty(v3.value0, Data_List_Types.Nil.value));
                              };
                              if (v3 instanceof Data_Maybe.Nothing) {
                                  return Data_List_Types.Nil.value;
                              };
                              throw new Error("Failed pattern match at Neodoc.Spec.Parser.Usage line 76, column 19 - line 79, column 35: " + [ v3.constructor.name ]);
                          })
                      });
                  });
              });
          });
      })));
  };
  exports["parse"] = parse;
})(PS["Neodoc.Spec.Parser.Usage"] = PS["Neodoc.Spec.Parser.Usage"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Profile = PS["Debug.Profile"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_String = PS["Data.String"];
  var Data_List = PS["Data.List"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_Spec_Error = PS["Neodoc.Spec.Error"];
  var Neodoc_Spec_Token = PS["Neodoc.Spec.Token"];
  var Neodoc_Spec_TokenParser = PS["Neodoc.Spec.TokenParser"];
  var Neodoc_Spec_Parser_Combinators = PS["Neodoc.Spec.Parser.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Array = PS["Data.Array"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Spec_Lexer = PS["Neodoc.Spec.Lexer"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Category = PS["Control.Category"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Default = (function () {
      function Default(value0) {
          this.value0 = value0;
      };
      Default.create = function (value0) {
          return new Default(value0);
      };
      return Default;
  })();
  var Env = (function () {
      function Env(value0) {
          this.value0 = value0;
      };
      Env.create = function (value0) {
          return new Env(value0);
      };
      return Env;
  })();
  var stripAngles = (function () {
      var stripSuffix = function (s) {
          return Data_Maybe.fromMaybe(s)(Data_String.stripSuffix(">")(s));
      };
      var stripPrefix = function (s) {
          return Data_Maybe.fromMaybe(s)(Data_String.stripPrefix("<")(s));
      };
      return function ($101) {
          return stripPrefix(stripSuffix($101));
      };
  })();
  var posArgsEq = Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(function ($102) {
      return Data_String.toUpper(stripAngles($102));
  });
  var notPosArgsEq = function ($103) {
      return Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(posArgsEq($103));
  };
  var isEnvTag = function (v) {
      if (v instanceof Env) {
          return true;
      };
      return false;
  };
  var isDefaultTag = function (v) {
      if (v instanceof Default) {
          return true;
      };
      return false;
  };
  var getEnvKey = function (v) {
      if (v instanceof Env) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var getDefaultValue = function (v) {
      if (v instanceof Default) {
          return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Neodoc_Value.parse(v.value0)(true));
      };
      return Data_Maybe.Nothing.value;
  };
  var parse = function (toks) {
      var descContent = function (toplevel) {
          var descEnd = Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Spec_TokenParser.eof, Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_Combinators.lookAhead(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.newline)(function () {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(!toplevel)(Neodoc_Spec_Parser_Combinators.lessIndented))(function () {
                  return Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.sopt), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lopt), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.angleName), Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.shoutName) ]);
              });
          }))) ]);
          return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.markIndent(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_List.catMaybes)(Data_Function.flip(Neodoc_Parsing_Parser_Combinators.manyTill)(descEnd)(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Neodoc_Parsing_Parser_Combinators["try"])([ Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($104) {
              return Data_Maybe.Just.create(Default.create($104));
          })(Neodoc_Spec_TokenParser.tag("default")), Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($105) {
              return Data_Maybe.Just.create(Env.create($105));
          })(Neodoc_Spec_TokenParser.tag("env")), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.anyToken)(Data_Maybe.Nothing.value) ]))))))(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.eof))(Data_Functor["void"](Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser_Combinators.some(Neodoc_Spec_TokenParser.newline))));
      };
      var optionDesc = (function () {
          var $$short = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.sopt)(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.withErrorMessage(Control_MonadZero.guard(Neodoc_Parsing_Parser.monadZeroParser)(Data_Array.length(v.chars.value1) === 0))("No stacked options"))(function () {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                      flag: v.chars.value0, 
                      arg: v.arg
                  });
              });
          }))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Maybe.maybe(Neodoc_Parsing_Parser_Combinators.optionMaybe(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optionMaybe(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lparen)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.rparen)(false)), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lsquare)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.rsquare)(true)) ])))(function (v1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.shoutName)(Neodoc_Spec_TokenParser.angleName))(function (v2) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Maybe.fromMaybe(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(false))(v1))(function (v3) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                              name: v2, 
                              optional: v3
                          });
                      });
                  });
              })))(function ($106) {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Maybe.Just.create($106));
              })(v.arg))(function (v1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.tripleDot)(true)))(function (v2) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                          alias: new Neodoc_OptionAlias.Short(v.flag), 
                          arg: v1, 
                          repeatable: v2
                      });
                  });
              });
          });
          var $$long = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Spec_TokenParser.lopt)(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Maybe.maybe(Neodoc_Parsing_Parser_Combinators.optionMaybe(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optionMaybe(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lparen)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.rparen)(false)), Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.lsquare)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.rsquare)(true)) ])))(function (v1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.shoutName)(Neodoc_Spec_TokenParser.angleName))(function (v2) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Maybe.fromMaybe(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(false))(v1))(function (v3) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                              name: v2, 
                              optional: v3
                          });
                      });
                  });
              })))(function ($107) {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Maybe.Just.create($107));
              })(v.arg))(function (v1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.tripleDot)(true)))(function (v2) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                          alias: new Neodoc_OptionAlias.Long(v.name), 
                          arg: v1, 
                          repeatable: v2
                      });
                  });
              });
          });
          var opt = (function () {
              var prettyAdhocOptArg = function (v) {
                  return (function () {
                      if (v.optional) {
                          return "[";
                      };
                      if (!v.optional) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 205, column 12 - line 205, column 33: " + [ v.optional.constructor.name ]);
                  })() + (v.name + (function () {
                      if (v.optional) {
                          return "]";
                      };
                      if (!v.optional) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 205, column 44 - line 205, column 65: " + [ v.optional.constructor.name ]);
                  })());
              };
              var optsP = Neodoc_Parsing_Parser_Combinators.asErrorMessage("option")(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Neodoc_Parsing_Parser_Combinators["try"]($$short), $$long ]));
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.sepBy1(optsP)(Neodoc_Parsing_Parser_Combinators.optional(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_TokenParser.comma)(Neodoc_Parsing_Parser_Combinators.many(Neodoc_Spec_TokenParser.newline)))(Neodoc_Spec_Parser_Combinators.indented))))(function (v) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
                      return function (next) {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(acc)(function (v1) {
                              var $76 = Data_Foldable.elem(Data_List_Types.foldableList)(Neodoc_OptionAlias.eqOptionAlias)(next)(v1);
                              if ($76) {
                                  return Neodoc_Parsing_Parser.fatal("Option appears multiple times: " + Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias)(next));
                              };
                              if (!$76) {
                                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Semigroup.append(Data_List_Types.semigroupList)(v1)(Data_List.singleton(next)));
                              };
                              throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 166, column 9 - line 168, column 44: " + [ $76.constructor.name ]);
                          });
                      };
                  })(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.Nil.value))(Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                      return v1.alias;
                  })(v)))(function (v1) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
                          return function (next) {
                              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(acc)(function (v2) {
                                  if (v2 instanceof Data_Maybe.Nothing) {
                                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new Data_Maybe.Just(next));
                                  };
                                  if (v2 instanceof Data_Maybe.Just) {
                                      var $80 = notPosArgsEq(v2.value0.name)(next.name);
                                      if ($80) {
                                          return Neodoc_Parsing_Parser.fatal("Option-arguments mismatch: " + (Data_Show.show(Data_Show.showString)(prettyAdhocOptArg(v2.value0)) + (" and " + Data_Show.show(Data_Show.showString)(prettyAdhocOptArg(next)))));
                                      };
                                      if (!$80) {
                                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Maybe.Just.create((function () {
                                              var $81 = {};
                                              for (var $82 in v2.value0) {
                                                  if ({}.hasOwnProperty.call(v2.value0, $82)) {
                                                      $81[$82] = v2["value0"][$82];
                                                  };
                                              };
                                              $81.optional = v2.value0.optional || next.optional;
                                              return $81;
                                          })()));
                                      };
                                      throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 177, column 13 - line 187, column 27: " + [ $80.constructor.name ]);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 174, column 9 - line 187, column 27: " + [ v2.constructor.name ]);
                              });
                          };
                      })(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Maybe.Nothing.value))(Data_List.catMaybes(Data_Functor.map(Data_List_Types.functorList)(function (v2) {
                          return v2.arg;
                      })(v))))(function (v2) {
                          var repeatable = Data_Foldable.foldl(Data_List_Types.foldableList)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(false)(Data_Functor.map(Data_List_Types.functorList)(function (v3) {
                              return v3.repeatable;
                          })(v));
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)((function (dictPartial) {
                              var __unused = function (dictPartial1) {
                                  return function ($dollar34) {
                                      return $dollar34;
                                  };
                              };
                              return __unused(dictPartial)((function () {
                                  if (v1 instanceof Data_List_Types.Cons) {
                                      return {
                                          aliases: new Data_NonEmpty.NonEmpty(v1.value0, v1.value1), 
                                          arg: v2, 
                                          env: Data_Maybe.Nothing.value, 
                                          repeatable: repeatable
                                      };
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 195, column 30 - line 201, column 10: " + [ v1.constructor.name ]);
                              })());
                          })());
                      });
                  });
              });
          })();
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(opt)(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(descContent(false))(function (v1) {
                  var envs = Data_Functor.map(Data_List_Types.functorList)(getEnvKey)(Data_List.filter(isEnvTag)(v1));
                  var env = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.head(envs))(Control_Category.id(Control_Category.categoryFn));
                  var defaults = Data_Functor.map(Data_List_Types.functorList)(getDefaultValue)(Data_List.filter(isDefaultTag)(v1));
                  var $$default = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.head(defaults))(Control_Category.id(Control_Category.categoryFn));
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(Data_List.length(defaults) > 1)(Neodoc_Parsing_Parser.fatal("Option " + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.aliases)) + " has multiple defaults!"))))(function () {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(Data_List.length(envs) > 1)(Neodoc_Parsing_Parser.fatal("Option " + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.aliases)) + " has multiple environment mappings!"))))(function () {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.when(Neodoc_Parsing_Parser.applicativeParser)(Data_Maybe.isJust($$default) && Data_Maybe.isNothing(v.arg))(Neodoc_Parsing_Parser.fatal("Option " + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.aliases)) + (" does not take arguments. " + "Cannot specify defaults.")))))(function () {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new Neodoc_Data_Description.OptionDescription(v.aliases, v.repeatable, Control_Bind.bind(Data_Maybe.bindMaybe)(v.arg)(function (v2) {
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Data_OptionArgument.OptionArgument(v2.name, v2.optional));
                              }), $$default, env));
                          });
                      });
                  });
              });
          });
      })();
      var positionalsDesc = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.angleName)(Neodoc_Spec_TokenParser.shoutName))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.option(false)(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Spec_TokenParser.tripleDot)(true)))(function () {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(descContent(false))(function () {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Neodoc_Data_Description.CommandDescription.value);
              });
          });
      });
      var desc = Control_Lazy.defer(Neodoc_Parsing_Parser.lazyParser)(function (v) {
          return Neodoc_Parsing_Parser_Combinators.asErrorMessage("--option or <positional> description")(Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ optionDesc, positionalsDesc ]));
      });
      var go = function (vs) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.Just.create)(desc))(Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(descContent(true))(Data_Maybe.Nothing.value)))(function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return go(new Data_List_Types.Cons(v.value0, vs));
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)([ Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(desc)(function (v$prime) {
                      return go(new Data_List_Types.Cons(v$prime, vs));
                  }), Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(vs) ]);
              };
              throw new Error("Failed pattern match at Neodoc.Spec.Parser.Description line 69, column 5 - line 75, column 10: " + [ v.constructor.name ]);
          });
      };
      var anyName = Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_Spec_TokenParser.angleName)(Neodoc_Spec_TokenParser.shoutName))(Neodoc_Spec_TokenParser.name);
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Spec_Error.SpecParseError)(Neodoc_Spec_TokenParser.runTokenParser(toks)(Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Neodoc_Spec_Parser_Combinators.markIndent(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_List.reverse)(go(Data_List_Types.Nil.value))))(Neodoc_Spec_TokenParser.eof)));
  };
  exports["Default"] = Default;
  exports["Env"] = Env;
  exports["getDefaultValue"] = getDefaultValue;
  exports["getEnvKey"] = getEnvKey;
  exports["isDefaultTag"] = isDefaultTag;
  exports["isEnvTag"] = isEnvTag;
  exports["notPosArgsEq"] = notPosArgsEq;
  exports["parse"] = parse;
  exports["posArgsEq"] = posArgsEq;
  exports["stripAngles"] = stripAngles;
})(PS["Neodoc.Spec.Parser.Description"] = PS["Neodoc.Spec.Parser.Description"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Neodoc_Spec_Parser_Usage = PS["Neodoc.Spec.Parser.Usage"];
  var Neodoc_Spec_Parser_Description = PS["Neodoc.Spec.Parser.Description"];
  var Neodoc_Spec_Error = PS["Neodoc.Spec.Error"];        
  var parseUsage = Neodoc_Spec_Parser_Usage.parse;
  var parseDescription = Neodoc_Spec_Parser_Description.parse;
  exports["parseDescription"] = parseDescription;
  exports["parseUsage"] = parseUsage;
})(PS["Neodoc.Spec.Parser"] = PS["Neodoc.Spec.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Function = PS["Data.Function"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_String = PS["Data.String"];
  var Data_Array = PS["Data.Array"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];        
  var LOpt = (function () {
      function LOpt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LOpt.create = function (value0) {
          return function (value1) {
              return new LOpt(value0, value1);
          };
      };
      return LOpt;
  })();
  var SOpt = (function () {
      function SOpt(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SOpt.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SOpt(value0, value1, value2);
              };
          };
      };
      return SOpt;
  })();
  var EOA = (function () {
      function EOA(value0) {
          this.value0 = value0;
      };
      EOA.create = function (value0) {
          return new EOA(value0);
      };
      return EOA;
  })();
  var Stdin = (function () {
      function Stdin() {

      };
      Stdin.value = new Stdin();
      return Stdin;
  })();
  var Lit = (function () {
      function Lit(value0) {
          this.value0 = value0;
      };
      Lit.create = function (value0) {
          return new Lit(value0);
      };
      return Lit;
  })();
  var PositionedToken = (function () {
      function PositionedToken(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      PositionedToken.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new PositionedToken(value0, value1, value2);
              };
          };
      };
      return PositionedToken;
  })();
  var prettyToken = new Data_Pretty.Pretty(function (v) {
      if (v instanceof Stdin) {
          return "-";
      };
      if (v instanceof EOA) {
          return "-- " + Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)(" ")(Data_Functor.map(Data_List_Types.functorList)(Data_Pretty.pretty(Neodoc_Value.prettyValue))(v.value0));
      };
      if (v instanceof Lit) {
          return v.value0;
      };
      if (v instanceof LOpt) {
          var arg = Data_Maybe.maybe("")(function (v1) {
              return "=" + v1;
          })(v.value1);
          return "--" + (v.value0 + arg);
      };
      if (v instanceof SOpt) {
          var arg = Data_Maybe.maybe("")(function (v1) {
              return "=" + v1;
          })(v.value2);
          return "-" + (Data_String.fromCharArray(Data_Array.cons(v.value0)(v.value1)) + arg);
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Token line 30, column 3 - line 31, column 3: " + [ v.constructor.name ]);
  });
  var prettyPositionedToken = new Data_Pretty.Pretty(function (v) {
      return Data_Pretty.pretty(prettyToken)(v.value0);
  });
  var getToken = function (v) {
      return v.value0;
  };
  var getSource = function (v) {
      return v.value1;
  };                                                                                       
  var eqToken = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof LOpt && y instanceof LOpt) {
              return x.value0 === y.value0 && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value1)(y.value1);
          };
          if (x instanceof SOpt && y instanceof SOpt) {
              return x.value0 === y.value0 && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqChar))(x.value1)(y.value1) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value2)(y.value2);
          };
          if (x instanceof EOA && y instanceof EOA) {
              return Data_Eq.eq(Data_List_Types.eqList(Neodoc_Value.eqValue))(x.value0)(y.value0);
          };
          if (x instanceof Stdin && y instanceof Stdin) {
              return true;
          };
          if (x instanceof Lit && y instanceof Lit) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  var ordToken = new Data_Ord.Ord(function () {
      return eqToken;
  }, function (x) {
      return function (y) {
          if (x instanceof LOpt && y instanceof LOpt) {
              var $152 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if ($152 instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if ($152 instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Maybe.ordMaybe(Data_Ord.ordString))(x.value1)(y.value1);
          };
          if (x instanceof LOpt) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof LOpt) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SOpt && y instanceof SOpt) {
              var $161 = Data_Ord.compare(Data_Ord.ordChar)(x.value0)(y.value0);
              if ($161 instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if ($161 instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              var $162 = Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordChar))(x.value1)(y.value1);
              if ($162 instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if ($162 instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Maybe.ordMaybe(Data_Ord.ordString))(x.value2)(y.value2);
          };
          if (x instanceof SOpt) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SOpt) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof EOA && y instanceof EOA) {
              return Data_Ord.compare(Data_List_Types.ordList(Neodoc_Value.ordValue))(x.value0)(y.value0);
          };
          if (x instanceof EOA) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof EOA) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Stdin && y instanceof Stdin) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Stdin) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Stdin) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Lit && y instanceof Lit) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Token line 22, column 1 - line 22, column 38: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["PositionedToken"] = PositionedToken;
  exports["LOpt"] = LOpt;
  exports["SOpt"] = SOpt;
  exports["EOA"] = EOA;
  exports["Stdin"] = Stdin;
  exports["Lit"] = Lit;
  exports["getSource"] = getSource;
  exports["getToken"] = getToken;
  exports["ordToken"] = ordToken;
  exports["eqToken"] = eqToken;
  exports["prettyToken"] = prettyToken;
  exports["prettyPositionedToken"] = prettyPositionedToken;
})(PS["Neodoc.ArgParser.Token"] = PS["Neodoc.ArgParser.Token"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Alt = PS["Control.Alt"];
  var Data_List = PS["Data.List"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_String = PS["Neodoc.Parsing.Parser.String"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_Parsing_Parser_Pos = PS["Neodoc.Parsing.Parser.Pos"];
  var Data_Array = PS["Data.Array"];
  var Control_Plus = PS["Control.Plus"];
  var Neodoc_ArgParser_Token = PS["Neodoc.ArgParser.Token"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];        
  var parseToken = (function () {
      var stdin = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("-"))(function () {
          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Neodoc_ArgParser_Token.Stdin.value);
      });
      var lit = Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($22) {
          return Neodoc_ArgParser_Token.Lit.create(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton)($22));
      })(Data_List.many(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_Parsing_Parser_String.anyChar));
      var illegalOptChar = [ "=", " ", "\x09", "\x0a", "\x0d" ];
      var illegalSOptChar = Data_Array.cons("-")(illegalOptChar);
      var eoa = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.string("--"))(function () {
          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new Neodoc_ArgParser_Token.EOA(Control_Plus.empty(Data_List_Types.plusList)));
      });
      var arg = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("="))(function () {
          return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Data_List.many(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_Parsing_Parser_String.anyChar));
      });
      var lopt = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.string("--"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton))(Data_List.some(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_Parsing_Parser_String.noneOf(illegalOptChar))))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optionMaybe(arg))(function (v1) {
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new Neodoc_ArgParser_Token.LOpt(v, v1));
              });
          });
      });
      var sopt = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String["char"]("-"))(function () {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_String.noneOf(illegalSOptChar))(function (v) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Array.many(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_Parsing_Parser_String.noneOf(illegalOptChar)))(function (v1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.optionMaybe(arg))(function (v2) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(new Neodoc_ArgParser_Token.SOpt(v, v1, v2));
                  });
              });
          });
      });
      return Neodoc_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Neodoc_Parsing_Parser_Combinators["try"])([ Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(lopt)(Neodoc_Parsing_Parser_String.eof), Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(sopt)(Neodoc_Parsing_Parser_String.eof), Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(eoa)(Neodoc_Parsing_Parser_String.eof), Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(stdin)(Neodoc_Parsing_Parser_String.eof), Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(lit)(Neodoc_Parsing_Parser_String.eof) ]));
  })();
  var lex = function (xs) {
      return function (options) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_List_Types.Nil) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_List_Types.Nil.value);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var toEOA = function (l) {
                          return Data_Either.Right.create(Data_List.singleton(new Neodoc_ArgParser_Token.PositionedToken(new Neodoc_ArgParser_Token.EOA(Data_Functor.map(Data_List_Types.functorList)(Neodoc_Value.StringValue.create)(v.value1)), v.value0, v1)));
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(Neodoc_Parsing_Parser.runParser(new Data_Optimize_Uncurried.Args5(Data_Unit.unit, Neodoc_Parsing_Parser_Pos.initialPos, Data_Unit.unit, v.value0, parseToken)))(function (v2) {
                          if (v2 instanceof Neodoc_ArgParser_Token.EOA) {
                              return toEOA("--");
                          };
                          return Control_Bind.bind(Data_Either.bindEither)(go(v.value1)(v1 + 1 | 0))(function (v3) {
                              return Data_Either.Right.create(Data_Semigroup.append(Data_List_Types.semigroupList)(Data_List.singleton(new Neodoc_ArgParser_Token.PositionedToken(v2, v.value0, v1)))(v3));
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Lexer line 102, column 1 - line 114, column 58: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Parsing_Parser.extractError(Control_Category.id(Control_Category.categoryFn)))(go(xs)(1));
      };
  };
  exports["lex"] = lex;
})(PS["Neodoc.ArgParser.Lexer"] = PS["Neodoc.ArgParser.Lexer"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Arg = (function () {
      function Arg(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      Arg.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new Arg(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return Arg;
  })();
  var setId = function (i) {
      return function (v) {
          return new Arg(i, v.value1, v.value2, v.value3, v.value4);
      };
  };
  var isOption = function (v) {
      return Neodoc_Data_SolvedLayout.isOption(v.value1);
  };
  var isFreeLayout = function (v) {
      if (v instanceof Neodoc_Data_Layout.Elem) {
          return Neodoc_Data_SolvedLayout.isFreeElem(v.value0.value1);
      };
      if (v instanceof Neodoc_Data_Layout.Group) {
          return Data_Foldable.all(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.all(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(isFreeLayout))(v.value2);
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Arg line 71, column 1 - line 71, column 58: " + [ v.constructor.name ]);
  };
  var isArgRepeatable = function (v) {
      return Neodoc_Data_SolvedLayout.isElemRepeatable(v.value1);
  };
  var getId = function (v) {
      return v.value0;
  };
  var getFallback = function (v) {
      return v.value3;
  };
  var getArgKey = function (v) {
      return v.value2;
  };
  var getArg = function (v) {
      return v.value1;
  };
  exports["Arg"] = Arg;
  exports["getArg"] = getArg;
  exports["getArgKey"] = getArgKey;
  exports["getFallback"] = getFallback;
  exports["getId"] = getId;
  exports["isArgRepeatable"] = isArgRepeatable;
  exports["isFreeLayout"] = isFreeLayout;
  exports["isOption"] = isOption;
  exports["setId"] = setId;
})(PS["Neodoc.ArgParser.Arg"] = PS["Neodoc.ArgParser.Arg"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Neodoc_ArgParser_Arg = PS["Neodoc.ArgParser.Arg"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];        
  var ParseElem = (function () {
      function ParseElem(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseElem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseElem(value0, value1, value2);
              };
          };
      };
      return ParseElem;
  })();
  var ParseGroup = (function () {
      function ParseGroup(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      ParseGroup.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new ParseGroup(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return ParseGroup;
  })();
  var getId = function (v) {
      if (v instanceof ParseElem) {
          return v.value0;
      };
      if (v instanceof ParseGroup) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.ParseLayout line 56, column 1 - line 56, column 30: " + [ v.constructor.name ]);
  };
  var eqParseLayout = new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Eq.eqInt))(getId));
  exports["ParseElem"] = ParseElem;
  exports["ParseGroup"] = ParseGroup;
  exports["getId"] = getId;
  exports["eqParseLayout"] = eqParseLayout;
})(PS["Neodoc.ArgParser.ParseLayout"] = PS["Neodoc.ArgParser.ParseLayout"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Neodoc_ArgParser_Token = PS["Neodoc.ArgParser.Token"];
  var Data_Generic = PS["Data.Generic"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Neodoc_ArgParser_Lexer = PS["Neodoc.ArgParser.Lexer"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_Indexed = PS["Neodoc.Data.Indexed"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Error = PS["Neodoc.Error"];
  var Neodoc_Error_Class = PS["Neodoc.Error.Class"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_ArgParser_KeyValue = PS["Neodoc.ArgParser.KeyValue"];
  var Neodoc_ArgParser_Required = PS["Neodoc.ArgParser.Required"];
  var Neodoc_ArgParser_ParseLayout = PS["Neodoc.ArgParser.ParseLayout"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];        
  var Known = (function () {
      function Known(value0) {
          this.value0 = value0;
      };
      Known.create = function (value0) {
          return new Known(value0);
      };
      return Known;
  })();
  var Unknown = (function () {
      function Unknown(value0) {
          this.value0 = value0;
      };
      Unknown.create = function (value0) {
          return new Unknown(value0);
      };
      return Unknown;
  })();
  var OptionTakesNoArgumentError = (function () {
      function OptionTakesNoArgumentError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptionTakesNoArgumentError.create = function (value0) {
          return function (value1) {
              return new OptionTakesNoArgumentError(value0, value1);
          };
      };
      return OptionTakesNoArgumentError;
  })();
  var OptionRequiresArgumentError = (function () {
      function OptionRequiresArgumentError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptionRequiresArgumentError.create = function (value0) {
          return function (value1) {
              return new OptionRequiresArgumentError(value0, value1);
          };
      };
      return OptionRequiresArgumentError;
  })();
  var MissingArgumentsError = (function () {
      function MissingArgumentsError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MissingArgumentsError.create = function (value0) {
          return function (value1) {
              return new MissingArgumentsError(value0, value1);
          };
      };
      return MissingArgumentsError;
  })();
  var UnexpectedInputError = (function () {
      function UnexpectedInputError(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      UnexpectedInputError.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new UnexpectedInputError(value0, value1, value2);
              };
          };
      };
      return UnexpectedInputError;
  })();
  var MalformedInputError = (function () {
      function MalformedInputError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MalformedInputError.create = function (value0) {
          return function (value1) {
              return new MalformedInputError(value0, value1);
          };
      };
      return MalformedInputError;
  })();
  var GenericError = (function () {
      function GenericError(value0) {
          this.value0 = value0;
      };
      GenericError.create = function (value0) {
          return new GenericError(value0);
      };
      return GenericError;
  })();
  var InternalError = (function () {
      function InternalError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InternalError.create = function (value0) {
          return function (value1) {
              return new InternalError(value0, value1);
          };
      };
      return InternalError;
  })();
  var unknown = Unknown.create;
  var unIsKnown = function (v) {
      if (v instanceof Unknown) {
          return v.value0;
      };
      if (v instanceof Known) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 113, column 1 - line 113, column 26: " + [ v.constructor.name ]);
  };
  var tokLabel = function (v) {
      var go = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_Token.LOpt) {
              return "option " + v.value1;
          };
          if (v1 instanceof Neodoc_ArgParser_Token.SOpt) {
              return "option " + v.value1;
          };
          if (v1 instanceof Neodoc_ArgParser_Token.EOA) {
              return "option --";
          };
          if (v1 instanceof Neodoc_ArgParser_Token.Stdin) {
              return "option -";
          };
          if (v1 instanceof Neodoc_ArgParser_Token.Lit) {
              return "command " + v.value1;
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 128, column 3 - line 128, column 46: " + [ v1.constructor.name ]);
      };
      return go(v.value0);
  };
  var skipIf = function (a) {
      return function (b) {
          return function (c) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(a)(function (v) {
                  if (v) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(b);
                  };
                  if (!v) {
                      return c;
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 262, column 22 - line 262, column 45: " + [ v.constructor.name ]);
              });
          };
      };
  }; 
  var setErrorAtDepth = function (d) {
      return function (e) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getGlobalState)(function (v) {
              if (v.deepestError instanceof Data_Maybe.Just && d > v.deepestError.value0.value0) {
                  return Neodoc_Parsing_Parser.modifyGlobalState(function (s) {
                      var $71 = {};
                      for (var $72 in s) {
                          if ({}.hasOwnProperty.call(s, $72)) {
                              $71[$72] = s[$72];
                          };
                      };
                      $71.deepestError = new Data_Maybe.Just(new Data_Tuple.Tuple(d, e));
                      return $71;
                  });
              };
              if (v.deepestError instanceof Data_Maybe.Nothing) {
                  return Neodoc_Parsing_Parser.modifyGlobalState(function (s) {
                      var $77 = {};
                      for (var $78 in s) {
                          if ({}.hasOwnProperty.call(s, $78)) {
                              $77[$78] = s[$78];
                          };
                      };
                      $77.deepestError = new Data_Maybe.Just(new Data_Tuple.Tuple(d, e));
                      return $77;
                  });
              };
              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit);
          });
      };
  };
  var setDone = Neodoc_Parsing_Parser.modifyState(function (s) {
      var $81 = {};
      for (var $82 in s) {
          if ({}.hasOwnProperty.call(s, $82)) {
              $81[$82] = s[$82];
          };
      };
      $81.hasTerminated = true;
      return $81;
  });
  var prettyIsKnown = function (dictPretty) {
      return new Data_Pretty.Pretty(function (v) {
          if (v instanceof Known) {
              return Data_Pretty.pretty(dictPretty)(v.value0);
          };
          if (v instanceof Unknown) {
              return Data_Pretty.pretty(dictPretty)(v.value0);
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 104, column 3 - line 104, column 30: " + [ v.constructor.name ]);
      });
  };
  var unexpectedInputError = function (expected) {
      return function (toks) {
          var butGot = function (v) {
              if (v instanceof Data_List_Types.Nil) {
                  return "";
              };
              if (v instanceof Data_List_Types.Cons) {
                  return ", but got " + Data_Pretty.pretty(prettyIsKnown(Neodoc_ArgParser_Token.prettyPositionedToken))(v.value0);
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 151, column 3 - line 151, column 23: " + [ v.constructor.name ]);
          };
          var render = function (v) {
              return function (v1) {
                  if (v instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Nil) {
                      return "";
                  };
                  if (v instanceof Data_List_Types.Nil && (v1 instanceof Data_List_Types.Cons && v1.value0 instanceof Known)) {
                      return "unexpected " + tokLabel(v1.value0.value0);
                  };
                  if (v1 instanceof Data_List_Types.Cons && v1.value0 instanceof Unknown) {
                      return "unknown " + tokLabel(v1.value0.value0);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      return "expected " + (Data_Pretty.pretty(Neodoc_Data_Layout.prettyLayout(Neodoc_Data_SolvedLayout.prettySolvedLayoutArg))(v.value0) + butGot(v1));
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 148, column 1 - line 156, column 42: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return UnexpectedInputError.create(expected)(toks)(Data_Lazy.defer(function (v) {
              return render(expected)(toks);
          }));
      };
  };
  var prettyArgParseError = new Data_Pretty.Pretty(function (v) {
      if (v instanceof OptionTakesNoArgumentError) {
          return Data_Lazy.force(v.value1);
      };
      if (v instanceof OptionRequiresArgumentError) {
          return Data_Lazy.force(v.value1);
      };
      if (v instanceof MissingArgumentsError) {
          return Data_Lazy.force(v.value1);
      };
      if (v instanceof UnexpectedInputError) {
          return Data_Lazy.force(v.value2);
      };
      if (v instanceof MalformedInputError) {
          return Data_Lazy.force(v.value1);
      };
      if (v instanceof GenericError) {
          return v.value0;
      };
      if (v instanceof InternalError) {
          return Data_Lazy.force(v.value1);
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 174, column 3 - line 174, column 56: " + [ v.constructor.name ]);
  });
  var toNeodocErrorArgParseError = new Neodoc_Error_Class.ToNeodocError(function (x) {
      return new Neodoc_Error.ArgParserError(Data_Pretty.pretty(prettyArgParseError)(x));
  });
  var optionTakesNoArgumentError = function (a) {
      return OptionTakesNoArgumentError.create(a)(Data_Lazy.defer(function (v) {
          return "option takes no argument: " + Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias)(a);
      }));
  };
  var optionRequiresArgumentError = function (a) {
      return OptionRequiresArgumentError.create(a)(Data_Lazy.defer(function (v) {
          return "option requires argument: " + Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias)(a);
      }));
  };
  var modifyDepth = function (f) {
      return Neodoc_Parsing_Parser.modifyState(function (s) {
          var $118 = {};
          for (var $119 in s) {
              if ({}.hasOwnProperty.call(s, $119)) {
                  $118[$119] = s[$119];
              };
          };
          $118.depth = f(s.depth);
          return $118;
      });
  };
  var setDepth = function ($143) {
      return modifyDepth(Data_Function["const"]($143));
  };
  var missingArgumentsError = function (layouts) {
      return MissingArgumentsError.create(layouts)(Data_Lazy.defer(function (v) {
          var flat = Neodoc_Data_LayoutConversion.flattenBranch(layouts);
          return "missing " + Data_Pretty.pretty(Neodoc_Data_SolvedLayout.prettySolvedLayoutArg)(flat.value0);
      }));
  };
  var malformedInputError = function (i) {
      return MalformedInputError.create(i)(Data_Lazy.defer(function (v) {
          return "malformed input: " + i;
      }));
  };
  var known = Known.create;
  var isUnknown = function (v) {
      if (v instanceof Unknown) {
          return true;
      };
      if (v instanceof Known) {
          return false;
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 111, column 1 - line 111, column 29: " + [ v.constructor.name ]);
  };
  var isKnown = function (v) {
      if (v instanceof Known) {
          return true;
      };
      if (v instanceof Unknown) {
          return false;
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Type line 109, column 1 - line 109, column 25: " + [ v.constructor.name ]);
  };
  var internalError = function (msg) {
      return InternalError.create(msg)(Data_Lazy.defer(function (v) {
          return "internal error: " + msg;
      }));
  };
  var hasTerminated = Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function (v) {
      return v.hasTerminated;
  })(Neodoc_Parsing_Parser.getState);
  var genericError = function (msg) {
      return new GenericError(msg);
  };
  var findDescription = function (alias) {
      return function (descriptions) {
          var matchesAlias = function (v) {
              if (v instanceof Neodoc_Data_Description.OptionDescription) {
                  return Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v1) {
                      return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(v1)(alias);
                  })(v.value0);
              };
              return false;
          };
          return Data_List.head(Data_List.filter(matchesAlias)(descriptions));
      };
  };
  var lookupDescription = function (alias) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(v.spec))(function (v1) {
              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(findDescription(alias)(v1.descriptions));
          });
      });
  };
  var lookupDescription$prime = function (a) {
      var $$default = new Neodoc_Data_Description.OptionDescription(Data_NonEmpty.singleton(Data_List_Types.plusList)(a), false, Data_Maybe.Nothing.value, Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Maybe.fromMaybe($$default))(lookupDescription(a));
  };
  exports["OptionTakesNoArgumentError"] = OptionTakesNoArgumentError;
  exports["OptionRequiresArgumentError"] = OptionRequiresArgumentError;
  exports["MissingArgumentsError"] = MissingArgumentsError;
  exports["UnexpectedInputError"] = UnexpectedInputError;
  exports["MalformedInputError"] = MalformedInputError;
  exports["GenericError"] = GenericError;
  exports["InternalError"] = InternalError;
  exports["findDescription"] = findDescription;
  exports["genericError"] = genericError;
  exports["hasTerminated"] = hasTerminated;
  exports["internalError"] = internalError;
  exports["isKnown"] = isKnown;
  exports["isUnknown"] = isUnknown;
  exports["known"] = known;
  exports["lookupDescription"] = lookupDescription;
  exports["lookupDescription'"] = lookupDescription$prime;
  exports["malformedInputError"] = malformedInputError;
  exports["missingArgumentsError"] = missingArgumentsError;
  exports["modifyDepth"] = modifyDepth;
  exports["optionRequiresArgumentError"] = optionRequiresArgumentError;
  exports["optionTakesNoArgumentError"] = optionTakesNoArgumentError;
  exports["setDepth"] = setDepth;
  exports["setDone"] = setDone;
  exports["setErrorAtDepth"] = setErrorAtDepth;
  exports["skipIf"] = skipIf;
  exports["unIsKnown"] = unIsKnown;
  exports["unexpectedInputError"] = unexpectedInputError;
  exports["unknown"] = unknown;
  exports["prettyIsKnown"] = prettyIsKnown;
  exports["prettyArgParseError"] = prettyArgParseError;
  exports["toNeodocErrorArgParseError"] = toNeodocErrorArgParseError;
})(PS["Neodoc.ArgParser.Type"] = PS["Neodoc.ArgParser.Type"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_List_Partial = PS["Data.List.Partial"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Partial = PS["Data.Array.Partial"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Data_String = PS["Data.String"];
  var Data_Pretty = PS["Data.Pretty"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_ArgParser_Type = PS["Neodoc.ArgParser.Type"];
  var Neodoc_ArgParser_Token = PS["Neodoc.ArgParser.Token"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unfoldable = PS["Data.Unfoldable"];        
  var OptRes = (function () {
      function OptRes(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OptRes.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OptRes(value0, value1, value2);
              };
          };
      };
      return OptRes;
  })();
  var token = function (name) {
      return function (test) {
          return new Neodoc_Parsing_Parser.Parser(function (a) {
              var _return = function (i) {
                  return function (r) {
                      return new Neodoc_Parsing_Parser.Step(true, Neodoc_Parsing_Parser.setI(i)(a), r);
                  };
              };
              var _fail = function (m) {
                  return new Neodoc_Parsing_Parser.Step(false, a, Data_Either.Left.create(new Neodoc_Parsing_Parser.ParseError(false, new Data_Either.Left(m))));
              };
              var $17 = Neodoc_Parsing_Parser.getI(a);
              if ($17 instanceof Data_List_Types.Cons) {
                  var $18 = test($17.value0.value0);
                  if ($18 instanceof Data_Maybe.Nothing) {
                      return _fail("expected " + (name + (", but got: " + $17.value0.value1)));
                  };
                  if ($18 instanceof Data_Maybe.Just) {
                      return _return($17.value1)(new Data_Either.Right($18.value0));
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 63, column 7 - line 65, column 40: " + [ $18.constructor.name ]);
              };
              return _fail("expected " + name);
          });
      };
  };
  var stdin = token("-")(function (v) {
      if (v instanceof Neodoc_ArgParser_Token.Stdin) {
          return new Data_Maybe.Just(new Neodoc_Value.BoolValue(true));
      };
      return Data_Maybe.Nothing.value;
  });
  var shortOption = function (term) {
      return function (f) {
          return function (mArg) {
              var isFlag = Data_Maybe.isNothing(mArg);
              var go = function (v) {
                  return function (v1) {
                      if (v instanceof Neodoc_ArgParser_Token.SOpt && (v.value0 === f && (!isFlag && Data_Array["null"](v.value1)))) {
                          if (v.value2 instanceof Data_Maybe.Just) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: new Data_Maybe.Just(v.value2.value0), 
                                  remainder: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: false, 
                                  explicitArg: true
                              });
                          };
                          if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Neodoc_ArgParser_Token.Lit) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: new Data_Maybe.Just(v1.value0.value0), 
                                  remainder: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: true, 
                                  explicitArg: false
                              });
                          };
                          var argIsOptional = Data_Maybe.maybe(true)(Neodoc_Data_OptionArgument.isOptionArgumentOptional)(mArg);
                          var $33 = term || argIsOptional;
                          if ($33) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: Data_Maybe.Nothing.value, 
                                  remainder: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: false, 
                                  explicitArg: false
                              });
                          };
                          if (!$33) {
                              return Neodoc_Parsing_Parser["fatal'"](Neodoc_ArgParser_Type.optionRequiresArgumentError(new Neodoc_OptionAlias.Short(f)));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 227, column 17 - line 233, column 80: " + [ $33.constructor.name ]);
                      };
                      if (v instanceof Neodoc_ArgParser_Token.SOpt && (v.value0 === f && (!isFlag && !Data_Array["null"](v.value1)))) {
                          var arg = Data_String.fromCharArray(v.value1) + Data_Maybe.maybe("")(function (v3) {
                              return "=" + v3;
                          })(v.value2);
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                              rawValue: new Data_Maybe.Just(arg), 
                              remainder: Data_Maybe.Nothing.value, 
                              hasConsumedArg: false, 
                              explicitArg: Data_Maybe.isJust(v.value2)
                          });
                      };
                      if (v instanceof Neodoc_ArgParser_Token.SOpt && (v.value0 === f && (isFlag && !Data_Array["null"](v.value1)))) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                              rawValue: Data_Maybe.Nothing.value, 
                              hasConsumedArg: false, 
                              explicitArg: Data_Maybe.isJust(v.value2), 
                              remainder: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_ArgParser_Token.SOpt(Data_Array_Partial.head()(v.value1), Data_Array_Partial.tail()(v.value1), v.value2))
                          });
                      };
                      if (v instanceof Neodoc_ArgParser_Token.SOpt && (v.value0 === f && (isFlag && Data_Array["null"](v.value1)))) {
                          if (v.value2 instanceof Data_Maybe.Just) {
                              return Neodoc_Parsing_Parser["fatal'"](Neodoc_ArgParser_Type.optionTakesNoArgumentError(new Neodoc_OptionAlias.Short(v.value0)));
                          };
                          if (v.value2 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: Data_Maybe.Nothing.value, 
                                  remainder: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: false, 
                                  explicitArg: false
                              });
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 264, column 7 - line 270, column 26: " + [ v.value2.constructor.name ]);
                      };
                      return Neodoc_Parsing_Parser.fail("Invalid token: " + Data_Pretty.pretty(Neodoc_ArgParser_Token.prettyToken)(v));
                  };
              };
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
                  if (v instanceof Data_List_Types.Cons) {
                      var nextToken = Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_ArgParser_Token.getToken)(Data_List.head(v.value1));
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(go(v.value0.value0)(nextToken))(function (v1) {
                          var $51 = term && Data_Maybe.isNothing(v1.remainder);
                          if ($51) {
                              var va = Data_Maybe.maybe([  ])(function ($104) {
                                  return Data_Array.singleton(Neodoc_Value.StringValue.create($104));
                              })(v1.rawValue);
                              var v2 = Data_Maybe.maybe([  ])(Data_Function["const"]([ Neodoc_Value.StringValue.create(Data_String.drop(2)(v.value0.value1)) ]))(v1.remainder);
                              var val = Neodoc_Value.ArrayValue.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2)(va));
                              var newInput = (function () {
                                  if (v.value1 instanceof Data_List_Types.Cons && v1.hasConsumedArg) {
                                      return v.value1.value1;
                                  };
                                  return v.value1;
                              })();
                              return Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser.setInput(newInput))(new OptRes(val, true, false));
                          };
                          if (!$51) {
                              var val = Data_Maybe.maybe(new Neodoc_Value.BoolValue(true))(Data_Function.flip(Neodoc_Value.read)(false))(v1.rawValue);
                              var rest = (function () {
                                  if (v.value1 instanceof Data_List_Types.Cons && v1.hasConsumedArg) {
                                      return v.value1.value1;
                                  };
                                  return v.value1;
                              })();
                              var newSource = "-" + Data_String.drop(2)(v.value0.value1);
                              var pushed = Data_Maybe.maybe(Control_Plus.empty(Data_List_Types.plusList))(function (tok) {
                                  return Data_List.singleton(new Neodoc_ArgParser_Token.PositionedToken(tok, newSource, v.value0.value2));
                              })(v1.remainder);
                              var nPushed = Data_List.length(pushed);
                              var rest$prime = (function () {
                                  var $58 = nPushed > 0;
                                  if ($58) {
                                      return Data_Functor.mapFlipped(Data_List_Types.functorList)(rest)(function (v2) {
                                          return new Neodoc_ArgParser_Token.PositionedToken(v2.value0, v2.value1, v2.value2 + nPushed | 0);
                                      });
                                  };
                                  if (!$58) {
                                      return rest;
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 193, column 25 - line 196, column 36: " + [ $58.constructor.name ]);
                              })();
                              var newInput = Data_Semigroup.append(Data_List_Types.semigroupList)(pushed)(rest$prime);
                              return Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Neodoc_Parsing_Parser.setInput(newInput))(OptRes.create(val)(false)(!v1.explicitArg));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 166, column 9 - line 200, column 60: " + [ $51.constructor.name ]);
                      });
                  };
                  return Neodoc_Parsing_Parser.fail("Expected token, met EOF");
              });
          };
      };
  };
  var positional = function (rep) {
      return function (n) {
          return token(rep)(function (v) {
              if (v instanceof Neodoc_ArgParser_Token.Lit) {
                  return new Data_Maybe.Just(Neodoc_Value.read(v.value0)(false));
              };
              return Data_Maybe.Nothing.value;
          });
      };
  };
  var optionArgument = token("option-argument")(function (v) {
      if (v instanceof Neodoc_ArgParser_Token.Lit) {
          return new Data_Maybe.Just(Neodoc_Value.read(v.value0)(false));
      };
      return Data_Maybe.Nothing.value;
  });
  var longOption = function (term) {
      return function (n) {
          return function (mArg) {
              var isFlag = Data_Maybe.isNothing(mArg);
              var go = function (v) {
                  return function (v1) {
                      if (v instanceof Neodoc_ArgParser_Token.LOpt && (v.value1 instanceof Data_Maybe.Nothing && (v.value0 === n && term))) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                              rawValue: Data_Maybe.Nothing.value, 
                              hasConsumedArg: false, 
                              explicitArg: false
                          });
                      };
                      if (v instanceof Neodoc_ArgParser_Token.LOpt && (!isFlag && v.value0 === n)) {
                          if (v.value1 instanceof Data_Maybe.Just) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: new Data_Maybe.Just(v.value1.value0), 
                                  hasConsumedArg: false, 
                                  explicitArg: true
                              });
                          };
                          if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Neodoc_ArgParser_Token.Lit) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: new Data_Maybe.Just(v1.value0.value0), 
                                  hasConsumedArg: true, 
                                  explicitArg: false
                              });
                          };
                          var argIsOptional = Data_Maybe.maybe(true)(Neodoc_Data_OptionArgument.isOptionArgumentOptional)(mArg);
                          var $81 = term || argIsOptional;
                          if ($81) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: false, 
                                  explicitArg: false
                              });
                          };
                          if (!$81) {
                              return Neodoc_Parsing_Parser["fatal'"](Neodoc_ArgParser_Type.optionRequiresArgumentError(new Neodoc_OptionAlias.Long(n)));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 134, column 17 - line 139, column 79: " + [ $81.constructor.name ]);
                      };
                      if (v instanceof Neodoc_ArgParser_Token.LOpt && (isFlag && v.value0 === n)) {
                          if (v.value1 instanceof Data_Maybe.Just) {
                              return Neodoc_Parsing_Parser["fatal'"](Neodoc_ArgParser_Type.optionTakesNoArgumentError(new Neodoc_OptionAlias.Long(n)));
                          };
                          if (v.value1 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)({
                                  rawValue: Data_Maybe.Nothing.value, 
                                  hasConsumedArg: false, 
                                  explicitArg: false
                              });
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 144, column 7 - line 149, column 26: " + [ v.value1.constructor.name ]);
                      };
                      return Neodoc_Parsing_Parser.fail("Invalid token: " + Data_Pretty.pretty(Neodoc_ArgParser_Token.prettyToken)(v));
                  };
              };
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
                  if (v instanceof Data_List_Types.Cons) {
                      var nextToken = Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_ArgParser_Token.getToken)(Data_List.head(v.value1));
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(go(v.value0.value0)(nextToken))(function (v1) {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.setInput((function () {
                              if (v.value1 instanceof Data_List_Types.Cons && v1.hasConsumedArg) {
                                  return v.value1.value1;
                              };
                              return v.value1;
                          })()))(function () {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)((function () {
                                  if (term) {
                                      var val = Neodoc_Value.ArrayValue.create(Data_Maybe.maybe([  ])(function ($105) {
                                          return Data_Array.singleton(Neodoc_Value.StringValue.create($105));
                                      })(v1.rawValue));
                                      return new OptRes(val, true, false);
                                  };
                                  if (!term) {
                                      var val = Data_Maybe.maybe(new Neodoc_Value.BoolValue(true))(Data_Function.flip(Neodoc_Value.read)(false))(v1.rawValue);
                                      return OptRes.create(val)(true)(!v1.explicitArg);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Argument line 91, column 14 - line 99, column 57: " + [ term.constructor.name ]);
                              })());
                          });
                      });
                  };
                  return Neodoc_Parsing_Parser.fail("Expected token, met EOF");
              });
          };
      };
  };
  var eoa = token("--")(function (v) {
      if (v instanceof Neodoc_ArgParser_Token.EOA) {
          return new Data_Maybe.Just(new Neodoc_Value.ArrayValue(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0)));
      };
      return Data_Maybe.Nothing.value;
  });
  var command = function (rep) {
      return function (n) {
          return token(rep)(function (v) {
              if (v instanceof Neodoc_ArgParser_Token.Lit && v.value0 === n) {
                  return new Data_Maybe.Just(new Neodoc_Value.BoolValue(true));
              };
              return Data_Maybe.Nothing.value;
          });
      };
  };
  exports["OptRes"] = OptRes;
  exports["command"] = command;
  exports["eoa"] = eoa;
  exports["longOption"] = longOption;
  exports["optionArgument"] = optionArgument;
  exports["positional"] = positional;
  exports["shortOption"] = shortOption;
  exports["stdin"] = stdin;
  exports["token"] = token;
})(PS["Neodoc.ArgParser.Argument"] = PS["Neodoc.ArgParser.Argument"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_List = PS["Data.List"];
  var Data_Function = PS["Data.Function"];
  var Data_Either = PS["Data.Either"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus_Partial = PS["Control.MonadPlus.Partial"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_Chunk = PS["Neodoc.Data.Chunk"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_ArgParser_Type = PS["Neodoc.ArgParser.Type"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Neodoc_ArgParser_Token = PS["Neodoc.ArgParser.Token"];
  var Neodoc_ArgParser_Argument = PS["Neodoc.ArgParser.Argument"];
  var Neodoc_ArgParser_Lexer = PS["Neodoc.ArgParser.Lexer"];
  var Neodoc_ArgParser_Profile = PS["Neodoc.ArgParser.Profile"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Eq = PS["Data.Eq"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var ParserCont = (function () {
      function ParserCont(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      ParserCont.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new ParserCont(value0, value1, value2, value3);
                  };
              };
          };
      };
      return ParserCont;
  })();
  var ErrorEvaluation = (function () {
      function ErrorEvaluation(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorEvaluation.create = function (value0) {
          return function (value1) {
              return new ErrorEvaluation(value0, value1);
          };
      };
      return ErrorEvaluation;
  })();
  var SuccessEvaluation = (function () {
      function SuccessEvaluation(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SuccessEvaluation.create = function (value0) {
          return function (value1) {
              return new SuccessEvaluation(value0, value1);
          };
      };
      return SuccessEvaluation;
  })();
  var resume = function (v) {
      return new Neodoc_Parsing_Parser.Parser(function (v2) {
          return new Neodoc_Parsing_Parser.Step(true, new Neodoc_Parsing_Parser.ParseArgs(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), new Data_Either.Right(v.value1));
      });
  };
  var isSuccessEvaluation = function (v) {
      if (v instanceof SuccessEvaluation) {
          return true;
      };
      return false;
  };
  var isErrorEvaluation = function (v) {
      if (v instanceof ErrorEvaluation) {
          return true;
      };
      return false;
  };
  var getEvaluationDepth = function (v) {
      if (v instanceof ErrorEvaluation) {
          return v.value0.value1.depth;
      };
      if (v instanceof SuccessEvaluation) {
          return v.value0.value1.depth;
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 64, column 1 - line 64, column 70: " + [ v.constructor.name ]);
  };
  var fork = function (parser) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getState)(function (v1) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getGlobalState)(function (v2) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v3) {
                      var result = Neodoc_Parsing_Parser.runParser(Data_Optimize_Uncurried.Args5.create(v)(v1)(v2)(v3)(new Neodoc_Parsing_Parser.Parser(function (a) {
                          var $82 = Neodoc_Parsing_Parser.unParser(parser)(a);
                          var cont = new ParserCont(Neodoc_Parsing_Parser.getC($82.value1), Neodoc_Parsing_Parser.getS($82.value1), Neodoc_Parsing_Parser.getG($82.value1), Neodoc_Parsing_Parser.getI($82.value1));
                          return new Neodoc_Parsing_Parser.Step($82.value0, $82.value1, (function () {
                              if ($82.value2 instanceof Data_Either.Left) {
                                  return new Data_Either.Right(new Data_Either.Left(new Data_Tuple.Tuple(Neodoc_Parsing_Parser.getG($82.value1), $82.value2.value0)));
                              };
                              if ($82.value2 instanceof Data_Either.Right) {
                                  return new Data_Either.Right(new Data_Either.Right(new Data_Tuple.Tuple(cont, $82.value2.value0)));
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 174, column 29 - line 176, column 60: " + [ $82.value2.constructor.name ]);
                          })());
                      })));
                      return (function (dictPartial) {
                          var __unused = function (dictPartial1) {
                              return function ($dollar32) {
                                  return $dollar32;
                              };
                          };
                          return __unused(dictPartial)((function () {
                              if (result instanceof Data_Either.Right && result.value0 instanceof Data_Either.Left) {
                                  return new Neodoc_Parsing_Parser.Parser(function (a) {
                                      return new Neodoc_Parsing_Parser.Step(false, Neodoc_Parsing_Parser.setG(result.value0.value0.value0)(a), new Data_Either.Left(result.value0.value0.value1));
                                  });
                              };
                              if (result instanceof Data_Either.Right && result.value0 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(result.value0.value0);
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 177, column 17 - line 181, column 32: " + [ result.constructor.name ]);
                          })());
                      })();
                  });
              });
          });
      });
  };
  var evalParsers = function (dictOrd) {
      return function (v) {
          if (Data_List.length(v.value1) === 0) {
              return Neodoc_Parsing_Parser["fail'"](Neodoc_ArgParser_Type.internalError("no parsers to evaluate"));
          };
          var applyResults = function (results) {
              return function (p1) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p1)(function (v1) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Traversable["for"](Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.traversableList)(results)(function (v2) {
                          if (v2 instanceof ErrorEvaluation) {
                              if (v2.value0.value2.deepestError instanceof Data_Maybe.Just) {
                                  return Neodoc_ArgParser_Type.setErrorAtDepth(v2.value0.value2.deepestError.value0.value0)(v2.value0.value2.deepestError.value0.value1);
                              };
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit);
                          };
                          if (v2 instanceof SuccessEvaluation) {
                              if (v2.value0.value2.deepestError instanceof Data_Maybe.Just) {
                                  return Neodoc_ArgParser_Type.setErrorAtDepth(v2.value0.value2.deepestError.value0.value0)(v2.value0.value2.deepestError.value0.value1);
                              };
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit);
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 136, column 33 - line 144, column 25: " + [ v2.constructor.name ]);
                      }))(function () {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(v1);
                      });
                  });
              };
          };
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getParseState)(function (v1) {
              var collected = Data_Functor.mapFlipped(Data_List_Types.functorList)(v.value1)(function (parser) {
                  return Neodoc_Parsing_Parser.runParser(Data_Optimize_Uncurried.Args5.create(v1.value0)(v1.value1)(v1.value2)(v1.value3)(new Neodoc_Parsing_Parser.Parser(function (a) {
                      var $126 = Neodoc_Parsing_Parser.unParser(parser)(a);
                      var cont = new ParserCont($126.value1.value0, $126.value1.value1, $126.value1.value2, $126.value1.value3);
                      return new Neodoc_Parsing_Parser.Step($126.value0, $126.value1, (function () {
                          if ($126.value2 instanceof Data_Either.Left && $126.value2.value0.value0) {
                              return new Data_Either.Left($126.value2.value0);
                          };
                          if ($126.value2 instanceof Data_Either.Left) {
                              return Data_Either.Right.create(new ErrorEvaluation(cont, $126.value2.value0));
                          };
                          if ($126.value2 instanceof Data_Either.Right) {
                              return Data_Either.Right.create(new SuccessEvaluation(cont, $126.value2.value0));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 87, column 30 - line 90, column 66: " + [ $126.value2.constructor.name ]);
                      })());
                  })));
              });
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                  var $140 = Control_MonadPlus_Partial.mlefts(Data_List_Types.monadPlusList)(collected);
                  if ($140 instanceof Data_List_Types.Cons) {
                      return new Neodoc_Parsing_Parser.Parser(function (a) {
                          return new Neodoc_Parsing_Parser.Step(false, a, new Data_Either.Left($140.value0));
                      });
                  };
                  return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Unit.unit);
              })())(function () {
                  var results = Control_MonadPlus_Partial.mrights(Data_List_Types.monadPlusList)(collected);
                  var successes = Data_List.reverse(Data_List.filter(isSuccessEvaluation)(results));
                  var errors = Data_List.filter(isErrorEvaluation)(results);
                  var eqByDepth = Data_Function.on(Data_Eq.eq(Data_Eq.eqInt))(getEvaluationDepth);
                  var cmpByDepth = Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(getEvaluationDepth);
                  var deepestErrors = Data_List.last(Data_List.groupBy(eqByDepth)(Data_List.sortBy(cmpByDepth)(errors)));
                  var bestSuccess = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.last(Data_List.groupBy(eqByDepth)(Data_List.sortBy(cmpByDepth)(successes))))(function (v2) {
                      return Data_Function.flip(Data_Foldable.maximumBy(Data_List_Types.foldableNonEmptyList))(v2)(Data_Function.on(Data_Ord.compare(dictOrd))(function (v3) {
                          var __unused = function (dictPartial1) {
                              return function ($dollar36) {
                                  return $dollar36;
                              };
                          };
                          return __unused()((function () {
                              if (v3 instanceof SuccessEvaluation) {
                                  return v.value0(v3.value1);
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Evaluate line 109, column 61 - line 110, column 37: " + [ v3.constructor.name ]);
                          })());
                      }));
                  });
                  if (bestSuccess instanceof Data_Maybe.Just && bestSuccess.value0 instanceof SuccessEvaluation) {
                      return applyResults(results)(new Neodoc_Parsing_Parser.Parser(function (v2) {
                          return new Neodoc_Parsing_Parser.Step(true, new Neodoc_Parsing_Parser.ParseArgs(bestSuccess.value0.value0.value0, bestSuccess.value0.value0.value1, bestSuccess.value0.value0.value2, bestSuccess.value0.value0.value3), new Data_Either.Right(bestSuccess.value0.value1));
                      }));
                  };
                  if (deepestErrors instanceof Data_Maybe.Just) {
                      var $157 = Data_Newtype.unwrap(Data_List_Types.newtypeNonEmptyList)(deepestErrors.value0);
                      if ($157.value0 instanceof ErrorEvaluation && (Data_List["null"]($157.value1) || !Data_List["null"](v1.value3))) {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(applyResults(results)(new Neodoc_Parsing_Parser.Parser(function (v2) {
                              return new Neodoc_Parsing_Parser.Step(false, new Neodoc_Parsing_Parser.ParseArgs($157.value0.value0.value0, $157.value0.value0.value1, $157.value0.value0.value2, $157.value0.value0.value3), new Data_Either.Right(Data_Unit.unit));
                          })))(function () {
                              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getState)(function (v2) {
                                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getGlobalState)(function (v3) {
                                      if (v3.deepestError instanceof Data_Maybe.Just && v3.deepestError.value0.value0 > v2.depth) {
                                          return Neodoc_Parsing_Parser["fail'"](v3.deepestError.value0.value1);
                                      };
                                      return Neodoc_Parsing_Parser["throw"]($157.value0.value1);
                                  });
                              });
                          });
                      };
                      return Neodoc_Parsing_Parser.fail("");
                  };
                  return Neodoc_Parsing_Parser.fail("The impossible happened. Failure without error");
              });
          });
      };
  };
  exports["ErrorEvaluation"] = ErrorEvaluation;
  exports["SuccessEvaluation"] = SuccessEvaluation;
  exports["ParserCont"] = ParserCont;
  exports["evalParsers"] = evalParsers;
  exports["fork"] = fork;
  exports["getEvaluationDepth"] = getEvaluationDepth;
  exports["isErrorEvaluation"] = isErrorEvaluation;
  exports["isSuccessEvaluation"] = isSuccessEvaluation;
  exports["resume"] = resume;
})(PS["Neodoc.ArgParser.Evaluate"] = PS["Neodoc.ArgParser.Evaluate"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Value_Origin = PS["Neodoc.Value.Origin"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var getFallbackValue = function (options) {
      return function (env) {
          return function (mDescription) {
              return function (x) {
                  var fromEnv = function (v) {
                      if (v instanceof Data_Maybe.Just && (v.value0 instanceof Neodoc_Data_Description.OptionDescription && v.value0.value4 instanceof Data_Maybe.Just)) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_Value.StringValue.create)(Neodoc_Env.lookup(v.value0.value4.value0)(env));
                      };
                      return Data_Maybe.Nothing.value;
                  };
                  var fromDefault = function (v) {
                      return function (v1) {
                          if (v instanceof Neodoc_Data_SolvedLayout.Option && (v1 instanceof Data_Maybe.Just && (v1.value0 instanceof Neodoc_Data_Description.OptionDescription && v1.value0.value3 instanceof Data_Maybe.Just))) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                  if (v.value2) {
                                      return Neodoc_Value.ArrayValue.create(Neodoc_Value.intoArray(v1.value0.value3.value0));
                                  };
                                  if (!v.value2) {
                                      return v1.value0.value3.value0;
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Fallback line 44, column 12 - line 46, column 21: " + [ v.value2.constructor.name ]);
                              })());
                          };
                          return Data_Maybe.Nothing.value;
                      };
                  };
                  var empty = (function () {
                      var go = function (v) {
                          if (v instanceof Neodoc_Data_SolvedLayout.Option && (v.value1 instanceof Data_Maybe.Nothing && !options.requireFlags)) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                  if (v.value2) {
                                      return new Neodoc_Value.ArrayValue([  ]);
                                  };
                                  if (!v.value2) {
                                      return new Neodoc_Value.BoolValue(false);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Fallback line 54, column 14 - line 55, column 39: " + [ v.value2.constructor.name ]);
                              })());
                          };
                          if (v instanceof Neodoc_Data_SolvedLayout.Option && (v.value1 instanceof Data_Maybe.Just && (v.value1.value0.value1 && !options.requireFlags))) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                  if (v.value2) {
                                      return new Neodoc_Value.ArrayValue([  ]);
                                  };
                                  if (!v.value2) {
                                      return new Neodoc_Value.BoolValue(false);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Fallback line 58, column 14 - line 59, column 39: " + [ v.value2.constructor.name ]);
                              })());
                          };
                          if (v instanceof Neodoc_Data_SolvedLayout.Stdin) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Value.BoolValue(false));
                          };
                          if (v instanceof Neodoc_Data_SolvedLayout.EOA) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Value.ArrayValue([  ]));
                          };
                          return Data_Maybe.Nothing.value;
                      };
                      return go;
                  })();
                  return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(fromEnv(mDescription))(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Environment.value)))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(fromDefault(x)(mDescription))(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Default.value))))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(empty(x))(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Empty.value)));
              };
          };
      };
  };
  exports["getFallbackValue"] = getFallbackValue;
})(PS["Neodoc.ArgParser.Fallback"] = PS["Neodoc.ArgParser.Fallback"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Pretty = PS["Data.Pretty"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_ArgParser_KeyValue = PS["Neodoc.ArgParser.KeyValue"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Tuple = PS["Data.Tuple"];
  var Neodoc_ArgParser_Arg = PS["Neodoc.ArgParser.Arg"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];        
  var ArgParseResult = (function () {
      function ArgParseResult(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ArgParseResult.create = function (value0) {
          return function (value1) {
              return new ArgParseResult(value0, value1);
          };
      };
      return ArgParseResult;
  })();
  var getResult = function (v) {
      return v.value1;
  };
  exports["ArgParseResult"] = ArgParseResult;
  exports["getResult"] = getResult;
})(PS["Neodoc.ArgParser.Result"] = PS["Neodoc.ArgParser.Result"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_List = PS["Data.List"];
  var Data_Array = PS["Data.Array"];
  var Data_Optimize_Uncurried = PS["Data.Optimize.Uncurried"];
  var Data_List_Partial = PS["Data.List.Partial"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Set = PS["Data.Set"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Either = PS["Data.Either"];
  var Data_String = PS["Data.String"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable_Extra = PS["Data.Foldable.Extra"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Map = PS["Data.Map"];
  var Data_Pretty = PS["Data.Pretty"];
  var Control_Alt = PS["Control.Alt"];
  var Control_MonadPlus_Partial = PS["Control.MonadPlus.Partial"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Lazy = PS["Control.Lazy"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];
  var Neodoc_Value_Origin = PS["Neodoc.Value.Origin"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_Chunk = PS["Neodoc.Data.Chunk"];
  var Neodoc_Data_Indexed = PS["Neodoc.Data.Indexed"];
  var Neodoc_Data_IndexedLayout = PS["Neodoc.Data.IndexedLayout"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_Parsing_Parser_Combinators = PS["Neodoc.Parsing.Parser.Combinators"];
  var Neodoc_ArgParser_Type = PS["Neodoc.ArgParser.Type"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Neodoc_ArgParser_Token = PS["Neodoc.ArgParser.Token"];
  var Neodoc_ArgParser_Argument = PS["Neodoc.ArgParser.Argument"];
  var Neodoc_ArgParser_Lexer = PS["Neodoc.ArgParser.Lexer"];
  var Neodoc_ArgParser_Evaluate = PS["Neodoc.ArgParser.Evaluate"];
  var Neodoc_ArgParser_Required = PS["Neodoc.ArgParser.Required"];
  var Neodoc_ArgParser_Fallback = PS["Neodoc.ArgParser.Fallback"];
  var Neodoc_ArgParser_Result = PS["Neodoc.ArgParser.Result"];
  var Neodoc_ArgParser_KeyValue = PS["Neodoc.ArgParser.KeyValue"];
  var Neodoc_ArgParser_Profile = PS["Neodoc.ArgParser.Profile"];
  var Neodoc_ArgParser_Arg = PS["Neodoc.ArgParser.Arg"];
  var Neodoc_ArgParser_Debug = PS["Neodoc.ArgParser.Debug"];
  var Neodoc_ArgParser_ParseLayout = PS["Neodoc.ArgParser.ParseLayout"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Monad = PS["Control.Monad"];        
  var toSimpleBranch = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          var go = function (v1) {
              if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
                  return Neodoc_Data_Layout.Elem.create(Neodoc_ArgParser_Arg.getArg(v1.value2));
              };
              if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
                  return Neodoc_Data_Layout.Group.create(v1.value2)(v1.value3)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v2) {
                      return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(go)(v2);
                  })(v1.value4));
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 768, column 1 - line 768, column 25: " + [ v1.constructor.name ]);
          };
          return new Data_List_Types.Cons(go(v.value0), toSimpleBranch(v.value1));
      };
      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 768, column 1 - line 768, column 25: " + [ v.constructor.name ]);
  };
  var toParseBranch = function (xs) {
      var nextId = Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
          return v + 1 | 0;
      }));
      var go = function (v) {
          if (v instanceof Neodoc_Data_Layout.Elem) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(nextId)(function (v1) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Neodoc_ArgParser_ParseLayout.ParseElem(v1, Neodoc_ArgParser_Arg.isFreeLayout(v), Neodoc_ArgParser_Arg.setId(v1)(v.value0)));
              });
          };
          if (v instanceof Neodoc_Data_Layout.Group) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(nextId)(function (v1) {
                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Neodoc_ArgParser_ParseLayout.ParseGroup.create(v1)(Neodoc_ArgParser_Arg.isFreeLayout(v))(v.value0)(v.value1))(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(v.value2)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(go)));
              });
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 754, column 1 - line 763, column 27: " + [ v.constructor.name ]);
      };
      return Control_Monad_State.evalState(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_List_Types.traversableList)(xs)(go))(0);
  };
  var toArgBranch = function (options) {
      return function (env) {
          return function (descriptions) {
              return function (x) {
                  var go = function (v) {
                      if (v instanceof Neodoc_Data_Layout.Elem) {
                          var description = (function () {
                              if (v.value0 instanceof Neodoc_Data_SolvedLayout.Option) {
                                  return Neodoc_ArgParser_Type.findDescription(v.value0.value0)(descriptions);
                              };
                              return Data_Maybe.Nothing.value;
                          })();
                          var fallback = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_Value_RichValue.unRichValue)(Neodoc_ArgParser_Fallback.getFallbackValue(options)(env)(description)(v.value0)))(function (v1) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                  var $128 = {};
                                  for (var $129 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $129)) {
                                          $128[$129] = v1[$129];
                                      };
                                  };
                                  $128.value = (function () {
                                      var $127 = Neodoc_Data_SolvedLayout.isElemRepeatable(v.value0);
                                      if ($127) {
                                          return Neodoc_Value.ArrayValue.create(Neodoc_Value.intoArray(v1.value));
                                      };
                                      if (!$127) {
                                          return v1.value;
                                      };
                                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 800, column 21 - line 802, column 35: " + [ $127.constructor.name ]);
                                  })();
                                  return $128;
                              })());
                          });
                          return Neodoc_Data_Layout.Elem.create(new Neodoc_ArgParser_Arg.Arg(0, v.value0, Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(v.value0), fallback, false));
                      };
                      if (v instanceof Neodoc_Data_Layout.Group) {
                          return Neodoc_Data_Layout.Group.create(v.value0)(v.value1)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
                              return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(go)(v1);
                          })(v.value2));
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 791, column 1 - line 811, column 52: " + [ v.constructor.name ]);
                  };
                  return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(go)(x);
              };
          };
      };
  };
  var terminate = function (arg) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
          var rest = Neodoc_Value.ArrayValue.create(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Functor.map(Data_List_Types.functorList)(function ($558) {
              return Neodoc_Value.StringValue.create(Neodoc_ArgParser_Token.getSource($558));
          })(v)));
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Type.setDone)(function () {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Type.setDepth(99999))(function () {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.setInput(Data_List_Types.Nil.value))(function () {
                      return Neodoc_Parsing_Parser["return"](rest);
                  });
              });
          });
      });
  };
  var termAs = function (x) {
      var go = function (v) {
          if (v instanceof Neodoc_ArgParser_ParseLayout.ParseGroup && (v.value4.value0.value0 instanceof Neodoc_ArgParser_ParseLayout.ParseElem && (v.value4.value0.value0.value2.value1 instanceof Neodoc_Data_SolvedLayout.Positional && (v.value4.value0.value1 instanceof Data_List_Types.Nil && (v.value4.value1 instanceof Data_List_Types.Nil && (v.value3 || v.value4.value0.value0.value2.value1.value1)))))) {
              return new Data_Maybe.Just(v.value4.value0.value0.value2);
          };
          if (v instanceof Neodoc_ArgParser_ParseLayout.ParseElem && (v.value2.value1 instanceof Neodoc_Data_SolvedLayout.Positional && v.value2.value1.value1)) {
              return new Data_Maybe.Just(v.value2);
          };
          return Data_Maybe.Nothing.value;
      };
      return go(x);
  };
  var parseArg = function (x) {
      var go = function (v) {
          if (v instanceof Neodoc_Data_SolvedLayout.Positional) {
              return Neodoc_ArgParser_Argument.positional(v.value0)(v.value0);
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Command) {
              return Neodoc_ArgParser_Argument.command(v.value0)(v.value0);
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Stdin) {
              return Neodoc_ArgParser_Argument.stdin;
          };
          if (v instanceof Neodoc_Data_SolvedLayout.EOA) {
              return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Neodoc_ArgParser_Argument.eoa)(Neodoc_Parsing_Parser["return"](new Neodoc_Value.ArrayValue([  ])));
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Option) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getParseState)(function (v1) {
                  if (v1.value3 instanceof Data_List_Types.Cons && (function () {
                      if (v1.value3.value0.value0 instanceof Neodoc_ArgParser_Token.LOpt) {
                          return true;
                      };
                      if (v1.value3.value0.value0 instanceof Neodoc_ArgParser_Token.SOpt) {
                          return true;
                      };
                      return false;
                  })()) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Type["lookupDescription'"](v.value0))(function (v2) {
                          if (v2 instanceof Neodoc_Data_Description.OptionDescription) {
                              return Neodoc_Parsing_Parser["return"](new Data_Tuple.Tuple(v2.value0, new Data_Tuple.Tuple(v2.value3, v2.value4)));
                          };
                          return Neodoc_Parsing_Parser["fail'"](Neodoc_ArgParser_Type.internalError("invalid option description"));
                      }))(function (v2) {
                          var term = Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v3) {
                              return Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(v3)(v1.value0.options.stopAt);
                          })(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v2.value0)(function (v3) {
                              if (v3 instanceof Neodoc_OptionAlias.Short) {
                                  return "-" + Data_String.singleton(v3.value0);
                              };
                              if (v3 instanceof Neodoc_OptionAlias.Long) {
                                  return "--" + v3.value0;
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 713, column 64 - line 715, column 55: " + [ v3.constructor.name ]);
                          }));
                          var ns = Data_NonEmpty_Extra.toList(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(v2.value0)(function (v3) {
                              if (v3 instanceof Neodoc_OptionAlias.Short) {
                                  return new Data_Either.Left(v3.value0);
                              };
                              if (v3 instanceof Neodoc_OptionAlias.Long) {
                                  return new Data_Either.Right(v3.value0);
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 708, column 48 - line 710, column 49: " + [ v3.constructor.name ]);
                          }));
                          var shortAliases = Control_MonadPlus_Partial.mlefts(Data_List_Types.monadPlusList)(ns);
                          var longAliases = Control_MonadPlus_Partial.mrights(Data_List_Types.monadPlusList)(ns);
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function (dictPartial) {
                              var __unused = function (dictPartial1) {
                                  return function ($dollar94) {
                                      return $dollar94;
                                  };
                              };
                              return __unused(dictPartial)((function () {
                                  if (v1.value3.value0.value0 instanceof Neodoc_ArgParser_Token.LOpt) {
                                      if (longAliases instanceof Data_List_Types.Nil) {
                                          return Neodoc_Parsing_Parser.fail("Option has no long alias");
                                      };
                                      return Neodoc_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(longAliases)(function (alias) {
                                          return Neodoc_Parsing_Parser_Combinators["try"](Neodoc_ArgParser_Argument.longOption(term)(alias)(v.value1));
                                      }));
                                  };
                                  if (v1.value3.value0.value0 instanceof Neodoc_ArgParser_Token.SOpt) {
                                      if (shortAliases instanceof Data_List_Types.Nil) {
                                          return Neodoc_Parsing_Parser.fail("Option has no short alias");
                                      };
                                      return Neodoc_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(shortAliases)(function (alias) {
                                          return Neodoc_Parsing_Parser_Combinators["try"](Neodoc_ArgParser_Argument.shortOption(term)(alias)(v.value1));
                                      }));
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 718, column 55 - line 728, column 50: " + [ v1.value3.value0.value0.constructor.name ]);
                              })());
                          })())(function (v3) {
                              var $202 = term && v3.value1;
                              if ($202) {
                                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(terminate(x))(function (v5) {
                                      return Neodoc_Parsing_Parser["return"](new Neodoc_Value.ArrayValue(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Neodoc_Value.intoArray(v3.value0))(Neodoc_Value.intoArray(v5))));
                                  });
                              };
                              if (!$202) {
                                  var $204 = Data_Maybe.isJust(v.value1) && (v.value2 && v3.value2);
                                  if ($204) {
                                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Array.many(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser)(Neodoc_ArgParser_Argument.optionArgument))(function (v5) {
                                          return Neodoc_Parsing_Parser["return"](new Neodoc_Value.ArrayValue(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Neodoc_Value.intoArray(v3.value0))(v5)));
                                      });
                                  };
                                  if (!$204) {
                                      return Neodoc_Parsing_Parser["return"](v3.value0);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 736, column 17 - line 740, column 34: " + [ $204.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 731, column 11 - line 740, column 34: " + [ $202.constructor.name ]);
                          });
                      });
                  };
                  return Neodoc_Parsing_Parser.fail("Expected long or short option");
              });
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 688, column 3 - line 688, column 46: " + [ v.constructor.name ]);
      };
      return go(x);
  };
  var isKnownToken = function (v) {
      return function (tok) {
          var occuresInLayouts = (function () {
              var matchesLayout = function (v1) {
                  if (v1 instanceof Neodoc_Data_Layout.Group) {
                      return Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(matchesLayout))(v1.value2);
                  };
                  if (v1 instanceof Neodoc_Data_Layout.Elem) {
                      var test = function (v2) {
                          return function (v3) {
                              if (v2 instanceof Neodoc_ArgParser_Token.LOpt && v3 instanceof Neodoc_Data_SolvedLayout.Option) {
                                  return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(new Neodoc_OptionAlias.Long(v2.value0))(v3.value0);
                              };
                              if (v2 instanceof Neodoc_ArgParser_Token.SOpt && v3 instanceof Neodoc_Data_SolvedLayout.Option) {
                                  return Data_Eq.eq(Neodoc_OptionAlias.eqOptionAlias)(new Neodoc_OptionAlias.Short(v2.value0))(v3.value0);
                              };
                              if (v2 instanceof Neodoc_ArgParser_Token.Lit && v3 instanceof Neodoc_Data_SolvedLayout.Command) {
                                  return v2.value0 === v3.value0;
                              };
                              if (v2 instanceof Neodoc_ArgParser_Token.EOA && v3 instanceof Neodoc_Data_SolvedLayout.EOA) {
                                  return true;
                              };
                              if (v2 instanceof Neodoc_ArgParser_Token.Stdin && v3 instanceof Neodoc_Data_SolvedLayout.Stdin) {
                                  return true;
                              };
                              return false;
                          };
                      };
                      return test(tok)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 865, column 3 - line 872, column 26: " + [ v1.constructor.name ]);
              };
              return Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(matchesLayout)))(v.layouts);
          })();
          var occuresInDescs = (function () {
              var matchesDesc = function (v1) {
                  if (v1 instanceof Neodoc_Data_Description.OptionDescription) {
                      var test = function (v2) {
                          if (v2 instanceof Neodoc_ArgParser_Token.LOpt) {
                              return Data_Foldable.elem(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Neodoc_OptionAlias.eqOptionAlias)(new Neodoc_OptionAlias.Long(v2.value0))(v1.value0);
                          };
                          if (v2 instanceof Neodoc_ArgParser_Token.SOpt) {
                              return Data_Foldable.elem(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Neodoc_OptionAlias.eqOptionAlias)(new Neodoc_OptionAlias.Short(v2.value0))(v1.value0);
                          };
                          return false;
                      };
                      return test(tok);
                  };
                  return false;
              };
              return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(matchesDesc)(v.descriptions);
          })();
          return occuresInDescs || occuresInLayouts;
      };
  };
  var isKnownToken$prime = function (tok) {
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getParseState)(function (v) {
          var $265 = Data_Map.lookup(Neodoc_ArgParser_Token.ordToken)(tok)(v.value2.isKnownCache);
          if ($265 instanceof Data_Maybe.Just) {
              return Neodoc_Parsing_Parser["return"]($265.value0);
          };
          if ($265 instanceof Data_Maybe.Nothing) {
              var isKnown = isKnownToken(v.value0.spec)(tok);
              return Data_Functor.voidRight(Neodoc_Parsing_Parser.functorParser)(isKnown)(Neodoc_Parsing_Parser.modifyGlobalState(function (s) {
                  var $267 = {};
                  for (var $268 in s) {
                      if ({}.hasOwnProperty.call(s, $268)) {
                          $267[$268] = s[$268];
                      };
                  };
                  $267.isKnownCache = Data_Map.alter(Neodoc_ArgParser_Token.ordToken)(Data_Function["const"](new Data_Maybe.Just(isKnown)))(tok)(s.isKnownCache);
                  return $267;
              }));
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 848, column 3 - line 854, column 12: " + [ $265.constructor.name ]);
      });
  };
  var isFrom = function (o) {
      return function (rv) {
          return Data_Eq.eq(Neodoc_Value_Origin.eqOrigin)(o)(Neodoc_Value_RichValue.getOrigin(rv));
      };
  };
  var initialState = {
      depth: 0, 
      hasTerminated: false
  };
  var initialGlobalState = {
      deepestError: Data_Maybe.Nothing.value, 
      isKnownCache: Data_Map.empty, 
      matchCache: Data_Map.empty, 
      argCache: Data_Map.empty
  };
  var byOrigin = function (vs) {
      return Data_Foldable.sum(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Data_Functor.map(Data_List_Types.functorList)(function ($559) {
          return Neodoc_Value_Origin.weight((function (v) {
              return v.origin;
          })(Neodoc_Value_RichValue.unRichValue(Data_Tuple.snd($559))));
      })(vs));
  };
  var _UNKNOWN_ARG = (function () {
      var arg = new Neodoc_Data_SolvedLayout.Command("?", true);
      var key = Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(arg);
      return new Neodoc_ArgParser_Arg.Arg(-1 | 0, arg, key, Data_Maybe.Nothing.value, true);
  })();
  var unknownOption = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v) {
      if (v instanceof Data_List_Types.Cons && (function () {
          if (v.value0.value0 instanceof Neodoc_ArgParser_Token.LOpt) {
              return true;
          };
          if (v.value0.value0 instanceof Neodoc_ArgParser_Token.SOpt) {
              return true;
          };
          return false;
      })()) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(isKnownToken$prime(v.value0.value0))(function (v1) {
              if (v1) {
                  return Neodoc_Parsing_Parser.fail("expected unknown option");
              };
              if (!v1) {
                  return Data_Functor.voidLeft(Neodoc_Parsing_Parser.functorParser)(Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_Parsing_Parser.setInput(v.value1))(Neodoc_ArgParser_Type.modifyDepth(function (v2) {
                      return v2 + 1 | 0;
                  })))(new Data_Tuple.Tuple(_UNKNOWN_ARG, Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Argv.value)(new Neodoc_Value.StringValue(v.value0.value1))));
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 832, column 7 - line 836, column 79: " + [ v1.constructor.name ]);
          });
      };
      return Neodoc_Parsing_Parser.fail("expected unknown option");
  });
  var solve = function (v) {
      var dropFirst = function (f) {
          return function (xs) {
              var go$prime = function (__copy_v1) {
                  return function (__copy_out) {
                      var v1 = __copy_v1;
                      var out = __copy_out;
                      tco: while (true) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              return new Data_Tuple.Tuple(out, false);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              var $294 = f(v1.value0);
                              if ($294) {
                                  return new Data_Tuple.Tuple(Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value1)(out), true);
                              };
                              if (!$294) {
                                  var __tco_v1 = v1.value1;
                                  var __tco_out = new Data_List_Types.Cons(v1.value0, out);
                                  v1 = __tco_v1;
                                  out = __tco_out;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 598, column 28 - line 598, column 79: " + [ $294.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 456, column 3 - line 456, column 75: " + [ v1.constructor.name, out.constructor.name ]);
                      };
                  };
              };
              return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(Data_List.reverse)(go$prime(xs)(Data_List_Types.Nil.value));
          };
      };
      var _toElem = function (x) {
          return new Neodoc_ArgParser_ParseLayout.ParseElem(Neodoc_ArgParser_Arg.getId(x), true, x);
      };
      var _rest = function (v1) {
          return new Data_Tuple.Tuple(v1.value1.value0, v1.value1.value1);
      };
      var _lmap = function (f) {
          return function (v1) {
              return new Data_Optimize_Uncurried.Args4(f(v1.value0), v1.value1, v1.value2, v1.value3);
          };
      };
      var _isRepeatable = function (v1) {
          if (Neodoc_ArgParser_Arg.getId(v1) >= 0) {
              return Neodoc_ArgParser_Arg.isArgRepeatable(v1) || v.value1 && Neodoc_ArgParser_Arg.isOption(v1);
          };
          return false;
      };
      var _isOptionalGroup = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
              return v1.value2;
          };
          return false;
      };
      var _isLayoutRepeatable = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
              return Neodoc_ArgParser_Arg.isArgRepeatable(v1.value2);
          };
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
              return v1.value3;
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 616, column 3 - line 616, column 64: " + [ v1.constructor.name ]);
      };
      var _isFixed = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
              return !v1.value1;
          };
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
              return !v1.value1;
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 604, column 3 - line 604, column 42: " + [ v1.constructor.name ]);
      };
      var _hasFallback = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
              return Data_Maybe.isJust(Neodoc_ArgParser_Arg.getFallback(v1.value2));
          };
          return false;
      };
      var _fst = function (v1) {
          return v1.value0;
      };
      var match$prime = function (v1) {
          var go$prime = function (v2) {
              if (v2.value2 instanceof Data_List_Types.Cons) {
                  return Neodoc_Parsing_Parser["catch"]((function () {
                      var $344 = _isFixed(v2.value2.value0) && v2.value1;
                      if ($344) {
                          return go$prime(new Data_Optimize_Uncurried.Args5(v2.value0, true, v2.value2.value1, new Data_List_Types.Cons(v2.value2.value0, v2.value3), v2.value4));
                      };
                      if (!$344) {
                          var sub$prime = v1.value1 && !v2.value1;
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Evaluate.fork(parseLayout(v1.value0 + 1 | 0)(sub$prime)(v2.value2.value0)))(function (v3) {
                              return go$prime(new Data_Optimize_Uncurried.Args5(v2.value0, v2.value1 || _isFixed(v2.value2.value0), v2.value2.value1, v2.value3, new Data_List_Types.Cons(new Data_Tuple.Tuple(v2.value2.value0, v3), v2.value4)));
                          });
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 476, column 7 - line 496, column 79: " + [ $344.constructor.name ]);
                  })())(function (v3) {
                      return function (e) {
                          var errs$prime = (function () {
                              if (v2.value0 instanceof Data_Maybe.Just && v3.depth > v2.value0.value0.value0) {
                                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.depth, e));
                              };
                              if (v2.value0 instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v3.depth, e));
                              };
                              return v2.value0;
                          })();
                          return go$prime(new Data_Optimize_Uncurried.Args5(errs$prime, v2.value1 || _isFixed(v2.value2.value0), v2.value2.value1, new Data_List_Types.Cons(v2.value2.value0, v2.value3), v2.value4));
                      };
                  });
              };
              if (v2.value2 instanceof Data_List_Types.Nil && v2.value4 instanceof Data_List_Types.Nil) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v3) {
                      var ys$prime = Data_List.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(Neodoc_ArgParser_ParseLayout.getId))(v2.value3);
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser["return"]((function () {
                          if (v2.value1) {
                              return dropFirst(function (x) {
                                  return _isOptionalGroup(x) && _isFixed(x);
                              })(ys$prime);
                          };
                          if (!v2.value1) {
                              return new Data_Tuple.Tuple(ys$prime, false);
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 518, column 8 - line 520, column 26: " + [ v2.value1.constructor.name ]);
                      })()))(function (v4) {
                          var $363 = (function () {
                              if (v1.value1) {
                                  return Data_List.filter(function ($560) {
                                      return !_isOptionalGroup($560);
                                  })(v4.value0);
                              };
                              if (!v1.value1) {
                                  return v4.value0;
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 530, column 12 - line 530, column 72: " + [ v1.value1.constructor.name ]);
                          })();
                          if ($363 instanceof Data_List_Types.Nil) {
                              var subVs = Data_List.catMaybes(Data_Functor.mapFlipped(Data_List_Types.functorList)(v4.value0)(function (v5) {
                                  if (v5 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Neodoc_ArgParser_Arg.getFallback(v5.value2))(function (v6) {
                                          return new Data_Maybe.Just(new Data_Tuple.Tuple(v5, new Data_Tuple.Tuple(v5.value2, v6)));
                                      });
                                  };
                                  return Data_Maybe.Nothing.value;
                              }));
                              return Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(Data_Functor.map(Data_List_Types.functorList)(_rest)(subVs), Data_Functor.map(Data_List_Types.functorList)(_fst)(subVs), v2.value1 || v4.value1, Data_Maybe.Nothing.value));
                          };
                          if (v4.value1) {
                              return go$prime(new Data_Optimize_Uncurried.Args5(v2.value0, false, $363, Data_List_Types.Nil.value, Data_List_Types.Nil.value));
                          };
                          if ($363 instanceof Data_List_Types.Cons) {
                              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v5) {
                                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getState)(function (v6) {
                                      if (v2.value0 instanceof Data_Maybe.Just && v2.value0.value0.value0 > v6.depth) {
                                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Type.setErrorAtDepth(v2.value0.value0.value0)(Neodoc_Parsing_Parser.extractError(Neodoc_ArgParser_Type.genericError)(v2.value0.value0.value1)))(function () {
                                              return Neodoc_Parsing_Parser["throw"](v2.value0.value0.value1);
                                          });
                                      };
                                      if (v5 instanceof Data_List_Types.Nil) {
                                          var c = toSimpleBranch($363);
                                          var e = Neodoc_ArgParser_Type.missingArgumentsError(Data_NonEmpty_Extra["fromList'"]()(c));
                                          return Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_ArgParser_Type.setErrorAtDepth(v6.depth)(e))(Neodoc_Parsing_Parser["fail'"](e));
                                      };
                                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Traversable["for"](Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.traversableList)(v5)(function (v7) {
                                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(isKnownToken$prime(v7.value0))(function (v8) {
                                              return Neodoc_Parsing_Parser["return"]((function () {
                                                  if (v8) {
                                                      return Neodoc_ArgParser_Type.known(v7);
                                                  };
                                                  if (!v8) {
                                                      return Neodoc_ArgParser_Type.unknown(v7);
                                                  };
                                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 568, column 26 - line 570, column 38: " + [ v8.constructor.name ]);
                                              })());
                                          });
                                      }))(function (v7) {
                                          var e = Neodoc_ArgParser_Type.unexpectedInputError(toSimpleBranch($363))(v7);
                                          return Control_Apply.applySecond(Neodoc_Parsing_Parser.applyParser)(Neodoc_ArgParser_Type.setErrorAtDepth(v6.depth)(e))(Neodoc_Parsing_Parser["fail'"](e));
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 530, column 7 - line 572, column 51: " + [ $363.constructor.name ]);
                      });
                  });
              };
              if (v2.value2 instanceof Data_List_Types.Nil && v2.value4 instanceof Data_List_Types.Cons) {
                  var matches$prime = Data_List.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(function ($561) {
                      return byOrigin(Data_Tuple.snd(Data_Tuple.snd($561)));
                  }))(v2.value4);
                  var x = Data_Tuple.fst(Data_List_Partial.last()(matches$prime));
                  var rep = (function () {
                      var $393 = _isLayoutRepeatable(x);
                      if ($393) {
                          return new Data_Maybe.Just(x);
                      };
                      if (!$393) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 588, column 17 - line 588, column 66: " + [ $393.constructor.name ]);
                  })();
                  var xs$prime = Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.fst)(Data_List_Partial.init()(matches$prime));
                  var cvs = Data_Tuple.snd(Data_List_Partial.last()(matches$prime));
                  var vs = Data_Tuple.snd(cvs);
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_ArgParser_Evaluate.resume(cvs))(function () {
                      return Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(vs, Data_List.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(Neodoc_ArgParser_ParseLayout.getId))(Data_Semigroup.append(Data_List_Types.semigroupList)(xs$prime)(v2.value3)), v2.value1, rep));
                  });
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 466, column 3 - line 594, column 79: " + [ v2.constructor.name ]);
          };
          return go$prime(new Data_Optimize_Uncurried.Args5(Data_Maybe.Nothing.value, false, v1.value2, Data_List_Types.Nil.value, Data_List_Types.Nil.value));
      };
      var match = function (v1) {
          return match$prime(v1);
      };
      var go = function (v1) {
          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getParseState)(function (v2) {
              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                  if (v2.value0.options.allowUnknown) {
                      return Neodoc_Parsing_Parser_Combinators.many(unknownOption);
                  };
                  if (!v2.value0.options.allowUnknown) {
                      return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.Nil.value);
                  };
                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 322, column 17 - line 322, column 78: " + [ v2.value0.options.allowUnknown.constructor.name ]);
              })())(function (v3) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(_lmap(Data_Maybe.Just.create))(Neodoc_Parsing_Parser_Combinators["try"](match(new Data_Optimize_Uncurried.Args3(v1.value0 + 1 | 0, false, v1.value2)))))(Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(Data_Maybe.Nothing.value, v1.value2, false, Data_Maybe.Nothing.value))))(function (v4) {
                      if (v4.value0 instanceof Data_Maybe.Just && v4.value0.value0 instanceof Data_List_Types.Cons) {
                          var rRep = Data_Functor.map(Data_List_Types.functorList)(_toElem)(Data_List.filter(_isRepeatable)(Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.fst)(v4.value0.value0)));
                          var rep$prime = Data_List.nub(Neodoc_ArgParser_ParseLayout.eqParseLayout)(Data_Semigroup.append(Data_List_Types.semigroupList)(Data_Maybe.maybe(Data_List_Types.Nil.value)(Data_List.singleton)(v4.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value3)(rRep)));
                          return go(new Data_Optimize_Uncurried.Args6(v1.value0 + 1 | 0, v1.value1, v4.value1, rep$prime, true, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value5)(Data_Semigroup.append(Data_List_Types.semigroupList)(v3)(v4.value0.value0))));
                      };
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                          if (v1.value4) {
                              return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(_lmap(Data_Maybe.Just.create))(Neodoc_Parsing_Parser_Combinators["try"](match(new Data_Optimize_Uncurried.Args3(v1.value0 + 1 | 0, false, v1.value3)))))(Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(Data_Maybe.Nothing.value, v1.value3, false, Data_Maybe.Nothing.value)));
                          };
                          if (!v1.value4) {
                              if (v2.value0.options.repeatableOptions) {
                                  var repOpts1 = Data_Function.flip(Data_List.filter)(v1.value3)(function (v5) {
                                      if (v5 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
                                          return _isRepeatable(v5.value2);
                                      };
                                      return false;
                                  });
                                  return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(_lmap(Data_Maybe.Just.create))(Neodoc_Parsing_Parser_Combinators["try"](match(new Data_Optimize_Uncurried.Args3(v1.value0 + 1 | 0, false, repOpts1)))))(Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(Data_Maybe.Nothing.value, v1.value3, false, Data_Maybe.Nothing.value)));
                              };
                              if (!v2.value0.options.repeatableOptions) {
                                  return Neodoc_Parsing_Parser["return"](new Data_Optimize_Uncurried.Args4(Data_Maybe.Nothing.value, v1.value3, false, Data_Maybe.Nothing.value));
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 365, column 18 - line 372, column 60: " + [ v2.value0.options.repeatableOptions.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 361, column 11 - line 372, column 60: " + [ v1.value4.constructor.name ]);
                      })())(function (v5) {
                          if (v5.value0 instanceof Data_Maybe.Just && v5.value0.value0 instanceof Data_List_Types.Cons) {
                              var rRep = Data_Functor.map(Data_List_Types.functorList)(_toElem)(Data_List.filter(_isRepeatable)(Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.fst)(v5.value0.value0)));
                              var rep$prime$prime = Data_List.nub(Neodoc_ArgParser_ParseLayout.eqParseLayout)(Data_Semigroup.append(Data_List_Types.semigroupList)(Data_Maybe.maybe(Data_List_Types.Nil.value)(Data_List.singleton)(v5.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(v5.value1)(rRep)));
                              var $425 = Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($562) {
                                  return isFrom(Neodoc_Value_Origin.Argv.value)(Data_Tuple.snd($562));
                              })(v5.value0.value0);
                              if ($425) {
                                  return go(new Data_Optimize_Uncurried.Args6(v1.value0 + 1 | 0, v1.value1, v1.value2, rep$prime$prime, true, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value5)(Data_Semigroup.append(Data_List_Types.semigroupList)(v3)(v5.value0.value0))));
                              };
                              if (!$425) {
                                  return go(new Data_Optimize_Uncurried.Args6(v1.value0 + 1 | 0, v1.value1, v1.value2, rep$prime$prime, false, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value5)(Data_Semigroup.append(Data_List_Types.semigroupList)(v3)(v5.value0.value0))));
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 378, column 13 - line 380, column 85: " + [ $425.constructor.name ]);
                          };
                          if (v4.value1 instanceof Data_List_Types.Nil) {
                              return Neodoc_Parsing_Parser["return"](Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value5)(v3));
                          };
                          if (v4.value1 instanceof Data_List_Types.Cons && v.value2) {
                              var exhaust = function (v6) {
                                  return function (out$prime) {
                                      if (v6 instanceof Data_List_Types.Nil) {
                                          return Neodoc_Parsing_Parser["return"](out$prime);
                                      };
                                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators["try"](match(new Data_Optimize_Uncurried.Args3(v1.value0 + 1 | 0, true, v6))))(function (v7) {
                                          var $433 = !Data_List["null"](v7.value0) && (Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($563) {
                                              return isFrom(Neodoc_Value_Origin.Argv.value)(Data_Tuple.snd($563));
                                          })(v7.value0) || v7.value2);
                                          if ($433) {
                                              return go(new Data_Optimize_Uncurried.Args6(v1.value0 + 1 | 0, false, v7.value1, v1.value3, true, Data_Semigroup.append(Data_List_Types.semigroupList)(out$prime)(v7.value0)));
                                          };
                                          if (!$433) {
                                              return exhaust(v7.value1)(Data_Semigroup.append(Data_List_Types.semigroupList)(out$prime)(v7.value0));
                                          };
                                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 410, column 21 - line 412, column 58: " + [ $433.constructor.name ]);
                                      });
                                  };
                              };
                              return exhaust(v4.value1)(Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value5)(v3));
                          };
                          return Neodoc_Parsing_Parser.fail("...");
                      });
                  });
              });
          });
      };
      return Neodoc_ArgParser_Type.skipIf(Neodoc_ArgParser_Type.hasTerminated)(Data_List_Types.Nil.value)(go(new Data_Optimize_Uncurried.Args6(v.value0, v.value2, v.value3, Data_List_Types.Nil.value, true, Data_List_Types.Nil.value)));
  };
  var parseLayout = function (l) {
      return function (sub) {
          return function (x) {
              var go = function (v) {
                  return function (v1) {
                      if (v.optionsFirst && Data_Maybe.isJust(termAs(v1))) {
                          var y = Data_Maybe.fromJust()(termAs(v1));
                          return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($564) {
                              return Data_List.singleton(Data_Tuple.Tuple.create(y)(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Argv.value)($564)));
                          })(terminate(Neodoc_ArgParser_Arg.getArg(y)));
                      };
                      if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
                          var loop = function (p) {
                              return function (acc) {
                                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(p)(Neodoc_Parsing_Parser["return"](Data_List_Types.Nil.value)))(function (v2) {
                                      var $467 = Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($565) {
                                          return isFrom(Neodoc_Value_Origin.Argv.value)(Data_Tuple.snd($565));
                                      })(v2);
                                      if ($467) {
                                          return loop(p)(Data_Semigroup.append(Data_List_Types.semigroupList)(acc)(v2));
                                      };
                                      if (!$467) {
                                          return Neodoc_Parsing_Parser["return"](Data_Semigroup.append(Data_List_Types.semigroupList)(acc)(v2));
                                      };
                                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 659, column 9 - line 661, column 34: " + [ $467.constructor.name ]);
                                  });
                              };
                          };
                          var parsers = Data_Functor.mapFlipped(Data_List_Types.functorList)(Data_NonEmpty_Extra.toList(v1.value4))(function (branch) {
                              var args = Data_NonEmpty_Extra.toList(branch);
                              return parseBranch(new Data_Optimize_Uncurried.Args3(l, true, args));
                          });
                          var p = Neodoc_ArgParser_Evaluate.evalParsers(Data_Ord.ordInt)(new Data_Optimize_Uncurried.Args2(byOrigin, parsers));
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v2) {
                              var $469 = v1.value3 && Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($566) {
                                  return isFrom(Neodoc_Value_Origin.Argv.value)(Data_Tuple.snd($566));
                              })(v2);
                              if ($469) {
                                  return loop(p)(v2);
                              };
                              if (!$469) {
                                  return Neodoc_Parsing_Parser["return"](v2);
                              };
                              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 652, column 7 - line 654, column 23: " + [ $469.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
                          var arg = Neodoc_ArgParser_Arg.getArg(v1.value2);
                          var fromArgv = Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Argv.value))(parseArg(arg)))(Neodoc_ArgParser_Type.modifyDepth(function (v2) {
                              return v2 + 1 | 0;
                          }));
                          if (sub) {
                              return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(function ($567) {
                                  return Data_List.singleton(Data_Tuple.Tuple.create(v1.value2)($567));
                              })((function () {
                                  var $476 = Neodoc_ArgParser_Arg.getFallback(v1.value2);
                                  if ($476 instanceof Data_Maybe.Just) {
                                      return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(fromArgv)(Neodoc_Parsing_Parser["return"]($476.value0));
                                  };
                                  return fromArgv;
                              })());
                          };
                          if (!sub) {
                              var nTimes = (function () {
                                  var $478 = Neodoc_ArgParser_Arg.isArgRepeatable(v1.value2);
                                  if ($478) {
                                      return Data_List.some(Neodoc_Parsing_Parser.alternativeParser)(Neodoc_Parsing_Parser.lazyParser);
                                  };
                                  if (!$478) {
                                      return Control_Monad.liftM1(Neodoc_Parsing_Parser.monadParser)(Data_List.singleton);
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 676, column 24 - line 676, column 80: " + [ $478.constructor.name ]);
                              })();
                              return nTimes(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_Tuple.Tuple.create(v1.value2))(fromArgv));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 671, column 7 - line 677, column 44: " + [ sub.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 640, column 3 - line 643, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Neodoc_ArgParser_Type.skipIf(Neodoc_ArgParser_Type.hasTerminated)(Data_List_Types.Nil.value)(Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)((function () {
                      if (v.options.allowUnknown) {
                          return Neodoc_Parsing_Parser_Combinators.many(unknownOption);
                      };
                      if (!v.options.allowUnknown) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.Nil.value);
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 635, column 10 - line 635, column 72: " + [ v.options.allowUnknown.constructor.name ]);
                  })())(function (v1) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(go(v.options)(x))(function (v2) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Semigroup.append(Data_List_Types.semigroupList)(v1)(v2));
                      });
                  });
              }));
          };
      };
  };
  var parseBranch = function (v) {
      if (v.value2 instanceof Data_List_Types.Nil) {
          return Neodoc_Parsing_Parser["return"](Data_List_Types.Nil.value);
      };
      var _isFree = function (v1) {
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseGroup) {
              return v1.value1;
          };
          if (v1 instanceof Neodoc_ArgParser_ParseLayout.ParseElem) {
              return v1.value1;
          };
          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 273, column 3 - line 273, column 37: " + [ v1.constructor.name ]);
      };
      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v1) {
          var xs$prime = (function () {
              var $501 = !v1.options.laxPlacement;
              if ($501) {
                  return Data_Functor.map(Data_List_Types.functorList)(Data_List_NonEmpty.toList)(Data_List.groupBy(Data_Function.on(Data_Eq.eq(Data_Eq.eqBoolean))(_isFree))(v.value2));
              };
              if (!$501) {
                  return Data_List.singleton(v.value2);
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 259, column 13 - line 261, column 30: " + [ $501.constructor.name ]);
          })();
          return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Data_List.concat)(Data_Traversable["for"](Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.traversableList)(xs$prime)(function (x) {
              var p = solve(new Data_Optimize_Uncurried.Args4(v.value0, v1.options.repeatableOptions, v.value1, x));
              if (v1.options.allowUnknown) {
                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser_Combinators.many(unknownOption))(function (v2) {
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(p)(function (v3) {
                          return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_Semigroup.append(Data_List_Types.semigroupList)(v2)(v3));
                      });
                  });
              };
              if (!v1.options.allowUnknown) {
                  return p;
              };
              throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 264, column 9 - line 269, column 17: " + [ v1.options.allowUnknown.constructor.name ]);
          }));
      });
  };
  var _EOA = (function () {
      var key = Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(Neodoc_Data_SolvedLayout.EOA.value);
      return new Neodoc_ArgParser_Arg.Arg(-2 | 0, Neodoc_Data_SolvedLayout.EOA.value, key, Data_Maybe.Nothing.value, true);
  })();
  var parse = function (v) {
      return function (v1) {
          return function (env) {
              return function (tokens) {
                  var eof = (function () {
                      var isPosTok = function (v2) {
                          if (v2.value0 instanceof Neodoc_ArgParser_Token.Lit) {
                              return true;
                          };
                          return false;
                      };
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getInput)(function (v2) {
                          if (v2 instanceof Data_List_Types.Nil) {
                              return Control_Applicative.pure(Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.Nil.value);
                          };
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v3) {
                              return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Data_Traversable["for"](Neodoc_Parsing_Parser.applicativeParser)(Data_List_Types.traversableList)(v2)(function (v4) {
                                  return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(isKnownToken$prime(v4.value0))(function (v5) {
                                      return Neodoc_Parsing_Parser["return"]((function () {
                                          if (v5) {
                                              return Neodoc_ArgParser_Type.known(v4);
                                          };
                                          if (!v5) {
                                              return Neodoc_ArgParser_Type.unknown(v4);
                                          };
                                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 179, column 18 - line 181, column 30: " + [ v5.constructor.name ]);
                                      })());
                                  });
                              }))(function (v4) {
                                  if (v3.options.allowUnknown) {
                                      var uks = Data_List.filter(Neodoc_ArgParser_Type.isUnknown)(v4);
                                      var ks = Data_List.filter(Neodoc_ArgParser_Type.isKnown)(v4);
                                      var $530 = Data_List["null"](ks);
                                      if ($530) {
                                          var ukPs = Data_List.filter(function ($568) {
                                              return isPosTok(Neodoc_ArgParser_Type.unIsKnown($568));
                                          })(uks);
                                          var $531 = Data_List["null"](ukPs);
                                          if ($531) {
                                              return Neodoc_Parsing_Parser["return"](Data_Functor.mapFlipped(Data_List_Types.functorList)(uks)(function ($569) {
                                                  return (function (v5) {
                                                      if (v5.value0 instanceof Neodoc_ArgParser_Token.EOA) {
                                                          var v6 = Neodoc_Value.ArrayValue.create(Data_Array.fromFoldable(Data_List_Types.foldableList)(v5.value0.value0));
                                                          var rv = Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Argv.value)(v6);
                                                          return new Data_Tuple.Tuple(_EOA, rv);
                                                      };
                                                      var v6 = Neodoc_Value.StringValue.create(Neodoc_ArgParser_Token.getSource(v5));
                                                      var rv = Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Argv.value)(v6);
                                                      return new Data_Tuple.Tuple(_UNKNOWN_ARG, rv);
                                                  })(Neodoc_ArgParser_Type.unIsKnown($569));
                                              }));
                                          };
                                          if (!$531) {
                                              return Neodoc_Parsing_Parser["fail'"](Neodoc_ArgParser_Type.unexpectedInputError(Data_List_Types.Nil.value)(ukPs));
                                          };
                                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 193, column 25 - line 205, column 69: " + [ $531.constructor.name ]);
                                      };
                                      if (!$530) {
                                          return Neodoc_Parsing_Parser["fail'"](Neodoc_ArgParser_Type.unexpectedInputError(Data_List_Types.Nil.value)(v4));
                                      };
                                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 188, column 17 - line 206, column 62: " + [ $530.constructor.name ]);
                                  };
                                  if (!v3.options.allowUnknown) {
                                      return Neodoc_Parsing_Parser["fail'"](Neodoc_ArgParser_Type.unexpectedInputError(Data_List_Types.Nil.value)(v4));
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 184, column 9 - line 207, column 54: " + [ v3.options.allowUnknown.constructor.name ]);
                              });
                          });
                      });
                  })();
                  var mkImplicitToplevelP = function (flags) {
                      return function (o) {
                          var toOption = function (a) {
                              return new Neodoc_Data_SolvedLayout.Option(a, Data_Maybe.Nothing.value, true);
                          };
                          if (flags instanceof Data_List_Types.Nil) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (flags instanceof Data_List_Types.Cons) {
                              return new Data_Maybe.Just((function () {
                                  var args = new Data_NonEmpty.NonEmpty(toOption(flags.value0), Data_Functor.map(Data_List_Types.functorList)(toOption)(flags.value1));
                                  var branch = new Data_NonEmpty.NonEmpty(Neodoc_Data_Layout.Group.create(o)(true)(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(args)(function (a) {
                                      return new Data_NonEmpty.NonEmpty(new Neodoc_Data_Layout.Elem(a), Data_List_Types.Nil.value);
                                  })), Data_List_Types.Nil.value);
                                  var branch$prime = new Data_NonEmpty.NonEmpty(Neodoc_Data_Layout.Group.create(o)(true)(Data_Functor.mapFlipped(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(args)(function (a) {
                                      return new Data_NonEmpty.NonEmpty(Neodoc_Data_Layout.Elem.create(new Neodoc_ArgParser_Arg.Arg(0, a, Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(a), (function () {
                                          if (o) {
                                              return Data_Maybe.Just.create(Neodoc_Value_RichValue.from(Neodoc_Value_Origin.Empty.value)(new Neodoc_Value.BoolValue(false)));
                                          };
                                          if (!o) {
                                              return Data_Maybe.Nothing.value;
                                          };
                                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 236, column 36 - line 238, column 49: " + [ o.constructor.name ]);
                                      })(), false)), Data_List_Types.Nil.value);
                                  })), Data_List_Types.Nil.value);
                                  var branch$prime$prime = toParseBranch(Data_NonEmpty_Extra.toList(branch$prime));
                                  return Control_Apply.applyFirst(Neodoc_Parsing_Parser.applyParser)(Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_ArgParser_Result.ArgParseResult.create(new Data_Maybe.Just(branch)))(parseBranch(new Data_Optimize_Uncurried.Args3(0, true, branch$prime$prime))))(eof);
                              })());
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 227, column 33 - line 244, column 55: " + [ flags.constructor.name ]);
                      };
                  };
                  var emptyBranch = Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(Neodoc_Parsing_Parser.getConfig)(function (v2) {
                      var mBranch = (function () {
                          if (v2.options.allowUnknown) {
                              return Data_Maybe.Just.create(new Data_NonEmpty.NonEmpty(Neodoc_Data_Layout.Elem.create(Neodoc_ArgParser_Arg.getArg(_UNKNOWN_ARG)), new Data_List_Types.Cons(Neodoc_Data_Layout.Elem.create(Neodoc_ArgParser_Arg.getArg(_EOA)), Data_List_Types.Nil.value)));
                          };
                          if (!v2.options.allowUnknown) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 215, column 19 - line 220, column 33: " + [ v2.options.allowUnknown.constructor.name ]);
                      })();
                      return Data_Functor.map(Neodoc_Parsing_Parser.functorParser)(Neodoc_ArgParser_Result.ArgParseResult.create(mBranch))(eof);
                  });
                  var toplevels = Data_List.concat(Data_NonEmpty_Extra.toList(v.layouts));
                  var parsers = Data_Functor.mapFlipped(Data_List_Types.functorList)(toplevels)(function (branch) {
                      var branch$prime = toArgBranch(v1)(env)(v.descriptions)(branch);
                      var branch$prime$prime = toParseBranch(Data_NonEmpty_Extra.toList(branch$prime));
                      return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(parseBranch(new Data_Optimize_Uncurried.Args3(0, true, branch$prime$prime)))(function (v2) {
                          return Control_Bind.bind(Neodoc_Parsing_Parser.bindParser)(eof)(function (v3) {
                              var outBranch = (function () {
                                  if (v1.allowUnknown) {
                                      return Data_NonEmpty_Extra.append(Data_List_Types.semigroupList)(Data_List_Types.applicativeList)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function ($570) {
                                          return Neodoc_Data_Layout.Elem.create(Neodoc_ArgParser_Arg.getArg($570));
                                      })(new Data_NonEmpty.NonEmpty(_UNKNOWN_ARG, new Data_List_Types.Cons(_EOA, Data_List_Types.Nil.value))))(branch);
                                  };
                                  if (!v1.allowUnknown) {
                                      return branch;
                                  };
                                  throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 137, column 29 - line 141, column 30: " + [ v1.allowUnknown.constructor.name ]);
                              })();
                              return Neodoc_Parsing_Parser["return"](new Neodoc_ArgParser_Result.ArgParseResult(new Data_Maybe.Just(outBranch), Data_Semigroup.append(Data_List_Types.semigroupList)(v2)(v3)));
                          });
                      });
                  });
                  var hasEmpty = Data_Foldable.any(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_List["null"])(v.layouts);
                  var parsers$prime = Data_Semigroup.append(Data_List_Types.semigroupList)(parsers)((function () {
                      if (hasEmpty) {
                          return Data_List.singleton(emptyBranch);
                      };
                      if (!hasEmpty) {
                          return Data_List_Types.Nil.value;
                      };
                      throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 152, column 14 - line 152, column 61: " + [ hasEmpty.constructor.name ]);
                  })());
                  return Neodoc_Parsing_Parser.runParser(Data_Optimize_Uncurried.Args5.create({
                      env: env, 
                      options: v1, 
                      spec: v
                  })(initialState)(initialGlobalState)(tokens)((function () {
                      var p = (function () {
                          var $550 = Data_List["null"](parsers$prime);
                          if ($550) {
                              return emptyBranch;
                          };
                          if (!$550) {
                              return Neodoc_ArgParser_Evaluate.evalParsers(Data_Ord.ordInt)(new Data_Optimize_Uncurried.Args2(function ($571) {
                                  return byOrigin(Neodoc_ArgParser_Result.getResult($571));
                              }, parsers$prime));
                          };
                          throw new Error("Failed pattern match at Neodoc.ArgParser.Parser line 155, column 17 - line 157, column 77: " + [ $550.constructor.name ]);
                      })();
                      return Neodoc_Parsing_Parser["catch"](p)(function (v2) {
                          return function (e) {
                              var implicitFlags = Data_Semigroup.append(Data_List_Types.semigroupList)(v1.helpFlags)(v1.versionFlags);
                              var mImplicitP = mkImplicitToplevelP(implicitFlags)(false);
                              if (mImplicitP instanceof Data_Maybe.Just) {
                                  return Control_Alt.alt(Neodoc_Parsing_Parser.altParser)(mImplicitP.value0)(Neodoc_Parsing_Parser["throw"](e));
                              };
                              return Neodoc_Parsing_Parser["throw"](e);
                          };
                      });
                  })()));
              };
          };
      };
  };
  exports["_EOA"] = _EOA;
  exports["_UNKNOWN_ARG"] = _UNKNOWN_ARG;
  exports["byOrigin"] = byOrigin;
  exports["initialGlobalState"] = initialGlobalState;
  exports["initialState"] = initialState;
  exports["isFrom"] = isFrom;
  exports["isKnownToken"] = isKnownToken;
  exports["parse"] = parse;
  exports["parseArg"] = parseArg;
  exports["parseBranch"] = parseBranch;
  exports["parseLayout"] = parseLayout;
  exports["solve"] = solve;
  exports["termAs"] = termAs;
  exports["terminate"] = terminate;
  exports["toArgBranch"] = toArgBranch;
  exports["toParseBranch"] = toParseBranch;
  exports["toSimpleBranch"] = toSimpleBranch;
  exports["unknownOption"] = unknownOption;
})(PS["Neodoc.ArgParser.Parser"] = PS["Neodoc.ArgParser.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_List = PS["Data.List"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_ArgParser_Options = PS["Neodoc.ArgParser.Options"];
  var Neodoc_Parsing_Parser = PS["Neodoc.Parsing.Parser"];
  var Neodoc_ArgParser_Type = PS["Neodoc.ArgParser.Type"];
  var Neodoc_ArgParser_Parser = PS["Neodoc.ArgParser.Parser"];
  var Neodoc_ArgParser_Result = PS["Neodoc.ArgParser.Result"];
  var Neodoc_ArgParser_Lexer = PS["Neodoc.ArgParser.Lexer"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Foldable = PS["Data.Foldable"];        
  var run = function (spec) {
      return function (opts) {
          return function (env) {
              return function (input) {
                  var runParser = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_Parsing_Parser.extractError(Neodoc_ArgParser_Type.genericError));
                  var runLexer = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_ArgParser_Type.malformedInputError);
                  return Control_Bind.bind(Data_Either.bindEither)(runLexer(Neodoc_ArgParser_Lexer.lex(Data_List.fromFoldable(Data_Foldable.foldableArray)(input))(opts)))(function (v) {
                      return runParser(Neodoc_ArgParser_Parser.parse(spec)(opts)(env)(v));
                  });
              };
          };
      };
  };
  exports["run"] = run;
})(PS["Neodoc.ArgParser"] = PS["Neodoc.ArgParser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Map = PS["Data.Map"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_NonEmpty_Extra = PS["Data.NonEmpty.Extra"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_String = PS["Data.String"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_String_Ext = PS["Data.String.Ext"];
  var Data_Set = PS["Data.Set"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Evaluate_Annotate = PS["Neodoc.Evaluate.Annotate"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];        
  var Key = function (x) {
      return x;
  };
  var toStrKeys = function (v) {
      var go = function (v1) {
          if (v1 instanceof Neodoc_ArgKey.PositionalKey) {
              return v1.value0;
          };
          if (v1 instanceof Neodoc_ArgKey.CommandKey) {
              return v1.value0;
          };
          if (v1 instanceof Neodoc_ArgKey.OptionKey && v1.value0 instanceof Neodoc_OptionAlias.Long) {
              return "--" + v1.value0.value0;
          };
          if (v1 instanceof Neodoc_ArgKey.OptionKey && v1.value0 instanceof Neodoc_OptionAlias.Short) {
              return "-" + Data_String.singleton(v1.value0.value0);
          };
          if (v1 instanceof Neodoc_ArgKey.EOAKey) {
              return "--";
          };
          if (v1 instanceof Neodoc_ArgKey.StdinKey) {
              return "-";
          };
          throw new Error("Failed pattern match at Neodoc.Evaluate.Key line 60, column 5 - line 60, column 46: " + [ v1.constructor.name ]);
      };
      return Data_Functor.map(Data_List_Types.functorList)(go)(Data_List.fromFoldable(Data_Set.foldableSet)(v));
  };
  var toKey = function (v) {
      var go = function (v1) {
          if (v1 instanceof Neodoc_Data_SolvedLayout.Option) {
              return Data_Functor.map(Data_List_Types.functorList)(Neodoc_ArgKey.OptionKey.create)(Data_Maybe.fromMaybe(Data_List.singleton(v1.value0))(Control_Bind.bind(Data_Maybe.bindMaybe)(v.value1)(function (v2) {
                  if (v2 instanceof Neodoc_Data_Description.OptionDescription) {
                      return Data_Maybe.Just.create(new Data_List_Types.Cons(v1.value0, Data_NonEmpty_Extra.toList(v2.value0)));
                  };
                  return Data_Maybe.Nothing.value;
              })));
          };
          return Data_List.singleton(Neodoc_ArgKey_Class.toArgKey(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(v.value0));
      };
      return Data_Set.fromFoldable(Data_List_Types.foldableList)(Neodoc_ArgKey.ordArgKey)(go(v.value0));
  };
  var eqKey = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Data_Set.eqSet(Neodoc_ArgKey.eqArgKey))(x)(y);
      };
  });
  var ordKey = new Data_Ord.Ord(function () {
      return eqKey;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Set.ordSet(Neodoc_ArgKey.ordArgKey))(x)(y);
      };
  });
  exports["Key"] = Key;
  exports["toKey"] = toKey;
  exports["toStrKeys"] = toStrKeys;
  exports["eqKey"] = eqKey;
  exports["ordKey"] = ordKey;
})(PS["Neodoc.Evaluate.Key"] = PS["Neodoc.Evaluate.Key"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Map = PS["Data.Map"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Neodoc_Env = PS["Neodoc.Env"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_Description = PS["Neodoc.Data.Description"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_Data_OptionArgument = PS["Neodoc.Data.OptionArgument"];
  var Neodoc_Value_RichValue = PS["Neodoc.Value.RichValue"];
  var Neodoc_ArgParser_KeyValue = PS["Neodoc.ArgParser.KeyValue"];
  var Neodoc_ArgParser_Arg = PS["Neodoc.ArgParser.Arg"];
  var Neodoc_ArgKey = PS["Neodoc.ArgKey"];
  var Neodoc_ArgKey_Class = PS["Neodoc.ArgKey.Class"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_Value_Origin = PS["Neodoc.Value.Origin"];
  var Neodoc_Evaluate_Annotate = PS["Neodoc.Evaluate.Annotate"];
  var Neodoc_Evaluate_Key = PS["Neodoc.Evaluate.Key"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];        
  var Command = (function () {
      function Command(value0) {
          this.value0 = value0;
      };
      Command.create = function (value0) {
          return new Command(value0);
      };
      return Command;
  })();
  var Positional = (function () {
      function Positional(value0) {
          this.value0 = value0;
      };
      Positional.create = function (value0) {
          return new Positional(value0);
      };
      return Positional;
  })();
  var Option = (function () {
      function Option(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Option.create = function (value0) {
          return function (value1) {
              return new Option(value0, value1);
          };
      };
      return Option;
  })();
  var EOA = (function () {
      function EOA() {

      };
      EOA.value = new EOA();
      return EOA;
  })();
  var Stdin = (function () {
      function Stdin() {

      };
      Stdin.value = new Stdin();
      return Stdin;
  })();
  var toFacelessLayoutArg = (function () {
      var go = function (v) {
          if (v instanceof Neodoc_Data_SolvedLayout.Option) {
              return new Option(Data_Functor.map(Data_Maybe.functorMaybe)(Neodoc_Data_OptionArgument.isOptionArgumentOptional)(v.value1), v.value2);
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Positional) {
              return new Positional(v.value1);
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Command) {
              return new Command(v.value1);
          };
          if (v instanceof Neodoc_Data_SolvedLayout.EOA) {
              return EOA.value;
          };
          if (v instanceof Neodoc_Data_SolvedLayout.Stdin) {
              return Stdin.value;
          };
          throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 158, column 3 - line 158, column 74: " + [ v.constructor.name ]);
      };
      return go;
  })();
  var setRepeatable = function (v) {
      return function (v1) {
          if (v1 instanceof Command) {
              return new Command(v);
          };
          if (v1 instanceof Positional) {
              return new Positional(v);
          };
          if (v1 instanceof Option) {
              return new Option(v1.value0, v);
          };
          return v1;
      };
  };
  var isRepeatable = function (v) {
      if (v instanceof Command) {
          return v.value0;
      };
      if (v instanceof Positional) {
          return v.value0;
      };
      if (v instanceof Option) {
          return v.value1;
      };
      return false;
  };
  var setRepeatableOr = function (r) {
      return function (x) {
          return setRepeatable(isRepeatable(x) || r)(x);
      };
  };
  var isFlag = function (v) {
      if (v instanceof Option && v.value0 instanceof Data_Maybe.Nothing) {
          return true;
      };
      return false;
  };
  var isCommand = function (v) {
      if (v instanceof Command) {
          return true;
      };
      return false;
  };
  var expandLayout = function (v) {
      if (v instanceof Neodoc_Data_Layout.Elem) {
          return Data_Map.singleton(Neodoc_Evaluate_Key.toKey(v.value0))(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(toFacelessLayoutArg)(v.value0));
      };
      if (v instanceof Neodoc_Data_Layout.Group) {
          var mergeArgs = function (forceR) {
              return function (v1) {
                  return function (v2) {
                      if (v1.value0 instanceof Option && v2.value0 instanceof Option) {
                          var mDesc$prime$prime = Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(v1.value1)(v2.value1))(function (v3) {
                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(v2.value1)(v1.value1))(function (v4) {
                                  var $62 = new Data_Tuple.Tuple(v3, v4);
                                  if ($62.value0 instanceof Neodoc_Data_Description.OptionDescription && $62.value1 instanceof Neodoc_Data_Description.OptionDescription) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Data_Description.OptionDescription($62.value0.value0, $62.value0.value1, Control_Alt.alt(Data_Maybe.altMaybe)($62.value0.value2)($62.value1.value2), Control_Alt.alt(Data_Maybe.altMaybe)($62.value0.value3)($62.value1.value3), Control_Alt.alt(Data_Maybe.altMaybe)($62.value0.value4)($62.value1.value4)));
                                  };
                                  if ($62.value0 instanceof Neodoc_Data_Description.OptionDescription) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Data_Description.OptionDescription($62.value0.value0, $62.value0.value1, $62.value0.value2, $62.value0.value3, $62.value0.value4));
                                  };
                                  if ($62.value1 instanceof Neodoc_Data_Description.OptionDescription) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Neodoc_Data_Description.OptionDescription($62.value1.value0, $62.value1.value1, $62.value1.value2, $62.value1.value3, $62.value1.value4));
                                  };
                                  return Data_Maybe.Nothing.value;
                              });
                          });
                          var mA$prime$prime = Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(v1.value0.value0)(v2.value0.value0))(function (v3) {
                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(v2.value0.value0)(v1.value0.value0))(function (v4) {
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v3 || v4);
                              });
                          });
                          return new Data_Tuple.Tuple(new Option(mA$prime$prime, forceR || (v1.value0.value1 || v2.value0.value1)), mDesc$prime$prime);
                      };
                      return new Data_Tuple.Tuple(setRepeatableOr(forceR || isRepeatable(v2.value0))(v1.value0), v1.value1);
                  };
              };
          };
          var inSameBranch = mergeArgs(true);
          var fold = function (f) {
              return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(Data_List_Types.foldableList))(Data_Map.unionWith(Neodoc_Evaluate_Key.ordKey)(f))(Data_Map.empty);
          };
          var acrossBranches = mergeArgs(false);
          var branches = Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function ($152) {
              return fold(inSameBranch)((function (v1) {
                  return Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(expandLayout)(v1);
              })($152));
          })(v.value2);
          var branches$prime = Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(function (v1) {
              return Data_Functor.map(Data_Map.functorMap)(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(setRepeatableOr(v.value1)))(v1);
          })(branches);
          return fold(acrossBranches)(branches$prime);
      };
      throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 169, column 1 - line 169, column 77: " + [ v.constructor.name ]);
  };
  var reduce = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Data_StrMap.empty;
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      var mergeVals = function (v4) {
                          return function (v5) {
                              return new Data_Tuple.Tuple(v4.value0, new Data_Tuple.Tuple(v4.value1.value0, Neodoc_Value_RichValue.RichValue({
                                  origin: Data_Maybe.fromJust()(Data_Foldable.maximum(Neodoc_Value_Origin.ordOrigin)(Data_Foldable.foldableArray)([ v4.value1.value1.origin, v5.value1.value1.origin ])), 
                                  value: Neodoc_Value.ArrayValue.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Neodoc_Value.intoArray(v5.value1.value1.value))(Neodoc_Value.intoArray(v4.value1.value1.value)))
                              })));
                          };
                      };
                      var finalFold = function (m) {
                          var x = Data_Functor.mapFlipped(Data_List_Types.functorList)(Data_Map.toList(m))(function (v4) {
                              var v5 = Data_Maybe.fromMaybe(v4.value1.value1.value1.value)((function () {
                                  var $121 = isFlag(v4.value1.value0) || isCommand(v4.value1.value0);
                                  if ($121) {
                                      if (v4.value1.value1.value1.value instanceof Neodoc_Value.ArrayValue) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                              var $123 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Neodoc_Value.isBoolValue)(v4.value1.value1.value1.value.value0) && !Data_Array["null"](v4.value1.value1.value1.value.value0);
                                              if ($123) {
                                                  return new Neodoc_Value.IntValue(Data_Array.length(Data_Function.flip(Data_Array.filter)(v4.value1.value1.value1.value.value0)(function (x1) {
                                                      if (x1 instanceof Neodoc_Value.BoolValue) {
                                                          return x1.value0;
                                                      };
                                                      return false;
                                                  })));
                                              };
                                              if (!$123) {
                                                  return new Neodoc_Value.ArrayValue(v4.value1.value1.value1.value.value0);
                                              };
                                              throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 130, column 27 - line 137, column 47: " + [ $123.constructor.name ]);
                                          })());
                                      };
                                      if (v4.value1.value1.value1.value instanceof Neodoc_Value.BoolValue) {
                                          var $127 = isRepeatable(v4.value1.value0);
                                          if ($127) {
                                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                                                  if (v4.value1.value1.value1.value.value0) {
                                                      return new Neodoc_Value.IntValue(1);
                                                  };
                                                  if (!v4.value1.value1.value1.value.value0) {
                                                      return new Neodoc_Value.IntValue(0);
                                                  };
                                                  throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 141, column 38 - line 144, column 31: " + [ v4.value1.value1.value1.value.value0.constructor.name ]);
                                              })());
                                          };
                                          if (!$127) {
                                              return Data_Maybe.Nothing.value;
                                          };
                                          throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 139, column 27 - line 144, column 43: " + [ $127.constructor.name ]);
                                      };
                                      return Data_Maybe.Nothing.value;
                                  };
                                  if (!$121) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 127, column 21 - line 146, column 35: " + [ $121.constructor.name ]);
                              })());
                              return Data_Functor.mapFlipped(Data_List_Types.functorList)(Neodoc_Evaluate_Key.toStrKeys(v4.value0))(function (v6) {
                                  return new Data_Tuple.Tuple(v6, Neodoc_Value_RichValue.RichValue((function () {
                                      var $130 = {};
                                      for (var $131 in v4.value1.value1.value1) {
                                          if ({}.hasOwnProperty.call(v4.value1.value1.value1, $131)) {
                                              $130[$131] = v4["value1"]["value1"]["value1"][$131];
                                          };
                                      };
                                      $130.value = v5;
                                      return $130;
                                  })()));
                              });
                          });
                          return Data_StrMap.fromFoldable(Data_List_Types.foldableList)(Data_List.concat(x));
                      };
                      var fillValues = function (target) {
                          return function (input) {
                              var origin = function (cmp) {
                                  return function (o) {
                                      return function (x) {
                                          return cmp((function (v4) {
                                              return v4.origin;
                                          })(Neodoc_Value_RichValue.unRichValue(x)))(o);
                                      };
                                  };
                              };
                              var values = Data_Functor.mapFlipped(Data_List_Types.functorList)(Data_Map.toList(target))(function (v4) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map.lookup(Neodoc_Evaluate_Key.ordKey)(v4.value0)(input))(function (v5) {
                                      var vs$prime = Data_List.filter(origin(Data_Eq.notEq(Neodoc_Value_Origin.eqOrigin))(Neodoc_Value_Origin.Empty.value))(v5);
                                      var vs$prime$prime = Data_List.filter(origin(Data_Eq.notEq(Neodoc_Value_Origin.eqOrigin))(Neodoc_Value_Origin.Default.value))(vs$prime);
                                      var vs$prime$prime$prime = (function () {
                                          if (vs$prime$prime instanceof Data_List_Types.Nil) {
                                              return Data_List.nub(Neodoc_Value_RichValue.eqRichValue)(vs$prime);
                                          };
                                          return vs$prime$prime;
                                      })();
                                      var vs$prime$prime$prime$prime = Data_Functor.mapFlipped(Data_List_Types.functorList)(vs$prime$prime$prime)(function (v6) {
                                          return Neodoc_Value_RichValue.RichValue((function () {
                                              var $144 = {};
                                              for (var $145 in v6) {
                                                  if ({}.hasOwnProperty.call(v6, $145)) {
                                                      $144[$145] = v6[$145];
                                                  };
                                              };
                                              $144.value = (function () {
                                                  var $143 = isRepeatable(v4.value1.value0);
                                                  if ($143) {
                                                      return Neodoc_Value.ArrayValue.create(Neodoc_Value.intoArray(v6.value));
                                                  };
                                                  if (!$143) {
                                                      return v6.value;
                                                  };
                                                  throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 112, column 31 - line 114, column 45: " + [ $143.constructor.name ]);
                                              })();
                                              return $144;
                                          })());
                                      });
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.mapFlipped(Data_List_Types.functorList)(vs$prime$prime$prime$prime)(function (v6) {
                                          return new Data_Tuple.Tuple(v4.value0, new Data_Tuple.Tuple(v4.value1.value0, new Data_Tuple.Tuple(v4.value1.value1, v6)));
                                      }));
                                  });
                              });
                              return Data_Map.fromFoldableWith(Neodoc_Evaluate_Key.ordKey)(Data_List_Types.foldableList)(mergeVals)(Data_List.concat(Data_List.catMaybes(values)));
                          };
                      };
                      return Data_Functor.map(Data_StrMap.functorStrMap)(function ($153) {
                          return (function (v4) {
                              return v4.value;
                          })(Neodoc_Value_RichValue.unRichValue($153));
                      })((function () {
                          var input = Data_Map.fromFoldableWith(Neodoc_Evaluate_Key.ordKey)(Data_List_Types.foldableList)(Data_Semigroup.append(Data_List_Types.semigroupList))(Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(Data_Functor.functorFn)(Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(Data_List.singleton))(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(function ($154) {
                              return Neodoc_Evaluate_Key.Key(Neodoc_Evaluate_Annotate.findArgKeys(v1)($154));
                          })))(Data_List.reverse(Data_Functor.map(Data_List_Types.functorList)(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(Neodoc_ArgParser_Arg.getArgKey))(v3))));
                          var annotedBranch = Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(Neodoc_Evaluate_Annotate.annotateLayout(Neodoc_Data_SolvedLayout.toArgKeySolvedLayoutArg)(v1))(v2.value0);
                          var target = expandLayout(new Neodoc_Data_Layout.Group(false, false, new Data_NonEmpty.NonEmpty(annotedBranch, Data_List_Types.Nil.value)));
                          var values = fillValues(target)(input);
                          return finalFold(values);
                      })());
                  };
                  throw new Error("Failed pattern match at Neodoc.Evaluate.Reduce line 64, column 1 - line 64, column 36: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name ]);
              };
          };
      };
  };
  exports["reduce"] = reduce;
})(PS["Neodoc.Evaluate.Reduce"] = PS["Neodoc.Evaluate.Reduce"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Neodoc"];
  var Prelude = PS["Prelude"];
  var Debug_Profile = PS["Debug.Profile"];
  var Data_Array = PS["Data.Array"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Char = PS["Data.Char"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Pretty = PS["Data.Pretty"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_Extra = PS["Data.Foreign.Extra"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String_Yarn = PS["Data.String.Yarn"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Node_Process = PS["Node.Process"];
  var Node_FS = PS["Node.FS"];
  var Text_Wrap = PS["Text.Wrap"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Neodoc_Spec = PS["Neodoc.Spec"];
  var Neodoc_Options = PS["Neodoc.Options"];
  var Neodoc_Data_Layout = PS["Neodoc.Data.Layout"];
  var Neodoc_Data_UsageLayout = PS["Neodoc.Data.UsageLayout"];
  var Neodoc_Data_LayoutConversion = PS["Neodoc.Data.LayoutConversion"];
  var Neodoc_Data_EmptyableLayout = PS["Neodoc.Data.EmptyableLayout"];
  var Neodoc_Error_Class = PS["Neodoc.Error.Class"];
  var Neodoc_Error = PS["Neodoc.Error"];
  var Neodoc_Scanner = PS["Neodoc.Scanner"];
  var Neodoc_SpecConversions = PS["Neodoc.SpecConversions"];
  var Neodoc_Spec_Parser = PS["Neodoc.Spec.Parser"];
  var Neodoc_Spec_Lexer = PS["Neodoc.Spec.Lexer"];
  var Neodoc_Solve = PS["Neodoc.Solve"];
  var Neodoc_Value = PS["Neodoc.Value"];
  var Neodoc_ArgParser = PS["Neodoc.ArgParser"];
  var Neodoc_Evaluate = PS["Neodoc.Evaluate"];
  var Neodoc_Data_SolvedLayout = PS["Neodoc.Data.SolvedLayout"];
  var Neodoc_OptionAlias = PS["Neodoc.OptionAlias"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Neodoc_Scanner_Error = PS["Neodoc.Scanner.Error"];
  var Neodoc_Spec_Error = PS["Neodoc.Spec.Error"];
  var Neodoc_Solve_Error = PS["Neodoc.Solve.Error"];
  var Neodoc_ArgParser_Type = PS["Neodoc.ArgParser.Type"];
  var Neodoc_ArgParser_Result = PS["Neodoc.ArgParser.Result"];
  var Neodoc_Evaluate_Reduce = PS["Neodoc.Evaluate.Reduce"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var VersionOutput = (function () {
      function VersionOutput(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      VersionOutput.create = function (value0) {
          return function (value1) {
              return new VersionOutput(value0, value1);
          };
      };
      return VersionOutput;
  })();
  var Output = (function () {
      function Output(value0) {
          this.value0 = value0;
      };
      Output.create = function (value0) {
          return new Output(value0);
      };
      return Output;
  })();
  var HelpOutput = (function () {
      function HelpOutput(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HelpOutput.create = function (value0) {
          return function (value1) {
              return new HelpOutput(value0, value1);
          };
      };
      return HelpOutput;
  })();
  var trimHelp = (function () {
      var regex$prime = function (a) {
          return function (b) {
              return Data_Either.fromRight()(Data_String_Regex.regex(a)(Data_String_Regex.parseFlags(b)));
          };
      };
      return Data_String_Regex.replace(regex$prime("(^\\s*(\x0d\x0a|\x0a|\x0d))|((\x0d\x0a|\x0a|\x0d)\\s*$)")("g"))("");
  })();
  var showOutput = new Data_Show.Show(function (v) {
      if (v instanceof VersionOutput) {
          return "VersionOutput " + (Data_Show.show(Data_StrMap.showStrMap(Neodoc_Value.showValue))(v.value0) + (" " + Data_Show.show(Data_Show.showString)(v.value1)));
      };
      if (v instanceof HelpOutput) {
          return "HelpOutput " + (Data_Show.show(Data_StrMap.showStrMap(Neodoc_Value.showValue))(v.value0) + (" " + Data_Show.show(Data_Show.showString)(v.value1)));
      };
      if (v instanceof Output) {
          return "Output " + Data_Show.show(Data_StrMap.showStrMap(Neodoc_Value.showValue))(v.value0);
      };
      throw new Error("Failed pattern match at Neodoc line 126, column 3 - line 126, column 73: " + [ v.constructor.name ]);
  });
  var renderNeodocError = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  if (v instanceof Data_Maybe.Just && v3 instanceof Neodoc_Error.ArgParserError) {
                      var renderShortHelp = function (v4) {
                          if (v4 instanceof Data_Maybe.Just) {
                              return Text_Wrap.dedent(Data_String_Yarn.unlines(Data_Functor.map(Data_Functor.functorArray)(function (v5) {
                                  return "  " + v5;
                              })(Data_String_Yarn.lines(Text_Wrap.dedent(v4.value0)))));
                          };
                          return "";
                      };
                      var renderHelpFlags = function (v4) {
                          return function (v5) {
                              if (v5 instanceof Data_Maybe.Just && !Data_Array["null"](v5.value0)) {
                                  return "See " + (v4 + (" " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("/")(v5.value0) + " for more information")));
                              };
                              return "";
                          };
                      };
                      var usage = renderShortHelp(v2);
                      var title = (function () {
                          var $53 = Data_String.uncons(v3.value0);
                          if ($53 instanceof Data_Maybe.Nothing) {
                              return v3.value0;
                          };
                          if ($53 instanceof Data_Maybe.Just) {
                              var msg$prime = Data_String.singleton(Data_Char.toLower($53.value0.head)) + $53.value0.tail;
                              return v.value0 + (": " + msg$prime);
                          };
                          throw new Error("Failed pattern match at Neodoc line 393, column 7 - line 397, column 35: " + [ $53.constructor.name ]);
                      })();
                      var help = renderHelpFlags(v.value0)(v1);
                      return title + ((function () {
                          var $57 = Data_String.length(title) > 0;
                          if ($57) {
                              return "\x0a";
                          };
                          if (!$57) {
                              return "";
                          };
                          throw new Error("Failed pattern match at Neodoc line 401, column 13 - line 401, column 57: " + [ $57.constructor.name ]);
                      })() + (usage + ((function () {
                          var $58 = Data_String.length(usage) > 0;
                          if ($58) {
                              return "\x0a";
                          };
                          if (!$58) {
                              return "";
                          };
                          throw new Error("Failed pattern match at Neodoc line 403, column 13 - line 403, column 57: " + [ $58.constructor.name ]);
                      })() + help)));
                  };
                  return Data_Pretty.pretty(Neodoc_Error.prettyNeodocError)(v3);
              };
          };
      };
  };
  var readSpec = function (input) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Right.create)(Data_Foreign_Class.read(Data_Foreign_Class.stringIsForeign)(input)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Left.create)(Data_Foreign_Class.read(Neodoc_Spec.isForeignOptionAlias(Neodoc_Data_EmptyableLayout.isForeignEmptyableLayout(Neodoc_Data_UsageLayout.isForeignUsageLayoutArg)))(input))))(function (v) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Neodoc_SpecConversions.fromEmptyableSpec)(v));
      });
  };
  var prettyOutput = new Data_Pretty.Pretty(function (v) {
      if (v instanceof VersionOutput) {
          return v.value1;
      };
      if (v instanceof HelpOutput) {
          return v.value1;
      };
      if (v instanceof Output) {
          return Data_Pretty.pretty(Data_Pretty.prettyStrMap(Neodoc_Value.prettyValue))(v.value0);
      };
      throw new Error("Failed pattern match at Neodoc line 121, column 3 - line 121, column 33: " + [ v.constructor.name ]);
  });
  var parseHelpText = function (help) {
      return Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_Scanner_Error.toNeodocErrorScanError)(Neodoc_Scanner.scan(Text_Wrap.dedent(help))))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_Spec_Error.toNeodocErrorSpecParseError)(Neodoc_Spec_Lexer.lexUsage(v.usage)))(function (v1) {
              return Neodoc_Error_Class.capture(Neodoc_Spec_Error.toNeodocErrorSpecParseError)(Neodoc_Spec_Parser.parseUsage(v1));
          }))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_List.concat)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_List_Types.traversableList)(v.options)(function (description) {
                  return Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_Spec_Error.toNeodocErrorSpecParseError)(Neodoc_Spec_Lexer.lexDescs(description)))(function (v2) {
                      return Neodoc_Error_Class.capture(Neodoc_Spec_Error.toNeodocErrorSpecParseError)(Neodoc_Spec_Parser.parseDescription(v2));
                  });
              })))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      program: v1.program, 
                      layouts: v1.layouts, 
                      descriptions: v2, 
                      helpText: help, 
                      shortHelp: v.originalUsage
                  });
              });
          });
      });
  };
  var parseHelpTextJS = (function () {
      var go = function (help) {
          var $78 = parseHelpText(help);
          if ($78 instanceof Data_Either.Left) {
              var msg = renderNeodocError(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)($78.value0);
              return Control_Monad_Eff_Exception.throwException($foreign.jsError(msg)({}));
          };
          if ($78 instanceof Data_Either.Right) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Foreign_Class.write(Neodoc_Spec.asForeignOptionAlias(Neodoc_Data_EmptyableLayout.asForeignEmptyableLayout(Neodoc_Data_UsageLayout.asForeignUsageLayoutArg)))(Neodoc_SpecConversions.toEmptyableSpec($78.value0)));
          };
          throw new Error("Failed pattern match at Neodoc line 351, column 5 - line 356, column 51: " + [ $78.constructor.name ]);
      };
      return Data_Function_Uncurried.mkFn1(go);
  })();
  var has = function (dictFoldable) {
      return function (x) {
          return Data_Foldable.any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (s) {
              return Data_Maybe.maybe(false)(function (v) {
                  if (v instanceof Neodoc_Value.IntValue && v.value0 === 0) {
                      return false;
                  };
                  if (v instanceof Neodoc_Value.BoolValue && !v.value0) {
                      return false;
                  };
                  if (v instanceof Neodoc_Value.ArrayValue && v.value0.length === 0) {
                      return false;
                  };
                  return true;
              })(Data_StrMap.lookup(s)(x));
          });
      };
  };
  var getArgs = function (v) {
      if (v instanceof VersionOutput) {
          return v.value0;
      };
      if (v instanceof Output) {
          return v.value0;
      };
      if (v instanceof HelpOutput) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Neodoc line 106, column 1 - line 106, column 32: " + [ v.constructor.name ]);
  };
  var lookup = function (k) {
      return function (o) {
          return Data_StrMap.lookup(k)(getArgs(o));
      };
  };
  var lookup$prime = function (k) {
      return function (o) {
          var $91 = Data_StrMap.lookup(k)(getArgs(o));
          if ($91 instanceof Data_Maybe.Just) {
              return new Data_Either.Right($91.value0);
          };
          var $93 = Neodoc_OptionAlias.fromString(k);
          if ($93 instanceof Data_Either.Right) {
              return new Data_Either.Right(new Neodoc_Value.BoolValue(false));
          };
          return Data_Either.Left.create("no such key: " + Data_Show.show(Data_Show.showString)(k));
      };
  };
  var _runPure = function (input) {
      return function (v) {
          return function (mVer) {
              var env = Data_Maybe.fromMaybe(Data_StrMap.empty)(v.env);
              var argv = Data_Maybe.fromMaybe([  ])(v.argv);
              return Control_Bind.bind(Data_Either.bindEither)(Data_Either.either(Control_Applicative.pure(Data_Either.applicativeEither))(parseHelpText)(input))(function (v1) {
                  return Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_Solve_Error.toNeodocErrorSolveError)(Neodoc_Solve.solve({
                      smartOptions: v.smartOptions
                  })(v1)))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_ArgParser_Type.toNeodocErrorArgParseError)(Neodoc_ArgParser.run(v2)({
                          optionsFirst: v.optionsFirst, 
                          stopAt: v.stopAt, 
                          requireFlags: v.requireFlags, 
                          laxPlacement: v.laxPlacement, 
                          repeatableOptions: v.repeatableOptions, 
                          allowUnknown: v.allowUnknown, 
                          helpFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.helpFlags), 
                          versionFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.versionFlags)
                      })(env)(argv)))(function (v3) {
                          var output = Neodoc_Evaluate_Reduce.reduce(env)(v2.descriptions)(v3.value0)(v3.value1);
                          var $101 = has(Data_Foldable.foldableArray)(output)(Data_Functor.map(Data_Functor.functorArray)(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.helpFlags));
                          if ($101) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(new HelpOutput(output, trimHelp(v1.helpText)));
                          };
                          if (!$101) {
                              var $102 = has(Data_Foldable.foldableArray)(output)(Data_Functor.map(Data_Functor.functorArray)(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.versionFlags));
                              if ($102) {
                                  if (mVer instanceof Data_Maybe.Just) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)(new VersionOutput(output, mVer.value0));
                                  };
                                  if (mVer instanceof Data_Maybe.Nothing) {
                                      return new Data_Either.Left(Neodoc_Error.VersionMissingError.value);
                                  };
                                  throw new Error("Failed pattern match at Neodoc line 338, column 9 - line 340, column 53: " + [ mVer.constructor.name ]);
                              };
                              if (!$102) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Output(output));
                              };
                              throw new Error("Failed pattern match at Neodoc line 337, column 7 - line 341, column 32: " + [ $102.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Neodoc line 334, column 3 - line 341, column 32: " + [ $101.constructor.name ]);
                      });
                  });
              });
          };
      };
  };
  var runPure = function (help) {
      return _runPure(new Data_Either.Right(help));
  };
  var runPure$prime = function (spec) {
      return _runPure(new Data_Either.Left(spec));
  };
  var _DEVELOPER_ERROR_MESSAGE = Text_Wrap.dedent("\x0a  This is an error with the program itself and not your fault.\x0a  Please bring this to the program author's attention.\x0a");
  var _run = function (input) {
      return function (v) {
          var runNeodocError = function (mProg) {
              return function (mHelpFlags) {
                  return function (mShortHelp) {
                      return function (x) {
                          if (x instanceof Data_Either.Left) {
                              var msg = renderNeodocError(mProg)(mHelpFlags)(mShortHelp)(x.value0);
                              if (v.dontExit) {
                                  return Control_Monad_Eff_Exception.throwException($foreign.jsError(msg)({}));
                              };
                              if (!v.dontExit) {
                                  var msg$prime = (function () {
                                      var $114 = Neodoc_Error.isDeveloperError(x.value0);
                                      if ($114) {
                                          return msg + ("\x0a" + _DEVELOPER_ERROR_MESSAGE);
                                      };
                                      if (!$114) {
                                          return msg;
                                      };
                                      throw new Error("Failed pattern match at Neodoc line 276, column 26 - line 278, column 37: " + [ $114.constructor.name ]);
                                  })();
                                  return Control_Apply.applySecond(Control_Monad_Eff.applyEff)(Control_Monad_Eff_Console.error(msg$prime))(Node_Process.exit(1));
                              };
                              throw new Error("Failed pattern match at Neodoc line 273, column 11 - line 280, column 5: " + [ v.dontExit.constructor.name ]);
                          };
                          if (x instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(x.value0);
                          };
                          throw new Error("Failed pattern match at Neodoc line 270, column 50 - line 280, column 22: " + [ x.constructor.name ]);
                      };
                  };
              };
          };
          var readPkgVersion = $foreign.readPkgVersionImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
          return function __do() {
              var v1 = Data_Maybe.maybe(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Array.drop(2))(Node_Process.argv))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(v.argv)();
              var v2 = Data_Maybe.maybe(Node_Process.getEnv)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(v.env)();
              var runNeodocError$prime = runNeodocError(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value);
              var v3 = runNeodocError$prime(Data_Either.either(Control_Applicative.pure(Data_Either.applicativeEither))(parseHelpText)(input))();
              var v4 = runNeodocError$prime((function () {
                  var fromJSCallback = function (dictPretty) {
                      return function (cb) {
                          return function (spec) {
                              var result = Control_Monad_Eff_Unsafe.unsafePerformEff(cb(spec));
                              return new Data_Either.Right(result);
                          };
                      };
                  };
                  return Neodoc_Error_Class.capture(Neodoc_Solve_Error.toNeodocErrorSolveError)(Neodoc_Solve["solve'"]({
                      smartOptions: v.smartOptions, 
                      helpFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.helpFlags), 
                      versionFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.versionFlags)
                  })(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Either.either(function (v4) {
                      return Data_Functor.map(Data_Functor.functorArray)(fromJSCallback(Neodoc_Data_Layout.prettyLayout(Neodoc_Data_UsageLayout.prettyUsageLayoutArg)))(v4);
                  })(Control_Category.id(Control_Category.categoryFn))(v.transforms.presolve)))(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Either.either(function (v4) {
                      return Data_Functor.map(Data_Functor.functorArray)(fromJSCallback(Neodoc_Data_Layout.prettyLayout(Neodoc_Data_SolvedLayout.prettySolvedLayoutArg)))(v4);
                  })(Control_Category.id(Control_Category.categoryFn))(v.transforms.postsolve)))(v3));
              })())();
              var runNeodocError$prime1 = runNeodocError(new Data_Maybe.Just(v3.program))(new Data_Maybe.Just(Data_Functor.map(Data_Functor.functorArray)(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.helpFlags)))(new Data_Maybe.Just(v3.shortHelp));
              var v5 = runNeodocError$prime1(Control_Bind.bind(Data_Either.bindEither)(Neodoc_Error_Class.capture(Neodoc_ArgParser_Type.toNeodocErrorArgParseError)(Neodoc_ArgParser.run(v4)({
                  optionsFirst: v.optionsFirst, 
                  stopAt: v.stopAt, 
                  requireFlags: v.requireFlags, 
                  laxPlacement: v.laxPlacement, 
                  repeatableOptions: v.repeatableOptions, 
                  allowUnknown: v.allowUnknown, 
                  helpFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.helpFlags), 
                  versionFlags: Data_List.fromFoldable(Data_Foldable.foldableArray)(v.versionFlags)
              })(v2)(v1)))(function (v5) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Neodoc_Evaluate_Reduce.reduce(v2)(v4.descriptions)(v5.value0)(v5.value1));
              }))();
              var $125 = has(Data_Foldable.foldableArray)(v5)(Data_Functor.map(Data_Functor.functorArray)(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.helpFlags));
              if ($125) {
                  var helpText$prime = trimHelp(v3.helpText);
                  if (v.dontExit) {
                      return new HelpOutput(v5, helpText$prime);
                  };
                  if (!v.dontExit) {
                      return Control_Apply.applySecond(Control_Monad_Eff.applyEff)(Control_Monad_Eff_Console.log(helpText$prime))(Node_Process.exit(0))();
                  };
                  throw new Error("Failed pattern match at Neodoc line 247, column 9 - line 250, column 5: " + [ v.dontExit.constructor.name ]);
              };
              if (!$125) {
                  var $127 = has(Data_Foldable.foldableArray)(v5)(Data_Functor.map(Data_Functor.functorArray)(Data_Pretty.pretty(Neodoc_OptionAlias.prettyOptionAlias))(v.versionFlags));
                  if ($127) {
                      var v6 = Data_Maybe.maybe(readPkgVersion)(function ($152) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($152));
                      })(v.version)();
                      if (v6 instanceof Data_Maybe.Just) {
                          if (v.dontExit) {
                              return new VersionOutput(v5, v6.value0);
                          };
                          if (!v.dontExit) {
                              return Control_Apply.applySecond(Control_Monad_Eff.applyEff)(Control_Monad_Eff_Console.log(v6.value0))(Node_Process.exit(0))();
                          };
                          throw new Error("Failed pattern match at Neodoc line 255, column 13 - line 258, column 11: " + [ v.dontExit.constructor.name ]);
                      };
                      if (v6 instanceof Data_Maybe.Nothing) {
                          return runNeodocError$prime1(new Data_Either.Left(Neodoc_Error.VersionMissingError.value))();
                      };
                      throw new Error("Failed pattern match at Neodoc line 253, column 9 - line 258, column 70: " + [ v6.constructor.name ]);
                  };
                  if (!$127) {
                      return new Output(v5);
                  };
                  throw new Error("Failed pattern match at Neodoc line 251, column 7 - line 259, column 30: " + [ $127.constructor.name ]);
              };
              throw new Error("Failed pattern match at Neodoc line 245, column 3 - line 259, column 30: " + [ $125.constructor.name ]);
          };
      };
  };
  var run = function (help) {
      return _run(new Data_Either.Right(help));
  };
  var run$prime = function (spec) {
      return _run(new Data_Either.Left(spec));
  };
  var runJS = (function () {
      var rawValue = function (v) {
          if (v instanceof Neodoc_Value.BoolValue) {
              return Unsafe_Coerce.unsafeCoerce(v.value0);
          };
          if (v instanceof Neodoc_Value.IntValue) {
              return Unsafe_Coerce.unsafeCoerce(v.value0);
          };
          if (v instanceof Neodoc_Value.FloatValue) {
              return Unsafe_Coerce.unsafeCoerce(v.value0);
          };
          if (v instanceof Neodoc_Value.StringValue) {
              return Unsafe_Coerce.unsafeCoerce(v.value0);
          };
          if (v instanceof Neodoc_Value.ArrayValue) {
              return Unsafe_Coerce.unsafeCoerce(Data_Functor.map(Data_Functor.functorArray)(rawValue)(v.value0));
          };
          throw new Error("Failed pattern match at Neodoc line 156, column 3 - line 156, column 44: " + [ v.constructor.name ]);
      };
      var go = function (fSpec) {
          return function (fOpts) {
              return function __do() {
                  var v = Data_Either.either(function ($153) {
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Data_Foreign_Extra.prettyForeignError(Data_List_NonEmpty.head($153))));
                  })(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Control_Monad_Except.runExcept(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Tuple.Tuple.create)(readSpec(fSpec)))(Data_Foreign_Class.read(Neodoc_Options.isForeign)(fOpts))))();
                  var v1 = _run(v.value0)(v.value1)();
                  if (v1 instanceof Output) {
                      return Data_Foreign.toForeign(Data_Functor.map(Data_StrMap.functorStrMap)(rawValue)(v1.value0));
                  };
                  if (v1 instanceof HelpOutput) {
                      var x$prime = Data_StrMap.insert(".help")(new Neodoc_Value.StringValue(v1.value1))(v1.value0);
                      return Data_Foreign.toForeign(Data_Functor.map(Data_StrMap.functorStrMap)(rawValue)(x$prime));
                  };
                  if (v1 instanceof VersionOutput) {
                      var x$prime = Data_StrMap.insert(".version")(new Neodoc_Value.StringValue(v1.value1))(v1.value0);
                      return Data_Foreign.toForeign(Data_Functor.map(Data_StrMap.functorStrMap)(rawValue)(x$prime));
                  };
                  throw new Error("Failed pattern match at Neodoc line 145, column 10 - line 152, column 42: " + [ v1.constructor.name ]);
              };
          };
      };
      return Data_Function_Uncurried.mkFn2(go);
  })();
  exports["VersionOutput"] = VersionOutput;
  exports["Output"] = Output;
  exports["HelpOutput"] = HelpOutput;
  exports["lookup"] = lookup;
  exports["lookup'"] = lookup$prime;
  exports["parseHelpText"] = parseHelpText;
  exports["parseHelpTextJS"] = parseHelpTextJS;
  exports["readSpec"] = readSpec;
  exports["run"] = run;
  exports["run'"] = run$prime;
  exports["runJS"] = runJS;
  exports["runPure"] = runPure;
  exports["runPure'"] = runPure$prime;
  exports["prettyOutput"] = prettyOutput;
  exports["showOutput"] = showOutput;
})(PS["Neodoc"] = PS["Neodoc"] || {});
module.exports = PS;
