import { Abi as SchemaAbi } from "@truffle/contract-schema/spec";
import * as Codec from "@truffle/codec";
import Abi = Codec.AbiData.Abi;
import AbiEntry = Codec.AbiData.AbiEntry;
import FunctionAbiEntry = Codec.AbiData.FunctionAbiEntry;
import ConstructorAbiEntry = Codec.AbiData.ConstructorAbiEntry;
import FallbackAbiEntry = Codec.AbiData.FallbackAbiEntry;
import ReceiveAbiEntry = Codec.AbiData.ReceiveAbiEntry;
import EventAbiEntry = Codec.AbiData.EventAbiEntry;
import AbiParameter = Codec.AbiData.AbiParameter;
export declare type Node = Abi | AbiEntry | FunctionAbiEntry | ConstructorAbiEntry | FallbackAbiEntry | ReceiveAbiEntry | EventAbiEntry | AbiParameter;
export { Abi, AbiEntry, FunctionAbiEntry, ConstructorAbiEntry, FallbackAbiEntry, ReceiveAbiEntry, EventAbiEntry, AbiParameter, };
export declare const isAbi: (node: Node | SchemaAbi) => node is SchemaAbi | Codec.AbiData.Abi;
export declare const isAbiEntry: (node: Node) => node is Codec.AbiData.AbiEntry;
//# sourceMappingURL=types.d.ts.map