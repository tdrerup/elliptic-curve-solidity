import { Abi as SchemaAbi } from "@truffle/contract-schema/spec";
import * as Abi from "@truffle/abi-utils";
import { Visitor, VisitOptions, Node } from "./visitor";
export interface Component {
    name: string;
    type: string;
    signature?: string;
}
export interface Declaration {
    identifier?: string;
    components: Component[];
}
export interface Declarations {
    [signature: string]: Declaration;
}
export declare class DeclarationsCollector implements Visitor<Declarations> {
    visitAbi({ node: nodes }: VisitOptions<Abi.Abi>): Declarations;
    visitEventEntry({ node: entry }: VisitOptions<Abi.EventEntry>): Declarations;
    visitFunctionEntry({ node: entry, }: VisitOptions<Abi.FunctionEntry>): Declarations;
    visitConstructorEntry({ node: entry, }: VisitOptions<Abi.ConstructorEntry>): Declarations;
    visitFallbackEntry({ node: entry, }: VisitOptions<Abi.FallbackEntry>): Declarations;
    visitReceiveEntry({ node: entry, }: VisitOptions<Abi.ReceiveEntry>): Declarations;
    visitParameter({ node: parameter }: VisitOptions<Abi.Parameter>): Declarations;
}
export declare const collectDeclarations: (node: SchemaAbi | Node) => Declarations;
//# sourceMappingURL=declarations.d.ts.map