import * as Ast from "../ast";
import { ContractObject as Artifact } from "@truffle/contract-schema/spec";
import { CompiledContract, Compilation as CompilerCompilation } from "@truffle/compile-common";
import { Compilation, Contract } from "./types";
export declare function shimCompilations(inputCompilations: CompilerCompilation[], shimmedCompilationIdPrefix?: string, externalSolidity?: boolean): Compilation[];
/**
 * wrapper around shimArtifactsToCompilation that just returns
 * the result in a one-element array (keeping the old name
 * shimArtifacts for compatibility)
 */
export declare function shimArtifacts(artifacts: (Artifact | CompiledContract)[], files?: string[], shimmedCompilationId?: string, externalSolidity?: boolean): Compilation[];
/**
 * shims a bunch of contracts ("artifacts", though not necessarily)
 * to a compilation.  usually used via one of the above two functions.
 */
export declare function shimContracts(artifacts: (Artifact | CompiledContract)[], files?: string[], shimmedCompilationId?: string, externalSolidity?: boolean): Compilation;
export declare function getContractNode(contract: Contract, compilation: Compilation): Ast.AstNode;
