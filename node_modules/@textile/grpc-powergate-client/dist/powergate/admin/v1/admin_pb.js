// source: powergate/admin/v1/admin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var powergate_user_v1_user_pb = require('../../../powergate/user/v1/user_pb.js');
goog.object.extend(proto, powergate_user_v1_user_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.powergate.admin.v1.AddressesRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.AddressesResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.CreateUserRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.CreateUserResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.FilecoinMiner', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GCStagedRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GCStagedResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetMinerInfoRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetMinerInfoResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetMinersRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetMinersResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.HSPinnedCid', null, global);
goog.exportSymbol('proto.powergate.admin.v1.HSPinnedCidUser', null, global);
goog.exportSymbol('proto.powergate.admin.v1.ListStorageInfoRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.ListStorageInfoResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.ListStorageJobsRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.ListStorageJobsResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.MinerInfo', null, global);
goog.exportSymbol('proto.powergate.admin.v1.NewAddressRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.NewAddressResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.PinnedCidsRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.PinnedCidsResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.RegenerateAuthRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.RegenerateAuthResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.SendFilRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.SendFilResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.StorageInfoRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.StorageInfoResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.StorageJobsSummaryRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.StorageJobsSummaryResponse', null, global);
goog.exportSymbol('proto.powergate.admin.v1.User', null, global);
goog.exportSymbol('proto.powergate.admin.v1.UsersRequest', null, global);
goog.exportSymbol('proto.powergate.admin.v1.UsersResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.NewAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.NewAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.NewAddressRequest.displayName = 'proto.powergate.admin.v1.NewAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.NewAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.NewAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.NewAddressResponse.displayName = 'proto.powergate.admin.v1.NewAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.AddressesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.AddressesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.AddressesRequest.displayName = 'proto.powergate.admin.v1.AddressesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.AddressesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.AddressesResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.AddressesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.AddressesResponse.displayName = 'proto.powergate.admin.v1.AddressesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.SendFilRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.SendFilRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.SendFilRequest.displayName = 'proto.powergate.admin.v1.SendFilRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.SendFilResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.SendFilResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.SendFilResponse.displayName = 'proto.powergate.admin.v1.SendFilResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.User.displayName = 'proto.powergate.admin.v1.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.CreateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.CreateUserRequest.displayName = 'proto.powergate.admin.v1.CreateUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.CreateUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.CreateUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.CreateUserResponse.displayName = 'proto.powergate.admin.v1.CreateUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.RegenerateAuthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.RegenerateAuthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.RegenerateAuthRequest.displayName = 'proto.powergate.admin.v1.RegenerateAuthRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.RegenerateAuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.RegenerateAuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.RegenerateAuthResponse.displayName = 'proto.powergate.admin.v1.RegenerateAuthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.UsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.UsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.UsersRequest.displayName = 'proto.powergate.admin.v1.UsersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.UsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.UsersResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.UsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.UsersResponse.displayName = 'proto.powergate.admin.v1.UsersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.StorageInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.StorageInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.StorageInfoRequest.displayName = 'proto.powergate.admin.v1.StorageInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.StorageInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.StorageInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.StorageInfoResponse.displayName = 'proto.powergate.admin.v1.StorageInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.ListStorageInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.ListStorageInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.ListStorageInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.ListStorageInfoRequest.displayName = 'proto.powergate.admin.v1.ListStorageInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.ListStorageInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.ListStorageInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.ListStorageInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.ListStorageInfoResponse.displayName = 'proto.powergate.admin.v1.ListStorageInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.ListStorageJobsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.ListStorageJobsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.ListStorageJobsRequest.displayName = 'proto.powergate.admin.v1.ListStorageJobsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.ListStorageJobsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.ListStorageJobsResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.ListStorageJobsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.ListStorageJobsResponse.displayName = 'proto.powergate.admin.v1.ListStorageJobsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.StorageJobsSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.StorageJobsSummaryRequest.displayName = 'proto.powergate.admin.v1.StorageJobsSummaryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.StorageJobsSummaryResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.StorageJobsSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.StorageJobsSummaryResponse.displayName = 'proto.powergate.admin.v1.StorageJobsSummaryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GCStagedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.GCStagedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GCStagedRequest.displayName = 'proto.powergate.admin.v1.GCStagedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GCStagedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GCStagedResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GCStagedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GCStagedResponse.displayName = 'proto.powergate.admin.v1.GCStagedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.PinnedCidsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.PinnedCidsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.PinnedCidsRequest.displayName = 'proto.powergate.admin.v1.PinnedCidsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.PinnedCidsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.PinnedCidsResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.PinnedCidsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.PinnedCidsResponse.displayName = 'proto.powergate.admin.v1.PinnedCidsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.HSPinnedCid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.HSPinnedCid.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.HSPinnedCid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.HSPinnedCid.displayName = 'proto.powergate.admin.v1.HSPinnedCid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.HSPinnedCidUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.HSPinnedCidUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.HSPinnedCidUser.displayName = 'proto.powergate.admin.v1.HSPinnedCidUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.displayName = 'proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.displayName = 'proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.displayName = 'proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.displayName = 'proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetMinersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.GetMinersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetMinersRequest.displayName = 'proto.powergate.admin.v1.GetMinersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetMinersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GetMinersResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GetMinersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetMinersResponse.displayName = 'proto.powergate.admin.v1.GetMinersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.FilecoinMiner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.FilecoinMiner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.FilecoinMiner.displayName = 'proto.powergate.admin.v1.FilecoinMiner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetMinerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GetMinerInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GetMinerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetMinerInfoRequest.displayName = 'proto.powergate.admin.v1.GetMinerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.GetMinerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.powergate.admin.v1.GetMinerInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.powergate.admin.v1.GetMinerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.GetMinerInfoResponse.displayName = 'proto.powergate.admin.v1.GetMinerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.powergate.admin.v1.MinerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.powergate.admin.v1.MinerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.powergate.admin.v1.MinerInfo.displayName = 'proto.powergate.admin.v1.MinerInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.NewAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.NewAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.NewAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.NewAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressType: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.NewAddressRequest}
 */
proto.powergate.admin.v1.NewAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.NewAddressRequest;
  return proto.powergate.admin.v1.NewAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.NewAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.NewAddressRequest}
 */
proto.powergate.admin.v1.NewAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.NewAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.NewAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.NewAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.NewAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address_type = 1;
 * @return {string}
 */
proto.powergate.admin.v1.NewAddressRequest.prototype.getAddressType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.NewAddressRequest} returns this
 */
proto.powergate.admin.v1.NewAddressRequest.prototype.setAddressType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.NewAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.NewAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.NewAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.NewAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.NewAddressResponse}
 */
proto.powergate.admin.v1.NewAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.NewAddressResponse;
  return proto.powergate.admin.v1.NewAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.NewAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.NewAddressResponse}
 */
proto.powergate.admin.v1.NewAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.NewAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.NewAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.NewAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.NewAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.powergate.admin.v1.NewAddressResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.NewAddressResponse} returns this
 */
proto.powergate.admin.v1.NewAddressResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.AddressesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.AddressesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.AddressesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.AddressesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.AddressesRequest}
 */
proto.powergate.admin.v1.AddressesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.AddressesRequest;
  return proto.powergate.admin.v1.AddressesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.AddressesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.AddressesRequest}
 */
proto.powergate.admin.v1.AddressesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.AddressesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.AddressesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.AddressesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.AddressesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.AddressesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.AddressesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.AddressesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.AddressesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.AddressesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.AddressesResponse}
 */
proto.powergate.admin.v1.AddressesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.AddressesResponse;
  return proto.powergate.admin.v1.AddressesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.AddressesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.AddressesResponse}
 */
proto.powergate.admin.v1.AddressesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.AddressesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.AddressesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.AddressesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.AddressesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string addresses = 1;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.AddressesResponse.prototype.getAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.AddressesResponse} returns this
 */
proto.powergate.admin.v1.AddressesResponse.prototype.setAddressesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.AddressesResponse} returns this
 */
proto.powergate.admin.v1.AddressesResponse.prototype.addAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.AddressesResponse} returns this
 */
proto.powergate.admin.v1.AddressesResponse.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.SendFilRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.SendFilRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.SendFilRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.SendFilRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, ""),
    to: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.SendFilRequest}
 */
proto.powergate.admin.v1.SendFilRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.SendFilRequest;
  return proto.powergate.admin.v1.SendFilRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.SendFilRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.SendFilRequest}
 */
proto.powergate.admin.v1.SendFilRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.SendFilRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.SendFilRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.SendFilRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.SendFilRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string from = 1;
 * @return {string}
 */
proto.powergate.admin.v1.SendFilRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.SendFilRequest} returns this
 */
proto.powergate.admin.v1.SendFilRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to = 2;
 * @return {string}
 */
proto.powergate.admin.v1.SendFilRequest.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.SendFilRequest} returns this
 */
proto.powergate.admin.v1.SendFilRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.powergate.admin.v1.SendFilRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.SendFilRequest} returns this
 */
proto.powergate.admin.v1.SendFilRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.SendFilResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.SendFilResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.SendFilResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.SendFilResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.SendFilResponse}
 */
proto.powergate.admin.v1.SendFilResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.SendFilResponse;
  return proto.powergate.admin.v1.SendFilResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.SendFilResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.SendFilResponse}
 */
proto.powergate.admin.v1.SendFilResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.SendFilResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.SendFilResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.SendFilResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.SendFilResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cid = 1;
 * @return {string}
 */
proto.powergate.admin.v1.SendFilResponse.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.SendFilResponse} returns this
 */
proto.powergate.admin.v1.SendFilResponse.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.User}
 */
proto.powergate.admin.v1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.User;
  return proto.powergate.admin.v1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.User}
 */
proto.powergate.admin.v1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.powergate.admin.v1.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.User} returns this
 */
proto.powergate.admin.v1.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.powergate.admin.v1.User.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.User} returns this
 */
proto.powergate.admin.v1.User.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.CreateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.CreateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.CreateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.CreateUserRequest}
 */
proto.powergate.admin.v1.CreateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.CreateUserRequest;
  return proto.powergate.admin.v1.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.CreateUserRequest}
 */
proto.powergate.admin.v1.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.CreateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.CreateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.CreateUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.CreateUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.CreateUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.CreateUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.powergate.admin.v1.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.CreateUserResponse}
 */
proto.powergate.admin.v1.CreateUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.CreateUserResponse;
  return proto.powergate.admin.v1.CreateUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.CreateUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.CreateUserResponse}
 */
proto.powergate.admin.v1.CreateUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.powergate.admin.v1.User;
      reader.readMessage(value,proto.powergate.admin.v1.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.CreateUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.CreateUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.CreateUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.CreateUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.powergate.admin.v1.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.powergate.admin.v1.User}
 */
proto.powergate.admin.v1.CreateUserResponse.prototype.getUser = function() {
  return /** @type{?proto.powergate.admin.v1.User} */ (
    jspb.Message.getWrapperField(this, proto.powergate.admin.v1.User, 1));
};


/**
 * @param {?proto.powergate.admin.v1.User|undefined} value
 * @return {!proto.powergate.admin.v1.CreateUserResponse} returns this
*/
proto.powergate.admin.v1.CreateUserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.powergate.admin.v1.CreateUserResponse} returns this
 */
proto.powergate.admin.v1.CreateUserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.powergate.admin.v1.CreateUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.RegenerateAuthRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.RegenerateAuthRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.RegenerateAuthRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.RegenerateAuthRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.RegenerateAuthRequest}
 */
proto.powergate.admin.v1.RegenerateAuthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.RegenerateAuthRequest;
  return proto.powergate.admin.v1.RegenerateAuthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.RegenerateAuthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.RegenerateAuthRequest}
 */
proto.powergate.admin.v1.RegenerateAuthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.RegenerateAuthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.RegenerateAuthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.RegenerateAuthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.RegenerateAuthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.powergate.admin.v1.RegenerateAuthRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.RegenerateAuthRequest} returns this
 */
proto.powergate.admin.v1.RegenerateAuthRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.RegenerateAuthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.RegenerateAuthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.RegenerateAuthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.RegenerateAuthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    newToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.RegenerateAuthResponse}
 */
proto.powergate.admin.v1.RegenerateAuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.RegenerateAuthResponse;
  return proto.powergate.admin.v1.RegenerateAuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.RegenerateAuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.RegenerateAuthResponse}
 */
proto.powergate.admin.v1.RegenerateAuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.RegenerateAuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.RegenerateAuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.RegenerateAuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.RegenerateAuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string new_token = 1;
 * @return {string}
 */
proto.powergate.admin.v1.RegenerateAuthResponse.prototype.getNewToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.RegenerateAuthResponse} returns this
 */
proto.powergate.admin.v1.RegenerateAuthResponse.prototype.setNewToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.UsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.UsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.UsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.UsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.UsersRequest}
 */
proto.powergate.admin.v1.UsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.UsersRequest;
  return proto.powergate.admin.v1.UsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.UsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.UsersRequest}
 */
proto.powergate.admin.v1.UsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.UsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.UsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.UsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.UsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.UsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.UsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.UsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.UsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.UsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.powergate.admin.v1.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.UsersResponse}
 */
proto.powergate.admin.v1.UsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.UsersResponse;
  return proto.powergate.admin.v1.UsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.UsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.UsersResponse}
 */
proto.powergate.admin.v1.UsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.powergate.admin.v1.User;
      reader.readMessage(value,proto.powergate.admin.v1.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.UsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.UsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.UsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.UsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.powergate.admin.v1.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.powergate.admin.v1.User>}
 */
proto.powergate.admin.v1.UsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.powergate.admin.v1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.powergate.admin.v1.User, 1));
};


/**
 * @param {!Array<!proto.powergate.admin.v1.User>} value
 * @return {!proto.powergate.admin.v1.UsersResponse} returns this
*/
proto.powergate.admin.v1.UsersResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.admin.v1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.User}
 */
proto.powergate.admin.v1.UsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.admin.v1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.UsersResponse} returns this
 */
proto.powergate.admin.v1.UsersResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.StorageInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.StorageInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.StorageInfoRequest}
 */
proto.powergate.admin.v1.StorageInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.StorageInfoRequest;
  return proto.powergate.admin.v1.StorageInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.StorageInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.StorageInfoRequest}
 */
proto.powergate.admin.v1.StorageInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.StorageInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.StorageInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.StorageInfoRequest} returns this
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid = 2;
 * @return {string}
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.StorageInfoRequest} returns this
 */
proto.powergate.admin.v1.StorageInfoRequest.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.StorageInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.StorageInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.StorageInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageInfo: (f = msg.getStorageInfo()) && powergate_user_v1_user_pb.StorageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.StorageInfoResponse}
 */
proto.powergate.admin.v1.StorageInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.StorageInfoResponse;
  return proto.powergate.admin.v1.StorageInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.StorageInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.StorageInfoResponse}
 */
proto.powergate.admin.v1.StorageInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new powergate_user_v1_user_pb.StorageInfo;
      reader.readMessage(value,powergate_user_v1_user_pb.StorageInfo.deserializeBinaryFromReader);
      msg.setStorageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.StorageInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.StorageInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.StorageInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      powergate_user_v1_user_pb.StorageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional powergate.user.v1.StorageInfo storage_info = 1;
 * @return {?proto.powergate.user.v1.StorageInfo}
 */
proto.powergate.admin.v1.StorageInfoResponse.prototype.getStorageInfo = function() {
  return /** @type{?proto.powergate.user.v1.StorageInfo} */ (
    jspb.Message.getWrapperField(this, powergate_user_v1_user_pb.StorageInfo, 1));
};


/**
 * @param {?proto.powergate.user.v1.StorageInfo|undefined} value
 * @return {!proto.powergate.admin.v1.StorageInfoResponse} returns this
*/
proto.powergate.admin.v1.StorageInfoResponse.prototype.setStorageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.powergate.admin.v1.StorageInfoResponse} returns this
 */
proto.powergate.admin.v1.StorageInfoResponse.prototype.clearStorageInfo = function() {
  return this.setStorageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.powergate.admin.v1.StorageInfoResponse.prototype.hasStorageInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.ListStorageInfoRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.ListStorageInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.ListStorageInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    cidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.ListStorageInfoRequest;
  return proto.powergate.admin.v1.ListStorageInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.ListStorageInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.ListStorageInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.ListStorageInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getCidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string user_ids = 1;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * repeated string cids = 2;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.getCidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.setCidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.addCids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.ListStorageInfoRequest} returns this
 */
proto.powergate.admin.v1.ListStorageInfoRequest.prototype.clearCidsList = function() {
  return this.setCidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.ListStorageInfoResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.ListStorageInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.ListStorageInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageInfoList: jspb.Message.toObjectList(msg.getStorageInfoList(),
    powergate_user_v1_user_pb.StorageInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.ListStorageInfoResponse}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.ListStorageInfoResponse;
  return proto.powergate.admin.v1.ListStorageInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.ListStorageInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.ListStorageInfoResponse}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new powergate_user_v1_user_pb.StorageInfo;
      reader.readMessage(value,powergate_user_v1_user_pb.StorageInfo.deserializeBinaryFromReader);
      msg.addStorageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.ListStorageInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.ListStorageInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      powergate_user_v1_user_pb.StorageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated powergate.user.v1.StorageInfo storage_info = 1;
 * @return {!Array<!proto.powergate.user.v1.StorageInfo>}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.getStorageInfoList = function() {
  return /** @type{!Array<!proto.powergate.user.v1.StorageInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, powergate_user_v1_user_pb.StorageInfo, 1));
};


/**
 * @param {!Array<!proto.powergate.user.v1.StorageInfo>} value
 * @return {!proto.powergate.admin.v1.ListStorageInfoResponse} returns this
*/
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.setStorageInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.user.v1.StorageInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.user.v1.StorageInfo}
 */
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.addStorageInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.user.v1.StorageInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.ListStorageInfoResponse} returns this
 */
proto.powergate.admin.v1.ListStorageInfoResponse.prototype.clearStorageInfoList = function() {
  return this.setStorageInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.ListStorageJobsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.ListStorageJobsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageJobsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdFilter: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cidFilter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ascending: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 5, ""),
    selector: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.ListStorageJobsRequest;
  return proto.powergate.admin.v1.ListStorageJobsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.ListStorageJobsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserIdFilter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCidFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAscending(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 6:
      var value = /** @type {!proto.powergate.user.v1.StorageJobsSelector} */ (reader.readEnum());
      msg.setSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.ListStorageJobsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.ListStorageJobsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageJobsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdFilter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCidFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAscending();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string user_id_filter = 1;
 * @return {string}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getUserIdFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setUserIdFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid_filter = 2;
 * @return {string}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getCidFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setCidFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 limit = 3;
 * @return {number}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool ascending = 4;
 * @return {boolean}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getAscending = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setAscending = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string next_page_token = 5;
 * @return {string}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional powergate.user.v1.StorageJobsSelector selector = 6;
 * @return {!proto.powergate.user.v1.StorageJobsSelector}
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.getSelector = function() {
  return /** @type {!proto.powergate.user.v1.StorageJobsSelector} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.powergate.user.v1.StorageJobsSelector} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsRequest} returns this
 */
proto.powergate.admin.v1.ListStorageJobsRequest.prototype.setSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.ListStorageJobsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.ListStorageJobsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.ListStorageJobsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageJobsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageJobsList: jspb.Message.toObjectList(msg.getStorageJobsList(),
    powergate_user_v1_user_pb.StorageJob.toObject, includeInstance),
    more: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.ListStorageJobsResponse;
  return proto.powergate.admin.v1.ListStorageJobsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.ListStorageJobsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new powergate_user_v1_user_pb.StorageJob;
      reader.readMessage(value,powergate_user_v1_user_pb.StorageJob.deserializeBinaryFromReader);
      msg.addStorageJobs(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMore(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.ListStorageJobsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.ListStorageJobsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.ListStorageJobsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageJobsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      powergate_user_v1_user_pb.StorageJob.serializeBinaryToWriter
    );
  }
  f = message.getMore();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated powergate.user.v1.StorageJob storage_jobs = 1;
 * @return {!Array<!proto.powergate.user.v1.StorageJob>}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.getStorageJobsList = function() {
  return /** @type{!Array<!proto.powergate.user.v1.StorageJob>} */ (
    jspb.Message.getRepeatedWrapperField(this, powergate_user_v1_user_pb.StorageJob, 1));
};


/**
 * @param {!Array<!proto.powergate.user.v1.StorageJob>} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse} returns this
*/
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.setStorageJobsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.user.v1.StorageJob=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.user.v1.StorageJob}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.addStorageJobs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.user.v1.StorageJob, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse} returns this
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.clearStorageJobsList = function() {
  return this.setStorageJobsList([]);
};


/**
 * optional bool more = 2;
 * @return {boolean}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.getMore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse} returns this
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.setMore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.ListStorageJobsResponse} returns this
 */
proto.powergate.admin.v1.ListStorageJobsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.StorageJobsSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryRequest}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.StorageJobsSummaryRequest;
  return proto.powergate.admin.v1.StorageJobsSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryRequest}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.StorageJobsSummaryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryRequest} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid = 2;
 * @return {string}
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryRequest} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryRequest.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.StorageJobsSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queuedStorageJobsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    executingStorageJobsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    finalStorageJobsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.StorageJobsSummaryResponse;
  return proto.powergate.admin.v1.StorageJobsSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addQueuedStorageJobs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addExecutingStorageJobs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFinalStorageJobs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.StorageJobsSummaryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.StorageJobsSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueuedStorageJobsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExecutingStorageJobsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getFinalStorageJobsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * repeated string queued_storage_jobs = 1;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.getQueuedStorageJobsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.setQueuedStorageJobsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.addQueuedStorageJobs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.clearQueuedStorageJobsList = function() {
  return this.setQueuedStorageJobsList([]);
};


/**
 * repeated string executing_storage_jobs = 2;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.getExecutingStorageJobsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.setExecutingStorageJobsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.addExecutingStorageJobs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.clearExecutingStorageJobsList = function() {
  return this.setExecutingStorageJobsList([]);
};


/**
 * repeated string final_storage_jobs = 3;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.getFinalStorageJobsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.setFinalStorageJobsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.addFinalStorageJobs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.StorageJobsSummaryResponse} returns this
 */
proto.powergate.admin.v1.StorageJobsSummaryResponse.prototype.clearFinalStorageJobsList = function() {
  return this.setFinalStorageJobsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GCStagedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GCStagedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GCStagedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GCStagedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GCStagedRequest}
 */
proto.powergate.admin.v1.GCStagedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GCStagedRequest;
  return proto.powergate.admin.v1.GCStagedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GCStagedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GCStagedRequest}
 */
proto.powergate.admin.v1.GCStagedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GCStagedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GCStagedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GCStagedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GCStagedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GCStagedResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GCStagedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GCStagedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GCStagedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unpinnedCidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GCStagedResponse}
 */
proto.powergate.admin.v1.GCStagedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GCStagedResponse;
  return proto.powergate.admin.v1.GCStagedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GCStagedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GCStagedResponse}
 */
proto.powergate.admin.v1.GCStagedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUnpinnedCids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GCStagedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GCStagedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GCStagedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnpinnedCidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string unpinned_cids = 1;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.getUnpinnedCidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.GCStagedResponse} returns this
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.setUnpinnedCidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.GCStagedResponse} returns this
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.addUnpinnedCids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GCStagedResponse} returns this
 */
proto.powergate.admin.v1.GCStagedResponse.prototype.clearUnpinnedCidsList = function() {
  return this.setUnpinnedCidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.PinnedCidsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.PinnedCidsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.PinnedCidsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.PinnedCidsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.PinnedCidsRequest}
 */
proto.powergate.admin.v1.PinnedCidsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.PinnedCidsRequest;
  return proto.powergate.admin.v1.PinnedCidsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.PinnedCidsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.PinnedCidsRequest}
 */
proto.powergate.admin.v1.PinnedCidsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.PinnedCidsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.PinnedCidsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.PinnedCidsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.PinnedCidsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.PinnedCidsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.PinnedCidsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.PinnedCidsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.PinnedCidsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.PinnedCidsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cidsList: jspb.Message.toObjectList(msg.getCidsList(),
    proto.powergate.admin.v1.HSPinnedCid.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.PinnedCidsResponse}
 */
proto.powergate.admin.v1.PinnedCidsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.PinnedCidsResponse;
  return proto.powergate.admin.v1.PinnedCidsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.PinnedCidsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.PinnedCidsResponse}
 */
proto.powergate.admin.v1.PinnedCidsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.powergate.admin.v1.HSPinnedCid;
      reader.readMessage(value,proto.powergate.admin.v1.HSPinnedCid.deserializeBinaryFromReader);
      msg.addCids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.PinnedCidsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.PinnedCidsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.PinnedCidsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.PinnedCidsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.powergate.admin.v1.HSPinnedCid.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HSPinnedCid cids = 1;
 * @return {!Array<!proto.powergate.admin.v1.HSPinnedCid>}
 */
proto.powergate.admin.v1.PinnedCidsResponse.prototype.getCidsList = function() {
  return /** @type{!Array<!proto.powergate.admin.v1.HSPinnedCid>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.powergate.admin.v1.HSPinnedCid, 1));
};


/**
 * @param {!Array<!proto.powergate.admin.v1.HSPinnedCid>} value
 * @return {!proto.powergate.admin.v1.PinnedCidsResponse} returns this
*/
proto.powergate.admin.v1.PinnedCidsResponse.prototype.setCidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.admin.v1.HSPinnedCid=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.HSPinnedCid}
 */
proto.powergate.admin.v1.PinnedCidsResponse.prototype.addCids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.admin.v1.HSPinnedCid, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.PinnedCidsResponse} returns this
 */
proto.powergate.admin.v1.PinnedCidsResponse.prototype.clearCidsList = function() {
  return this.setCidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.HSPinnedCid.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.HSPinnedCid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.HSPinnedCid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.HSPinnedCid.toObject = function(includeInstance, msg) {
  var f, obj = {
    cid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.powergate.admin.v1.HSPinnedCidUser.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.HSPinnedCid}
 */
proto.powergate.admin.v1.HSPinnedCid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.HSPinnedCid;
  return proto.powergate.admin.v1.HSPinnedCid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.HSPinnedCid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.HSPinnedCid}
 */
proto.powergate.admin.v1.HSPinnedCid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 2:
      var value = new proto.powergate.admin.v1.HSPinnedCidUser;
      reader.readMessage(value,proto.powergate.admin.v1.HSPinnedCidUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.HSPinnedCid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.HSPinnedCid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.HSPinnedCid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.powergate.admin.v1.HSPinnedCidUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cid = 1;
 * @return {string}
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.HSPinnedCid} returns this
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated HSPinnedCidUser users = 2;
 * @return {!Array<!proto.powergate.admin.v1.HSPinnedCidUser>}
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.powergate.admin.v1.HSPinnedCidUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.powergate.admin.v1.HSPinnedCidUser, 2));
};


/**
 * @param {!Array<!proto.powergate.admin.v1.HSPinnedCidUser>} value
 * @return {!proto.powergate.admin.v1.HSPinnedCid} returns this
*/
proto.powergate.admin.v1.HSPinnedCid.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.powergate.admin.v1.HSPinnedCidUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser}
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.powergate.admin.v1.HSPinnedCidUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.HSPinnedCid} returns this
 */
proto.powergate.admin.v1.HSPinnedCid.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.HSPinnedCidUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.HSPinnedCidUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.HSPinnedCidUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    staged: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser}
 */
proto.powergate.admin.v1.HSPinnedCidUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.HSPinnedCidUser;
  return proto.powergate.admin.v1.HSPinnedCidUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.HSPinnedCidUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser}
 */
proto.powergate.admin.v1.HSPinnedCidUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStaged(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.HSPinnedCidUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.HSPinnedCidUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.HSPinnedCidUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStaged();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser} returns this
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool staged = 2;
 * @return {boolean}
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.getStaged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser} returns this
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.setStaged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 created_at = 3;
 * @return {number}
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.HSPinnedCidUser} returns this
 */
proto.powergate.admin.v1.HSPinnedCidUser.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    since: (f = msg.getSince()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest;
  return proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSince(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSince();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp since = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.getSince = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} returns this
*/
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.setSince = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} returns this
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.clearSince = function() {
  return this.setSince(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.hasSince = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest} returns this
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    powergate_user_v1_user_pb.StorageDealRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse;
  return proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new powergate_user_v1_user_pb.StorageDealRecord;
      reader.readMessage(value,powergate_user_v1_user_pb.StorageDealRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      powergate_user_v1_user_pb.StorageDealRecord.serializeBinaryToWriter
    );
  }
};


/**
 * repeated powergate.user.v1.StorageDealRecord records = 1;
 * @return {!Array<!proto.powergate.user.v1.StorageDealRecord>}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.powergate.user.v1.StorageDealRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, powergate_user_v1_user_pb.StorageDealRecord, 1));
};


/**
 * @param {!Array<!proto.powergate.user.v1.StorageDealRecord>} value
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse} returns this
*/
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.user.v1.StorageDealRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.user.v1.StorageDealRecord}
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.user.v1.StorageDealRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse} returns this
 */
proto.powergate.admin.v1.GetUpdatedStorageDealRecordsSinceResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    since: (f = msg.getSince()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest;
  return proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSince(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSince();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp since = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.getSince = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} returns this
*/
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.setSince = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} returns this
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.clearSince = function() {
  return this.setSince(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.hasSince = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest} returns this
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    powergate_user_v1_user_pb.RetrievalDealRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse;
  return proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new powergate_user_v1_user_pb.RetrievalDealRecord;
      reader.readMessage(value,powergate_user_v1_user_pb.RetrievalDealRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      powergate_user_v1_user_pb.RetrievalDealRecord.serializeBinaryToWriter
    );
  }
};


/**
 * repeated powergate.user.v1.RetrievalDealRecord records = 1;
 * @return {!Array<!proto.powergate.user.v1.RetrievalDealRecord>}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.powergate.user.v1.RetrievalDealRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, powergate_user_v1_user_pb.RetrievalDealRecord, 1));
};


/**
 * @param {!Array<!proto.powergate.user.v1.RetrievalDealRecord>} value
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse} returns this
*/
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.user.v1.RetrievalDealRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.user.v1.RetrievalDealRecord}
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.user.v1.RetrievalDealRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse} returns this
 */
proto.powergate.admin.v1.GetUpdatedRetrievalRecordsSinceResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetMinersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetMinersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetMinersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    withPower: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetMinersRequest}
 */
proto.powergate.admin.v1.GetMinersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetMinersRequest;
  return proto.powergate.admin.v1.GetMinersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetMinersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetMinersRequest}
 */
proto.powergate.admin.v1.GetMinersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetMinersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetMinersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetMinersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithPower();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool with_power = 1;
 * @return {boolean}
 */
proto.powergate.admin.v1.GetMinersRequest.prototype.getWithPower = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.powergate.admin.v1.GetMinersRequest} returns this
 */
proto.powergate.admin.v1.GetMinersRequest.prototype.setWithPower = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GetMinersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetMinersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetMinersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetMinersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    minersList: jspb.Message.toObjectList(msg.getMinersList(),
    proto.powergate.admin.v1.FilecoinMiner.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetMinersResponse}
 */
proto.powergate.admin.v1.GetMinersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetMinersResponse;
  return proto.powergate.admin.v1.GetMinersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetMinersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetMinersResponse}
 */
proto.powergate.admin.v1.GetMinersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.powergate.admin.v1.FilecoinMiner;
      reader.readMessage(value,proto.powergate.admin.v1.FilecoinMiner.deserializeBinaryFromReader);
      msg.addMiners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetMinersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetMinersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetMinersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.powergate.admin.v1.FilecoinMiner.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FilecoinMiner miners = 1;
 * @return {!Array<!proto.powergate.admin.v1.FilecoinMiner>}
 */
proto.powergate.admin.v1.GetMinersResponse.prototype.getMinersList = function() {
  return /** @type{!Array<!proto.powergate.admin.v1.FilecoinMiner>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.powergate.admin.v1.FilecoinMiner, 1));
};


/**
 * @param {!Array<!proto.powergate.admin.v1.FilecoinMiner>} value
 * @return {!proto.powergate.admin.v1.GetMinersResponse} returns this
*/
proto.powergate.admin.v1.GetMinersResponse.prototype.setMinersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.admin.v1.FilecoinMiner=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.FilecoinMiner}
 */
proto.powergate.admin.v1.GetMinersResponse.prototype.addMiners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.admin.v1.FilecoinMiner, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GetMinersResponse} returns this
 */
proto.powergate.admin.v1.GetMinersResponse.prototype.clearMinersList = function() {
  return this.setMinersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.FilecoinMiner.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.FilecoinMiner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.FilecoinMiner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.FilecoinMiner.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.FilecoinMiner}
 */
proto.powergate.admin.v1.FilecoinMiner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.FilecoinMiner;
  return proto.powergate.admin.v1.FilecoinMiner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.FilecoinMiner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.FilecoinMiner}
 */
proto.powergate.admin.v1.FilecoinMiner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.FilecoinMiner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.FilecoinMiner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.FilecoinMiner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.FilecoinMiner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.powergate.admin.v1.FilecoinMiner.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.FilecoinMiner} returns this
 */
proto.powergate.admin.v1.FilecoinMiner.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GetMinerInfoRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetMinerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetMinerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    minersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetMinerInfoRequest}
 */
proto.powergate.admin.v1.GetMinerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetMinerInfoRequest;
  return proto.powergate.admin.v1.GetMinerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetMinerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetMinerInfoRequest}
 */
proto.powergate.admin.v1.GetMinerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMiners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetMinerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetMinerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string miners = 1;
 * @return {!Array<string>}
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.getMinersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.powergate.admin.v1.GetMinerInfoRequest} returns this
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.setMinersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.GetMinerInfoRequest} returns this
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.addMiners = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GetMinerInfoRequest} returns this
 */
proto.powergate.admin.v1.GetMinerInfoRequest.prototype.clearMinersList = function() {
  return this.setMinersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.powergate.admin.v1.GetMinerInfoResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.GetMinerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.GetMinerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    minersInfoList: jspb.Message.toObjectList(msg.getMinersInfoList(),
    proto.powergate.admin.v1.MinerInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.GetMinerInfoResponse}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.GetMinerInfoResponse;
  return proto.powergate.admin.v1.GetMinerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.GetMinerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.GetMinerInfoResponse}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.powergate.admin.v1.MinerInfo;
      reader.readMessage(value,proto.powergate.admin.v1.MinerInfo.deserializeBinaryFromReader);
      msg.addMinersInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.GetMinerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.GetMinerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.GetMinerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinersInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.powergate.admin.v1.MinerInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MinerInfo miners_info = 1;
 * @return {!Array<!proto.powergate.admin.v1.MinerInfo>}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.getMinersInfoList = function() {
  return /** @type{!Array<!proto.powergate.admin.v1.MinerInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.powergate.admin.v1.MinerInfo, 1));
};


/**
 * @param {!Array<!proto.powergate.admin.v1.MinerInfo>} value
 * @return {!proto.powergate.admin.v1.GetMinerInfoResponse} returns this
*/
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.setMinersInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.powergate.admin.v1.MinerInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.powergate.admin.v1.MinerInfo}
 */
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.addMinersInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.powergate.admin.v1.MinerInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.powergate.admin.v1.GetMinerInfoResponse} returns this
 */
proto.powergate.admin.v1.GetMinerInfoResponse.prototype.clearMinersInfoList = function() {
  return this.setMinersInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.powergate.admin.v1.MinerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.powergate.admin.v1.MinerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.powergate.admin.v1.MinerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.MinerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    relativePower: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    askPrice: jspb.Message.getFieldWithDefault(msg, 4, ""),
    askVerifiedPrice: jspb.Message.getFieldWithDefault(msg, 5, ""),
    minPieceSize: jspb.Message.getFieldWithDefault(msg, 6, 0),
    maxPieceSize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    sectorSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sectorsActive: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sectorsLive: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sectorsFaulty: jspb.Message.getFieldWithDefault(msg, 11, 0),
    location: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.powergate.admin.v1.MinerInfo}
 */
proto.powergate.admin.v1.MinerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.powergate.admin.v1.MinerInfo;
  return proto.powergate.admin.v1.MinerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.powergate.admin.v1.MinerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.powergate.admin.v1.MinerInfo}
 */
proto.powergate.admin.v1.MinerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRelativePower(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAskPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAskVerifiedPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinPieceSize(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxPieceSize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSectorSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSectorsActive(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSectorsLive(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSectorsFaulty(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.powergate.admin.v1.MinerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.powergate.admin.v1.MinerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.powergate.admin.v1.MinerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.powergate.admin.v1.MinerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRelativePower();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAskPrice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAskVerifiedPrice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMinPieceSize();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getMaxPieceSize();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSectorSize();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getSectorsActive();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getSectorsLive();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getSectorsFaulty();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double relative_power = 2;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getRelativePower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setRelativePower = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string ask_price = 4;
 * @return {string}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getAskPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setAskPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ask_verified_price = 5;
 * @return {string}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getAskVerifiedPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setAskVerifiedPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 min_piece_size = 6;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getMinPieceSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setMinPieceSize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 max_piece_size = 7;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getMaxPieceSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setMaxPieceSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 sector_size = 8;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getSectorSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setSectorSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 sectors_active = 9;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getSectorsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setSectorsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 sectors_live = 10;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getSectorsLive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setSectorsLive = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 sectors_faulty = 11;
 * @return {number}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getSectorsFaulty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setSectorsFaulty = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string location = 12;
 * @return {string}
 */
proto.powergate.admin.v1.MinerInfo.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.powergate.admin.v1.MinerInfo} returns this
 */
proto.powergate.admin.v1.MinerInfo.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


goog.object.extend(exports, proto.powergate.admin.v1);
