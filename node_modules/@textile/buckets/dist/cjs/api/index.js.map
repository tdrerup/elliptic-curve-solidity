{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/api/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { grpc } from '@improbable-eng/grpc-web'\nimport { Repeater } from '@repeaterjs/repeater'\nimport {\n  Archive as _Archive,\n  ArchiveConfig as _ArchiveConfig,\n  ArchiveRenew as _ArchiveRenew,\n  ArchiveRequest,\n  ArchivesRequest,\n  ArchivesResponse,\n  ArchiveStatus as _ArchiveStatus,\n  ArchiveStatusMap as _ArchiveStatusMap,\n  ArchiveWatchRequest,\n  ArchiveWatchResponse,\n  CreateRequest,\n  CreateResponse as _CreateResponse,\n  DealInfo as _DealInfo,\n  DefaultArchiveConfigRequest,\n  DefaultArchiveConfigResponse,\n  LinksRequest,\n  LinksResponse,\n  ListIpfsPathRequest,\n  ListIpfsPathResponse,\n  ListPathRequest,\n  ListPathResponse,\n  ListRequest,\n  ListResponse,\n  Metadata as _Metadata,\n  MovePathRequest,\n  PathItem as _PathItem,\n  PullIpfsPathRequest,\n  PullIpfsPathResponse,\n  PullPathAccessRolesRequest,\n  PullPathAccessRolesResponse,\n  PullPathRequest,\n  PullPathResponse,\n  PushPathAccessRolesRequest,\n  PushPathRequest,\n  PushPathResponse,\n  PushPathsRequest,\n  PushPathsResponse,\n  RemovePathRequest,\n  RemovePathResponse as _RemovePathResponse,\n  RemoveRequest,\n  Root as _Root,\n  RootRequest,\n  RootResponse,\n  SetDefaultArchiveConfigRequest,\n  SetPathRequest,\n} from '@textile/buckets-grpc/api/bucketsd/pb/bucketsd_pb'\nimport {\n  APIService,\n  APIServiceClient,\n  BidirectionalStream,\n  Status,\n} from '@textile/buckets-grpc/api/bucketsd/pb/bucketsd_pb_service'\nimport { Context, ContextInterface } from '@textile/context'\nimport { GrpcConnection } from '@textile/grpc-connection'\nimport { WebsocketTransport } from '@textile/grpc-transport'\nimport CID from 'cids'\nimport drain from 'it-drain'\nimport log from 'loglevel'\n// @ts-expect-error\nimport paramap from 'paramap-it'\nimport {\n  AbortError,\n  Archive,\n  ArchiveConfig,\n  ArchiveDealInfo,\n  ArchiveOptions,\n  ArchiveRenew,\n  Archives,\n  ArchiveStatus,\n  BuckMetadata,\n  CreateResponse,\n  Links,\n  Path,\n  PathAccessRole,\n  PathItem,\n  PushOptions,\n  PushPathResult,\n  PushPathsResult,\n  RemovePathOptions,\n  RemovePathResponse,\n  Root,\n} from '../types'\nimport { File, normaliseInput } from './normalize'\n\nexport { File }\n\nconst logger = log.getLogger('buckets-api')\n\nfunction fromPbRootObject(root: _Root): Root {\n  return {\n    key: root.getKey(),\n    name: root.getName(),\n    path: root.getPath(),\n    createdAt: root.getCreatedAt(),\n    updatedAt: root.getUpdatedAt(),\n    thread: root.getThread(),\n  }\n}\n\nfunction fromPbRootObjectNullable(root?: _Root): Root | undefined {\n  if (!root) return\n  return fromPbRootObject(root)\n}\n\nfunction fromPbMetadata(metadata?: _Metadata): BuckMetadata | undefined {\n  if (!metadata) return\n  const roles = metadata.getRolesMap()\n  const typedRoles = new Map()\n  roles.forEach((entry, key) => typedRoles.set(key, entry))\n  const response: BuckMetadata = {\n    updatedAt: metadata.getUpdatedAt(),\n    roles: typedRoles,\n  }\n\n  return response\n}\n\nexport const CHUNK_SIZE = 1024\n\nfunction fromPbPathItem(item: _PathItem): PathItem {\n  const list = item.getItemsList()\n  return {\n    cid: item.getCid(),\n    name: item.getName(),\n    path: item.getPath(),\n    size: item.getSize(),\n    isDir: item.getIsDir(),\n    items: list ? list.map(fromPbPathItem) : [],\n    count: item.getItemsCount(),\n    metadata: fromPbMetadata(item.getMetadata()),\n  }\n}\n\nfunction fromPbPathItemNullable(item?: _PathItem): PathItem | undefined {\n  if (!item) return\n  return fromPbPathItem(item)\n}\n\nfunction fromProtoArchiveRenew(item: _ArchiveRenew.AsObject): ArchiveRenew {\n  return { ...item }\n}\n\nfunction fromProtoArchiveConfig(item: _ArchiveConfig.AsObject): ArchiveConfig {\n  return {\n    ...item,\n    countryCodes: item.countryCodesList,\n    excludedMiners: item.excludedMinersList,\n    trustedMiners: item.trustedMinersList,\n    renew: item.renew ? fromProtoArchiveRenew(item.renew) : undefined,\n  }\n}\n\nfunction toProtoArchiveConfig(config: ArchiveConfig): _ArchiveConfig {\n  const protoConfig = new _ArchiveConfig()\n  protoConfig.setCountryCodesList(config.countryCodes)\n  protoConfig.setDealMinDuration(config.dealMinDuration)\n  protoConfig.setDealStartOffset(config.dealStartOffset)\n  protoConfig.setExcludedMinersList(config.excludedMiners)\n  protoConfig.setFastRetrieval(config.fastRetrieval)\n  protoConfig.setMaxPrice(config.maxPrice)\n  protoConfig.setRepFactor(config.repFactor)\n  protoConfig.setTrustedMinersList(config.trustedMiners)\n  protoConfig.setVerifiedDeal(config.verifiedDeal)\n  if (config.renew) {\n    const renew = new _ArchiveRenew()\n    renew.setEnabled(config.renew.enabled)\n    renew.setThreshold(config.renew.threshold)\n    protoConfig.setRenew(renew)\n  }\n  return protoConfig\n}\n\nfunction fromPbDealInfo(item: _DealInfo.AsObject): ArchiveDealInfo {\n  return { ...item }\n}\n\nfunction fromPbArchiveStatus(\n  item: _ArchiveStatusMap[keyof _ArchiveStatusMap],\n): ArchiveStatus {\n  switch (item) {\n    case _ArchiveStatus.ARCHIVE_STATUS_CANCELED:\n      return ArchiveStatus.Canceled\n    case _ArchiveStatus.ARCHIVE_STATUS_EXECUTING:\n      return ArchiveStatus.Executing\n    case _ArchiveStatus.ARCHIVE_STATUS_FAILED:\n      return ArchiveStatus.Failed\n    case _ArchiveStatus.ARCHIVE_STATUS_QUEUED:\n      return ArchiveStatus.Queued\n    case _ArchiveStatus.ARCHIVE_STATUS_SUCCESS:\n      return ArchiveStatus.Success\n    case _ArchiveStatus.ARCHIVE_STATUS_UNSPECIFIED:\n      return ArchiveStatus.Unspecified\n    default:\n      throw new Error('unknown status')\n  }\n}\n\nfunction fromPbArchive(item: _Archive.AsObject): Archive {\n  return {\n    ...item,\n    // TODO: standardize units coming from server.\n    createdAt: new Date(item.createdAt * 1000),\n    status: fromPbArchiveStatus(item.archiveStatus),\n    dealInfo: item.dealInfoList.map(fromPbDealInfo),\n  }\n}\n\n/**\n * Ensures that a Root | string | undefined is converted into a string\n */\nasync function ensureRootString(\n  api: GrpcConnection,\n  key: string,\n  root?: Root | string,\n  ctx?: ContextInterface,\n): Promise<string> {\n  if (root) {\n    return typeof root === 'string' ? root : root.path\n  } else {\n    /* eslint-disable  @typescript-eslint/no-use-before-define */\n    const root = await bucketsRoot(api, key, ctx)\n    return root?.path ?? ''\n  }\n}\n\nexport function* genChunks(\n  value: Uint8Array,\n  size: number,\n): Generator<Uint8Array, any, undefined> {\n  return yield* Array.from(Array(Math.ceil(value.byteLength / size)), (_, i) =>\n    value.slice(i * size, i * size + size),\n  )\n}\n\n/**\n * Creates a new bucket.\n * @public\n * @param name Human-readable bucket name. It is only meant to help identify a bucket in a UI and is not unique.\n * @param isPrivate encrypt the bucket contents (default `false`)\n * @param cid (optional) Bootstrap the bucket with a UnixFS Cid from the IPFS network\n * @example\n * Creates a Bucket called \"app-name-files\"\n * ```typescript\n * import { Buckets } from '@textile/hub'\n *\n * const create = async (buckets: Buckets) => {\n *     return buckets.create(\"app-name-files\")\n * }\n * ```\n *\n * @internal\n */\nexport async function bucketsCreate(\n  api: GrpcConnection,\n  name: string,\n  isPrivate = false,\n  cid?: string,\n  ctx?: ContextInterface,\n): Promise<CreateResponse> {\n  logger.debug('create request')\n  const req = new CreateRequest()\n  req.setName(name)\n  if (cid) {\n    req.setBootstrapCid(cid)\n  }\n  req.setPrivate(isPrivate)\n  const res: _CreateResponse = await api.unary(APIService.Create, req, ctx)\n  const links = res.getLinks()\n  return {\n    seed: res.getSeed_asU8(),\n    seedCid: res.getSeedCid(),\n    root: fromPbRootObjectNullable(res.getRoot()),\n    links: links ? links.toObject() : undefined,\n  }\n}\n\n/**\n * Returns the bucket root CID\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n *\n * @internal\n */\nexport async function bucketsRoot(\n  api: GrpcConnection,\n  key: string,\n  ctx?: ContextInterface,\n): Promise<Root | undefined> {\n  logger.debug('root request')\n  const req = new RootRequest()\n  req.setKey(key)\n  const res: RootResponse = await api.unary(APIService.Root, req, ctx)\n  return fromPbRootObjectNullable(res.getRoot())\n}\n\n/**\n * Returns a list of bucket links.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @example\n * Generate the HTTP, IPNS, and IPFS links for a Bucket\n * ```typescript\n * import { Buckets } from '@textile/hub'\n *\n * const getLinks = async (buckets: Buckets) => {\n *    const links = buckets.links(bucketKey)\n *    return links.ipfs\n * }\n *\n * const getIpfs = async (buckets: Buckets) => {\n *    const links = buckets.links(bucketKey)\n *    return links.ipfs\n * }\n * ```\n *\n * @internal\n */\nexport async function bucketsLinks(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  ctx?: ContextInterface,\n): Promise<Links> {\n  logger.debug('link request')\n  const req = new LinksRequest()\n  req.setKey(key)\n  req.setPath(path)\n  const res: LinksResponse = await api.unary(APIService.Links, req, ctx)\n  return res.toObject()\n}\n\n/**\n * Returns a list of all bucket roots.\n * @example\n * Find an existing Bucket named \"app-name-files\"\n * ```typescript\n * import { Buckets } from '@textile/hub'\n *\n * const exists = async (buckets: Buckets) => {\n *     const roots = await buckets.list();\n *     return roots.find((bucket) => bucket.name ===  \"app-name-files\")\n * }\n * ```\n *\n * @internal\n */\nexport async function bucketsList(\n  api: GrpcConnection,\n  ctx?: ContextInterface,\n): Promise<Array<Root>> {\n  logger.debug('list request')\n  const req = new ListRequest()\n  const res: ListResponse = await api.unary(APIService.List, req, ctx)\n  const roots = res.getRootsList()\n  const map = roots ? roots.map((m) => m).map((m) => fromPbRootObject(m)) : []\n  return map\n}\n\n/**\n * Returns information about a bucket path.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param path A file/object (sub)-path within a bucket.\n *\n * @internal\n */\nexport async function bucketsListPath(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  ctx?: ContextInterface,\n): Promise<Path> {\n  logger.debug('list path request')\n  const req = new ListPathRequest()\n  req.setKey(key)\n  req.setPath(path)\n  const res: ListPathResponse = await api.unary(APIService.ListPath, req, ctx)\n  return {\n    item: fromPbPathItemNullable(res.getItem()),\n    root: fromPbRootObjectNullable(res.getRoot()),\n  }\n}\n\n/**\n * listIpfsPath returns items at a particular path in a UnixFS path living in the IPFS network.\n * @param path UnixFS path\n *\n * @internal\n */\nexport async function bucketsListIpfsPath(\n  api: GrpcConnection,\n  path: string,\n  ctx?: ContextInterface,\n): Promise<PathItem | undefined> {\n  logger.debug('list path request')\n  const req = new ListIpfsPathRequest()\n  req.setPath(path)\n  const res: ListIpfsPathResponse = await api.unary(\n    APIService.ListIpfsPath,\n    req,\n    ctx,\n  )\n  return fromPbPathItemNullable(res.getItem())\n}\n\n/**\n * Move a file or subpath to a new path.\n * @internal\n */\nexport async function bucketsMovePath(\n  api: GrpcConnection,\n  key: string,\n  fromPath: string,\n  toPath: string,\n  ctx?: ContextInterface,\n): Promise<void> {\n  const request = new MovePathRequest()\n  request.setKey(key)\n  request.setFromPath(fromPath)\n  request.setToPath(toPath)\n  await api.unary(APIService.MovePath, request, ctx)\n}\n\n/**\n * Pushes a file to a bucket path.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param path A file/object (sub)-path within a bucket.\n * @param input The input file/stream/object.\n * @param opts Options to control response stream.\n * @remarks\n * This will return the resolved path and the bucket's new root path.\n * @example\n * Push a file to the root of a bucket\n * ```typescript\n * import { Buckets } from '@textile/hub'\n *\n * const pushFile = async (content: string, bucketKey: string) => {\n *    const file = { path: '/index.html', content: Buffer.from(content) }\n *    return await buckets.pushPath(bucketKey!, 'index.html', file)\n * }\n * ```\n * @internal\n */\nexport async function bucketsPushPath(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  input: any,\n  opts?: PushOptions,\n  ctx?: ContextInterface,\n): Promise<PushPathResult> {\n  return new Promise<PushPathResult>(async (resolve, reject) => {\n    // Only process the first input if there are more than one\n    const source: File | undefined = (await normaliseInput(input).next()).value\n\n    if (!source) {\n      return reject(AbortError)\n    }\n\n    const clientjs = new APIServiceClient(api.serviceHost, api.rpcOptions)\n\n    const metadata = { ...api.context.toJSON(), ...ctx?.toJSON() }\n\n    const stream: BidirectionalStream<\n      PushPathRequest,\n      PushPathResponse\n    > = clientjs.pushPath(metadata)\n\n    if (opts?.signal !== undefined) {\n      opts.signal.addEventListener('abort', () => {\n        stream.cancel()\n        return reject(AbortError)\n      })\n    }\n\n    stream.on('data', (message: PushPathResponse) => {\n      // Let's just make sure we haven't aborted this outside this function\n      if (opts?.signal?.aborted) {\n        stream.cancel()\n        return reject(AbortError)\n      }\n      if (message.hasEvent()) {\n        const event = message.getEvent()?.toObject()\n        if (event?.path) {\n          // TODO: Is there an standard library/tool for this step in JS?\n          const pth = event.path.startsWith('/ipfs/')\n            ? event.path.split('/ipfs/')[1]\n            : event.path\n          const cid = new CID(pth)\n          const res: PushPathResult = {\n            path: {\n              path: `/ipfs/${cid?.toString()}`,\n              cid,\n              root: cid,\n              remainder: '',\n            },\n            root: event.root?.path ?? '',\n          }\n          return resolve(res)\n        } else if (opts?.progress) {\n          opts.progress(event?.bytes)\n        }\n      } else {\n        return reject(new Error('Invalid reply'))\n      }\n    })\n\n    stream.on('end', (status?: Status) => {\n      if (status && status.code !== grpc.Code.OK) {\n        return reject(new Error(status.details))\n      } else {\n        return reject(new Error('undefined result'))\n      }\n    })\n    stream.on('status', (status?: Status) => {\n      if (status && status.code !== grpc.Code.OK) {\n        return reject(new Error(status.details))\n      } else {\n        return reject(new Error('undefined result'))\n      }\n    })\n\n    const head = new PushPathRequest.Header()\n    head.setPath(source.path || path)\n    head.setKey(key)\n    // Setting root here ensures pushes will error if root is out of date\n    const root = await ensureRootString(api, key, opts?.root, ctx)\n    head.setRoot(root)\n    const req = new PushPathRequest()\n    req.setHeader(head)\n\n    stream.write(req)\n    if (source.content) {\n      for await (const chunk of source.content) {\n        if (opts?.signal?.aborted) {\n          // Let's just make sure we haven't aborted this outside this function\n          try {\n            // Should already have been handled\n            stream.cancel()\n          } catch {} // noop\n          return reject(AbortError)\n        }\n        // Naively chunk into chunks smaller than CHUNK_SIZE bytes\n        for (const chunklet of genChunks(chunk as Uint8Array, CHUNK_SIZE)) {\n          const part = new PushPathRequest()\n          part.setChunk(chunklet)\n          stream.write(part)\n        }\n      }\n    }\n    stream.end()\n  })\n}\n\n/**\n * Pushes an iterable of files to a bucket.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param input The input array of file/stream/objects.\n * @param opts Options to control response stream.\n * @internal\n */\nexport function bucketsPushPaths(\n  api: GrpcConnection,\n  key: string,\n  input: any,\n  opts?: Omit<PushOptions, 'progress'>,\n  ctx?: ContextInterface,\n): AsyncIterableIterator<PushPathsResult> {\n  return new Repeater<PushPathsResult>(async (push, stop) => {\n    const clientjs = new APIServiceClient(api.serviceHost, api.rpcOptions)\n\n    const metadata = { ...api.context.toJSON(), ...ctx?.toJSON() }\n\n    const stream: BidirectionalStream<\n      PushPathsRequest,\n      PushPathsResponse\n    > = clientjs.pushPaths(metadata)\n\n    if (opts?.signal !== undefined) {\n      opts.signal.addEventListener('abort', () => {\n        stream.cancel()\n        throw AbortError\n      })\n    }\n\n    stream.on('data', (message: PushPathsResponse) => {\n      // Let's just make sure we haven't aborted this outside this function\n      if (opts?.signal?.aborted) {\n        stream.cancel()\n        return stop(AbortError)\n      }\n      const obj: PushPathsResult = {\n        path: message.getPath(),\n        root: fromPbRootObjectNullable(message.getRoot()),\n        cid: new CID(message.getCid()),\n        pinned: message.getPinned(),\n        size: message.getSize(),\n      }\n      push(obj)\n    })\n\n    stream.on('end', (status?: Status) => {\n      if (status && status.code !== grpc.Code.OK) {\n        return stop(new Error(status.details))\n      }\n      return stop()\n    })\n    stream.on('status', (status?: Status) => {\n      if (status && status.code !== grpc.Code.OK) {\n        return stop(new Error(status.details))\n      }\n      return stop()\n    })\n\n    const head = new PushPathsRequest.Header()\n    head.setKey(key)\n    // Setting root here ensures pushes will error if root is out of date\n    const root = await ensureRootString(api, key, opts?.root, ctx)\n    head.setRoot(root)\n    const req = new PushPathsRequest()\n    req.setHeader(head)\n    stream.write(req)\n\n    // Map the following over the top level inputs for parallel pushes\n    const mapper = async ({ path, content }: File): Promise<void> => {\n      const req = new PushPathsRequest()\n      const chunk = new PushPathsRequest.Chunk()\n      chunk.setPath(path)\n      if (content) {\n        for await (const data of content) {\n          if (opts?.signal?.aborted) {\n            // Let's just make sure we haven't aborted this outside this function\n            try {\n              // Should already have been handled\n              stream.cancel()\n            } catch {} // noop\n            return stop(AbortError)\n          }\n          // Naively chunk into chunks smaller than CHUNK_SIZE bytes\n          for (const chunklet of genChunks(data as Uint8Array, CHUNK_SIZE)) {\n            chunk.setData(chunklet)\n            req.setChunk(chunk)\n            stream.write(req)\n          }\n        }\n      }\n      // Close out the file\n      const final = new PushPathsRequest.Chunk()\n      final.setPath(path)\n      req.setChunk(final)\n      stream.write(req)\n    }\n\n    // We don't care about the top level order, progress is labeled by path\n    await drain(paramap(normaliseInput(input), mapper, { ordered: false }))\n    stream.end()\n  })\n}\n\n/**\n * Sets a file at a given bucket path.\n * @internal\n */\nexport async function bucketsSetPath(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  cid: string,\n  ctx?: ContextInterface,\n): Promise<void> {\n  const request = new SetPathRequest()\n  request.setKey(key)\n  request.setPath(path)\n  request.setCid(cid)\n  await api.unary(APIService.SetPath, request, ctx)\n}\n\n/**\n * Pulls the bucket path, returning the bytes of the given file.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param path A file/object (sub)-path within a bucket.\n * @param opts Options to control response stream. Currently only supports a progress function.\n *\n * @internal\n */\nexport function bucketsPullPath(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  opts?: { progress?: (num?: number) => void },\n  ctx?: ContextInterface,\n): AsyncIterableIterator<Uint8Array> {\n  return new Repeater<Uint8Array>((push, stop) => {\n    const metadata = { ...api.context.toJSON(), ...ctx?.toJSON() }\n    const request = new PullPathRequest()\n    request.setKey(key)\n    request.setPath(path)\n    let written = 0\n    const resp = grpc.invoke(APIService.PullPath, {\n      host: api.serviceHost,\n      transport: api.rpcOptions.transport,\n      debug: api.rpcOptions.debug,\n      request,\n      metadata,\n      onMessage: async (res: PullPathResponse) => {\n        const chunk = res.getChunk_asU8()\n        written += chunk.byteLength\n        if (opts?.progress) {\n          opts.progress(written)\n        }\n        push(chunk)\n      },\n      onEnd: async (\n        status: grpc.Code,\n        message: string,\n        // _trailers: grpc.Metadata,\n      ) => {\n        if (status !== grpc.Code.OK) {\n          stop(new Error(message))\n        }\n        stop()\n      },\n    })\n    // Cleanup afterwards\n    stop.then(() => resp.close())\n  })\n}\n\n/**\n * pullIpfsPath pulls the path from a remote UnixFS dag, writing it to writer if it's a file.\n * @param path A file/object (sub)-path within a bucket.\n * @param opts Options to control response stream. Currently only supports a progress function.\n *\n * @internal\n */\nexport function bucketsPullIpfsPath(\n  api: GrpcConnection,\n  path: string,\n  opts?: { progress?: (num?: number) => void },\n  ctx?: ContextInterface,\n): AsyncIterableIterator<Uint8Array> {\n  return new Repeater<Uint8Array>((push, stop) => {\n    const metadata = { ...api.context.toJSON(), ...ctx?.toJSON() }\n    const request = new PullIpfsPathRequest()\n    request.setPath(path)\n    let written = 0\n    const resp = grpc.invoke(APIService.PullIpfsPath, {\n      host: api.serviceHost,\n      transport: api.rpcOptions.transport,\n      debug: api.rpcOptions.debug,\n      request,\n      metadata,\n      onMessage: async (res: PullIpfsPathResponse) => {\n        const chunk = res.getChunk_asU8()\n        push(chunk)\n        written += chunk.byteLength\n        if (opts?.progress) {\n          opts.progress(written)\n        }\n      },\n      onEnd: async (\n        status: grpc.Code,\n        message: string,\n        // _trailers: grpc.Metadata,\n      ) => {\n        if (status !== grpc.Code.OK) {\n          stop(new Error(message))\n        }\n        stop()\n      },\n    })\n    stop.then(() => resp.close())\n  })\n}\n\n/**\n * Removes an entire bucket. Files and directories will be unpinned.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n *\n * @internal\n */\nexport async function bucketsRemove(\n  api: GrpcConnection,\n  key: string,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('remove request')\n  const req = new RemoveRequest()\n  req.setKey(key)\n  await api.unary(APIService.Remove, req, ctx)\n  return\n}\n\n/**\n * Returns information about a bucket path.\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param path A file/object (sub)-path within a bucket.\n * @param root optional to specify a root\n *\n * @internal\n */\nexport async function bucketsRemovePath(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  opts?: RemovePathOptions,\n  ctx?: ContextInterface,\n): Promise<RemovePathResponse> {\n  logger.debug('remove path request')\n  const req = new RemovePathRequest()\n  req.setKey(key)\n  req.setPath(path)\n  const root = await ensureRootString(api, key, opts?.root, ctx)\n  req.setRoot(root)\n  const res: _RemovePathResponse = await api.unary(\n    APIService.RemovePath,\n    req,\n    ctx,\n  )\n  return {\n    pinned: res.getPinned(),\n    root: fromPbRootObjectNullable(res.getRoot()),\n  }\n}\n\nexport async function bucketsPushPathAccessRoles(\n  api: GrpcConnection,\n  key: string,\n  path: string,\n  roles: Map<string, PathAccessRole>,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('remove path request')\n  const req = new PushPathAccessRolesRequest()\n  req.setKey(key)\n  req.setPath(path)\n  roles.forEach((value, key) => req.getRolesMap().set(key, value))\n  await api.unary(APIService.PushPathAccessRoles, req, ctx)\n  return\n}\n\nexport async function bucketsPullPathAccessRoles(\n  api: GrpcConnection,\n  key: string,\n  path = '/',\n  ctx?: ContextInterface,\n): Promise<Map<string, 0 | 1 | 2 | 3>> {\n  logger.debug('remove path request')\n  const req = new PullPathAccessRolesRequest()\n  req.setKey(key)\n  req.setPath(path)\n  const response: PullPathAccessRolesResponse = await api.unary(\n    APIService.PullPathAccessRoles,\n    req,\n    ctx,\n  )\n  const roles = response.getRolesMap()\n  const typedRoles = new Map()\n  roles.forEach((entry, key) => typedRoles.set(key, entry))\n  return typedRoles\n}\n\n/**\n * @internal\n */\nexport async function bucketsDefaultArchiveConfig(\n  api: GrpcConnection,\n  key: string,\n  ctx?: ContextInterface,\n): Promise<ArchiveConfig> {\n  logger.debug('default archive config request')\n  const req = new DefaultArchiveConfigRequest()\n  req.setKey(key)\n  const res: DefaultArchiveConfigResponse = await api.unary(\n    APIService.DefaultArchiveConfig,\n    req,\n    ctx,\n  )\n  const config = res.getArchiveConfig()\n  if (!config) {\n    throw new Error('no archive config returned')\n  }\n  return fromProtoArchiveConfig(config.toObject())\n}\n\n/**\n * @internal\n */\nexport async function bucketsSetDefaultArchiveConfig(\n  api: GrpcConnection,\n  key: string,\n  config: ArchiveConfig,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('set default archive config request')\n  const req = new SetDefaultArchiveConfigRequest()\n  req.setKey(key)\n  req.setArchiveConfig(toProtoArchiveConfig(config))\n  await api.unary(APIService.SetDefaultArchiveConfig, req, ctx)\n  return\n}\n\n/**\n * archive creates a Filecoin bucket archive.\n * @internal\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n * @param options Options that control the behavior of the bucket archive\n * @param skipAutomaticVerifiedDeal skips logic that automatically uses available datacap to make a verified deal for the archive.\n */\nexport async function bucketsArchive(\n  api: GrpcConnection,\n  key: string,\n  options?: ArchiveOptions,\n  skipAutomaticVerifiedDeal?: boolean,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('archive request')\n  const req = new ArchiveRequest()\n  req.setKey(key)\n  if (skipAutomaticVerifiedDeal !== undefined) {\n    req.setSkipAutomaticVerifiedDeal(skipAutomaticVerifiedDeal)\n  } \n  if (options?.archiveConfig) {\n    req.setArchiveConfig(toProtoArchiveConfig(options.archiveConfig))\n  }\n  await api.unary(APIService.Archive, req, ctx)\n  return\n}\n\n/**\n * @internal\n */\nexport async function bucketsArchives(\n  api: GrpcConnection,\n  key: string,\n  ctx?: ContextInterface,\n): Promise<Archives> {\n  logger.debug('archives request')\n  const req = new ArchivesRequest()\n  req.setKey(key)\n  const res: ArchivesResponse = await api.unary(APIService.Archives, req, ctx)\n  const current = res.toObject().current\n  return {\n    current: current ? fromPbArchive(current) : undefined,\n    history: res.toObject().historyList.map(fromPbArchive),\n  }\n}\n\n/**\n * archiveWatch watches status events from a Filecoin bucket archive.\n * @internal\n * @param key Unique (IPNS compatible) identifier key for a bucket.\n */\nexport async function bucketsArchiveWatch(\n  api: GrpcConnection,\n  key: string,\n  callback: (\n    reply?: { id: string | undefined; msg: string },\n    err?: Error,\n  ) => void,\n  ctx?: ContextInterface,\n): Promise<() => void> {\n  logger.debug('archive watch request')\n  const req = new ArchiveWatchRequest()\n  req.setKey(key)\n\n  const metadata = { ...api.context.toJSON(), ...ctx?.toJSON() }\n  const res = grpc.invoke(APIService.ArchiveWatch, {\n    host: api.context.host,\n    request: req,\n    metadata,\n    onMessage: (rec: ArchiveWatchResponse) => {\n      const response = {\n        id: rec.getJsPbMessageId(),\n        msg: rec.getMsg(),\n      }\n      callback(response)\n    },\n    onEnd: (\n      status: grpc.Code,\n      message: string /** _trailers: grpc.Metadata */,\n    ) => {\n      if (status !== grpc.Code.OK) {\n        return callback(undefined, new Error(message))\n      }\n      callback()\n    },\n  })\n  return res.close.bind(res)\n}\n\n/**\n * Raw API connected needed by Buckets CI code (compile friendly)\n * see more https://github.com/textileio/github-action-buckets\n */\nexport class BucketsGrpcClient {\n  public serviceHost: string\n  public rpcOptions: grpc.RpcOptions\n  /**\n   * Creates a new gRPC client instance for accessing the Textile Buckets API.\n   * @param context The context to use for interacting with the APIs. Can be modified later.\n   */\n  constructor(public context: ContextInterface = new Context(), debug = false) {\n    this.serviceHost = context.host\n    this.rpcOptions = {\n      transport: WebsocketTransport(),\n      debug,\n    }\n  }\n\n  public unary<\n    R extends grpc.ProtobufMessage,\n    T extends grpc.ProtobufMessage,\n    M extends grpc.UnaryMethodDefinition<R, T>\n  >(methodDescriptor: M, req: R, ctx?: ContextInterface): Promise<T | void> {\n    return new Promise<T | void>((resolve, reject) => {\n      const metadata = { ...this.context.toJSON(), ...ctx?.toJSON() }\n      grpc.unary(methodDescriptor, {\n        request: req,\n        host: this.serviceHost,\n        transport: this.rpcOptions.transport,\n        debug: this.rpcOptions.debug,\n        metadata,\n        onEnd: (res: grpc.UnaryOutput<T>) => {\n          const { status, statusMessage, message } = res\n          if (status === grpc.Code.OK) {\n            if (message) {\n              resolve(message)\n            } else {\n              resolve()\n            }\n          } else {\n            reject(new Error(statusMessage))\n          }\n        },\n      })\n    })\n  }\n}\n"]}