{"version":3,"file":"normalize.js","sourceRoot":"","sources":["../../../src/api/normalize.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { Buffer } from 'buffer'\n\nexport interface File {\n  path: string\n  content?: AsyncIterable<Buffer | Uint8Array | ArrayBuffer>\n\n  [key: string]: any\n}\n\n/**\n * Transform types\n *\n * @remarks\n * This function comes from {@link https://github.com/ipfs/js-ipfs-utils/blob/master/src/files/normalise-input.js}\n * @example\n * Supported types\n * ```yaml\n * // INPUT TYPES\n * Bytes (Buffer|ArrayBuffer|TypedArray) [single file]\n * Bloby (Blob|File) [single file]\n * String [single file]\n * { path, content: Bytes } [single file]\n * { path, content: Bloby } [single file]\n * { path, content: String } [single file]\n * { path, content: Iterable<Number> } [single file]\n * { path, content: Iterable<Bytes> } [single file]\n * { path, content: AsyncIterable<Bytes> } [single file]\n * Iterable<Number> [single file]\n * Iterable<Bytes> [single file]\n * Iterable<Bloby> [multiple files]\n * Iterable<String> [multiple files]\n * Iterable<{ path, content: Bytes }> [multiple files]\n * Iterable<{ path, content: Bloby }> [multiple files]\n * Iterable<{ path, content: String }> [multiple files]\n * Iterable<{ path, content: Iterable<Number> }> [multiple files]\n * Iterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * Iterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * AsyncIterable<Bytes> [single file]\n * AsyncIterable<Bloby> [multiple files]\n * AsyncIterable<String> [multiple files]\n * AsyncIterable<{ path, content: Bytes }> [multiple files]\n * AsyncIterable<{ path, content: Bloby }> [multiple files]\n * AsyncIterable<{ path, content: String }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Number> }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * AsyncIterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n *\n * // OUTPUT\n * AsyncIterable<{ path, content: AsyncIterable<Buffer> }>\n * ```\n *\n * @public\n *\n * @param {Object} input\n * @return AsyncInterable<{ path, content: AsyncIterable<Buffer> }>\n */\nexport function normaliseInput(input: any) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw new Error(`Unexpected input: ${input}`)\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return (async function* () {\n      // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Buffer|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBloby(input)) {\n    return (async function* () {\n      // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Iterable<?>\n  if (input[Symbol.iterator]) {\n    return (async function* () {\n      // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      // Iterable<Bytes>\n      if (Number.isInteger(first.value) || isBytes(first.value)) {\n        yield toFileObject(\n          (function* () {\n            yield first.value\n            yield* iterator\n          })(),\n        )\n        return\n      }\n\n      // Iterable<Bloby>\n      // Iterable<String>\n      // Iterable<{ path, content }>\n      if (\n        isFileObject(first.value) ||\n        isBloby(first.value) ||\n        typeof first.value === 'string'\n      ) {\n        yield toFileObject(first.value)\n        for (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw new Error('Unexpected input: ' + typeof input)\n    })()\n  }\n\n  // window.ReadableStream\n  if (typeof input.getReader === 'function') {\n    return (async function* () {\n      for await (const obj of browserStreamToIt(input)) {\n        yield toFileObject(obj)\n      }\n    })()\n  }\n\n  // AsyncIterable<?>\n  if (input[Symbol.asyncIterator]) {\n    return (async function* () {\n      const iterator = input[Symbol.asyncIterator]()\n      const first = await iterator.next()\n      if (first.done) return iterator\n\n      // AsyncIterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toFileObject(\n          (async function* () {\n            // eslint-disable-line require-await\n            yield first.value\n            yield* iterator\n          })(),\n        )\n        return\n      }\n\n      // AsyncIterable<Bloby>\n      // AsyncIterable<String>\n      // AsyncIterable<{ path, content }>\n      if (\n        isFileObject(first.value) ||\n        isBloby(first.value) ||\n        typeof first.value === 'string'\n      ) {\n        yield toFileObject(first.value)\n        for await (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw new Error('Unexpected input: ' + typeof input)\n    })()\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ AsyncIterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    return (async function* () {\n      // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  throw new Error('Unexpected input: ' + typeof input)\n}\n\nfunction toFileObject(input: any) {\n  const obj: File = {\n    path: input.path || '',\n    mode: input.mode,\n    mtime: input.mtime,\n  }\n\n  if (input.content) {\n    obj.content = toAsyncIterable(input.content)\n  } else if (!input.path) {\n    // Not already a file object with path or content prop\n    obj.content = toAsyncIterable(input)\n  }\n\n  return obj\n}\n\nfunction toAsyncIterable(\n  input: any,\n): AsyncGenerator<Buffer | Uint8Array | ArrayBuffer> {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string') {\n    return (async function* () {\n      // eslint-disable-line require-await\n      yield toBuffer(input)\n    })()\n  }\n\n  // Bloby\n  if (isBloby(input)) {\n    return blobToAsyncGenerator(input)\n  }\n\n  // Browser stream\n  if (typeof input.getReader === 'function') {\n    return browserStreamToIt(input)\n  }\n\n  // Iterator<?>\n  if (input[Symbol.iterator]) {\n    return (async function* () {\n      // eslint-disable-line require-await\n      const iterator: IterableIterator<any> = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      if (Number.isInteger(first.value as number)) {\n        yield toBuffer(\n          Array.from(\n            (function* () {\n              yield first.value\n              yield* iterator\n            })(),\n          ) as any,\n        )\n        return\n      }\n\n      // Iterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toBuffer(first.value)\n        for (const chunk of iterator) {\n          yield toBuffer(chunk)\n        }\n        return\n      }\n\n      throw new Error('Unexpected input: ' + typeof input)\n    })()\n  }\n\n  // AsyncIterable<Bytes>\n  if (input[Symbol.asyncIterator]) {\n    return (async function* () {\n      for await (const chunk of input) {\n        yield toBuffer(chunk)\n      }\n    })()\n  }\n\n  throw new Error(`Unexpected input: ${input}`)\n}\n\nfunction toBuffer(chunk: Buffer | ArrayBuffer): Buffer | ArrayBuffer {\n  return isBytes(chunk) ? chunk : Buffer.from(chunk)\n}\n\nfunction isBytes(obj: Buffer | ArrayBuffer) {\n  return (\n    Buffer.isBuffer(obj) ||\n    ArrayBuffer.isView(obj) ||\n    obj instanceof ArrayBuffer\n  )\n}\n\nfunction isBloby(obj: any) {\n  return (\n    typeof globalThis.Blob !== 'undefined' && obj instanceof globalThis.Blob\n  )\n}\n\n// An object with a path or content property\nfunction isFileObject(obj: any) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\nfunction blobToAsyncGenerator(blob: Blob) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  if (typeof blob.stream === 'function') {\n    // firefox < 69 does not support blob.stream()\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    return browserStreamToIt(blob.stream())\n  }\n\n  return readBlob(blob)\n}\n\nasync function* browserStreamToIt(stream: ReadableStream<Buffer>) {\n  const reader = stream.getReader()\n\n  while (true) {\n    const result = await reader.read()\n\n    if (result.done) {\n      return\n    }\n\n    yield result.value\n  }\n}\n\nasync function* readBlob(blob: Blob, options?: any) {\n  options = options || {}\n\n  const reader = new globalThis.FileReader()\n  const chunkSize = options.chunkSize || 1024 * 1024\n  let offset = options.offset || 0\n\n  const getNextChunk = () =>\n    new Promise<ArrayBuffer | null>((resolve, reject) => {\n      reader.onloadend = (e) => {\n        const data = e.target?.result as ArrayBuffer\n        resolve(data.byteLength === 0 ? null : data)\n      }\n      reader.onerror = reject\n\n      const end = offset + chunkSize\n      const slice = blob.slice(offset, end)\n      reader.readAsArrayBuffer(slice)\n      offset = end\n    })\n\n  while (true) {\n    const data = await getNextChunk()\n\n    if (data == null) {\n      return\n    }\n\n    yield Buffer.from(data)\n  }\n}\n"]}