{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/api/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,oEAA+E;AAC/E,oDAA8C;AAC9C,2EAoBoD;AACpD,2FAAgF;AAChF,wDAA0B;AAE1B,MAAM,MAAM,GAAG,kBAAG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;AAEzC;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,UAAU,EAAE,SAAS;IACrB,mBAAmB,EAAE,OAAO;IAC5B,qBAAqB,EAAE,SAAS;CACjC,CAAA;AAED;;GAEG;AACH,IAAY,MAIX;AAJD,WAAY,MAAM;IAChB,iCAAG,CAAA;IACH,mCAAI,CAAA;IACJ,uCAAM,CAAA;AACR,CAAC,EAJW,MAAM,GAAN,cAAM,KAAN,cAAM,QAIjB;AA8FD;;GAEG;AACH,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,2DAAM,CAAA;IACN,uDAAI,CAAA;IACJ,2DAAM,CAAA;AACR,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AAqBD,SAAS,iBAAiB,CAAC,KAAc;IACvC,OAAO;QACL,IAAI,EAAE,KAAK,CAAC,YAAY,EAAE;QAC1B,SAAS,EAAE,KAAK,CAAC,iBAAiB,EAAE;QACpC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE;QACrB,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE;QACjB,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE;QACjB,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE;QAC/B,MAAM,EAAE,KAAK,CAAC,SAAS,EAAE;KAC1B,CAAA;AACH,CAAC;AAED;;GAEG;AACH,SAAsB,WAAW,CAC/B,GAAmB,EACnB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAA;QACpC,MAAM,GAAG,GAAG,IAAI,8BAAkB,EAAE,CAAA;QACpC,MAAM,GAAG,GAAyB,MAAM,GAAG,CAAC,KAAK,CAC/C,8BAAU,CAAC,WAAW,EACtB,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,KAAyB,EAAE,EAAE;YACzD,OAAO;gBACL,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE;gBACrB,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE;gBACrB,EAAE,EAAE,qBAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAE;aACtD,CAAA;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;CAAA;AAlBD,kCAkBC;AAED;;GAEG;AACH,SAAsB,SAAS,CAC7B,GAAmB,EACnB,IAAY,EACZ,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAA;QAClC,MAAM,GAAG,GAAG,IAAI,4BAAgB,EAAE,CAAA;QAClC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QACjB,MAAM,GAAG,GAAuB,MAAM,GAAG,CAAC,KAAK,CAC7C,8BAAU,CAAC,SAAS,EACpB,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO;YACL,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE;YACnB,EAAE,EAAE,qBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAE;SACpD,CAAA;IACH,CAAC;CAAA;AAjBD,8BAiBC;AAED;;GAEG;AACH,SAAsB,YAAY,CAChC,GAAmB,EACnB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;QACrC,MAAM,GAAG,GAAG,IAAI,+BAAmB,EAAE,CAAA;QACrC,MAAM,GAAG,GAAyB,MAAM,GAAG,CAAC,KAAK,CAC/C,8BAAU,CAAC,YAAY,EACvB,GAAG,EACH,GAAG,CACJ,CAAA;QACD,MAAM,SAAS,GAAG,qBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAA;QAC7D,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAA;IAC7B,CAAC;CAAA;AAbD,oCAaC;AAED;;GAEG;AACH,SAAsB,YAAY,CAChC,GAAmB,EACnB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;QACrC,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,EAAE,kBAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;QAC/D,OAAO,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAA;IAC7B,CAAC;CAAA;AAPD,oCAOC;AAED;;GAEG;AACH,SAAsB,WAAW,CAC/B,GAAmB,EACnB,IAAY,EACZ,EAAU,EACV,MAAkB,EAClB,WAAuB,EACvB,QAAoB,EACpB,aAAyB,EACzB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAA;QACpC,MAAM,GAAG,GAAG,IAAI,8BAAkB,EAAE,CAAA;QACpC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QACb,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;QACrB,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;QAC/B,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;QACzB,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAA;QACnC,MAAM,GAAG,GAAwB,MAAM,GAAG,CAAC,KAAK,CAC9C,8BAAU,CAAC,WAAW,EACtB,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO;YACL,EAAE,EAAE,GAAG,CAAC,KAAK,EAAE;YACf,SAAS,EAAE,GAAG,CAAC,YAAY,EAAE;YAC7B,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,aAAa;YACxB,EAAE;YACF,IAAI;SACL,CAAA;IACH,CAAC;CAAA;AA9BD,kCA8BC;AAED;;GAEG;AACH,SAAsB,iBAAiB,CACrC,GAAmB,EACnB,IAAuB,EACvB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;QAC1C,MAAM,GAAG,GAAG,IAAI,oCAAwB,EAAE,CAAA;QAC1C,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI;YAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC7C,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK;YAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAChD,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS;YAAE,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QAC5D,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;YACvB,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,MAAM,CAAC,IAAI;oBACd,GAAG,CAAC,SAAS,CAAC,oCAAwB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA;gBAC5D,KAAK,MAAM,CAAC,MAAM;oBAChB,GAAG,CAAC,SAAS,CAAC,oCAAwB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;aAC/D;SACF;QACD,MAAM,GAAG,GAA8B,MAAM,GAAG,CAAC,KAAK,CACpD,8BAAU,CAAC,iBAAiB,EAC5B,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO,GAAG,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;IACrD,CAAC;CAAA;AAxBD,8CAwBC;AAED;;GAEG;AACH,SAAsB,mBAAmB,CACvC,GAAmB,EACnB,IAAyB,EACzB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAA;QAC5C,MAAM,GAAG,GAAG,IAAI,sCAA0B,EAAE,CAAA;QAC5C,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI;YAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC7C,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK;YAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAChD,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS;YAAE,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QAC5D,MAAM,GAAG,GAAgC,MAAM,GAAG,CAAC,KAAK,CACtD,8BAAU,CAAC,mBAAmB,EAC9B,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO,GAAG,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;IACrD,CAAC;CAAA;AAhBD,kDAgBC;AAED;;GAEG;AACH,SAAsB,gBAAgB,CACpC,GAAmB,EACnB,EAAU,EACV,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;QAC1C,MAAM,GAAG,GAAG,IAAI,mCAAuB,EAAE,CAAA;QACzC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QACb,MAAM,GAAG,GAA6B,MAAM,GAAG,CAAC,KAAK,CACnD,8BAAU,CAAC,gBAAgB,EAC3B,GAAG,EACH,GAAG,CACJ,CAAA;QACD,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAA;IAC1C,CAAC;CAAA;AAdD,4CAcC;AAED;;GAEG;AACH,SAAsB,kBAAkB,CACtC,GAAmB,EACnB,EAAU,EACV,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAA;QAC5C,MAAM,GAAG,GAAG,IAAI,qCAAyB,EAAE,CAAA;QAC3C,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QACb,MAAM,GAAG,CAAC,KAAK,CAAC,8BAAU,CAAC,kBAAkB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QACxD,OAAM;IACR,CAAC;CAAA;AAVD,gDAUC;AAED;;GAEG;AACH,SAAsB,oBAAoB,CACxC,GAAmB,EACnB,EAAU,EACV,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;QAC9C,MAAM,GAAG,GAAG,IAAI,uCAA2B,EAAE,CAAA;QAC7C,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QACb,MAAM,GAAG,CAAC,KAAK,CAAC,8BAAU,CAAC,oBAAoB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAC1D,OAAM;IACR,CAAC;CAAA;AAVD,oDAUC;AAED;;GAEG;AACH,SAAgB,YAAY,CAC1B,GAAmB,EACnB,EAAU,EACV,GAAwB,EACxB,QAAqD,EACrD,GAAsB;IAEtB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAA;IACvC,MAAM,MAAM,GAAG,IAAI,2BAAM,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAA;IAC7C,MAAM,QAAQ,GAAG,qBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;IACxC,MAAM,MAAM,GAAG,CAAC,KAAmC,EAAE,GAAW,EAAQ,EAAE;QACxE,IAAI,CAAC,KAAK,EAAE;YACV,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;SACrB;aAAM;YACL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAgB,CAAA;YACnC,MAAM,MAAM,GAAiB;gBAC3B,IAAI;gBACJ,SAAS,EAAE,KAAK,CAAC,UAAU;aAC5B,CAAA;YACD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;YAC/B,IAAI,QAAQ,EAAE;gBACZ,MAAM,CAAC,OAAO,GAAG;oBACf,EAAE,EAAE,KAAK,CAAC,UAAU;oBACpB,IAAI,EAAE,QAAQ,CAAC,IAAI;oBACnB,EAAE,EAAE,QAAQ,CAAC,EAAE;oBACf,IAAI,EAAE,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;oBAC1D,SAAS,EAAE,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;oBACpE,SAAS,EAAE,QAAQ,CAAC,UAAU;oBAC9B,MAAM,EAAE,QAAQ,CAAC,OAAO;iBACzB,CAAA;aACF;YACD,QAAQ,CAAC,MAAM,CAAC,CAAA;SACjB;IACH,CAAC,CAAA;IACD,MAAM,cAAc,GAClB,GAAG,KAAK,OAAO;QACb,CAAC,CAAC,kBAAU,CAAC,mBAAmB;QAChC,CAAC,CAAC,kBAAU,CAAC,qBAAqB,CAAA;IACtC,OAAO,MAAM,CAAC,MAAM,CAClB,QAAQ,EACR,CAAC,EAAE,cAAc,EAAE,CAAC,EACpB,MAAM,CACP,CAAA;AACH,CAAC;AA3CD,oCA2CC;AAED;;GAEG;AACH,SAAsB,QAAQ,CAC5B,GAAmB,EACnB,OAAsB,EACtB,GAAsB;;QAEtB,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAA;QACjC,MAAM,GAAG,GAAG,IAAI,2BAAe,EAAE,CAAA;QACjC,IAAI,OAAO,IAAI,OAAO,CAAC,gBAAgB,EAAE;YACvC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;SACrC;QACD,MAAM,GAAG,GAAsB,MAAM,GAAG,CAAC,KAAK,CAAC,8BAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAC7E,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAA;QAC5B,OAAO;YACL,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAA;IACH,CAAC;CAAA;AAhBD,4BAgBC","sourcesContent":["import { grpc } from '@improbable-eng/grpc-web'\nimport { ContextInterface } from '@textile/context'\nimport { GrpcConnection } from '@textile/grpc-connection'\nimport { Client, GetThreadResponse, Update } from '@textile/hub-threads-client'\nimport { ThreadID } from '@textile/threads-id'\nimport {\n  DeleteInboxMessageRequest,\n  DeleteSentboxMessageRequest,\n  GetThreadRequest,\n  GetThreadResponse as _GetThreadResponse,\n  GetUsageRequest,\n  GetUsageResponse as _GetUsageResponse,\n  ListInboxMessagesRequest,\n  ListInboxMessagesResponse,\n  ListSentboxMessagesRequest,\n  ListSentboxMessagesResponse,\n  ListThreadsRequest,\n  ListThreadsResponse as _ListThreadsResponse,\n  Message,\n  ReadInboxMessageRequest,\n  ReadInboxMessageResponse,\n  SendMessageRequest,\n  SendMessageResponse,\n  SetupMailboxRequest,\n  SetupMailboxResponse,\n} from '@textile/users-grpc/api/usersd/pb/usersd_pb'\nimport { APIService } from '@textile/users-grpc/api/usersd/pb/usersd_pb_service'\nimport log from 'loglevel'\n\nconst logger = log.getLogger('users-api')\n\n/**\n * Global settings for mailboxes\n */\nexport const MailConfig = {\n  ThreadName: 'hubmail',\n  InboxCollectionName: 'inbox',\n  SentboxCollectionName: 'sentbox',\n}\n\n/**\n * The status query filter of an inbox message.\n */\nexport enum Status {\n  ALL,\n  READ,\n  UNREAD,\n}\n\n/**\n * Sentbox query options\n */\nexport interface SentboxListOptions {\n  seek?: string\n  limit?: number\n  ascending?: boolean\n}\n\n/**\n * Inbox query options\n */\nexport interface InboxListOptions {\n  seek?: string\n  limit?: number\n  ascending?: boolean\n  status?: Status\n}\n\n/**\n * @deprecated\n */\nexport type GetThreadResponseObj = GetThreadResponse\n\nexport interface Usage {\n  description: string\n  units: number\n  total: number\n  free: number\n  grace: number\n  cost: number\n  period?: Period\n}\n\nexport interface CustomerUsage {\n  usageMap: [string, Usage][]\n}\n\n/**\n * GetUsage options\n */\nexport interface UsageOptions {\n  /**\n   * Public key of the user. Only available when authenticated using an account key.\n   */\n  dependentUserKey?: string\n}\n\nexport interface Period {\n  unixStart: number\n  unixEnd: number\n}\n\n/**\n * The response type from getUsage\n */\nexport interface CustomerResponse {\n  key: string\n  customerId: string\n  parentKey: string\n  email: string\n  accountType: number\n  accountStatus: string\n  subscriptionStatus: string\n  balance: number\n  billable: boolean\n  delinquent: boolean\n  createdAt: number\n  gracePeriodEnd: number\n  invoicePeriod?: Period\n  dailyUsageMap: Array<[string, Usage]>\n  dependents: number\n}\n\nexport interface GetUsageResponse {\n  customer?: CustomerResponse\n  usage?: CustomerUsage\n}\n\n/**\n * The message format returned from inbox or sentbox\n */\nexport interface UserMessage {\n  id: string\n  to: string\n  from: string\n  body: Uint8Array\n  signature: Uint8Array\n  createdAt: number\n  readAt?: number\n}\n\n/**\n * The mailbox event type. CREATE, SAVE, or DELETE\n */\nexport enum MailboxEventType {\n  CREATE,\n  SAVE,\n  DELETE,\n}\n\n/**\n * The event type returned from inbox and sentbox subscriptions\n */\nexport interface MailboxEvent {\n  type: MailboxEventType\n  messageID: string\n  message?: UserMessage\n}\n\ninterface IntermediateMessage {\n  _id: string\n  from: string\n  to: string\n  body: string\n  signature: string\n  created_at: number\n  read_at: number\n}\n\nfunction convertMessageObj(input: Message): UserMessage {\n  return {\n    body: input.getBody_asU8(),\n    signature: input.getSignature_asU8(),\n    from: input.getFrom(),\n    id: input.getId(),\n    to: input.getTo(),\n    createdAt: input.getCreatedAt(),\n    readAt: input.getReadAt(),\n  }\n}\n\n/**\n * @internal\n */\nexport async function listThreads(\n  api: GrpcConnection,\n  ctx?: ContextInterface,\n): Promise<Array<GetThreadResponse>> {\n  logger.debug('list threads request')\n  const req = new ListThreadsRequest()\n  const res: _ListThreadsResponse = await api.unary(\n    APIService.ListThreads,\n    req,\n    ctx,\n  )\n  return res.getListList().map((value: _GetThreadResponse) => {\n    return {\n      isDb: value.getIsDb(),\n      name: value.getName(),\n      id: ThreadID.fromBytes(value.getId_asU8()).toString(),\n    }\n  })\n}\n\n/**\n * @internal\n */\nexport async function getThread(\n  api: GrpcConnection,\n  name: string,\n  ctx?: ContextInterface,\n): Promise<GetThreadResponse> {\n  logger.debug('get thread request')\n  const req = new GetThreadRequest()\n  req.setName(name)\n  const res: _GetThreadResponse = await api.unary(\n    APIService.GetThread,\n    req,\n    ctx,\n  )\n  return {\n    name: res.getName(),\n    id: ThreadID.fromBytes(res.getId_asU8()).toString(),\n  }\n}\n\n/**\n * @internal\n */\nexport async function setupMailbox(\n  api: GrpcConnection,\n  ctx?: ContextInterface,\n): Promise<string> {\n  logger.debug('setup mailbox request')\n  const req = new SetupMailboxRequest()\n  const res: SetupMailboxResponse = await api.unary(\n    APIService.SetupMailbox,\n    req,\n    ctx,\n  )\n  const mailboxID = ThreadID.fromBytes(res.getMailboxId_asU8())\n  return mailboxID.toString()\n}\n\n/**\n * @internal\n */\nexport async function getMailboxID(\n  api: GrpcConnection,\n  ctx?: ContextInterface,\n): Promise<string> {\n  logger.debug('setup mailbox request')\n  const thread = await getThread(api, MailConfig.ThreadName, ctx)\n  return thread.id.toString()\n}\n\n/**\n * @internal\n */\nexport async function sendMessage(\n  api: GrpcConnection,\n  from: string,\n  to: string,\n  toBody: Uint8Array,\n  toSignature: Uint8Array,\n  fromBody: Uint8Array,\n  fromSignature: Uint8Array,\n  ctx?: ContextInterface,\n): Promise<UserMessage> {\n  logger.debug('send message request')\n  const req = new SendMessageRequest()\n  req.setTo(to)\n  req.setToBody(toBody)\n  req.setToSignature(toSignature)\n  req.setFromBody(fromBody)\n  req.setFromSignature(fromSignature)\n  const res: SendMessageResponse = await api.unary(\n    APIService.SendMessage,\n    req,\n    ctx,\n  )\n  return {\n    id: res.getId(),\n    createdAt: res.getCreatedAt(),\n    body: fromBody,\n    signature: fromSignature,\n    to,\n    from,\n  }\n}\n\n/**\n * @internal\n */\nexport async function listInboxMessages(\n  api: GrpcConnection,\n  opts?: InboxListOptions,\n  ctx?: ContextInterface,\n): Promise<Array<UserMessage>> {\n  logger.debug('list inbox message request')\n  const req = new ListInboxMessagesRequest()\n  if (opts && opts.seek) req.setSeek(opts.seek)\n  if (opts && opts.limit) req.setLimit(opts.limit)\n  if (opts && opts.ascending) req.setAscending(opts.ascending)\n  if (opts && opts.status) {\n    switch (opts.status) {\n      case Status.READ:\n        req.setStatus(ListInboxMessagesRequest.Status.STATUS_READ)\n      case Status.UNREAD:\n        req.setStatus(ListInboxMessagesRequest.Status.STATUS_UNREAD)\n    }\n  }\n  const res: ListInboxMessagesResponse = await api.unary(\n    APIService.ListInboxMessages,\n    req,\n    ctx,\n  )\n  return res.getMessagesList().map(convertMessageObj)\n}\n\n/**\n * @internal\n */\nexport async function listSentboxMessages(\n  api: GrpcConnection,\n  opts?: SentboxListOptions,\n  ctx?: ContextInterface,\n): Promise<Array<UserMessage>> {\n  logger.debug('list sentbox message request')\n  const req = new ListSentboxMessagesRequest()\n  if (opts && opts.seek) req.setSeek(opts.seek)\n  if (opts && opts.limit) req.setLimit(opts.limit)\n  if (opts && opts.ascending) req.setAscending(opts.ascending)\n  const res: ListSentboxMessagesResponse = await api.unary(\n    APIService.ListSentboxMessages,\n    req,\n    ctx,\n  )\n  return res.getMessagesList().map(convertMessageObj)\n}\n\n/**\n * @internal\n */\nexport async function readInboxMessage(\n  api: GrpcConnection,\n  id: string,\n  ctx?: ContextInterface,\n): Promise<{ readAt: number }> {\n  logger.debug('read inbox message request')\n  const req = new ReadInboxMessageRequest()\n  req.setId(id)\n  const res: ReadInboxMessageResponse = await api.unary(\n    APIService.ReadInboxMessage,\n    req,\n    ctx,\n  )\n  return { readAt: res.toObject().readAt }\n}\n\n/**\n * @internal\n */\nexport async function deleteInboxMessage(\n  api: GrpcConnection,\n  id: string,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('delete inbox message request')\n  const req = new DeleteInboxMessageRequest()\n  req.setId(id)\n  await api.unary(APIService.DeleteInboxMessage, req, ctx)\n  return\n}\n\n/**\n * @internal\n */\nexport async function deleteSentboxMessage(\n  api: GrpcConnection,\n  id: string,\n  ctx?: ContextInterface,\n): Promise<void> {\n  logger.debug('delete sentbox message request')\n  const req = new DeleteSentboxMessageRequest()\n  req.setId(id)\n  await api.unary(APIService.DeleteSentboxMessage, req, ctx)\n  return\n}\n\n/**\n * @internal\n */\nexport function watchMailbox(\n  api: GrpcConnection,\n  id: string,\n  box: 'inbox' | 'sentbox',\n  callback: (reply?: MailboxEvent, err?: Error) => void,\n  ctx?: ContextInterface,\n): grpc.Request {\n  logger.debug('new watch inbox request')\n  const client = new Client(ctx || api.context)\n  const threadID = ThreadID.fromString(id)\n  const retype = (reply?: Update<IntermediateMessage>, err?: Error): void => {\n    if (!reply) {\n      callback(reply, err)\n    } else {\n      const type = reply.action as number\n      const result: MailboxEvent = {\n        type,\n        messageID: reply.instanceID,\n      }\n      const instance = reply.instance\n      if (instance) {\n        result.message = {\n          id: reply.instanceID,\n          from: instance.from,\n          to: instance.to,\n          body: new Uint8Array(Buffer.from(instance.body, 'base64')),\n          signature: new Uint8Array(Buffer.from(instance.signature, 'base64')),\n          createdAt: instance.created_at,\n          readAt: instance.read_at,\n        }\n      }\n      callback(result)\n    }\n  }\n  const collectionName =\n    box === 'inbox'\n      ? MailConfig.InboxCollectionName\n      : MailConfig.SentboxCollectionName\n  return client.listen<IntermediateMessage>(\n    threadID,\n    [{ collectionName }],\n    retype,\n  )\n}\n\n/**\n * @internal\n */\nexport async function getUsage(\n  api: GrpcConnection,\n  options?: UsageOptions,\n  ctx?: ContextInterface,\n): Promise<GetUsageResponse> {\n  logger.debug('get usage request')\n  const req = new GetUsageRequest()\n  if (options && options.dependentUserKey) {\n    req.setKey(options.dependentUserKey)\n  }\n  const res: _GetUsageResponse = await api.unary(APIService.GetUsage, req, ctx)\n  const usage = res.toObject()\n  return {\n    customer: usage.customer,\n    usage: usage.usage,\n  }\n}\n"]}