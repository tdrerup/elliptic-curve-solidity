{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright improbable-eng Apache License 2.0\n// https://github.com/improbable-eng/grpc-web/blob/master/client/grpc-web/src/transports/websocket/websocket.ts\nimport { grpc } from '@improbable-eng/grpc-web'\nimport WebSocket from 'isomorphic-ws'\nimport log from 'loglevel'\n\nconst { debug } = log.getLogger('grpc-transport')\n\nconst isAllowedControlChars = (char: number) =>\n  char === 0x9 || char === 0xa || char === 0xd\n\nfunction isValidHeaderAscii(val: number): boolean {\n  return isAllowedControlChars(val) || (val >= 0x20 && val <= 0x7e)\n}\n\nfunction encodeASCII(input: string): Uint8Array {\n  const encoded = new Uint8Array(input.length)\n  for (let i = 0; i !== input.length; ++i) {\n    const charCode = input.charCodeAt(i)\n    if (!isValidHeaderAscii(charCode)) {\n      throw new Error('Metadata contains invalid ASCII')\n    }\n    encoded[i] = charCode\n  }\n  return encoded\n}\n\nenum WebsocketSignal {\n  FINISH_SEND = 1,\n}\n\nconst finishSendFrame = new Uint8Array([1])\n\nfunction constructWebSocketAddress(url: string) {\n  if (url.substr(0, 8) === 'https://') {\n    return `wss://${url.substr(8)}`\n  } else if (url.substr(0, 7) === 'http://') {\n    return `ws://${url.substr(7)}`\n  }\n  throw new Error(\n    'Websocket transport constructed with non-https:// or http:// host.',\n  )\n}\n\nfunction headersToBytes(headers: grpc.Metadata): Uint8Array {\n  let asString = ''\n  headers.forEach((key, values) => {\n    asString += `${key}: ${values.join(', ')}\\r\\n`\n  })\n  return encodeASCII(asString)\n}\n\nfunction websocketRequest(options: grpc.TransportOptions): grpc.Transport {\n  options.debug && debug('websocketRequest', options)\n\n  const webSocketAddress = constructWebSocketAddress(options.url)\n\n  const sendQueue: Array<Uint8Array | WebsocketSignal> = []\n  let ws: WebSocket\n\n  function sendToWebsocket(toSend: Uint8Array | WebsocketSignal) {\n    if (toSend === WebsocketSignal.FINISH_SEND) {\n      ws.send(finishSendFrame)\n    } else {\n      const byteArray = toSend as Uint8Array\n      const c = new Int8Array(byteArray.byteLength + 1)\n      c.set(new Uint8Array([0]))\n\n      c.set((byteArray as any) as ArrayLike<number>, 1)\n\n      ws.send(c)\n    }\n  }\n\n  return {\n    sendMessage: (msgBytes: Uint8Array) => {\n      if (!ws || ws.readyState === ws.CONNECTING) {\n        sendQueue.push(msgBytes)\n      } else {\n        sendToWebsocket(msgBytes)\n      }\n    },\n    finishSend: () => {\n      if (!ws || ws.readyState === ws.CONNECTING) {\n        sendQueue.push(WebsocketSignal.FINISH_SEND)\n      } else {\n        sendToWebsocket(WebsocketSignal.FINISH_SEND)\n      }\n    },\n    start: (metadata: grpc.Metadata) => {\n      ws = new WebSocket(webSocketAddress, ['grpc-websockets'])\n      ws.binaryType = 'arraybuffer'\n      ws.onopen = function () {\n        options.debug && debug('websocketRequest.onopen')\n        ws.send(headersToBytes(metadata))\n\n        // send any messages that were passed to sendMessage before the connection was ready\n        sendQueue.forEach((toSend) => {\n          sendToWebsocket(toSend)\n        })\n      }\n\n      ws.onclose = function (closeEvent) {\n        options.debug && debug('websocketRequest.onclose', closeEvent)\n        options.onEnd()\n      }\n\n      ws.onerror = function (error) {\n        options.debug && debug('websocketRequest.onerror', error)\n      }\n\n      ws.onmessage = function (e) {\n        options.onChunk(new Uint8Array(e.data as Iterable<number>))\n      }\n    },\n    cancel: () => {\n      options.debug && debug('websocket.abort')\n      ws.close()\n    },\n  }\n}\n\nexport function WebsocketTransport(): grpc.TransportFactory {\n  return (opts: grpc.TransportOptions) => {\n    return websocketRequest(opts)\n  }\n}\n"]}